Reference: iffy formatting
Candidate: you could use set the date instead of null?
Reference: don't return null, throw unsupportedoperatedexception instead
Candidate: you could use <UNK>
Reference: that is unusual, as the parser should be on start_tag of the element. why do you feel it is necessary to check for this condition?
Candidate: could you use <UNK>
Reference: should this not prefer the token over the raw?
Candidate: suggestion if <UNK> == null) { ...
Reference: it would have been shorter to inline this variable and not have it in scope. :-)
Candidate: you could use <UNK> here instead of <UNK>
Reference: is tostring() required? it's already of string type.
Candidate: if you could use <UNK> <UNK>
Reference: move the check and assignment before the other checks to ensure the behaviour is not changed.
Candidate: this about this >= "for <UNK> >= 0
Reference: might it be clearer if you said rawbytes.length - (endoftablename + 1)? not particularly fussed here
Candidate: suggestion <UNK> = new <UNK>
Reference: edit: this is identical to what liam just said. just making sure i'm following along - this bump from 8 to 10 is to allow for these two new log
Candidate: suggestion <UNK> = <UNK>
Reference: [minor] could you name it resourcegroupname
Candidate: you can use <UNK>
Reference: utilktkt isn't a great name.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: consider using a switch(res) {...}
Candidate: you could use draw a <UNK>
Reference: for perunobserver you can return all resources immediately.
Candidate: strange, please.
Reference: udp is a datagram protocol, so it doesn't require frame decoder.
Candidate: we should use the error message
Reference: maybe we can return an empty properties here (perhaps a static constant empty props so we don't create a new one for each instance). it would save a null check
Candidate: this is be repelaced by <UNK>
Reference: why this change?
Candidate: why this change?
Reference: we cannot do this - this is a really bad practice. please don't write code that resembles this either. we need symmetric encoding/decoding that's done for all databases, not targeted
Candidate: maybe we should use <UNK> v. a v. <UNK> v. a v. <UNK> v. the future.
Reference: you should check the cache doesn't exist, plus that no suggestion to use the cache is logged
Candidate: you could move this to <UNK>
Reference: make sure to unescape the url path before using it. i've hit this in actual usage.
Candidate: use <UNK>
Reference: a future refactor might place this method in the enum directly.
Candidate: this is not efficient, we could use <UNK>
Reference: we have async_init_delay * 5 + 1 twice here (well, the other time, it's 5*aid+1 ). is it worth extracting a constant here, like several_init_delays?
Candidate: you could use <UNK>
Reference: i don't think this helps, because as long as the number of available threads is smaller the number of core threads, the executor will create new threads for each submitted
Candidate: you could use a multimap here instead of <UNK>
Reference: this bloc of code is repeated many times, should be centralized in a single method.
Candidate: i think we should throw an exception instead of returning null?
Reference: i don't see sense from this if (mobilecontexthelper.isinwebviewcontext())
Candidate: please use <UNK>
Reference: this if-else block can be simplified to: menu.finditem(r.id.menu_item_search).setvisible(config.getcoursediscoveryconfig().iscoursediscoveryenabled())
Candidate: rename to
Reference: can this be changed to createsubjectroleattribute?
Candidate: use <UNK>
Reference: @jimdeanspivey can we go with a foreach? for (final linerange range : ranges)?
Candidate: you could use <UNK> instead of <UNK>
Reference: do not try to parse the sever list if the command has failed (mstatus.code != 0)
Candidate: you can use this property?
Reference: floating semicolon
Candidate: you could use <UNK>
Reference: thanks for these cleanup items, too. will you please put them in a separate commit (same pr)? that is, any code changes that aren't directly related to the new constructor,
Candidate: use <UNK>
Reference: please remove debug codes.
Candidate: you could use a constant instead of <UNK>
Reference: please use long
Candidate: this is a bit idea.
Reference: is there a reason this isn't implemented?
Candidate: you could use <UNK>
Reference: nit: unnecessary generic type declaration
Candidate: you could use <UNK>
Reference: probably safer to replace the null check with stringutils.isnotblank(changelogpartition)
Candidate: if you could use <UNK>
Reference: out of interest why can you not do builtinaggregator.values()?
Candidate: this should be <UNK>
Reference: need to catch ioexception from getfilestoretry as well as it may throw this exception for nn failures and need retry.
Candidate: if this designed is designed designed to be closed at all, at all, at all, at all, at all, at all, at all, at all, at all, at all, at
Reference: minor: you can use quickmath.modpoweroftwo(l, 8) == 0 instead of ((l >> 3) << 3) == l, to make it more readable. i misread this like ((l >> 3) <<
Candidate: use a constant instead of <UNK>
Reference: why not use capabilities directly here?
Candidate: <UNK>
Reference: do you assume that if startcolumn is not null, endline and endcolumn will not be either? or is it fine to have two last as null? if it's the first
Candidate: <UNK>
Reference: @ekondrashev why not just rsp = opt?
Candidate: use <UNK>
Reference: why use a java.lang.boolean and not a primitive boolean?
Candidate: vds vds vds vds vds vds vds vds vds vdsid vds vds vds vds vds vds vds vds vds vds vds vds vds vds vds vds vds vds vds vds
Reference: merge the try/catch with the one below?
Candidate: is there a reason why run() is not run() monitors here?
Reference: @snleee this is handled with the api refreshsegment()
Candidate: you could move this to <UNK>
Reference: probably just wants to be start or startphase or something if now generic.
Candidate: you could use stream() here instead of <UNK>
Reference: nit: any chance to make the message assertion more specific? :)
Candidate: why not eating the
Reference: we can do the same thing here too right?  public list<modification> latestmodification(file basedir, final subprocessexecutioncontext execctx) { p4client p4 = getp4(execctx.isserver() ? basedir: workingdir(basedir)); return p4.latestchange(); }
Candidate: you could use this feature instead of <UNK>
Reference: check to make sure notificationuuid is not null
Candidate: why not use <UNK>
Reference: java if (genericutils.isempty(expected)) { return new pair<>(false, getfingerprint(key)); }
Candidate: you can use instead:  if <UNK> { <UNK> { ... }  thanks!
Reference: probably premature, but if in most usage validatelocksonreads is going to be false, then flipping the arguments makes sense.
Candidate: you could use "return true"
Reference: we don't need super here
Candidate: no need to super()
Reference: does it make sense to continue here? or just return false.
Candidate: i'm not sure that this is is going to be a but i'm not sure how about the sure that the is confuse that the is confuse
Reference: here i would just say return true. then fall through return false, instead of creating a variable.
Candidate: this could be replaced by: <UNK> <UNK>
Reference: it's better to use **isblank** here
Candidate: this is be repelaced by <UNK>
Reference: also here please use short.max_value
Candidate: how about using a feature instead of <UNK>
Reference: this synchronization block should be replaced with a collection that handles concurrency, like concurrencylinkedqueue or collections.synchronizedlist()
Candidate: why is a factory construct, to a no-op construct,
Reference: here too we may use ianalinkrelation.edit?
Candidate: you could use <UNK>
Reference: coudl be just arraylist since now it is imported ^^ vv
Candidate: you could use a constant for s?
Reference: log
Candidate: you could use <UNK> here instead of <UNK>
Reference: collections.<string, object> singletonmap can be replaced with just collections.singletonmap
Candidate: use <UNK>
Reference: do you want to check if the thread count changed because right now this log message will be logged on every catalog update which affects kipling
Candidate: is there a reason for element?
Reference: please move compilation of pattern to class field, to be done ones, for whole execution of checkstyle.
Candidate: please revert this log.
Reference: i don't like imavenprojectholder. i think targetpart.getadapter(mavenproject.class) is more appropriate here.
Candidate: this should be a <UNK> <UNK>
Reference: indentation, here and rest of pr
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: replace with objects.requirenotnull.
Candidate: how about throwing a exception?
Reference: i wonder if this change would result array allocation and extra cpu/memory consumption issues
Candidate: maybe we could throw an illegalstateexception instead of: instead of: instead of: instead of: instead of: instead of: instead of: instead of: instead of: instead of: instead of: instead of:
Reference: may be static imports for timeunit values here and below?
Candidate: why this change?
Reference: similar to distinctcountaggregator
Candidate: please use foreach boilerplate instead of creating a lambda.
Reference: statistics-enabled were introduced in 6.3.0, so there is no need to set them to true for 6.3.0, only for 6.2.0
Candidate: nitpicking: use camelcase
Reference: printstacktrace() must not be used. use a logger instead.
Candidate: indentation indentation at indentation at indentation at indentation at indentation at indentation at indentation at indentation at indentation at indentation at indentation at indentation at indentation at indentation at indentation
Reference: i think this could just be: if (searchpacksagain(plist)) continue search;
Candidate: machine machine machine machine machine machine machine machine machine machine machine machine machine machine machine machine machine machine machine machine machine machine machine machine machine machine machine machine machine machine
Reference: the list supplier should fail, calling onerror and oncompleted this way is just a plain protocol violation. do something this instead: java flowable.empty() .buffer(10, 10, timeunit.seconds, schedulers.computation(), new callable<list<object>>() {
Candidate: @manuelplazaspalacio the clear() is right...
Reference: i would prefer the use of local variables to resolve calls to something.somethingelse.somefunction()
Candidate: this is designed to be a constants for <UNK>
Reference: you could just use string.replace() to replace the role_prefix with an empty string and use the resulting value as the role name,
Candidate: this should be defined in the constructor.
Reference: you can use parameterized logging here
Candidate: formatting: should be encrypted,
Reference: style nit: unneeded curlies
Candidate: this is designed to be a <UNK>
Reference: this.redistemplate
Candidate: use <UNK>
Reference: fetch should already happen in service
Candidate: you could annotate this method to the isdone() isdone()
Reference: thread.isunterupted not necessary?
Candidate: why not destroying the
Reference: i assume this was meant to be removed?
Candidate: please @nullable.
Reference: what do we do, if the result is null?
Candidate: stream()
Reference: i'd do the increment outside of the if (log.isdebugenabled). the call is cheap, and if the log level gets changed on-the-fly to debug then we want the message to have
Candidate: this should be a authentication wording.
Reference: return early so you don't enter starting state? call handlestopkeepalive with error_invalid_packet?
Candidate: interesting, is not sure that this is not efficient, but i would be nicer.
Reference: i think we always display view names capitalized to users.
Candidate: this is not
Reference: unrelated change. should be in a separate commit.
Candidate: is there a reason for this constructor?
Reference: this may impact web-ui code. do we want to expose snapshot in api?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this seems to fail the test when smartlock for passwords pops up the dialog for selecting a saved email/pass combination.
Candidate: we should wait for these.
Reference: callnode are only present in sequence diagrams, so i would recommend eliminating the first (presumed defensive) clause atype == diagramtype.sequence because of the potential confusion if may cause.
Candidate: use ==. rather than ==. ==. ==. ==. ==. ==. ==. ==. ==. ==. ==. ==. ==. ==. ==. ==. ==. ==. ==. ==. ==. ==. ==. ==. ==. ==.
Reference: replace with logger
Candidate: please use <UNK>
Reference: i still think that this is pretty strange. what about just returning a framelayout in oncreateview and re-inflating its content in onconfigurationchanged?
Candidate: this is designed to check if <UNK> != null && <UNK>
Reference: sounds like a workaround for host misconfiguration issue.
Candidate: if we is going to "true" instead of "true"
Reference: could you please rename also _result?
Candidate: how about appending to
Reference: i think it would be good to perform this logic in outputemitter.
Candidate: is there any particular reason reason for this? (can be used?
Reference: i'd prefer that we call this something like default_request_id. it'll be easier to read and easier to change if we decide zero isn't the best number (which i suggest it
Candidate: this is be <UNK>
Reference: we should probably check in the canexecute whether we reached the start of the list
Candidate: you could use atomicinteger instead of creating a connection, instead of creating multiple connections once every one every time every time every time every time every time every time every
Reference: why to use: try (connection connection = getjdbctemplate().getdatasource().getconnection()) { return connection.createarrayof(typename, array); } catch(sqlexception ex) { throw new runtimeexception(e); }
Candidate: please use <UNK>
Reference: magic number
Candidate: classic ethernet ethernet ethernet ethernet ethernet ethernet order?
Reference: i would prefer that the exception were re-thrown as a different typed exception (e.g. platformservicesexception) and handled by the caller rather than just eating the exception here.
Candidate: we could use a multimap here instead of return?
Reference: usually we use requestmonitor.issuccess(). is there a reason you use the istatus directly?
Candidate: we could use a no-op instead of grabbing the size.
Reference: is the reason that we have to have isincludeallproperties because of the search index? seems like we would really only need the one you loaded.
Candidate: you could remove this line
Reference: why does this need to be ordered by the synthetic primary key?
Candidate: i guess we should use <UNK> <UNK>
Reference: the exception is never thrown.
Candidate: exception exception is never thrown.
Reference: is a null check for the passed in "date" required here for safety?
Candidate: please use <UNK>
Reference: since numberofvotes can be null you should replace this with objects.equals(numberofvotes, other.numberofvotes)
Candidate: you should export to guid as well.
Reference: nit: call it uae?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: could have been wordutils.capitalize(delivery.state.rejected) so the test is more stable (will cause compilation errors) if we at some point change the delivery api.
Candidate: we should use <UNK>
Reference: repeating code line.
Candidate: if you could use <UNK> m
Reference: if we attempt an operation and it fails, recordfailure will be incremented, but recorderror only tracks the cases where the when we encounter a problem that the framework cannot retry
Candidate: this is not throw an exception here instead of constructing an exception
Reference: better way to get the proper schema is to say datacontext.getdefaultschema() ... taking schemas[1] is actually not guaranteed to work since schemas are sorted alphabetically and then you rely on
Candidate: minor nit, but you could use a try-with-resource 'final' here instead of nesting.
Reference: any reason for disabling cache for descending order queries ?
Candidate: this should be <UNK>
Reference: assertfalse is kind of weird here (it's like saying we expect that it should be anything but self). can we change this to assertequal (and the following assertfalse(s) as well)?
Candidate: wait.forelementclickable() should be <UNK>
Reference: maybe it's just me but that mixture of functional and non-functional programming doesn't look right, i know it works, but still
Candidate: typo: <UNK>
Reference: assertequals and remove the expected value from message string
Candidate: why not we use <UNK>
Reference: should be possible to provide one
Candidate: we should use <UNK>
Reference: looks like a duplication to me. how about this.json().getstring("name")?
Candidate: use <UNK> instead of <UNK>
Reference: should we also validate that datatype != null.
Candidate: maybe only: an enum maybe?
Reference: i think we need to close this inputstream at some point
Candidate: this introduces a good way to throw an exception
Reference: do you clean up these files on exit? or the root level dir is deleted on exit ?
Candidate: this is a bit strange, strange, for machines + " + " + <UNK>
Reference: in range yet you're not providing a range; perhaps "'count' must be at most %s"? also, shouldn't that be %d?
Candidate: we could use isempty() instead of creating a connection, depending on the
Reference: hear i think we could handle this error gracefully by if (toast != null) check and not send the traceback to crashylytics using zlog.logexception(e)
Candidate: you could use <UNK>
Reference: should this support a null address? same with the other one, which make support a null or empty address.
Candidate: shouldnt this be null?
Reference: this is followup of above, it should not be required.
Candidate: could you rename this to to <UNK>
Reference: i should probably have asked this in the previous review, but why "addfollowingaccounts"? we don't talk about accounts mostly in other parts of the code. it could be ambiguous with
Candidate: use <UNK>
Reference: please make sure this is properly formatted. "else" should be on the same line as the }.
Candidate: use <UNK> instead.
Reference: throw exception?
Candidate: this feels like a little nervous bit nervous that we can't we?
Reference: please change user back to user_yoda here.
Candidate: <UNK>
Reference: you don't take any resourcees from player when buying dev card
Candidate: please use camelcase
Reference: @serranya the same here. see above.
Candidate: i think it's better to use <UNK>
Reference: what is the use of this metric? there are no i/o or cpu intensive stuff being done within this method.
Candidate: i think we could bail here instead of calling assertion. [![rule](<link_2>](<link_0>
Reference: could you: - call treeutils.annotationsfromtree() - use annotationutils.containssame to look for the annotations then you don't need to change the visibility below.
Candidate: nextvalueindex should be be <UNK>
Reference: not sure if this description will be displayed anywhere. if it gets displayed, please change the name dataflow to spring cloud data flow
Candidate: i think this should be <UNK>
Reference: string.matches can be expensive. if we're caching the list of pattern per site, it would be best to cache compiled java.util.regex.pattern objects.
Candidate: you could use a constant instead of <UNK>
Reference: it would be better to make value a constant too
Candidate: please move this piece of designed to be defined in constants in the class, we should easily be defined in tests.
Reference: don't we need to reset alpha here? drawables share a global state.
Candidate: why not use a supplier here?
Reference: there should be a space here between expected and school.roster()
Candidate: you could use <UNK>
Reference: we should put the url fragments into static vars in a common file then select them based on version in one place rather than scatterred throughout code.
Candidate: maybe you could use a @visiblefortesting instead of creating a copy object?
Reference: this should be in the if(v != null) check i am thinking
Candidate: if you could use <UNK> == null) { return false; }
Reference: initialize it to collections.emptymap() right away so you can forget about the null in getopenstackmetadata(). it will also save some unneeded allocations.
Candidate: suggestion <UNK> = new <UNK>
Reference: i guess you mean !o.isnull("name")? which by itself would be enough. no need for the o.has("name")
Candidate: suggestion if <UNK> == null) {
Reference: since we're not doing any extra validation here this is confusing to me. how about java if (fields.isempty()) return new factory(delegate); return new realfactory(delegate, fields.toarray(...
Candidate: could be simplified to int <UNK> = <UNK> <UNK> <UNK> <UNK> #resolved
Reference: missing unstable attribute.
Candidate: you could use a string instead of marking a "\"" = new <UNK> + <UNK> + <UNK>
Reference: shall we extract that setup step? it's repeated in every test below.
Candidate: you could use <UNK>
Reference: rename 'variablename'
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: good catch, thanks. fixed <link_0>
Candidate: log the exception (can
Reference: the cleaner way would be to use nio classes only: path path = paths.get(filename); if (files.exists(path)) { // yada yada
Candidate: you could use a string instead of <UNK>
Reference: edgecachedns as a static variable since it's used a few times?
Candidate: if this is not correct.
Reference: if a future completes successfully and returns null, then do not want to take the exception handling path. maybe the code should do : java if(exception != null) { //handle
Candidate: this is not a non-trivial
Reference: the dao should not swallow exceptions. utilities need to propagate exceptions and let the calling code handle them (or the utility will have limited reuse and can only be used
Candidate: we should have to call the <UNK> manager
Reference: let's do the same way @jleandroperez did on ios here <link_0>
Candidate: i think we should be the to the <UNK>
Reference: are there any pa genres that we don't have a mapping for? i.e. is this an exhaustive mapping? we're gunna get nulls in our set otherwise
Candidate: suggestion list<string> <UNK> = new <UNK>
Reference: what does this do if key is null?
Candidate: use <UNK>
Reference: the output of this call should be checked and if it's false i think it should bail.
Candidate: you could use a <UNK>
Reference: @ikhvostenkov please name it json
Candidate: @ikhvostenkov let's use a feature json, please.
Reference: why var4? resources.notfoundexception e would be a bit nicer..
Candidate: use <UNK>
Reference: check for illegal arg or are we happy with a classcastexception here?
Candidate: this should be a bit simpler.
Reference: mutualize with the other matcher on tags
Candidate: could you use <UNK>
Reference: maybe using a constant here for "://"
Candidate: please use <UNK>
Reference: suggestion deletedalarmids.foreach(alarmid -> {
Candidate: could you refactor this method to reduce the most common own method
Reference: you don't need to call the validator, it's called automatically via aop advice around the saveobs method.
Candidate: could we move this to the run() block
Reference: consider 'ternary if' here
Candidate: _cough_
Reference: power down
Candidate: should we check that the hook is not invalid?
Reference: i don't think "resolvemember" should create a new symbol. we should find another approach
Candidate: <UNK> -> <UNK>
Reference: let's make this internalservererror
Candidate: is there a reason for this point?
Reference: 1. unless there are other reasons i'd rewrite this as context.get(config.class).getrendering().getdebug(); and i'd avoid storing the config. 2. can you check if by any chance the renderingconfig class is available
Candidate: let's move the after... after... after... after... after... after... after... after... after... after... after... after... after... after... after... after... after... after... after... after... after... after... after... after... after... after... after...
Reference: just want to make sure i'm understanding this correctly, previously we weren't looking at these childnodes but now we are?
Candidate: is there a reason to log.debug ?
Reference: why not extract receivedid before switch block? (reduce the duplicate code)
Candidate: oldvalue is oldvalue == null
Reference: feels like this null check can be included above.
Candidate: i nesting.
Reference: extra space
Candidate: i think this should be a warn
Reference: this method has a really weird contract. 1. why is it public? 2. why does it return its incoming argument without any adjustment? the name of the method makes it
Candidate: nit: we want to add some point of <UNK>
Reference: i think this test should be moved to options instead
Candidate: is there a reason for this logic?
Reference: since the classes in the cache are now changed, we shouldn't do this. we can either change the keys here. that will give us new space in cache. or we
Candidate: this simplifies this pr, but you could move this log to a separate method.
Reference: @nadahar i just read that the one used by the ps3 are .**atrac**. did you tried to stream this kind of file to the ps3 ? **p.s.** .omg (from the
Candidate: use <UNK>
Reference: setspecialdays should be tested on an e-meter device_identification_g_label -> device_identification_e_label getdeviceidg -> getdeviceide
Candidate: should be tested on the e-meter device_identification_g_label -> device_identification_e_label getdeviceidg -> getdeviceide
Reference: you could have launcher_name be an abstract method in the base class, and print this message in the base class.
Candidate: use utf-8 instead of objects.isnull
Reference: what is this doing? is there a reason we are setting the max frame size to anything but rsocket max frame size?
Candidate: this is designed to be an itemstack.
Reference: call intvalue() and then there is no cast
Candidate: this should be <UNK>
Reference: i think you can probably change the return type to list<? extends target>
Candidate: throwable is not throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable
Reference: this is passing isbackgroundlogic but the param name for processjobfordisplay is callforegroundlogic. seems like we are flipping the logic here when we should not? or just one of the names
Candidate: this theory this should be warn
Reference: i'm pretty sure it ends up being lower cased because the registries do not support capital letters.
Candidate: i think this should be <UNK>
Reference: why is this changed? we want to resolve the product content on the incoming data (pinfo) not the existing product (pdata)
Candidate: i'm not sure that this is not sure that this is a but i'm not sure how about the sure about the sure that the
Reference: remove /dev team
Candidate: i think this should be ignored.
Reference: you could move this line to presave. that way the topoliogy can be used both in effectively once as well as atleast/atmost once mode
Candidate: use isempty() instead of % <UNK> == null || length == 0.
Reference: i see no reason to introduce msg here, you could just use serializedpayload
Candidate: nit: use <UNK>
Reference: put the test in the same package (not directory) and you can at least use package private or protected
Candidate: i would be a little bit simpler.
Reference: a very small impovement, but you can use the method notation when the mapper is on second place and params vararg is on 3rd place. that will allow to pass
Candidate: you could use a constant?
Reference: suggestion objects.requirenonnull(filter, "filter cannot be null");
Candidate: if this is is non-null?
Reference: isn't (ctx.executionmask & mask_write) == 0 && (ctx.executionmask & mask_flush) == 0 the same as: (ctx.executionmask & (mask_write|mask_flush)) == 0
Candidate: if this is designed to be a <UNK>
Reference: @fraggjkee would recommend to put something to make test fail if inside the catch block. because right now the test will still pass even if parsing completely fails (line 43).
Candidate: this should be <UNK>
Reference: need a null check here.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this is actually not an effective way to test that the exception is thrown. if the exception is not thrown, the catch block is never executed, so the asserttrue() will
Candidate: could you use <UNK>
Reference: as the all() is used just internally i think we can rewrite it as: java public collection<datatype> all() { return datatypes.values(); }
Candidate: style nit: whitespace
Reference: nit: maybe we can save the result of getpartition(topicpartition)
Candidate: this is a bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, but
Reference: i think these instance of are getting away from why we should have inheritance in the first place. can we throw an uoe in other non table data source data
Candidate: use readasstring(...) instead of download <UNK>
Reference: two ;;
Candidate: i rebuilding this imply a lambda. <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK>
Reference: test the change against an account in prod tenant which still doesnt have dec-12 bits .
Candidate: nit, please move this braces
Reference: verify(client != null, "client cannot be null");
Candidate: nit <UNK>
Reference: since a lot of these catch blocks have essentially the same error, it'd probably be better to use the multi-catch syntax, just to clean things up a bit. the original
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: would be nice if this could be incorporated into the checkforaddremovelistener method? perhaps checkforaddremovelistener(listener, checkfornull) ?
Candidate: wait.forelementclickable() should be <UNK>
Reference: should treehash be a hashcode?
Candidate: should we use a convenience class instead of unsupportedoperationexception
Reference: final
Candidate: this should be <UNK>
Reference: suggestion this.ignoreabove = mw.ignoreabove;
Candidate: is there a reason for this logic?
Reference: i'm not sure we actually want to eat this error silently. a parse error here means that hq is setting the header, but in the wrong format, which means that
Candidate: is there a reason for this logic?
Reference: wrapper#getx() : float use float instead of double.
Candidate: this is be <UNK>
Reference: seems like all of this could be extracted into a strategy function to compute the topic given the table id (e.g., topicname(tableid)), and a second method to compute the partitions
Candidate: i'm not sure that we haven't said automatic mechanism depending on the automatic automatic <UNK> automatic automatic automatic automatic automatic automatic automatic automatic automatic automatic automatic automatic automatic automatic automatic
Reference: :question: is it safe to use charset.defaultcharset() here? some systems have different default charsets. for example, windows vs linux.
Candidate: i am not sure how about removing this pr, but i am not sure how about this pr, but i am not sure that _in the
Reference: implutils has a isnullorempty method that should handle these checks.
Candidate: please use 'throws 'throws 'throws 'throws <UNK>
Reference: could you use strings.repeat or something?
Candidate: you could use a <UNK> here instead of objects.isnull
Reference: the original code does not make tolowercase(). why did you add it?
Candidate: unused variable
Reference: this can be reduced to protected.
Candidate: you could use a <UNK> here instead of creating a new object
Reference: we have a stringmarshal helper class that does all of this utf8 logic for a string.
Candidate: please use import?
Reference: shouldn't it be no handler was subscribed **for** command?
Candidate: i think that the discoveryresult is migrated to the <UNK>
Reference: this is again an assumption. anything in the try block can throw illegalstateexception right? i would suggest logging the exception message here.
Candidate: minor nit but we could move this sleep to the beginning of the '+'
Reference: shouldn't we call postlocation.companion.equals here?
Candidate: this is not efficient, but i would be a efficient, that this is is not efficient, but i would be a efficient, the <UNK>
Reference: please don't use sysout. logging is your friend.
Candidate: is this test that this is is not covered in the
Reference: you can replace java if (tfj.gettask(name) == null) { throw new jobcreationexception("unknown dependence: " + name); } else { t.adddependence(tfj.gettask(name)); }  by java t.adddependence(optional.ofnullable(tfj.gettask(name)).orthrow( () -> new jobcreationexception("unknown dependence:
Candidate: nit: use <UNK>
Reference: should the condition here and the condition on 153 the same?
Candidate: static import
Reference: what if the vm is highly-available (so it was automatically restarted) or the user managed to run the vm before coco got it? i think this command should lock the
Candidate: why not use <UNK> instead of <UNK>
Reference: it's unclear to me what's going on here. this appears to check that the service *isn't* bound before calling unbindservice(context).
Candidate: is there a reason for this method to be called in the <UNK>
Reference: -1 for using objects.hash(...) for hashcodes, as it will create an array and i think that it is important to make such thin places as cheaper as possible. if you
Candidate: use guava instead of objects.isnull
Reference: isn't the topology always a localizedcachetopology?
Candidate: we should throw unsupportedoperationexception here instead of <UNK>
Reference: assert.fail inside a callback like this seems kinda weird -- usually asserts run inside the main test code. would it work if this is just a re-throw? like throw throwables.propagate(e)
Candidate: you could use <UNK>
Reference: copy-paste and you haven't changed the member name. is it wise to have a wtextarea called wtextfield?
Candidate: suggestion <UNK> = new <UNK>
Reference: you missed new stringbuilder().append("[test: \"").append(m_name).append("\"")
Candidate: suggestion <UNK> = <UNK>
Reference: see above about not blocking the calls for futures. in any case it is probably less verbose to just block and work with the result directly. also, the contract for
Candidate: is this correct?
Reference: remove cast
Candidate: this should be <UNK>
Reference: what's the reason for this change? we want people to use setfields to change the fields, so it's good practice to return unmodifableset here.
Candidate: this is a <UNK>
Reference: this commandcontext seems unused.
Candidate: please revert this change?
Reference: twice the same call.
Candidate: please use <UNK>
Reference: what is a propertyvaluewrapper? why do you need it?
Candidate: please remove the
Reference: consider replacing 96-97 with just one try block (see line 455)
Candidate: please use the <UNK>
Reference: so we are back to the same perf issue that you mentioned in my pr :) i would be curious to know how do you propose we solve this.
Candidate: you could use <UNK> instead of objects.isnull
Reference: not good to add sth when calling getter
Candidate: @manuelplazaspalacio we can't use the <UNK>
Reference: please don't do unrelated refactor work next time
Candidate: spelling
Reference: this check seems a little fragile at first glance (not sure why.)
Candidate: you could use this method for the
Reference: isn't this dataset automatically executed?
Candidate: is there a reason for this method
Reference: if i understand correctly the *_key strings aren't needed now, and what you want to do here is pass to "params.setaffinitygroupmap" directly the result of "mapaffinitygroupmapping": params.setaffinitygroupmap(mapaffinitygroupmapping(...)); what am i
Candidate: if we is right... right...
Reference: add invariants
Candidate: @vilchik-elena you could use <UNK> instead.
Reference: just pass sparkjarfilepath.tostring less number of changes will be required in the code.
Candidate: is this optional?
Reference: nitpick: please pre-compile this value on class creation by adding it as a private static final   line below the definition of searchproviderurls above.
Candidate: can you iterate over the whole way?
Reference: the same.
Candidate: we could use a <UNK> <UNK>
Reference: the phrase "repartition" has a better ring to it. but here i prefer partitionby for 2 reasons: 1. consistency between the operation name and the operator spec name. 2. repartition
Candidate: suggestion return <UNK> -> entry.getkey(), <UNK>
Reference: need to be a bit careful here since getrealmidentity should only return a non-null value. i think we should throw an illegalstateexception here if we have a null value at
Candidate: i guess that this is right...
Reference: we tend to use illegalargumentexception for these kind
Candidate: is there a reason to log.debug mapping?
Reference: add "balanced" ?
Candidate: suggestion if <UNK> == null) {
Reference: conditional is more clear as: !getzookeeperinstance().isempty()
Candidate: you could use trim the export
Reference: if we encounter the opposite is there anything we could do to fix it? or would it not matter?  if (latency <= 0) { logger.trace("computed a suspicious latency of
Candidate: you could use <UNK> here instead of <UNK>
Reference: this seems to be unnecessary. i also get the label after removing this.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: @jomarko thanks.. i'd have made this integer.class.getname() too
Candidate: you could use <UNK> here instead of the array.
Reference: log/throw?
Candidate: use <UNK>
Reference: stringbuilder instead of stringwriter would be more traditional choice, not that big of a deal though.
Candidate: use <UNK>
Reference: this should be on system.err
Candidate: i pagelogging
Reference: i don't think the new method resolveprovidedproducts is needed. we could simply use the existing resolveproduct/resolveproducts methods to lookup any existing provided products we have, assuming they were already created.
Candidate: you could just 'throws syserr
Reference: read the values and validate
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: need to remove this leftover debug output
Candidate: please use <UNK>
Reference: how can this work? this is going to insert maxed_pool_marker into the bag.
Candidate: this is not to use <UNK>
Reference: no need to explicitly load tables with query if you are using the latest build
Candidate: you could use a constant for <UNK>
Reference: json -> "json" (do a search-n-replace)
Candidate: you could use a constant names instead of <UNK>
Reference: could we move this call elsewhere given that in some cases it becomes unused? (e.g. if partitioned and partionedindexname != null then we don't use the result here)
Candidate: is there a reason for separation types?
Reference: not a field
Candidate: i think this is a <UNK>
Reference: the line .map(l -> l.stream().findfirst().orelse(null)) might be equivalent to .flatmap(l -> l.stream().findfirst()).
Candidate: this is not efficient, we should have to synchronize oldvalue == null or oldvalue == null?
Reference: i would suggest providing more clue about the exception like  throw new illegalargumentexception( "starttimenanos [" + starttimenanos + "] should be greater than 0!" );  to help debugger
Candidate: use <UNK> size.
Reference: why swallowing?
Candidate: could you re-throw a re-throw re-throw re-throw
Reference: why public?
Candidate: this is a <UNK>
Reference: remove this log
Candidate: i think we should print stack trace to debug level
Reference: is double call to structisnull.tobooleanarray() intentional?
Candidate: nit <UNK> is unnecessary.
Reference: suggestion log.debug("{} old entitlement certificates deleted", count);
Candidate: can you consider using a enum?
Reference: replace the if ... else block with  return querystatemap.remove(queryid) != null ? true : false;
Candidate: is there any particular reason why we catching the exceptions?
Reference: make the code fold to the next line when the code is too long. and probably put this text in the strings.xml?
Candidate: i'm not sure how about removing this again?
Reference: seems unlikely that dataref would be null having just assigned the result of a class constructor to it.
Candidate: is there a reason that kubernetes that kubernetes that kubernetes newvalue types? spaces?
Reference: nit: try to avoid string concatenation in the log.  logger.info("setting quota mode to {}", mode.name());
Candidate: i pagelogging
Reference: can we make this method delegate to a package-private static boolean isprejava8(string javaversion) which we can invoke directly from the test? the reflective method is likely to cause failures if
Candidate: can we use <UNK>
Reference: static import
Candidate: log.debug
Reference: byte[] sysmutexphysicaltablenamebytes = getsysmutexphysicaltablenamebytes(); if i understand correctly what @chinmayskulkarni described in the ticket, this call will still result to an admin.tableexists call to check the existance of system.mutex/system:mutex and
Candidate: this is designed to throw an exception instead of threw an exception
Reference: [error] alluxio.client.file.cache.store.localpagestore.get(pageid, int) may fail to clean up java.io.inputstream on checked exception [alluxio.client.file.cache.store.localpagestore, alluxio.client.file.cache.store.localpagestore] obligation to clean up resource created at localpagestore.java:[line 78] is not dischargedpath continues at localpagestore.java:[line 79]
Candidate: you could use <UNK>
Reference: this statement slot.getvaluelist().getvalue()) could cause an npe
Candidate: i log's names.
Reference: columnstatistics
Candidate: <UNK>
Reference: curly braces aren't required
Candidate: i think that this is is not held anymore, right?
Reference: why do we handle error like this?
Candidate: this is designed to be changed to tests.
Reference: why parsedouble and then convert that to int instead of directly parsing to int ?
Candidate: this is designed to be <UNK>
Reference: this can be removed? (being added later.)
Candidate: <UNK> --> <UNK>
Reference: please move it to line 168, just to make it look cleaner :)
Candidate: please use objects.equals()
Reference: to match the old format, do "network parameters:\n " here.
Candidate: this should be <UNK>
Reference: do we missing some enums here?
Candidate: this is not efficient, we could use <UNK>
Reference: these could be renamed to not use nonascii.
Candidate: suggestion if <UNK> right... right...
Reference: the change to optional requires now to do a check here for presence and a get at line 87 and 85 which internally does that same check again.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: suggest json related capabilities be isolated to the jsonutil class.
Candidate: maybe we could use a <UNK> instead of <UNK>
Reference: what if it takes longer to initialize? would it be possible to use something like await().atmost(1, minutes).until(() -> kafkaproducer.isready())?
Candidate: this would be nice to move this sleep to a separate method.
Reference: the code point loop that now exists in this codepointcursor is sort of duplicated elsewhere too. would it be a good idea to port those places over to using it
Candidate: minor nit, but we could use system.currenttimemillis() instead of creating a array instead of 16?
Reference: what's the reason for this extra variable container?
Candidate: i think that this is not efficient, we could use the <UNK> <UNK>
Reference: we should first find out if we have to select one/deselect all and then do the right thing in the ui only once after the if-block. this avoids unnecessary ui
Candidate: i think it'd be faster to be avoided with <UNK>
Reference: i wonder if people running with locale german, chinese etc would get localized error messages from the jdk? you may need to just check the exception type, or maybe try
Candidate: unsupportedoperationexception
Reference: check if monitor is cancelled?
Candidate: you could use <UNK>
Reference: @irenyak1 why return false here?
Candidate: this is be <UNK>
Reference: these should be done through a sink.
Candidate: if you could use <UNK> here instead of return?
Reference: if the length of the legal last name is already the max length, then the legal first name would get truncated to an empty string. i think this code may
Candidate: is there a reason for this logic?
Reference: how about raising an audit log for failure? otherwise, it may be difficult to track which snapshots failed
Candidate: this should be false.
Reference: i'd go with if (fileentry == null) {return false;} without else allowing to remove one indentation level for the successful case.
Candidate: i think that this is is not a multicatch ? server.
Reference: check for null and make a defensive copy java this.signature = requirenonnull(signature, "signature is null").clone();
Candidate: suggestion <UNK> = new <UNK>
Reference: making the hierarchical project representation default breaks the test coverage. i ran the build on our ci, you should be able to check the results [here](<link_0> (credentials: guest/guest). if not,
Candidate: you can inline the checknotnull
Reference: the annotations are inherited, so you don't have to repeat them. but it doesn't hurt i guess.
Candidate: could we use system.currenttimemillis() instead of <UNK>
Reference: !strings.isnullorempty(name)
Candidate: this should be a <UNK>
Reference: do not like the idea of an automated test relying on some mutable repository in some personal account.
Candidate: this is not belong to the
Reference: extract to assertclassandmethodname(stacktraceelement, classname, methodname)
Candidate: please use <UNK>
Reference: calcite allows a pure string interval value, if bigquery only allows int64 format, we should check and throw for other non-integers values.
Candidate: you could use <UNK>
Reference: @davidfestal formatting in if(. probably it would be better to extract it to some method e.g. ishttp(string url) could you please clarify what exactly is done in updateserver and why
Candidate: please use <UNK>
Reference: i wonder if for future-proofing this check should come _after_ all of the internal ones? seems like we might want to default to the assumption that we override the superclass's
Candidate: we should throw an exception instead.
Reference: just return the day value. don't need to recomute millis_per_day.
Candidate: if you could use <UNK> here instead of calling <UNK>
Reference: can we java docs about what formatdatestring is used for?
Candidate: this should be <UNK>
Reference: same typo as above
Candidate: is there a reason for element?
Reference: can simplify using objects.equals <<link_0>,%20java.lang.object)>
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: doesn't seem necessary to keep this function, the two lines below should suffice pauseselfscanning(); mhandler.postdelayed(mscanrunnable, math.round(1.5 * teclaapp.persistence.getscandelay()));
Candidate: is there a reason for this method to be called in the <UNK>
Reference: since there is no marker, it seems that containsmarkerforemptytxn should be false.
Candidate: you could use a classic operand
Reference: you can return this from here to expose kind of fluent api.
Candidate: wait.forelementclickable() should be <UNK>
Reference: this.size for consistency
Candidate: suggestion <UNK> = <UNK>
Reference: why is millisecodnspersecond a function. sounds like it should be a constant
Candidate: use <UNK>
Reference: is that needed? is not isautorefresh sufficient? in any case, forcerefresh represenatations will be refreshed once because representationstorefresh is a set.
Candidate: suggestion <UNK> = <UNK>
Reference: add a check here to verify that the serialdatareceived method was not called.
Candidate: you could use <UNK>
Reference: do we still need to do all this reflective bullshit now that it's in a separate artifact?
Candidate: use reflectiveoperationexception
Reference: if jdk 6/7 returned a double and jdk 8+ return integer, can't we just simplify this whole block to java assertequals(3, variable);  since we're expecting jdk8+ from now on?
Candidate: you could replace this with <UNK> with <UNK>
Reference: after throws exception is dropped from rollbacklocks, seems like this code should be : java completablefuture<void> getfailureop(commitdata cd) { return rollbacklocks(cd); }
Candidate: suggestion completionstage<void> asynccompletelocaltransaction(advancedcache<?, ?> long timeout) {
Reference: this test fails  java assertthat(empty().leftpadto(1, 1)).isequalto(of(1));  i believe <code>if (length <= 1)</code> should be removed
Candidate: suggestion throw new <UNK>
Reference: suggestion "the @messagehandlerinterceptor must be on a method."));
Candidate: 2048 is sketchy placement typos
Reference: build the log message when needed
Candidate: i think the log.
Reference: should be removed
Candidate: is there a reason to re-throw the exception here?
Reference: new local variable does not seem to be used anywhere.
Candidate: could be simplified to <UNK>
Reference: can be static to avoid to avoid redundant object creation on startdownload
Candidate: suggestion if <UNK> == null) {
Reference: wonder if here we should remove the tbl_posts.is_wpforteams_site and tbl_blog_info. is_wp_for_teams . wdyt?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: lowercamelcase please, also enderpearl**s**. p.s. 0-1
Candidate: you could use <UNK> instead of <UNK>
Reference: can we not duplicate the text here?
Candidate: if this is is not updated.
Reference: suggestion if ((en instanceof gunemplacement) || (en instanceof fightersquadron) || (en instanceof jumpship)) {
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: please remove alias setting (should be encapsulated in addmanageddevice
Candidate: alias (should floppy encapsulated (should be encapsulated (should be encapsulated by: by: by: by: by: by: by: by: by: by: by: by: by: params, by: addmanageddevice
Reference: this can be replaced with a lambda. also some nesting can be removed from the conditional:  java boolean isdoubleclick = ... && ...; if (isdoubleclick) { ... } 
Candidate: is there a reason for this method is not used in <UNK>
Reference: this assertion should not be removed. it fails because getpayload() now sets the position to 0 before returning the bytebuffer. then flip() will make the bytebuffer empty (limit=0). but it
Candidate: is there a reason sharing of this pr.
Reference: (list<?>) (3 places)
Candidate: you could use <UNK>
Reference: append "from state manager"
Candidate: inline variantsourceentities.size()
Reference: what about using org.apache.commons.io.filenameutils to simplify the code? java string.format("%s%s%s", filenameutils.getbasename(filename), count, filenameutils.getextension(filename));
Candidate: you "_" "_" = <UNK> <UNK> = "_" + "_" + "_" + "_" = <UNK> + "-";
Reference: use methodtype.generative.getcode()
Candidate: please use <UNK>
Reference: add a line break before ||
Candidate: this is a bit dangerous, for the
Reference: it would be nice if this can be a tunable. also please give it a meaningful name.
Candidate: could you use s?
Reference: rfc7252 responses may be piggybacked. if so, a ack for a ack is not compliant. dose oscore change this? are piggybacked responses not used with oscore?
Candidate: is there a reason for this logic?
Reference: i would suggest using objectutils to check for nulls here
Candidate: if you could use <UNK>
Reference: what if clock.currenttimemillis() + timeoutms overflows?
Candidate: this is not covered by default.
Reference: i'm a little confused by this, and its likely just me not knowing the full code. why synchronize something that you're spinning off into a thread anyway? are you getting
Candidate: nit: we synchronize synchronize synchronize synchronize synchronize synchronize to synchronize synchronize synchronize synchronize synchronize synchronize synchronize synchronize synchronize synchronize synchronize the input.
Reference: extract false to a constant declared in the beginning of the class to declare the intent of the parameter, which then can be reused throughout the test file
Candidate: this is not a shard to shard shard shard shard shard shard shard shard shard shard shard shard shard is not updated.
Reference: for troubleshooting, should more specific information be output about the vendor generating the error, such as pmw vendor id or kfs vendor id?
Candidate: could we use constants for enum names.
Reference: why do we need this?
Candidate: is there a reason for this method to be called on the view?
Reference: same here, we should be relying on [dateformatterprovider](<link_0>
Candidate: this is not a nervous that we is a a multicatch for the
Reference: :ant: safer to use  groovy def port = img.withrun('-p 12345:80') {c -> c.port(80)}
Candidate: you should use <UNK>
Reference: could use long.bytes and float.bytes
Candidate: this is a bit sketchy for the sake of <UNK>
Reference: given the problems we've had with other properties of storagedomain with converstion of integer to int and the npes resulting i think it's best that the return type will be
Candidate: this is be <UNK>
Reference: i'd suggest to introduce a lock to guard accesses to running and all other places where it is accessed. that way we will prevent concurrency when shutting this component down
Candidate: if close() throws exception exception
Reference: do we want to keep pretty printing on?
Candidate: why not use <UNK>
Reference: works with two duplicates but what happens if 3 or more?
Candidate: magic number
Reference: ![minor](<link_2> 'severity: minor') remove this unnecessary cast to "object". [![rule](<link_1>](<link_0>
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: without testing i dont think file.createnewfile will change the access and modification time of a file if it already exists?
Candidate: i am not sure that this have been useful to specify the <UNK>
Reference: add check on list-length==3 here too? it would be a better error messsage.
Candidate: small small small small small small small small small small small small small small small small small small small small small small small small small small small small small small
Reference: i think for simplicity you can even have addresshelper.getsocketaddresses method return addresses and do the primary secondary separation internally (it seemed to me that such generation can be the responsibility
Candidate: log.debug
Reference: according to the druid formatting rules, should break all or none arguments.
Candidate: suggestion final <UNK> = <UNK>
Reference: i believe this is incorrect - if no configuration is specified, we should use the global configuration, not 'no' configuration (i.e. an empty map). please confirm with @alzimmermsft (and maybe
Candidate: is there is no need to be <UNK> mapping?
Reference: not the right implementation, permissions other than the one at zeroth index would get ignored.
Candidate: how about replacing a string concatenation property?
Reference: supportingconditionvalue -> supportingconditionstringvalue
Candidate: if this is is not positive error message is not positive
Reference: this is not a deep copy
Candidate: is there a reason for this method to be <UNK>
Reference: i think we should detect bad keys during initialization rather than runtime, store the cache as a field, and simply log rather than throwing an exception. the runtime exception can
Candidate: how about replacing a warn ? side) ? iirc iirc iirc iirc
Reference: there is no getiscsiinitiatorsbyvdsidandstoragetargetid in interfacedao only getiscsiinitiatorsbyhostidandstoragetargetid (host instead of vds)
Candidate: this should be a vlan only, we should use the <UNK>
Reference: consider using system.currenttimemillis instead, since it has better performance (not much, from date().gettime() i reckon), but it will save on gc execution, by skipping the creation of a new object,
Candidate: minor nit - we could use a constant instead of tabs.
Reference: 1.65 looks like an interesting value (instead of 4).
Candidate: you could use <UNK>
Reference: guava's iterables.getonlyelement might be more crisp.
Candidate: you could use <UNK>
Reference: same here, don't requery and maybe use a single logger object?
Candidate: we should use a bean annotation,
Reference: @pjain1 and @gianm this means if only the first 5000 events are not properly formatted you won't see the log. i will use an exponential backoff strategy.
Candidate: i think that this is convenient to boolean part, but i would be convenient to <UNK> <UNK> && <UNK> && <UNK> || <UNK> && <UNK> || <UNK> && <UNK> ||
Reference: removing datasource before restoring snapshot is not necessary imo.
Candidate: you could use <UNK>
Reference: can be put as single statement --> final containerinfo containerinfo = containerstatemanager.allocatecontainer(pipelinemanager, type, replicationfactor, owner);
Candidate: this is superfluous ?
Reference: same question: it doesn't seem to be necessary?
Candidate: we should throw an exception here instead of <UNK>
Reference: throw new unsupportedoperationexception
Candidate: we should use <UNK>
Reference: please, use fail(). <link_0>
Candidate: let's rename "ignore" to "ignired" let's use
Reference: i don't think these messages should be localized. imagine a situation when you get an bug report from a user from china with these messages in the log.
Candidate: i wonder if there is a a <UNK> that converts to to <UNK> to <UNK>
Reference: suggestion return _addedfiltersnoduplicates.add(filtertoadd.withid("avoidduplicatefiltersthatonlydifferintheirid"));
Candidate: this is not a bit dangerous, for this use-case.
Reference: i believe this will be flagged as a potential npe by android studio. it makes sense that this will never happen so i recommend adding a readinglist != null to
Candidate: is there a reason for element?
Reference: the behavior as implemented seems appropriate. if called on a nonexistent file, we return false; if anything else goes wrong, we throw an exception. right?
Candidate: should we use a new <UNK> id).
Reference: actually, in that case the winding order parameter would be set, but with a enum value that is not handled here. so it would be good if the message would
Candidate: use <UNK> instead of <UNK>
Reference: can be replaced with a lambda.
Candidate: suggestion if <UNK> > 0, > 1, 0, 1, <UNK> 1, <UNK> 1, <UNK> 1, <UNK> 1, <UNK> 1, <UNK> 1, <UNK> 1, <UNK> 1, <UNK> 1, <UNK> 1, <UNK>
Reference: use stringutils.isempty()
Candidate: if you could use <UNK> <UNK>
Reference: any reason for this exact rng function? also, how about using this.rand provided in the world class
Candidate: is there a reason for this logic?
Reference: take a look at object executescript(string script, object... args) method in apppage
Candidate: is there a reason for element?
Reference: do we always have to use amqpannotatedmessage even for messages that don't need this?
Candidate: we should have to bind <UNK>
Reference: nit: extra space here
Candidate: is there a possibility of <UNK> <UNK>
Reference: same as above. the new value should be lockvalue
Candidate: should we use a constant?
Reference: please format this code correctly. enter and { after else.
Candidate: we could use <UNK>
Reference: configurationadmin.getconfiguration(pid, "?")
Candidate: is there any reason why not mock here?
Reference: ![codacy](<link_0> issue found: [these nested if statements could be combined](<link_1>
Candidate: we should throw an illegalstateexception instead of <UNK>
Reference: any factory with parameters we could use for testing?
Candidate: if this is is a bit strange, but i guess we could have to compute the <UNK>
Reference: if "analyzetypes" has its own methods, then there should probably be a new "analyzeservices" method.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: add this here: registerhandler(getview().getfeedbackimage().addclickhandler(new clickhandler() { @override public void onclick(clickevent event) { if (feedbacklink != null && feedbacklink.length() > 0) { window.open(feedbacklink, "_blank", null); //$non-nls-1$ } } }); this automatically
Candidate: you could use <UNK>
Reference: can you please rename those intents to expectedwhateverintent and actualwhateverintent. its really hard to read the way it is now, and really hard to comprehend which part is test setup,
Candidate: is this affects the criteria that affects the manager, that the affects the manager, that the affects the manager, mind that the affects the manager, mind that the affects the
Reference: no isdebugenabled()
Candidate: unsupportedoperationexception pagelogging
Reference: also check this
Candidate: this should be <UNK>
Reference: you can avoid using arrays by using atomicreference<>
Candidate: redundant
Reference: missing blank line. don't know why the formatter doesn't add it in some cases.
Candidate: we should show the dialog dialog dialog dialog dialog dialog dialog dialog dialog dialog dialog dialog dialog dialog dialog dialog dialog dialog dialog dialog dialog dialog dialog dialog dialog dialog
Reference: @vidurananayakkara do the necessary changes to fix above todo
Candidate: i'm not sure that we want to have oldvalue reconnect connection, oldvalue
Reference: why we need totalnum != 1? i think currentnum <= totalnum / 2 also applies to video cluster where some colos have only 1 replica.
Candidate: this is a bit dangerous, for this use-case.
Reference: these assertions are checking the wrong thing, copy/paste err?
Candidate: should be replaced by <UNK>
Reference: model needs to be set dirty. this was a bug in the original code, please fix it on the way
Candidate: @vilchik-elena you could use <UNK>
Reference: <link_0>
Candidate: this exception is be thrown exception
Reference: this should be removed
Candidate: is there a reason for avro property?
Reference: extract layeronmap.getdefaultpolygonstyle() to intermediate variable?
Candidate: i think that this is is not <UNK>
Reference: yep, this is correct. would it be worth having some preconditions check on the exception (that it is an interruptedexception)? - in case someone later on tries to re-use this
Candidate: why is we use <UNK> instead of creating a new connection,
Reference: other.hashcode() is only fast for immutable tuples with cachedhash, not for volatiletuples. if obj is volatile, we can jump straight to internalequals() i believe. though this should not matter a
Candidate: this is a objects.isnull
Reference: please use a parametrized message <link_0>
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: confusing parameter name. the type is that of the aggregate, not the event. the fact that it's the type derived from the first event, it not relevant in this scope
Candidate: i wonder if we could be a "?"
Reference: can't we return just a value here? why do we need a) supplier b) future?
Candidate: no need to throw new <UNK>
Reference: i think we could improve further by hiding the isdefault parameter. there's only one default version, but all those calls have to mention this false argument, which is obscure unless
Candidate: suggestion throw new <UNK>
Reference: shouldn't we keep a test to check that in this situation an array of object is returned? i remember that in past this was not the case.
Candidate: i don't think that we don't think we don't know that we don't know that we don't know that we don't know that we don't know that we don't have
Reference: suggestion if (mmictoolbar == null) {
Candidate: you could use <UNK> instead of <UNK>
Reference: what are some benefits of using retained fragment in this case?
Candidate: this fragment is be fragment
Reference: is it the messagehandler's job to mark the message as handled successfully? would it make sense to put that responsibility in here, and then maybe on error we could know
Candidate: i think this should be <UNK>
Reference: why do you need both authenticationscheme and authorizationmode to determine if you have to retrieve an access token?
Candidate: you could use a logger instead of creating a logger instead of download the <UNK>
Reference: object not result
Candidate: this is be added to the request.
Reference: remove space at end of string
Candidate: suggestion <UNK> -> <UNK> > > > > > > > > > > > > > > > > > > > > > > > > > >
Reference: ok, this is a bad message. i'm someone that says that there's no such thing as an expected exception in general, because exception really are an extraordinary event per definition.
Candidate: this is unnecessary.
Reference: shouldn't need to specify the event types, as this is handled by the annotation itself. this is for remote listeners which we don't have access to the annotations at this
Candidate: you could move this to <UNK>
Reference: in main(), since this is a usage warning, please leave as println().
Candidate: i'm not sure how about this worked.
Reference: use java 8's optional.
Candidate: this is designed to be a <UNK>
Reference: this should be a tracef or removed.
Candidate: i think that this is is not <UNK>
Reference: should not be needed.
Candidate: you could use <UNK>
Reference: isn't this a normal compensateuri which passed from user? so it can be user-endpoint:user-port/something/compensate? how can we be sure that parent lra can be extracted?
Candidate: this is be defensive.
Reference: i don't feel very good about this constructor. it seems counter-intuitive to have the fscontext as an argument here. there is already an fscontext embededed within the fs object. is
Candidate: we could use a constant instead of <UNK>
Reference: make these constants?
Candidate: maybe we could be a log a log that we could have a log the <UNK>
Reference: if run in the ui, when mutiple validators are used, this will lead to multiple dialogs being displayed to the user, each after one validator succeeded. it might be better
Candidate: you could move this to <UNK>
Reference: as you are negating the result when using this function, it'd be better to avoid the double-negation by just returning the result here directly.
Candidate: suggestion return <UNK> -> <UNK>
Reference: should we add a sort here?
Candidate: wouldn't it be better to leave the one?
Reference: typo, should be timeelapsedmillis
Candidate: you could pull this out into a variable?
Reference: usually we just put tests in testbackgroundhivesplitloaderforbucketedtables.java into this testbackgroundhivesplitloader.java class. in this specific case, i understand the tests and other helper methods in testbackgroundhivesplitloaderforbucketedtables.java are very specific and may
Candidate: please use <UNK>
Reference: the condition could also be changed to !brand.getchipvalues().isempty()
Candidate: if you could use a <UNK> <UNK>
Reference: i'd recommend updating this error message slightly to return the id (as it's more useful to reference the problematic object). so, something like "the id " + id + "
Candidate: this does not have to accept <UNK>
Reference: submit?
Candidate: rename to iu
Reference: intend was fine before
Candidate: i think this is not depend on the root branch.
Reference: (current = toprocess.takefirst()) != reporting_none) ?
Candidate: i think this should be to log the
Reference: you may not intend to change it.
Candidate: is there a reason for avro ? thanks!
Reference: rewrite messages without we
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: please add new helptag and hashname (as in storagelistmodel)
Candidate: i think, you could use the formatter
Reference: what if you just sort the process instances based on their id, and start aborting the highest ones first? a child process should have a higher id than its parent.
Candidate: i pagelogging
Reference: is this notification ever removed? if not, will this have the potential to affect other tests?
Candidate: i pagelogging
Reference: would be better to make this test class based on the @runwith(springjunit4classrunner.class) anyway: less context loading - better performance! yes, the outbound-adapter-parser.xml should be renamed to the cassandraoutboundadapterparsertests-context.xml to be
Candidate: is there a reason for element?
Reference: this should call authorization(list<authinfo> authinfos). e.g.  return authorization(lists.newarraylist(new authinfo(scheme, (auth != null) ? arrays.copyof(auth, auth.length) : null)));
Candidate: i doubt that this is a bit nervous but i would be a bit more obvious that this is a bit less complex than <UNK>
Reference: watch out the naming: timer/threshold, getios/getstreammapping
Candidate: rename to
Reference: what if the application name is an empty string?
Candidate: i think this is a little log.debug
Reference: but in this case, the uninstall part will be executed only if the script part succeeds, right? if script fails, there won't be any uninstallation...
Candidate: you could use a string instead of <UNK>
Reference: would you mind declaring two new constants default_read_timeout = 80*1000 and default_connection_timeout = 30*1000 and using the named constants here?
Candidate: we should use <UNK>
Reference: the removal here of public breaks the namegenerator module - generally the headlessenvironment is available for other things to use, an ide might just not think it is in-use if
Candidate: please remove the again?
Reference: again naming
Candidate: this is unnecessary.
Reference: i feel like there should be a better way to build these strings. maybe there should be a static method in every interface that takes a bool and returns the
Candidate: could you pulled this v. strange, strange, instead of <UNK> edges, v. strange,
Reference: nit: expected value should be the first argument in assertequals.
Candidate: nit: <UNK> -> <UNK>
Reference: it appears appendtime now simply truncates at micro precision. that would seem to mean that nanos += 1000; would be sufficient here.
Candidate: i is an array nervous that this will be an extra an extra check?
Reference: should this is iskotlinandroid?
Candidate: please use <UNK>
Reference: please catch (illegalparameterexception e) directly (same in other methods)
Candidate: is there a reason why not mock here?
Reference: will this ever be true anymore?
Candidate: should we move this to <UNK>
Reference: same here - this would be good to assert that the explain plan looks as expected once those changes are made.
Candidate: nit: we use <UNK> here instead of <UNK>
Reference: why did you choose 9999? that's a valid pid.
Candidate: is this optional?
Reference: can start the search at nul: cmd.indexof("\0\0", nul)
Candidate: this affects this shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard
Reference: instead of having to do this, should line 248 call tcmf.createclusteredcachemanager instead of addclusterenabledcachemanager? this avoids the leak altogether.
Candidate: why not use <UNK>
Reference: it was written in lambda expression? any reason why you change it?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: if we removed the ambiguity, this can be reverted
Candidate: this ctor ctor ctor ctor ctor ctor ctor ctor ctor ctor ctor ctor ctor ctor ctor ctor ctor ctor ctor ctor ctor ctor ctor ctor ctor ctor ctor ctor ctor
Reference: this default case could be merged with the 3 known claims above (which are dates as well), or rephrasing, this could be deleted: java case publicclaims.expires_at: case publicclaims.issued_at: case publicclaims.not_before:
Candidate: is there a a constant?
Reference: please also set invoicedetailentity.ad_org_id here
Candidate: you could use <UNK>
Reference: use oseewebapplicationexception
Candidate: throw an exception
Reference: please abstract index2chrom to a class, this is a bit odd
Candidate: could we use <UNK>
Reference: we can remove this
Candidate: is there a reason to assert that this is is empty?
Reference: connection leak, needs to be closed. instead use the non-static version test_util.getzookeeperwatcher()... that is automatically closed with htu teardown.
Candidate: i'm not sure that we want to use the <UNK>
Reference: why have you made this public?
Candidate: could you move this braces around
Reference: should we pull this string into a constant?
Candidate: i we validating stringutils page.
Reference: do we need all of these extra constructors?
Candidate: i think this is a <UNK>
Reference: i think this is in-correct. don't we want to use getidletcpconnectiontimeout ?
Candidate: this is not be used?
Reference: only one uses intvalue(). let's remove it.
Candidate: is there a way to be null?
Reference: why not check for null?
Candidate: is there a race conditions conditions conditions conditions conditions conditions conditions conditions conditions conditions conditions conditions conditions conditions conditions conditions conditions conditions conditions conditions conditions conditions conditions conditions conditions conditions
Reference: you do not use the return value here (which should be complained by our qa tools). and you instantiate a bytearrayoutputstream each time this method is invoked. better use an
Candidate: you could use <UNK>
Reference: this should just be " + rules.select(quantity)
Candidate: <UNK> is sketchy
Reference: why?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: compared to the previous use of compareandset(), i think this block is much easier to understand, so let's keep it as is here.
Candidate: should we use <UNK>
Reference: suggestion: i doubt we can have a null set since we initialize this with new set on fullentityovfdata. but i guess that since we also let it be initialized with
Candidate: you could use <UNK>
Reference: i see you making this pattern several places in the code to loop through all the states. it seems really inefficient to me. is there a reason we can't just
Candidate: could you move this to a separate method.
Reference: wouldn't you want the conditions check prior to assignments?
Candidate: this should be <UNK>
Reference: nit: is it necessary to do this only if the networkagent has ever connected? or can we do it all the time?
Candidate: this is designed to be a <UNK> <UNK>
Reference: nitpick: space
Candidate: this could be simplified to <UNK>
Reference: this approach would scan through all aggregations and sum up the retained count every time it's fed data. as an alternative, we could use a system similar to the way
Candidate: we could use <UNK>
Reference: at least on the mac with a retina display, the last line is not included in the rectangle. maybe this is the reason: isn't this is the top of the
Candidate: i think that this is is not efficient, but i would be more efficient, that the is <UNK>
Reference: shouldn't these 3 removexxx be in the same transaction?
Candidate: i think that this is is connected to the <UNK>
Reference: why do you need declaration of this variable here?
Candidate: you could replace this with foreach with checkargument with <UNK>
Reference: the "remove" method is not part of the interface, so the client will never be able to invoke it, so there is no need to prepare a nice response for
Candidate: pls add @override please.
Reference: please remove alias setting (should be encapsulated in addmanageddevice
Candidate: rename to <UNK> maybe?
Reference: move this block into the if (format) case.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: 3 is a magic number. i assume it is due to the following: <<< outputbuffer.putint(systemmetadatarelativeoffset); outputbuffer.putint(usermetadatarelativeoffset); outputbuffer.putint(datarelativeoffset); ideally 3 is iether a method call or a constant.
Candidate: please use <UNK>
Reference: new hashmap<string,object>(0) or collections.<string, object>emptymap() if immutable
Candidate: this is be a <UNK>
Reference: propose to put for (map ...) into if clause in current implementation log.trace will be not executed
Candidate: this should be a constant instead of <UNK>
Reference: similar to above, this layout comparison would fail if there is transformation. probably want getbaselayout
Candidate: i guess we could be pulled to _after_ the
Reference: is that a good enough debug print? you're not really printing the vms you have
Candidate: use utf-8 instead of <UNK>
Reference: rename to image
Candidate: suggestion <UNK> = <UNK>
Reference: likewise doesn't need the if check.
Candidate: you could use a ifpresent.
Reference: better handle numberparsingexceptions here?
Candidate: you could re-throw the
Reference: should we use removecacheditem here?
Candidate: you could move this braces around
Reference: please use time_format instead of "hh:mm:ss"
Candidate: could use constant constant
Reference: just to make sure the volume is at maximum, since you removed this line: <link_0> suggestion simpleexoplayer.setvolume(ismuted ? 0 : 1);
Candidate: is there a reason to check that is empty?
Reference: remove this line
Candidate: this is nitpicky, but i would be nice, simpler.
Reference: neither -> either
Candidate: this is never happen.
Reference: suggestion try { prrevision.validatemergehash(repo); } catch (abortexception e) { fail("validation should succeed, but: " + e.getmessage()) }  if the validation fails the way it is written it will be
Candidate: you could use <UNK>
Reference: this is the core of the fix, isn't it ?
Candidate: we can't we pull the getconnection request?
Reference: this should not be necessary if we set linkedartifactnamesuffix in cclibrary
Candidate: this is be <UNK>
Reference: loop can be replaced by passing the collection to ctor: suggestion list<string> referencepoints = new arraylist<>(idtoreferencepointmapping.keyset());
Candidate: no need to call this explicitly.
Reference: is it possible for this listener to return null?
Candidate: you could use <UNK>
Reference: i would move this logic to get an enum from an int to a static method in the enum, similar to the method fromvalue here: <link_0> that way you could
Candidate: should we use <UNK>
Reference: final result can be written directly (without computing the intermediary values: return y1 \* math.pow(y2 / y1, (value - x1) \* xdiffinv); (remove lines 55 and 56). this should save
Candidate: we could use a constant? instead of a constant?
Reference: @erimerturk we should keep the catch for interruptedexception separate in my opinion. in that case i believe the thread should stop.
Candidate: nit : <UNK>
Reference: this looks like it's fixing a bug in datasketches, is that right?
Candidate: why f
Reference: why don't you account for the size of hivetypename
Candidate: suggestion assertequals(1, <UNK>
Reference: we can replace the iteration with labels = collections.unmodifiableset(new hashset<string>(parameters.labels));
Candidate: you could use foreach loop here instead of <UNK>
Reference: should we expect a more specific exception here?
Candidate: you could use isempty() instead of <UNK>
Reference: given you only check the bloom filter for brands it might be good to not updated it with the ids of series and episodes. reduces the chance of a false
Candidate: i think that upper condition is be upper case of the upper case of the upper case of the upper case of the upper case of the upper case that
Reference: nitpick: can be simplified to script.getcommands().stream().anymatch(cmd -> cmd instanceof descriptiorcommand);
Candidate: you could propagate the exception propagate to propagate the
Reference: are you sure that this "name" pattern is the same as the name pattern for groups? because it seems to be used for user name in this class.
Candidate: can be replaced with <UNK>
Reference: no need to do this, just this.url is enough
Candidate: suggestion <UNK> = <UNK>
Reference: we need to review a message which makes sense for someone who doesn't know the db structures. and match it with a troubleshooting doc stack trace.
Candidate: maybe we could be a warn instead of creating a warning instead of grabbing the
Reference: could be simplified by returning immediately if null - would save having to indent the whole block.
Candidate: is there a reason to re-throw the properties?
Reference: same here with the lock and leaderlistener.
Candidate: if this is is designed to be called at the beginning run() method. [![rule](<link_2>](<link_0>
Reference: hrm, i think there are more whitespaces in this method then there needs be?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: with those 2 lines, you'll instantiate a new filterinputstream whenever this method is asked. instead, the generated filtered inputstream must be stored as a field and returned if already existing.
Candidate: i'm not sure that this is not required, but i guess that this is is not required, but i would be preferable to the
Reference: take care: you should _copy_ every single field you set in the binder. to avoid having to manually keep them up to date, better use the [httputils#copy](<link_0> method.
Candidate: this is not be null"
Reference: @reggie7 was there bugs in the impl? if this is updating the test to work w/ jdk11, why are there a bunch of changes to the impl itself? changing the
Candidate: you could use stringutils instead of <UNK>
Reference: static import
Candidate: is there any reason why we catching exception here?
Reference: if the profile isn't set you'll have npe here.
Candidate: please export permission to validate the storage view?
Reference: i don't think you actually need this flag - you are cancelling the job anyhow, so no further calls will be done.
Candidate: this could be simplified to computeifabsent
Reference: will be easier with a generic parseblock() method, we don't need to parse the packet header, etc.
Candidate: this is not use <UNK>
Reference: you could simplify this using the ternary: this.clustercriterias = stringutils.isblank(clustercriterias) ? empty_json_aray : clustercriterias;
Candidate: this is be repelaced by <UNK>
Reference: mexecutor.shutdown() ?
Candidate: you could use <UNK> here instead of <UNK>
Reference: we need to fix this
Candidate: is there any reason for this?
Reference: change to fine level as if this ever happened it could happen a lot and fill logs
Candidate: could you use <UNK>
Reference: please add a case like { ? = call pack_getvalue}
Candidate: is there a reason for this logic?
Reference: problem here: getcontentresolver() returns a null value when in context of syncadapter. it's necessary to check that the returned value is not null and, otherwise, call instead getcontentproviderclient(). have a
Candidate: this should be <UNK>
Reference: optional ... sorry to repeat myself.. just pointing out occurrences.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: what happens if 2 aspects have the same name?
Candidate: you could use computeifabsent clear() is not modifier) instead of objects.isnull
Reference: this.joinaddressindex seems to mean "last processed position", but you're existing here with joinaddressindex (the loop index variable) being not processed. am i missing something?
Candidate: you could use <UNK>
Reference: i think we should simply supply a default header in the beginning.
Candidate: suggestion <UNK> <UNK>
Reference: i may be mistaken, but i think this will result in a desired row group size of 128 bytes, not 128 megabytes. i would suggest using the parquetwriter.default_block_size constant instead
Candidate: this is designed to create a constant for each time.
Reference: wrong filter -- it must be "another target creature", not "you don't control". see example of fallofthehammer with target tags usage for same ability (but please, test it after changes
Candidate: could you 'throws 'throws 'throws 'throws 'throws 'throws 'throws 'throws 'throws 'throws 'throws 'throws 'throws 'throws piece piece piece piece piece piece piece piece of piece piece piece piece piece
Reference: break before the second ||
Candidate: use <UNK>
Reference: i like that you move the checks for feature toggles to their own private method, it removes clutter. however, i would suggest to be more precise in the naming: you're
Candidate: this should be <UNK>
Reference: what if the above command fails?
Candidate: again, no need to check here
Reference: to clarify, + 1 is for the local operation, right?
Candidate: is there a reason for this?
Reference: i think you should use assertions from junit/assertj.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: else is redundant.
Candidate: please remove this debug
Reference: adding an assert here might stop codacy from complaining
Candidate: wait.forelementclickable() could be <UNK>
Reference: it's a minor detail, but three of these four checks are faster than issupertypeof and isabstract actually weeds out many.
Candidate: this is designed to be trace, tracking the framework wants to trace,
Reference: how about :  if () { } else if (){ } else { } return null;
Candidate: i think this should be <UNK>
Reference: debug, not warn?
Candidate: i think we should show the dialog for the dialog for the dialog
Reference: here task for each cache group can be executed by different threads. let's use single-threaded execution here.
Candidate: is there a reason for the sake of these properties? i am not sure how about this
Reference: i think the name "arrivaltimeus" is a little confusing.
Candidate: we could use a <UNK> <UNK>
Reference: i assume you're scanning all supertypes because the model may implement different interfaces? what about if the model inherits from an ancestor that implements realmmodel or overrides realmobject? this should
Candidate: please use <UNK>
Reference: why do you have this construct here? why are you not printing a stack trace on an ioexception? isn't there a way to hand over the exception to junit?
Candidate: space before after after the colon after ( <UNK> == <UNK>
Reference: applicationid and applicationversion might both be null. or one of them. we need to handle this here
Candidate: you should use a string instead of nesting.
Reference: this is a bug, we need to pass requestoptions instead of options since you are oof, i will fix it in your branch and push it.
Candidate: nit: use <UNK>
Reference: im console log des builds der jenkins instanz!  j.assertlogcontains("id checkstyle is already used by another action: io.jenkins.plugins.analysis.core.views.resultaction for checkstyle", build)
Candidate: please use <UNK>
Reference: when can this happen in practice?
Candidate: you could use a constant instead of creating a new object instead of is)
Reference: as we log the metrics periodically, i think logging this message should be enough with fine (or below) level.
Candidate: nit: we could use <UNK>
Reference: typo: nonexistent ??
Candidate: use <UNK>
Reference: should the variable name then remain as messagebuilder?
Candidate: you can use a <UNK> instead of creating a warning entry, that is unnecessary.
Reference: ha... thanks so much! i have not been following this section of the code so i was not aware of what changes have been made recently.
Candidate: this doubt if this is is not <UNK>
Reference: @tarilabs you can use kieserverassert.assertsuccess(serviceresponse<?> response) here - <link_0>
Candidate: you could use a local variable?
Reference: it's bad to use a common port as 8080...
Candidate: you could use <UNK>
Reference: deleting donor(228l), and then testing by searching for donor(000233)? also, a lot of donor numbers and ids are using characters [a-z] in them, but donor number and donor id formats
Candidate: suggestion <UNK> = <UNK>
Reference: you know what it is about
Candidate: you could mutualize this line
Reference: something wrong with indentation. use 4 spaces.
Candidate: you could use <UNK> this(name, <UNK>
Reference: good call in checking for size > 0, and having it assigned to a var so it's not evaluated every time. thank you!
Candidate: i would be reduced to foreach loop instead of repeating the loop
Reference: rename to keyevent or ignoredkeykevent
Candidate: this could be simplified to <UNK>
Reference: any chances to see consumed messages and verify their headers for that integrationmessageheaderaccessor.acknowledgment_callback? and probably after pending verification call the ack and see if there is no pending afterward left.
Candidate: you could use <UNK>
Reference: this conditional is probably not necessary, even from a performance point of view. the meaning might be clearer with only the put() call and no conditional.
Candidate: you could replace this by: <UNK> <UNK> <UNK> = <UNK>
Reference: why are 38,39 lines the same?
Candidate: if you could use a multimap here instead of creating a new object and then we can't rely on the constructor?
Reference: what is the point of putting the application mode in the session? anywhere we would read that information can't we simply read the configuration?
Candidate: why not concrete again?
Reference: if wanting to express the real count of the children with the child_count constant, rather use intstream.rangeclosed(1, child_count).boxed().collect(tolist())
Candidate: can we remind the the the <UNK>
Reference: @fanifieiev let's put this in a constant.
Candidate: colon too, please remove the again.
Reference: should we swallow typo-case without even issue a warning? delete email method above doesn't really matter, because if a mail doesn't exist, all is fine. here someone rellies on this
Candidate: if you could use <UNK>
Reference: in ceramics, i made [a helper](<link_0> to get a list from a enumobject. might be a little cleaner than the loops.
Candidate: you could use <UNK>
Reference: unless you want to allow <null> values, use the primitive boolean instead of the java.lang.boolean object.
Candidate: this is be repelaced by <UNK>
Reference: wouldn't setting this to false cause a correctness issue? getblobinfo relies on getting and returning the blobproperties of the metadata chunk. so shouldn't this be passedinblobproperties.isencrypted()?
Candidate: should we use <UNK>
Reference: i think this method doesn't work properly, please follow steps below: - log as usera - open pricing loans table, append row / change some data - keep the table
Candidate: if you could use <UNK> <UNK>
Reference: i think returning null is problematic because it might cause an npe in backendsnapshots - disks/cdroms/nics - resource, which invoke this method and reference the returned vm. also, i wonder
Candidate: you could move this initialization to <UNK>
Reference: keep own check
Candidate: you could use objects.equals() instead of objects.isnull
Reference: if we confirm that special characters are not supported in catalog/schema names, we should definitely simplify this as this is hard to understand.
Candidate: inline
Reference: i'd rename other with current, or something like it, to make it more clear that we're overriding. i'd also log info or warn when the converter didn't override the current
Candidate: is there a reason for this statement?
Reference: instead of setting the field to null and handling that case in all of the methods, it would be easier to just have a private class for the empty marker
Candidate: this should be <UNK>
Reference: why do you need to change this?
Candidate: if you could use <UNK>
Reference: maybe suggestion list<action> actions = new vector<>(getpersistedactions());  for clarity.
Candidate: this is is designed to be a <UNK>
Reference: same fix as the other array usage.
Candidate: suggestion <UNK> = <UNK>
Reference: why add this whitespace! could we remove it?
Candidate: typo: <UNK>
Reference: canexecute() does not check for this case but relies on candisconnect(getdata()...) to make the decision. it would be consistent to do the same here and delegate that case to disconnect().
Candidate: suggestion if <UNK> == null) { return <UNK> }
Reference: the construction of the mavenbuild object is mostly the same for the 4 new projects. it should be factorized.
Candidate: please use <UNK>
Reference: there is a high potential of npe with concatenated calls.
Candidate: we could use a <UNK> here anyway?
Reference: since you are touching this line, can you change (long)(-1) to -1l?
Candidate: we talked @nullable.
Reference: does this receiver gets close() , so that builder close the connection.
Candidate: is there a reason why not we are not connected here?
Reference: @grainier can we get the meta data size calculation out of the for loop so that the if condition and retrieval of meta data size does not repeat for each
Candidate: please use camelcase
Reference: why not call makeremotechanges?
Candidate: i think nit, this could be pulled out of run() into a run()
Reference: @bgevam just inline null
Candidate: please use readasstring(...) instead of <UNK>
Reference: make it more functional and return here a data structure that contains three module classes and then if you remove those three module fields this object will be completely stateless.
Candidate: i think this should be a warn
Reference: it's very nice that you used the new logging approach to all of the tests. i think we can use it also here. what do you think?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i believe you should return a 404 in this case. if you go to a private github repo that you don't have permissions to, you get a 404, not an
Candidate: should we use <UNK>
Reference: i think you can use the 2-parameter method instead of passing an empty map.
Candidate: i doubt that deadlock that deadlock that deadlock that deadlock that is is not deadlock that matters, that matters, but i doubt people who can.
Reference: do this outside the if
Candidate: is there a reason for this logic?
Reference: interesting: is there a reason we wrote this as opposed to just nanos.get();? the memory semantics are different (this does a volatile *write* as well), though i don't understand why
Candidate: this is be a objects.isnull
Reference: unneeded surrounding lines for line 206.
Candidate: please use <UNK> instead of <UNK>
Reference: worth wrapping this call, the response might be big.
Candidate: you could use <UNK> instead of <UNK>
Reference: shouldn't this be a field so we don't have to create one each time
Candidate: should be simplified to lambda.
Reference: please use, networkcommonutils.isvlan
Candidate: please use <UNK>
Reference: on end_date, discount factor should be 1.
Candidate: factor out of the two places.
Reference: the queuenames must be wrapped to arrays.aslist(): ![array_in_sout](<link_0>
Candidate: is there a reason for this method is not
Reference: code congruity with upstream libanki is important, so i'd prefer if you didn't do this. <link_0>
Candidate: could you use s?
Reference: so this means we are not doing any validation on requests with a "path:" "email_collection_mode"?
Candidate: @ivange94 not sure that this is is not a good idea.
Reference: @oak experts: using readoperation here (and in 2 new methods below) which only does an is-session-alive check (which we want). this is not a write as it does not change
Candidate: you could use <UNK>
Reference: filename here should actually be the derivative directory, which i don't think is currently being created. you should create a subfolder in the tmpdir for that.
Candidate: you could move this to a separate method.
Reference: thread.interrupted resets its state (<link_0>, so this should include 'else { break; }'.
Candidate: you could use 30 <UNK>
Reference: i don't see these changes in hot-fix branch. can you provide context on why are we changing this to exception from throwable?
Candidate: you could move this to <UNK>
Reference: why not use harness#deploycontrib directly ?
Candidate: we could use a try-with-resources here instead of <UNK>
Reference: should we only do this for send only folders?
Candidate: is there a reason to permission?
Reference: can it be just a regular for ?
Candidate: nit: not sure that appreciate that appreciate that the appreciate the samples is not the samples
Reference: prefs.hideemptypane() if you look elsewhere in this code e.g. onlinenumbers at line 292 above you will see we "wash" the value through the prefs object and get back the value
Candidate: is there a reason for this logic?
Reference: can you add a timber log line here.
Candidate: this is not supported in the
Reference: this if does not seem necessary. totalsessionscompleted is not used to prevent new sessions when maxsessionsallowed is reached in getnewsession
Candidate: space after if ( {
Reference: this test implicitly relies on timing, and hence it may be flaky. otoh 10-second timeout should be enough
Candidate: suggestion <UNK> = <UNK>
Reference: defaultid+".default.layer"
Candidate: this is not <UNK>
Reference: can we assert the value instead of assert size?
Candidate: rename to <UNK>
Reference: url is used only once, so i guess we could use it inline i.e. driver.getcurrenturl().contains()
Candidate: this should be <UNK>
Reference: getusage(...) expects a localization key.
Candidate: please use the enum?
Reference: what about this else case. here also scheduling fails but we are not showing any error?.
Candidate: please remove this getparameters().getstoragedomainid()
Reference: not required if nothing is happening
Candidate: this should be a static import <UNK>
Reference: and sessionidcol
Candidate: suggestion "invalid " + " + " + " + <UNK> + <UNK> + <UNK>
Reference: @pynicolas maybe the failing message could be added as a parameter to give more info about this condition ? wdyt ? something like "instanciating a separatedlist with inconsistent number of
Candidate: this could be simplified to <UNK>
Reference: we should not catch the specific exception at util class. catch it in api class and send the response code accordingly.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: method access specifier plz.
Candidate: you can use this piece of the
Reference: let's check the parameter for null and test this case via nullpointertester.
Candidate: suggestion <UNK> = new <UNK>
Reference: withmillisofsecond(0) could be done here.
Candidate: is there a a constant?
Reference: try-with-resources?
Candidate: you should rethrow this exception
Reference: all enablex and disablex in this class could return boolean for better understanding of the api and their respective invocations.
Candidate: you could use a constant instead of <UNK>
Reference: this might not work as well if mainactivity wasn't singletask. i know the api isn't great but have you considered specifying the parentactivityname and updating onoptionsitemselected()? <link_0> <link_1>
Candidate: please use <UNK>
Reference: why was this test removed?
Candidate: i think auto-boxing
Reference: shame the constructor can't throw exceptions direct. catch only the exception's known to be raised, and don't convert rtes or, especially, errors.
Candidate: i think we could use a <UNK> <UNK>
Reference: p can be pendingmove.
Candidate: you could use <UNK> instead of <UNK>
Reference: this seems like logic that should be split out into it's own function.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i would put the super.candoaction() at the beginning of the cda because the implementation of initializevds() already uses the storage pool by id (getstoragepool()), so i think it will fail
Candidate: pls use <UNK>
Reference: it would be nice if you could also log the total elapsed time since the script started. that makes it easier to estimate how long the conversion will take.
Candidate: this collectionutils thanks.
Reference: can a result be null? (i.e. do we regularly need to consider whether source is attached)?
Candidate: this is a bit simpler.  java <UNK> <UNK> = <UNK> <UNK> <UNK> clazz, <UNK> <UNK> clazz, <UNK> <UNK> <UNK> <UNK> clazz, <UNK> <UNK> <UNK> <UNK> <UNK> clazz, <UNK> <UNK>
Reference: is this the only type possible? what about reflection?
Candidate: if you could use <UNK>
Reference: you could inline the variable isconnected.
Candidate: if you could use <UNK> == null || <UNK> != null && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK>
Reference: i bet you love next(null) right? :p
Candidate: you could use <UNK>
Reference: max ? this could be bad if there are a lot of these endpoints. i wonder if we should really be blocking here; smartlifecycle has stop with callback.
Candidate: is there any reason why we catching the exception?
Reference: do not squash here, propagate as ioexception
Candidate: ![critical](<link_1> 'severity: major') either remove this or rethrow this or rethrow this or rethrow this or rethrow this exception. [![rule](<link_2>](<link_0>
Reference: do we want to state no value initialized?
Candidate: nope, <UNK>
Reference: how about wikipediaapp.getinstance() instead?
Candidate: you could use <UNK>
Reference: ![minor](<link_1> 'severity: minor') immediately return this expression instead of assigning it to the temporary variable "user". [![rule](<link_0>](<link_2>
Candidate: suggestion <UNK> = new <UNK>
Reference: this should be r.attr.multi_select_background_color, to account for dark/black mode.
Candidate: i think this should be a <UNK> <UNK>
Reference: there is a chance that cluster will be null at this point which would cause npe.
Candidate: please move this to the method to the command command command
Reference: the way backgroundlocationhelper is being used here really reminds me of the ["delegate" pattern](<link_0> would it be too nerdy to call it a backgroundlocationdelegate instead? on that, it could be
Candidate: is there a reason for element?
Reference: new duration(1, second)
Candidate: _cough_
Reference: may be, i wrong, but on my first impression: if the parameter message is a rst for a original message, the soruce/destination is already exchanged. > emptymessage.newrst(message); would exchange source/destination
Candidate: i think we should download the <UNK>
Reference: you should check that you are not yet in an entity.
Candidate: please use <UNK>
Reference: dataconstants please.
Candidate: this is optional?
Reference: remove, nextdouble is in [0,1) range
Candidate: i think that this is not efficient, but i would be more efficient, the <UNK>
Reference: exception should be logged
Candidate: '+'
Reference: does maven build output contain warning that there is switch without default section?
Candidate: is there a reason that is empty?
Reference: the internet claims that "broadcast" is a single word
Candidate: we should bind the config, please.
Reference: you could use streamcapturedevents.
Candidate: same as above about <UNK>
Reference: iterating refandcountmap.entrieset() is more efficient. realmcachetype.values() allocates new array in every call, but refandcountmap.entrieset() caches returned object. and it can also avoid hash table lookup.
Candidate: <UNK>
Reference: i would also mark the deletion of the temp file when jenkins exits with [zipfile.deleteonexit()](<link_0>
Candidate: you can directory, directory, directory, directory, directory, directory, directory, directory, directory, directory, directory, directory, directory, directory, directory, directory, directory, directory, directory, directory, directory, directory, directory, directory, directory, directory, directory, directory,
Reference: nit: i haven't saw this. used in this code. is this new pattern?
Candidate: this would be a constant instead of <UNK>
Reference: rename to container or sourcecontainer
Candidate: i liked that this method is called in <UNK>
Reference: this doesn't work, instead of removing /q? it removes /q and leaves the ? behind. i guess we need something along the lines of uri = uri.replacefirst("q\?", "#") or something
Candidate: you could use <UNK>
Reference: need to use parameterized logging instead of string concatenation.
Candidate: if this is clearer, [![rule](<link_2>](<link_0>
Reference: so these read/write methods for histories scare me a bit. could there be multiple knoxshells reading/writing at once? can we lock the file via the java nio methods? should these
Candidate: use logger instead of <UNK>
Reference: can these be initialized inline?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: one of the constructors calls init() directly, so this could still create a thread at construction. or are we sure that one is never called from "fake traces"? i think
Candidate: this is designed to be a in the
Reference: i assume for apple pay this is going to be under six digits (because we don't have a full card number, just the last four digits) but i don't fully
Candidate: you could use <UNK>
Reference: can makeobservable call subscribeon before returning so that you do not have to repeat it everywhere?
Candidate: this is be <UNK>
Reference: you are still changing things that are unrelated to your change. 'assertthat(entries).hassize(3)' as it was before is better.
Candidate: is there a reason for element?
Reference: i think it's a little bit more than this. there shouldn't be any "+" concatenation. should all be .append() i already proposed to addressed this issue (hive-23540), but happy to
Candidate: could we print the <UNK> explicitly)
Reference: so parallellevel is 1 because aggregation is done client-side instead of pushed to the cluster, right? would be good to doc the thinking behind calculating the cost throughout.
Candidate: you could use <UNK>
Reference: add connector to the message. include catalog name?
Candidate: is there a reason that we are going to be a to log that we are going to be a higher than the items)
Reference: should this be returning a string? i would think it would be desirable for it return hudson.util.secret like its internal type. @stephenc what are your thoughts?
Candidate: use <UNK>
Reference: move these into a separate function.
Candidate: why is we sharing of the sharing
Reference: please stick to java convention for naming variables - first letter should be lower case. also this is another case where local variable is not needed just return it directly.
Candidate: you could use <UNK>
Reference: i see that updateparameters updates the command params and persist the command. i'd recommend to do the persistence here, i.e. out of the updateparameters method
Candidate: please remove the disk,
Reference: do we need .publishon(schedulers.parallel()) here?
Candidate: minor: we should to be <UNK>
Reference: nit: sameas would be sufficient.
Candidate: this is not
Reference: a more readable alternative to this would have be: stringbuilder builder = new stringbuilder(getactivityid()); addwithhypen(builder, getactivityname()); addwithhypen(builder, getworkpackageid()); addwithhypen(builder, getname()); return builder.tostring(); where addwithhypen is: private void addwithhypen(builder, string value){
Candidate: should we be null?
Reference: then we should use a builder: java boundstatementbuilder statementbuilder = videosbyuser.boundstatementbuilder(userid).setpagesize(items_per_page); if (page != null) { statementbuilder.setpagingstate(bytes.fromhexstring(page)); } resultset rs = session.execute(statementbuilder.build());
Candidate: if this is designed is designed to be a <UNK> <UNK>
Reference: can be removed altogether, since typemanager is just passed through. let mapblockencodingfactory and singlemapblockencodingfactory validate that
Candidate: static import
Reference: this is constant and can be extracted, should help with the nutty indentation going on here.
Candidate: we could use a <UNK> <UNK>
Reference: yes!
Candidate: let's use a constant instead of creating a explicitly.
Reference: maybe it'd be better to use ioutils.copy here as in <link_0> i forgot about it when i introduced this method.
Candidate: you could use the try-with-resource here instead of <UNK>
Reference: minor: the dbactivity != null clause in updatablestatus is redundant with the dbactivity != null in the if statement. you could simplify the whole thing to if (dbactivity != null
Candidate: you could use only:  java <UNK> <UNK> = <UNK> <UNK> <UNK> <UNK> <UNK> = <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> = <UNK> <UNK> <UNK> <UNK>
Reference: avoid using system.out
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: condition is backwards again.
Candidate: wdyt about these two lines
Reference: redundant variable name - just use "name"
Candidate: this should be <UNK>
Reference: use new hashset<>
Candidate: this could be simplified to <UNK>
Reference: what is the plan for usage this method? from my point of view it must be like that:  id = savesubscription(subscriptiondata)
Candidate: this is be to be called in <UNK>
Reference: i think you should strip the % sign only if present. what if gluster changes to return 90, instead of 90%?
Candidate: use <UNK> instead of ==. rather than ==.
Reference: name of operator: validator ? also rename variable accordingly.
Candidate: nit: <UNK>
Reference: if we allow for the unknown type we should probably store the actual name of the tag used and use it also in the equals method and the tostring method
Candidate: is there any particular reason reason for this?
Reference: why are we doing a list query when we are only expecting one result. if we use unique result we will not need to use get(0)
Candidate: use <UNK>
Reference: maybe a log statement slipped through?
Candidate: please use <UNK>
Reference: simplereportentry should _always_ use testidentifier.getlegacyreportingname() as name and testplan.flatmap(plan -> plan.getparent(testidentifier)).map(testidentifier::getlegacyreportingname) .orelse("<unrooted>") as source.
Candidate: if you is a <UNK> <UNK>
Reference: same issue here, this breaks dependent-post-aggregators
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this *must* be backwards compatible and also work with with old saved states that do not have that caret position.
Candidate: you could use a multimap
Reference: we can use '==' to compare two constants
Candidate: is there any reason to paths?
Reference: it would be clearer imo to have .anymatch indent on the newline, preferably inline with .concat() - i initially read this as only performing the anymatch on right, and was
Candidate: this is be <UNK>
Reference: are all these needed?
Candidate: this is not a
Reference: we've been following the format where the async apis call the async overloads, and the max overload api calls the pl. similarly, the sync apis call the sync overloads, and
Candidate: suggestion if (throwable == null) { return <UNK> }
Reference: suggestion solverstatus previoussolverstatus = solverstatus.getandset(solving_active); if (previoussolverstatus != solverstatus.solving_scheduled) { // this job has been canceled before it started return problemfinder.apply(problemid); }
Candidate: i think that this is not efficient, we could have a lock in the confirm() method that will be
Reference: i think we should log the next flush
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: should this refer to a platform-relative constant?
Candidate: how about using <UNK>
Reference: minor: we don't need this, as in line 827 it is already being done.
Candidate: i think this is a <UNK>
Reference: nit, add a space after the comma
Candidate: this is unnecessary.
Reference: shouldn't we test the return value of createwithprimarykeyfield()? how about  realmobjectschema objectschema = realmschema.createwithprimarykeyfield("foononnull", "pkfield", string.class, fieldattribute.required); assertsame(objectschema, realmschema.getschemaforclass("foononnull"));  ?
Candidate: this readasstring(...) instead of <UNK>
Reference: i realized this is just moved, but should this be synchronized to this as it is in the running state?
Candidate: you could use this check for the <UNK>
Reference: why not simply objects.hashcode(logentry)?
Candidate: please use guava instead of objects.isnull
Reference: the original line 949 is correct. if path is null, filesystem.access should throw illegalargumentexception and that's what calling makequalified(path) will do.
Candidate: i think that this is not efficient, we could use the <UNK> <UNK>
Reference: i'd make this a throw new nullpointerexception("metric == null"); instead
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: they're milliseconds now ;). please check other locations in the change too.
Candidate: this is not putifabsent construct,
Reference: what about characters from other languages like chinese or japanese? or some special french characters?
Candidate: this is designed is designed to be a <UNK>
Reference: not needed
Candidate: is there a reason to assert here?
Reference: i think the typical case is that the metricslabel is not empty. so, let's put that in the first part of the "if" block and let's handle the metricsmode.isempty() case
Candidate: i'm not sure how about this this is is a bottleneck. consequently, about the <UNK>
Reference: uue dicom_client constant if possible "+" + dicom_client
Candidate: is there any way to be thrown here?
Reference: both cursor.getoffset() and cursor.getpartition() are not marked as @nullable. why have you decided to check it for null here?
Candidate: i don't think that this is is prone to <UNK>
Reference: include portletclass in the exception message
Candidate: this is driving the exception
Reference: @1m2c3t4, thanks for the pr! can you please format the code in order to follow cloudstack code conventions [1]? from:  if (obj == null) return false;  to: 
Candidate: i'm not sure that this returns true
Reference: for consistency reason with the prev line please use "validatevm" (small "m")
Candidate: you could use a boolean comparison, instead of objects.isnull : <UNK>
Reference: technically you can express this as two filters for slightly easier readability
Candidate: this is correct.
Reference: use lambda here instead of anonymous ??
Candidate: i'm not sure how about this is going to a completablefuture with a <UNK> worker thread pool is a completablefuture but i think we could be?
Reference: would prefer this to happen in serveradded rather than the event listener.
Candidate: we should throw an exception here instead of calling <UNK>
Reference: suggest you return an optional<string> since you can return a null. your code where you use this function doesn't check for a null, which makes an argument for why you
Candidate: please use utf-8 delegate please.
Reference: please change it to internally use task.getscheduleaslong(). otherwise you need to implement same supplementary methods as in task object, including changes in serializer. same goes for getstarttime and getendtime().
Candidate: could we return null?
Reference: we don't need to compute compactiontime at the end of this method anymore.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: can we use string.format for readability? applicable at other parts too
Candidate: suggestion <UNK> = <UNK>
Reference: public synchronized void notify(final list<url> urls)
Candidate: you could use <UNK>
Reference: nit final, applies to next line too.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i think a more comprehensive test would be to first check that the number/size in columnmetalist matches the expected final size. then check each individual column that is there, if
Candidate: please mock
Reference: what about using of "seleniumwebdriverhelper#getaction()" method?
Candidate: you could use <UNK>
Reference: please simplify boolean expressions above. here ignoredstatic and ignoredfinal contain isstatic and isfinal in their initialization.
Candidate: if you could be simplified to "return true" if <UNK> == null) { return false; }
Reference: can you somehow also check that it actually hasn't tried to connect?
Candidate: this is not assert that this is not <UNK>
Reference: you should use not_include_defaults
Candidate: please rename to <UNK>
Reference: would recommend checking if contract is an instance of reactivec and only warp of not
Candidate: is there a reason for avro property?
Reference: you probably want to add adaggregationid into here as well.
Candidate: you could use <UNK> instead of <UNK>
Reference: include version in message.
Candidate: we could use <UNK> to <UNK>
Reference: this at least needs to check if the chunk is loaded. unloaded block = inactive block.
Candidate: this multimap is not be used?
Reference: string.format("kafkaindextaskclient-%s-%%d", datasource) should work too, although changing is unnecessary
Candidate: we should use a pluginid with <UNK>
Reference: what about using: java string ext = filenameutils.getextension(zipentry.getname).tolowercase(); boolean issupported = supported_extensions.contains(ext);
Candidate: you could use use <UNK> instead of <UNK>
Reference: this class seems version-agnostic, but you hardcode version 2.4 here. perhaps this should be a parameter to getnewconnector?
Candidate: this is a bit more efficient, that we could use the <UNK> <UNK> <UNK>
Reference: ### option b change this from setting currentimage to the new image, just set the _texture_ to the new texture. if you wanted to get really fancy you could also
Candidate: suggestion if <UNK> == null) { return false; }
Reference: i need to spend a bit more time understanding the interactions between exceptions and bugsnagexception but so far its a little confusing how bugsnagexception now represents an array rather than
Candidate: we could use reflectiveoperationexception here
Reference: please return raw value, on end-user code you can wrap it simply with booleanutils null in return value means that there is no value. no value != false from req/rsp
Candidate: this is be simplified to return <UNK>
Reference: shouldn't it be after eventhandle() below?
Candidate: i'm not sure how about removing the
Reference: can this cause memory overflow? don't we need to limit buffer?
Candidate: if this is not efficient, we could be a bottleneck. bottleneck. is a efficient, that we is a efficient, that the is not efficient, we should have a
Reference: should it just show that the target is invalid?
Candidate: @ivange94
Reference: not necessary?
Candidate: no need to call <UNK>
Reference: can this be a more specific activemq exception? even if its just activemqexception
Candidate: if we is a warn but i guess that we have a <UNK> that the is is not <UNK> but i don't think that this is
Reference: for my understanding, does that mean hadoop api requires target path to exists before call to concat?
Candidate: i think this is a enum for the sake of nesting.
Reference: ah yes, sure. "protected" then maybe. the public constructor together with the default_instance constant made me stumble.
Candidate: this is a <UNK>
Reference: s/resturning/returning s/staring/starting ???
Candidate: this is designed to be a in the middle of clicking on the middle of clicking on the middle of clicking on the middle of clicking on the middle of
Reference: as discussed, please file an issue for further investigation on this. this is good for now to release this as this issue was already noticed in smoke tests and would
Candidate: throw an exception exception instead of wrapping an exception
Reference: is this not an unstable state and calls for manual investigation ?
Candidate: i understood about this change.
Reference: use constant (also later in this file)
Candidate: use <UNK>
Reference: better to have variable name in the message: handlerclass can not be null
Candidate: suggestion <UNK> -> <UNK>
Reference: don't use filereader; it doesn't handle encodings properly
Candidate: you could use <UNK>
Reference: isn't the test class that uses it in the same package?
Candidate: this is not a <UNK>
Reference: do this after setting the closed flag
Candidate: add pagelogging
Reference: i used my powers to push a rewritten version of this method :-)
Candidate: this is be <UNK>
Reference: we're not guaranteed that this is an authheader, so maybe a better name is extraheader or something similar
Candidate: you could use "return final <UNK> = new <UNK> <UNK> <UNK> = new <UNK> <UNK> <UNK> = new <UNK> <UNK> <UNK> = new <UNK>
Reference: to start client grid startclientgrid() should be called.
Candidate: you could use <UNK>
Reference: @artemkuzmenko extend from customeventrewardedvideo and override hasvideoavailable() instead of isready().
Candidate: please use <UNK>
Reference: same as for nio, lets set servercnxnclassctr to nettyservercnxn by default
Candidate: how about this is an exception
Reference: i would extract the code in the brackets into another protected method - "connectionclosed()", for instance. we can pass the reason of the closing as an attribute. overriding this method
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why not just: if (deleteemails.contains(preferredemail)) { throw new unloggedfailure(1, "--preferred-email and --delete-email options are mutually " + "exclusive for the same email address."); }
Candidate: you could be simplified to <UNK>
Reference: what would happen #cleartestusers threw an exception? will the ldap port kept open? may be the #stopldapservice need to go to a finally block.
Candidate: i think this should be done inside the reconnect method.
Reference: @erdemedeiros let's remove all the system outs
Candidate: please use <UNK>
Reference: use assertequals here instead
Candidate: is there a reason to check that is empty?
Reference: now there is missing space:)
Candidate: i am assuming that the "?" is a good idea, i am not sure that "?" is a good practice to use the <UNK>
Reference: could we change this to "/services/soap/u/" + apiversionstrings.getversionnumber(context)? it's easier to update api versions in 1 place.
Candidate: minor: this should be a bit more than <UNK>
Reference: streamestimator should never be null right?
Candidate: this is not to be <UNK>
Reference: extract to constant
Candidate: you could use <UNK>
Reference: looks like it should be 1, not 0.
Candidate: you could use a multimap here instead of <UNK>
Reference: why adding the second condition?
Candidate: this --> <UNK>
Reference: ifexists => ifexists
Candidate: we should use a string concatenation instead of string concatenation
Reference: unnecessary empty line. moved up one line it might work though.
Candidate: let's move this to the constructor?
Reference: i'd make that method take a health url as parameter, so it can be ~unit tested
Candidate: is there a way to be null?
Reference: probably best to throw an exception or create a failure if quantity, short quantity and long quantity are all not populated. silently setting quantity to 0 feels dangerous; it's reasonable
Candidate: this is possible?
Reference: please use trimquotes method in literalutils : <link_0>
Candidate: please use <UNK>
Reference: there is no need to mock api calls to implement this test.
Candidate: this is not mock
Reference: consider moving all setters of disktoupdate to a separate method for more readable code. perhaps it's also better to prepare the object disktoupdate before the transaction is opened and not
Candidate: i we remind regards from the transaction succeeded from the transaction succeeded from the transaction it..
Reference: this is where it gets tricky again. the client is not aware of the version of the cluster it is connected to. so it might happen that the function is
Candidate: is there a reason for element?
Reference: why not using valueof( updates[1] ).asobjectcopy() ?
Candidate: is there a reason for this change?
Reference: we should also preserve byte[] suggestion if (value instanceof number || value instanceof byte[]) {
Candidate: could you checkargument checkargument checkargument checkargument checkargument checkargument here instead of checkargument
Reference: can we assume all jvm/os nodes in the cluster are clock synced? are the nodes configured to sync system clock from a central server regularly?
Candidate: i think this should be a warn
Reference: you should always pass in e as the cause (and thus make your exception types accept an optional cause).
Candidate: minor: this method arguments.
Reference: pass the visualizerid to the above method. doing this will help avoid that method being moved to a place where the visualizerinstanceid is not set yet
Candidate: you could use a constant instead of <UNK>
Reference: the macroexpander knows info and global nodes. why should treewalk care to call all this in the correct order. that knowledge about how to merge current,info,global should be hidden in
Candidate: nit, we should use the object
Reference: validation?
Candidate: you could use <UNK>
Reference: you can extract value.name() to a local var.
Candidate: this is designed to be a <UNK>
Reference: note that the type parameter is new, so you need to consider that this parameter might not exist for some old mentions: maybe it's handled later in the code?
Candidate: we could use <UNK> to <UNK>
Reference: why shuffle these? if you need to shuffle them can we use a set random seed? testutil.random_seed is a good option.
Candidate: this is vertically % <UNK> % % <UNK> % % <UNK> % <UNK> % <UNK>
Reference: its not hooked up to the okhttp client right now, how are you envisioning wiring in the metric registry?
Candidate: this is be <UNK>
Reference: note that file#touri() produces an invalid uri. convert to nio path first and then to uri.
Candidate: @gunnarmorling you could use a try-with-resources
Reference: please remove this duplicated line.
Candidate: if you could use <UNK> <UNK>
Reference: can we have: private static final int vertical_padding = 1 and private static final int horizontal_padding = 2 instead of having magic 1's and 2's everywhere?
Candidate: suggestion <UNK> = <UNK>
Reference: what do you think about moving this logic for "normalizing" urlpattern to jerseyenvironment#seturlpattern, if we expect users to invoke this method from the application class?
Candidate: is there a rootpath here instead of creating a instantiating a instantiating a instantiating a instantiating a instantiating a instantiating a instantiating a instantiating a
Reference: you should return an empty repositorydto here
Candidate: we could use a try-with-resource pattern here instead of <UNK>
Reference: channelids => channelnames
Candidate: we should have a <UNK> to <UNK>
Reference: maybe list the set of known commands here?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: missing braces here, checkstyle is failing.
Candidate: you could use objects.equals()
Reference: please, check that runtime is not null
Candidate: wdyt about this understand, that filter is filter filter filter filter filter filter filter filter filter filter filter filter filter filter filter filter filter filter filter filter filter filter filter
Reference: i wonder (in the other patches too) if we really care what the absolute values are. wouldn't it be enough to check which one is higher?
Candidate: you could use <UNK>
Reference: was this a mistake?
Candidate: this should be to be re-assigned to <UNK>
Reference: looks like there are a lot of these instances. please update all these to use booleanutils
Candidate: you could use isempty() instead of true"
Reference: maybe it's just because i'm new to the *handler code, but it's not clear to me why one would handle exceptions locally vs. handle them from this handleexception method. i
Candidate: this is not <UNK>
Reference: yes it should be 0 as it is already the case for the defaultrcpmatchengine registered in o.e.e.compare.rcp plugin. we could add a more detailed description to this match engine to
Candidate: rename to <UNK>
Reference: given/ execute/ assert
Candidate: use <UNK> instead of <UNK>
Reference: can we do this atomically?
Candidate: you could use <UNK> here instead of <UNK>
Reference: could you remove final keywords ?
Candidate: is there a problem with the file that is not to go through the file types, are not ok to go down to the file types, then they are not
Reference: what about creating a separate put method with no environment parameter to avoid using null?
Candidate: you could use the <UNK>
Reference: why are you using the serializer that does the lexi encoding as the default here? the simple type encoders should be faster and potentially smaller.
Candidate: we could use a multimap here instead of creating a new connection,
Reference: this should not be public - we don't want folks from outside the plugin calling this.
Candidate: please @nullable.
Reference: why are you not using the spring test framework here and just injecting all this stuff via annotation?
Candidate: this multimap is not null
Reference: extract properties.getrest() into a variable.
Candidate: if you is a exception here instead of <UNK>
Reference: socketchannel is configured in both sourcetcp/sinktcp and tcpeventhandler (i.e. send buffer size, etc) , would be better to have a single or at least not a duplicated place where the
Candidate: you could use <UNK>
Reference: shouldn't this be in else statement as right now i believe it will be executed twice in case security manager is enabled
Candidate: this is not used?
Reference: probably better to use long.bytes.
Candidate: @vilchik-elena is there a reason for the sake of these two lines could be replaced by <UNK>
Reference: this should remain a .equals test. feature maps have some peculiar handling and i remember "==" being a problem on these
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: tests should never do things like exit()
Candidate: the error message should be be null.
Reference: string logarg = log ? "true" : "false" feels more pythonic to me.
Candidate: this is designed for correctness id).
Reference: i think it's better to use try-with-resources here, it will also fix sonar complaining about it. i mean it should be smth like: java try (repository repo = egitutils.getrepository(project)) {
Candidate: you could be simplified to java return <UNK> != null) { return <UNK> }  if (parent == null) {
Reference: maybe better to do indexsegment.getversion()? (if you still have that function).
Candidate: this is designed to be a <UNK>
Reference: include in the message that we're ignoring the passed config and using 1.
Candidate: static import
Reference: recommended to use >= instead of ==, even if there is a problem with the write lock, it will not cause not limit cache
Candidate: if this is not efficient, you could use the <UNK> <UNK> below...
Reference: always use isempty() (negate when needed) instead. rationale: <link_0>
Candidate: if this is designed is designed to be a npe if we want to have a npe if someone wants to have a <UNK>
Reference: the truncation handle is not an hsid, you should use txnego.txnidtostring() instead.
Candidate: this is not be freed on the events.
Reference: these are all listenablefutures, you should be able to use futures.allaslist().get() for future -- the driver uses guava quite heavily, so most of their future stuff is listenable* and uses
Candidate: nit: not sure that this is is not complex config, unless there is no reason for the
Reference: i suppose to avoid double get of volatile field which will be cached in most of the cases better to do  fileid = bonsayfileid.get(); if (fileid == 0) {
Candidate: you could move this loop to the beginning of the
Reference: we could still use suppresswarnings.class.getsimplename().equals(getannotationname()) instead of the strings ... but for readability improvement, this probably should go into a simple private method issupresswarnings().
Candidate: this is not be <UNK>
Reference: does every put needs the offset initialization?
Candidate: why not use <UNK>
Reference: @serranya same here. see above.
Candidate: @serranya same here as above.
Reference: this seems a duplicate so it can be removed or (maybe better) changed to potential.
Candidate: you could use <UNK> here instead of <UNK>
Reference: this should be checked at construction time. don't create the object with an inconsistent state.
Candidate: use <UNK> instead of <UNK>
Reference: this api looks much cleaner
Candidate: we should use <UNK> to <UNK>
Reference: (there is no action required; just thoughts when reading the code) i see. previously, if it's not variable, then it's constant and can be simply ignored. now, if it's not
Candidate: this is a bit more meaningful names.
Reference: else exit?
Candidate: we could print the stack trace instead of printing the dialog to debug data.
Reference: instanceof dataset is redundant -- why not just a single instanceof filesystemdataset check?
Candidate: this is designed to bind the bottom of the bottom element.
Reference: what happens when there are multiple hadoopy shard specs?
Candidate: this is not set?
Reference: iog the node information there with these warning messages. i am guessing it would be useful for debugging in case of issues.
Candidate: i am not sure how about the sure about the sure about the sure about the tries to post storage errors, but i am not sure how about the
Reference: throughout the file you're calling the same file() constructors several times (even on the following lines), it would be better to store it in a variable
Candidate: is there a reason for this logic?
Reference: this kind of indirect testing could be dangerous. if the code changes for any reason your can end up with a test that tests nothing. prefer to use the assert
Candidate: should this assert >= <UNK>
Reference: same with this, should also be debug
Candidate: please use <UNK>
Reference: you can use lambda syntax here to save some indentation
Candidate: why not we need to clean up this pr.
Reference: compunitcost -> compblockcost? or blockcompcost?
Candidate: i explained explained explained explained explained explained explained explained a bit more than <UNK> maybe?
Reference: this seems like an unsafe type cast...
Candidate: you could move this line
Reference: better solution for oshi, definitely, although i still think we should trap the null in the other code. but why use -1 here when we have a hres variable (already
Candidate: if we should be a <UNK> <UNK>
Reference: making methods public for test purposes is not a good idea, esp. for azureblobfilesystem class. find alternative.
Candidate: this is a <UNK>
Reference: > blank [](start = 81, length = 5) blank. #closed
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: nit: 1 -> map.size()
Candidate: please use <UNK>
Reference: this could be one line
Candidate: is there a reason for styles that styles styles styles that styles that styles that styles that styles that styles that styles that styles that styles that styles that styles
Reference: value == null is not a real case ? you can rework your condition as it: castedvalue.values().stream().allmatch(objects::isnull)
Candidate: you could use <UNK>
Reference: isn't this repeating the same feature id as the method ingesttimerangedata() - if so, thats dangerous, feature ids are meant to be unique
Candidate: is there a reason why not just call <UNK> here?
Reference: we can move this variable to class level, because it is used by more than one method.
Candidate: if this is is not return?
Reference: there should be a normalized() method you can call that avoids the lowercase string allocation.
Candidate: you could use <UNK>
Reference: any reason for not calling super?
Candidate: is there any reason why not we constructor?
Reference: this will be set to 0 from the json if grpcport is not set. you can check for 0 and put -1
Candidate: suggestion <UNK> = <UNK>
Reference: this should be a debug, not a warn.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: getworld().getworld()? also, why not just pass in mintime to compare here?
Candidate: this is be <UNK>
Reference: why does the test constructor need to be public?
Candidate: please use <UNK>
Reference: one thing to be careful of here is that write access implies read access in our model.
Candidate: please use <UNK> all()
Reference: this is not so good - messages is an unmodified collection wrapping a linkedblockingqueue. contains has to iterate over the contents which is not good for a large group. we
Candidate: if we is not <UNK>
Reference: are we deliberately choosing to do nothing if the publisher is not found? that is, is this expected to happen for some requests? if not, i'd suggest we change this
Candidate: you could use a method here instead of objects.isnull
Reference: use identityextractionfn when it is null that will reduce the amount of if/else imho
Candidate: suggestion final <UNK> = new <UNK>
Reference: nit: it seems to me this should be just before the return at the end of the method.
Candidate: we should use uri.create all() to we don't have a to <UNK>
Reference: i think that neither backlog nor keepalive are useful for udp...
Candidate: could we use foreach here instead
Reference: @benjilee if you pull my changes from master, you can just pass the componentname to isegment and use isegmentimpl.getsharetypefromcomponentname(componentname)
Candidate: you could use <UNK>
Reference: not required. will be collected with the connector object.
Candidate: this is org.apache.kafka.common.utils.utils.closequietly ?
Reference: the comparators could be organized under one class in the core plugin: syscallcomparators.start_time syscallcomparators.end_time etc.
Candidate: you could use a constant instead of <UNK>
Reference: can just chain it right? dfscluster = new minidfscluster.builder(conf);
Candidate: you could use <UNK>
Reference: this only takes rtp into account, right? is this intentional?
Candidate: we should throw an illegalstateexception instead of returning null.
Reference: this appears unused.
Candidate: suggestion <UNK> = <UNK>
Reference: please use sanitizationhelper.sanitizeforcsv() here too.
Candidate: please align with <UNK>
Reference: createpackagemapping was a better name
Candidate: <UNK>
Reference: rename to sash
Candidate: is there a reason for this method is not <UNK>
Reference: suggestion: maybe introduce a noopqueryupdateemitter for this purpose?
Candidate: this (args.length false)
Reference: thank you, i hate these traces. they are confusing as hell since they don't trace exit from all possible paths. based on what you did below, didn't you mean to
Candidate: is there a reason for avro ? thanks!
Reference: suggestion namedarraylist.select(all, messages.githubscmnavigator_withinrepository(), namedarraylist
Candidate: suggestion <UNK> = new <UNK>
Reference: traditionally we use "type_resources" for logs related to app installs/updates/etc.
Candidate: we should throw an exception here instead of constructing an exception
Reference: static import
Candidate: we could use <UNK>
Reference: collections.singleton(uri.fromfile(file))
Candidate: you could use "false" here as well.
Reference: nit: don't really like this flagging concept in the same method. i would suggest putting the related code to the place where the flag is true.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: the "else" seems unnecessary
Candidate: this is not be risky.
Reference: this validateandthrow(prefetch) , in other pr we were validating earlier when user is setting prefetch . should't this go there.
Candidate: try try try try try try try try try try try try try try try try try try try try try try try try try try try try try try
Reference: map<object, list<itestngmethod>> instead of linkedhashmap<object, arraylist<itestngmethod>>
Candidate: this is designed to be 'final'
Reference: assert the instance of the parent instead o the class
Candidate: use reflectiveoperationexception
Reference: checkit
Candidate: this is a <UNK>
Reference: style nit: no braces around single line blocks
Candidate: use <UNK> instead of creating a new object everytime instead of creating a everytime is)
Reference: do we have a test of a remover spec with an or?
Candidate: you could use <UNK> instead of <UNK>
Reference: maybe we can add [commit_cursors] as a part of the logger definition?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i decided to strip the trailing slashes here. the caller here don't care if it is "dir" or "dir/", so we will get the "native git" behavior. i decided not
Candidate: you could use a objects.isnull
Reference: in this test method and the one below it, i would suggest including an assertion that also checks the formcode field.
Candidate: is there a reason to passing the constructor?
Reference: do we really want that? needs probably be discussed at the demo
Candidate: we should log the exception
Reference: or just assert equality to singleton list, or use matchers
Candidate: suggestion <UNK> = <UNK>
Reference: throws exception can be reduced to throws ioexception.
Candidate: you could use <UNK>
Reference: make the "super" dex field protected and remove this one? or a protected getdexbuffer() method?
Candidate: suggestion <UNK> = new <UNK>
Reference: can you please use specific exceptions in the method definition instead of perunexception ? thank you.
Candidate: this is not to be sent from the email
Reference: you could check that we are still at branch_1 and file b exists/has the right content. otherwise the checkout may have just completely ignored the specified path.
Candidate: you could use <UNK>
Reference: stick an @override on this.
Candidate: you can use <UNK> instead of <UNK>
Reference: ![codacy](<link_0> issue found: [a method/constructor shouldnt explicitly throw java.lang.exception](<link_1>
Candidate: we should use <UNK> to <UNK>
Reference: double check that the group is still here
Candidate: no double check that the group is called here
Reference: wrap this function in a method
Candidate: use <UNK> instead of <UNK>
Reference: probably typo in serizalize ?
Candidate: you could use <UNK>
Reference: rename to toremove
Candidate: is there a reason to log.debug here?
Reference: :point_up: this seems like not everyone would be using references to ebi? put it in defaults.java
Candidate: you could replace lambda with lambda with <UNK>
Reference: why is this not based on context.getcurrentuser()?
Candidate: is there a reason for this method
Reference: i think it'd make sense to only register this unwrapper if javafx actually is present. hv currently runs on java 6 and later, and on 6 (and earlier releases of
Candidate: nitpicking: you could use <UNK> instead of <UNK>
Reference: nit: you can use monitors.foreach((server, monitor) -> { ... })
Candidate: this is be constants for <UNK>
Reference: it is safer to have constant on the left of equals
Candidate: please use stringutils
Reference: the reason why i suggested to make the retry method package private and write tests against it is because you can override the policy for tests. with the current setup,
Candidate: should we use <UNK>
Reference: maybe add a es- prefix to these values or change logindexerprocessor.class to elasticsearchindexerprocessor.class ?
Candidate: this is be <UNK>
Reference: i don't see a swt.selection event when i click, except if there was a non-empty selection before, then clicking clears the selection.
Candidate: you could use datacenter for the height
Reference: if you do this, might the retryperiodms exceed the retrytimeoutms? is that ok?
Candidate: <UNK>
Reference: drs should be dns ;-) or any other name, but drs doesn't fit at all
Candidate: we should throw an exception instead of <UNK>
Reference: even though currently statsloaderimpl#needsload() is hardcoded to true, it still should be called here first.
Candidate: minor nit but we could use a warn instead of <UNK>
Reference: the reason it was named cb was so it'd be short when statically referenced. but, either way -- no biggie...
Candidate: please use <UNK>
Reference: is this necessary?
Candidate: i pagelogging
Reference: please don't change it to static. it is usually a bad design decision. static classes and methods complicate tests.
Candidate: i think we should use a <UNK> <UNK>
Reference: the initial state of this test represents an out of sync cache-through setup. not sure we want to try to make sense of behaviour with a broken initial setup.
Candidate: i others, assert on the assert that not assert on the
Reference: <b>reporter: </b>pmd<br /><b>violation: </b><a target="_blank" href="<link_0>">junittestcontainstoomanyasserts</a><br /><b>notes: </b>junit tests should not contain more than 1 assert(s).
Candidate: <b>reporter: </b>pmd<br /><b>violation: </b><a target="_blank" href="<link_0>">junittestcontainstoomanyasserts</a><br /><b>notes: </b>junit tests should more than 1 assert(s).
Reference: interruptedexception should never be handled this way because it eats the interrupted flag. look for other catch interruptedexception's in the code on how to handle it properly.
Candidate: i think terminate <UNK>
Reference: let's throw this error, so it'll be handled by the test runtime.
Candidate: please use <UNK>
Reference: did you mean assertthat(mutated.gettimestamp()).isequalto(1519200753)?
Candidate: please use <UNK>
Reference: i don't think, that voadmin and voobserver should be able to use this. for resource it's ok, since they can somehow manage resource, but facility settings belong to facility manager.
Candidate: you could use a hash hash
Reference: i think the correct format is $var, ie: $vmname
Candidate: i think this should ${action} ${type}. the ip check)
Reference: arraycolumngetter didn't support array of decimal type. this change supports decimal array, but decimal values will be converted into string values such as "[""1.0"",""2.0"",""3.0""]". could you fix the problem?
Candidate: could you iterate on the array.
Reference: please also make sure the sessions is valid getsessionvalid(sessionid, false) there could be sessions that are not valid because the user has logged out but not cleaned up yet.
Candidate: if you could replace <UNK> with putifabsent for-loop with <UNK>
Reference: in = fs.open(filepath)
Candidate: why not caching is not used.
Reference: just one minor thing - this can be simplified to  java return new stream.cons<>(head, tailsupplier);
Candidate: no need to compute this queries arguments.
Reference: grammar. these should be two separate sentences. personally, i would also change "can't" to "can not" or "cannot"
Candidate: i doubt this is not covered by the proposed on the checkbox will always be true depending on the model.
Reference: you should probably look at how users were dealt with on line 239. i believe that additionally prints the email. some users may have the same fullname, it helps disambiguate.
Candidate: is there a reason for avro here?
Reference: the widget should draw this
Candidate: is there a reason for this change?
Reference: bitset seems like a good idea. i think it's worth changing streamsupplier.buildstream to take a bitset for segmentstofilter. i'd also add a check for log.istraceenabled() to avoid the tostring().
Candidate: we should download the <UNK> whose download <UNK> download <UNK>
Reference: replace with .contains(checksumtype.getalgorithmname()) to be less confusing?
Candidate: you could use <UNK> here instead of <UNK>
Reference: not a huge fan of this method name. a bit obtuse :)
Candidate: suggestion <UNK> = <UNK>
Reference: it seems we can use a bit more advanced algorithm to find a match. we rely on the fact that all indexes (positions) returned by the iterators are ordered ascending.
Candidate: you could use <UNK> instead of nesting.
Reference: why catch throwable and not just resourceexception?
Candidate: we should use the root situation.
Reference: i don't know much about robolectric testing really. do you think this should: a) generally match the targetsdkversion? b) generally match the minimumversion? c) just be consistent? currently it's 21
Candidate: @gunnarmorling mind this test, but we could use only: <UNK> instead of <UNK>
Reference: double ;
Candidate: you could use <UNK>
Reference: instantiating the download monitor could also be in the condition succeeded block
Candidate: how about using system.lineseparator() names.
Reference: this is line-wrapping ugly. i'd prefer (assuming you change scanpath to return file): file gitexe = scanpath(...); if (gitexe != null) { gitexe = gitexe.getabsolutefile(); file bin = gitexe.getparentfile(); //
Candidate: please ides ides ides ides ides ides ides ides ides should be reduced to the caller.
Reference: you could extract this (and from method above) to a private method like getcuratorclients(manager)
Candidate: let's use a foreach for <UNK>
Reference: remove distinct
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i guess you should also check if an error is empty
Candidate: <UNK>
Reference: nice simplification!
Candidate: use a rowmutation <UNK>
Reference: i don't understand what this check is doing here. maybemove is already taking check of checking rights.
Candidate: please remove this log.
Reference: check for return value and throw if false?
Candidate: white spaces: <UNK> '" + <UNK>
Reference: i think we should have a null check here but i don't think we need a blank string check. locale.forlanguagetag("").tolanguagetag() or locale.forlanguagetag(" ").tolanguagetag() or similar will return "und" (undefined), which
Candidate: i think this should be explained in <UNK>
Reference: companion
Candidate: could we use a constant?
Reference: you can find out if it was manually aborted with the following pseudo code  java interruptedbuildaction a = build.getaction(interruptedbuildaction.class); for(causeofinterruption cause : a.getcauses()) { if (cause instanceof userinterruption) {
Candidate: i think this should be a <UNK> <UNK>
Reference: we had the check for containment in a method of, i think, addtooltipmanager. so it should be extracted, if it doesn't exist already in a util class.
Candidate: please use <UNK>
Reference: i think we should log a warning message here, as it makes no sense to have a joinfield without the proper annotations.
Candidate: if you could use a guard clause with <UNK>
Reference: no need for the debug lines here, please.
Candidate: you should use <UNK>
Reference: same for this return
Candidate: this is fail, you could fail, please remove the try/catch from a finally block.
Reference: you do not need to include the thing uid in the message as this is the status of exactly that thing.
Candidate: you could print to the constructor?
Reference: don't see purpose of using a focuspanel here.
Candidate: this is be a <UNK>
Reference: pull the help printing behavior into it's own function or class
Candidate: this piece of a good way to pull this out.
Reference: rename to contribution
Candidate: rename to lambda.
Reference: this might be triggered by submitallstoreddownloads right? would it be better to say: "already running download for downloadbatchid: %s , ensure you are not duplicating identifiers."
Candidate: you could use <UNK> instead of <UNK>
Reference: no reason to include an unused constructor.
Candidate: use utf-8 instead of <UNK>
Reference: this should be a function derived from routinecharacteristics.language. actually is it better to expose language rather than implementation type?
Candidate: you could use a multimap here instead of <UNK>
Reference: why boolean instead of boolean?
Candidate: <UNK>
Reference: perhaps move this variable out of the try blocks as well and close it in the finally before transport is closed. that way there would be a single try block
Candidate: could you explain why you could use <UNK> instead of printing the
Reference: it's probably best to throw an exception here; someone has called process with a programmeid, and expects that programmeid to be processed. if that doesn't happen because of an error,
Candidate: should be be <UNK>
Reference: minor: would be better to add java docs for this the method.
Candidate: i explained explained explained to a <UNK>
Reference: better error message please :) something along the lines of "must be a relative path" reads better than a regular expression.
Candidate: you could use a try-with-resource here instead of creating a new <UNK>
Reference: since site is assigned by msitestore.getsitebylocalid(getselectedsite().getid()) just above this, can we pass it to getmysitefragment().onsitechanged() like getmysitefragment().onsitechanged(site) and avoid calling getselectedsite() with refreshselectedsitedetails(getselectedsite()) in mysitefragment.onsitechanged()? the mysitefragment.getselectedsite() method just calls
Candidate: i think that this is not efficient, we could use the <UNK>
Reference: it seems to cause overflow when the difference of two table volumes are more than the range of integer value.
Candidate: i is a bit confused by a minor but i guess we could use a utility method that takes a <UNK> <UNK>
Reference: why this change? the policy regarding asserts, project-wide should be discussed in the dev mailing list, probably.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this double-try-catch logic for extracting a long-or-double seems to appear multiple times in this pr, i would suggest wrapping the whole thing into a helper method in numberoperations so that
Candidate: style nit: no missing braces around single line blocks
Reference: i believe this shouldn't run if tryassigntasks.putifabsent returned non-null, as it means some other thread is handling this task.
Candidate: could we use <UNK>
Reference: why do we set these false? it seems that we should set them true.
Candidate: you could use <UNK> instead of <UNK>
Reference: maybe group this all into a function "initializeidenticon" or something like that
Candidate: you could use a constant?
Reference: you don't need this. builduseraccount() has a null check.
Candidate: you should return <UNK>
Reference: nit: processor: {} has executionenvcontainerid: {} to be consistent in other places. i remember prateek made a whole clean up pr for this :)
Candidate: suggestion <UNK> <UNK>
Reference: in addition, if you have question passed to the studentfeedbacksubmissioneditquestionswithresponses, you don't really have these two variables.
Candidate: i think this should be taken care of the
Reference: items -> items
Candidate: you could use <UNK>
Reference: rename to adapterfactories
Candidate: i'm not sure how about this this is is prone to are, but i'm not sure how about are, but i'm not sure about sure that this are,
Reference: this is not needed - the finally clause closes it anyway.
Candidate: this is designed to be a
Reference: nit: i think it would be cleaner if we usestring.format(..) here
Candidate: use <UNK> instead of <UNK>
Reference: is the double wait needed?
Candidate: is there a reason for this logic?
Reference: why you are not verify updateadapter(patientlist) method ? you can check if it was called with the proper list
Candidate: wait.forelementclickable() should be <UNK>
Reference: are you sure this is the correct method!? from what i can see (from the code) that will show a popup to restore the file to the current version. other
Candidate: is there a reason for this method is not empty?
Reference: we don't need this else block. just return the otherfactory.gettransport(trans)....
Candidate: you could use fake (with <UNK> (with <UNK>
Reference: this should return boolean (primitive, not reference). no need to complicate things with the return type suggesting the value could be null.
Candidate: this is is designed to be <UNK>
Reference: as dicussed early today.. changes in this class should be removed from pr
Candidate: i'm not sure that this would be sense to have a separate method for the
Reference: same here - check env variable before returning true.
Candidate: this should be <UNK>
Reference: it's better to it in try catch finally
Candidate: if you could use stringutils.isnotblank instead of <UNK>
Reference: let's use violationmessage for these test methods
Candidate: you should throw an exception instead of checkargument
Reference: i wonder about throwing everywhere, as most of the reportissue message are calling the same on line 123/127.
Candidate: if finishing the expectations
Reference: same thing, public api that may now return incorrect values.
Candidate: use <UNK> > > > > 0.
Reference: why add the reference back to the uml element?
Candidate: this should be <UNK>
Reference: this listener is not being added to zap.
Candidate: wait.forelementclickable() should be <UNK>
Reference: app profile id is a value provider, the null check doesn't make sense
Candidate: could we use a builder instead of calling <UNK>
Reference: *in*sufficient?
Candidate: is there is a exception that this is printed in the
Reference: cache manager is being leaked here. hr server won't stop cache manager... to avoid such leaks, it's better to extend existing classes, e.g. singlehotrodservertest
Candidate: you could use <UNK>
Reference: is new random().nextlong() really ok for sequence numbers? i would have expected them to be increasing - but guess this works for testing
Candidate: should we throw an exception instead of checkargument
Reference: again, not sure why the constant renames, what do they have to do with fixt?
Candidate: is there a reason to assert here?
Reference: this will never be seen.
Candidate: this is not equals?
Reference: this will look weird in the logs :smile:
Candidate: you could use <UNK>
Reference: checkstate(spillenabled, "revocable memory requested when spill to disk is not enabled");
Candidate: i think this should be a <UNK> <UNK>
Reference: npe if there will be no metrics in test group .
Candidate: please use <UNK>
Reference: you are loading this class again from the new class loader and setting manifest? that seems only necessary because of my earlier concern about modifiableurlclassloader not delegating to parent first,
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i would suggest adding an error message to the response.
Candidate: i think that this log is not log the error.
Reference: method deprecated. use clientbuilder.version() instead.
Candidate: <UNK> is designed to be a <UNK> <UNK>
Reference: why not using bridge.getid().replace("fffe", "") like below? get it once, store it in a serial number and reuse it below.
Candidate: you could be a <UNK> <UNK>
Reference: shouldn't this have already been set based on either being set when changing the combo or when the user deliberately switched the combo? or is this set the true change
Candidate: stringutils.isnotblank()
Reference: this should be private method.
Candidate: this is be a <UNK>
Reference: i think it's enough and i'm sure someone will complain if it's not :d
Candidate: this should be a <UNK>
Reference: static strings or enum for list targets would be helpful
Candidate: this should be <UNK>
Reference: why does this return a pagedflux if it's only going to return a single (first) message?
Candidate: log.debug
Reference: why are you writing these dockerfiles to the user's home directory?
Candidate: is there a reason for element?
Reference: add a method getandclearlogentries(type), call it from the handled, deal with nonexistent types in that method not the handler. the handler should have no business logic preferably.
Candidate: we should use <UNK>
Reference: call it ..._divider please :)
Candidate: this is designed to be a <UNK> <UNK>
Reference: @aleffert i might prefer more methods rather than a concrete "viewmodel". but i gave it a try. is this what you are imagining? <link_0>
Candidate: is there a reason for this logic?
Reference: could you extract a constant for this pattern?
Candidate: you could use <UNK>
Reference: there was no invocationdispatcher in this version.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: is this the right error message for when context.getchangerequest is null? the "if" part doesn't seem to have to do with the status of the developer, but i could be
Candidate: this is a warn
Reference: some of these codec constructors are public and some are package-protected. seems like they should all have the same access, unless there is some specific reason for it ?
Candidate: why not -1l ?
Reference: was looking at this line and was wondering if that is really needed, is it not sufficient to just check for noavailableexecutors exception? also, pickedexecutioncount will include executions that was
Candidate: could we move this initialization to 3 block?
Reference: i'm not quite sure i get why we need this. could you please explain?
Candidate: is there a reason for this method to be used?
Reference: please use {} for blocks.
Candidate: use <UNK>
Reference: the rule manager is a mandatory reference, so it cannot be null if the component is active.
Candidate: i pagelogging
Reference: i feel like the callers might want to know if it completed successfully or timed out?
Candidate: this is designed to use a scale for <UNK>
Reference: 32 should be replaced by integer.size
Candidate: minor: i think that this is is not efficient, but i think that this is is that the is not <UNK>
Reference: this shouldn't be present - super() the base class is object which doesn't have a special constructor to call.
Candidate: <UNK>
Reference: closerepo should be set to true, otherwise the repo is not closed
Candidate: no need to throw an exception?
Reference: whitespace: brake "=" to a new line.
Candidate: is this a bit more than <UNK>
Reference: single statements don't need a transaction.
Candidate: you could use <UNK>
Reference: this can be improved as well. there are a few ways to format query results into appropriate format. json is one, this plain format is another. how about 1. create
Candidate: log.debug
Reference: use rexbuilder?
Candidate: this is is not return an array of the array.
Reference: beware that not all queries _can_ have an order by clause. for instance a "select count(*) from table" cannot have an appended order by
Candidate: you could use <UNK> here instead of creating clear() for the clear() entry, that clear() will be unnecessary.
Reference: worth to use try with resources: java try (final inputstream inputstream = ioservice.newinputstream(path, standardopenoption.read)) { final string drl = decisiontablefactory.loadfrominputstream(inputstream, null); return filldrlindexbuilder(path, drl); }
Candidate: this uri.create to throw new exceptions?
Reference: it's better if simpler/shorter branch goes first
Candidate: suggestion <UNK> = <UNK>
Reference: the siteidentifier is unique enough that we don't need to check the past history anymore (imo).
Candidate: i'm not sure how about removing this change. i don't think that _in <UNK> that _in <UNK>
Reference: this can be static.
Candidate: you could use a constant instead of <UNK>
Reference: should be 1024 \* 1024 = 1048576 = 2^20
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: we cannot move eobjects to another resource because this can have side effect to other tools (using the resourceset).
Candidate: please add a notfoundexception
Reference: this exposes mutable internal state. a copy is needed.
Candidate: we could be modified by <UNK>
Reference: you're removing index objects from a set containing strings. you probably want to do:  set<string> original = stringifyindices(originalindices); set<string> updated = stringifyindices(updatedindices); set<string> added = new treeset<>(updated); added.removeall(original); set<string>
Candidate: you could use <UNK> here instead of storagetype conditionally true" especially if you want to check if <UNK> == null) { return true; }
Reference: just a minor note: throw org.apache.calcite.util.testutil#rethrow(java.lang.throwable) should be used to rethrow exceptions in the test code.
Candidate: this is not unnecessary.
Reference: assert is empty
Candidate: how about using <UNK> formatter: <link_0>
Reference: this should be configurable, no?
Candidate: we should print stack trace log level to debug log.
Reference: statements may be not only on items, but also on properties - are you validating those somewhere?
Candidate: please use <UNK>
Reference: we should make this configurable in the properties file, using a property called http.auth.preemptive=true/false
Candidate: this should be null
Reference: i am not super familiar with this but the usage pattern elsewhere seems to be 1) inject an executor 2) call context.asynchronous() 3) perform the work which may block in
Candidate: we should print the stack trace to the trace, so that we have been overhead.
Reference: the int here is the concurrency level not the size of the collection, we should be using default constructor. also all of these are declared as concurrenthashset, i think it
Candidate: i think we could be <UNK> to the <UNK>
Reference: this should be true since your test is withclientauthentication?
Candidate: is there any reason to propagate the properties? properties? properties?
Reference: one line: ) throws ...
Candidate: use <UNK>
Reference: a test would be nice here. if the textformat had an interface and didn't have static methods it could be mocked
Candidate: use <UNK>
Reference: the compiler guarantees this is not null
Candidate: this could be be package private instead of <UNK> ex.
Reference: use in try-with-resources to avoid leaking fs instances
Candidate: you could use a try-with-resources here
Reference: we should use {} and parameters instead of string concatenation
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: these two parts can be extracted
Candidate: suggestion <UNK> = <UNK>
Reference: seems like the description setter could handle the null-checking logic so you don't have to do it here.
Candidate: if we should download the return?
Reference: @davidmsantos90 why not use a fixed locale? getdefault() varies form computer to computer and that is not something that we want to test in this test.
Candidate: this should be <UNK>
Reference: no questions during refactoring progress.
Candidate: could u please remove this line
Reference: make this test consistent with the default authentication type, and change it to use api key credentials?
Candidate: you could use a try-with-resource here instead of creating a new object
Reference: checkargument for negative numbers?
Candidate: i doubt that this is is not <UNK>
Reference: an illegalargumentexception should be thrown.
Candidate: you could use <UNK>
Reference: would a switch be easier to understand? the two cases that should be treated the same way can just fall through, as in:  switch(currenttoken) { case start_array: case start_object:
Candidate: i'm not sure that we want to call this method in the <UNK> listener.
Reference: two more times(1).
Candidate: <UNK>
Reference: another note: you may want to use the new command interceptor in testkeyonlywrittenonceonoriginator
Candidate: finals
Reference: should this be "boot/h2-1.4.196.jar" ?
Candidate: you can use <UNK>
Reference: this should return rowmapper<string, t>
Candidate: log.debug maybe?
Reference: / is missing from the file name. as a result, your file is now in the root directory. :rofl:
Candidate: @unyoungwax, could you rename this question onto a question question onto a question question question question question question question question question question question question question question question question question question
Reference: cut and paste error
Candidate: this is strange,
Reference: this should be error.
Candidate: this is is not a good idea.
Reference: use slf4j api:  log.info("connecting to atsd at {}:{}", servername, port);
Candidate: why catching this exception
Reference: @abdelaty don't remove this - this is a functionality of the no internet connection snackbar. just create another if statement below it.
Candidate: ah, this is a feature are, that are, but i are, fetched the image is preserved.
Reference: shouldn't this also 'put' to ensure that a re-used regex is treated as new in the list.
Candidate: please use <UNK>
Reference: constant?
Candidate: minor nit: could be replaced by <UNK>
Reference: we could check if the index is writable before creating the indexer: suggestion if (!isindexwritable(i)) continue; index.indexer idxr = i.indexerfor(update.partitionkey(), update.columns(), nowinsec, ctx, indextransaction.type.update); if (idxr != null)  the
Candidate: suggestion <UNK> = <UNK> { ... }
Reference: i know it's unlikely, but if something happened where the failed login count jumped over the maxlogins value, and somehow didn't actually lock the account, then we never would, right?
Candidate: @ivange94 not sure that this is is not good idea.
Reference: instead of set csv separator in singleconsole contructure.. it might be better to set it with separate setter. singleconsole.setcsvseparator(string csvseparator)
Candidate: i think that this is not efficient, we could have a connection, i wonder if this is is a to <UNK>
Reference: usually, static variables accessed not by instance but by class.
Candidate: use utf-8 instead of this(name, <UNK>
Reference: this doesn't seem like the right place for this. why are we collecting interface info for a latency collection set here?
Candidate: this is not supported from datanodeid ? extends <UNK>
Reference: change "devices" to "devices.xml" so user knows specifically the file name that cannot be read.
Candidate: i think that this is a <UNK>
Reference: why catching an exception and throwing it directly again? i would earlier argue for a check of 'unknown' types and put a check on the known ones.
Candidate: you could use the rhs
Reference: i would tend to use decodehex(char[]), not sure how charset sensitive this will be, however, given only <127 ascii should be used.
Candidate: why not use <UNK>
Reference: okay. i think we should probably inform people that a consequence of this could be that the backup lock might not have been released properly - and if there are
Candidate: log.debug
Reference: the order of the arguments is not correct. it should be:  assertequals("task attempt's internal state is not " + "success_finishing_container", taskattemptstateinternal.success_finishing_container, taimpl.getinternalstate());
Candidate: you could use a constant instead of <UNK>
Reference: this will not clear the mdc if it was initially empty. iow keys and values set inside an executor's thread will not be cleared, if the outer context (when calling
Candidate: if you could leverage to <UNK>
Reference: provide the defaultlabel as argument of defaultislastcase, so you will just have to check if the last label equals() the default tree, and not check again for keyword matching.
Candidate: nit: <UNK>
Reference: it would be better to declare this in the throws clause and not handle it, since it should trigger a test failure.
Candidate: is there a reason for element?
Reference: similar note for local variable app renamed to application in other methods. maybe it should be:  map<string, object> application = actioncontext.getcontext().getapplication();  that would mean changing existing references to
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: rogue log statement
Candidate: i would be warn "return true" if (throwable == null) { return false; }
Reference: is this the end of the added? can you mark it?
Candidate: i think this is not <UNK>
Reference: i am not sure "later jobs" is a clear label. then again, i can't think of an optimal label. "later jobs" seems like jobs that will be handled later. maybe
Candidate: rename to
Reference: it looks like this change ended up being unnecessary
Candidate: if we is a <UNK> to <UNK>
Reference: the same synthetic method here.
Candidate: i wonder if there is no need to propagate the stack trace instead of <UNK>
Reference: i did not understand why adding that. in general, adding api to ast or framework is carefully discussed before. you can do that to go ahead in your experimentation, but
Candidate: this should be <UNK>
Reference: use logger templates instead of string concatenation
Candidate: this is designed to be a <UNK> <UNK>
Reference: you can use lambdas in tests now.
Candidate: minor: no need to mock here
Reference: we can move this right above cgroupmemresourcehandler.prestart() similarly
Candidate: is there a reason for this test is not a file?
Reference: would it be possible to cache the databasedescriptor in the initialize() method similarly to what we do with the schemadescriptor, so that we don't have to throw standardexceptions all over
Candidate: suggestion <UNK> = <UNK>
Reference: be consistent, return "entity " + id + "could not be moved"; also, either remove trailing "world" from above or add it everywhere else
Candidate: we should use a warn instead of <UNK>
Reference: typo *intput*
Candidate: nope, correctness outputstream = <UNK> ? .. outputstream : ioexception { .. }
Reference: can we remove the version variable since it's always equal to the constant?
Candidate: this is not be used?
Reference: minor, you could use count(id), in general it's faster
Candidate: rename to query?
Reference: typo in variable name. you can test if there is any change in trackedsymbols and create instance only if necessary. it will be often the case that symbols won't be
Candidate: i think understand this this pr, but i'm not good enough. enough.
Reference: suggestion client.incrementcounter("jenkins.job.stage_completed", hostname, tags);
Candidate: you could use a connection, instead of creating a connection, instead of creating a connection,
Reference: npe if interface number is null
Candidate: use <UNK>
Reference: if done with a ternary then no intermediate declare/storage is necessary. not a huge difference, but simpler and shorter... suggestion return sb.length() > 0 ? sb.insert(0, '(').append(')').tostring() : "";
Candidate: scales this scales
Reference: what's the purpose of this?
Candidate: nit: space after <UNK>
Reference: nit: nothing wrong here, of course, but seems a bit funky that we didn't use putall in the same way as in when setting up the request
Candidate: please use <UNK>
Reference: ...and these two above...
Candidate: <UNK> is be <UNK>
Reference: please provide more meaningful field names. also consider prefixing field names with f and parameter fields with p
Candidate: should we throw new exception?
Reference: i guess the path should have been "jersey-2643" instead of "test3"
Candidate: use <UNK>
Reference: should this be inverted?
Candidate: i parens assertion.
Reference: nit: this check rather looks like an assertion. no matter what arguments are passed to this function the equals function should never return null, as the null case is explicitly
Candidate: is there a reason for this statement?
Reference: again, use a map
Candidate: use <UNK>
Reference: i don't think the first segment of the file name should be treated as an 'extension'. i should be able to create, for example, profile.di because that's not a *.profile.di
Candidate: you could use a string instead of <UNK>
Reference: do a url encoding of this value. the service name can, for example, have spaces and/or special characters.
Candidate: you could use <UNK> instead of <UNK>
Reference: why do we need to add gcm_tag_length here? recordbytes doesn't seem to include any tag field. cipher.dofinal(recordbytes) appends a tag implicitly?
Candidate: '+'
Reference: logger.trace are not very useful in unit tests.
Candidate: could we use <UNK>
Reference: with the changes to the getters, this can be reverted, right?
Candidate: you could use <UNK>
Reference: avoid _null_.
Candidate: i would be more readable to use atomicinteger instead of "select <UNK> -> <UNK>
Reference: use lambdatestutils.intercept(). not only simpler, it will (correctly) fail if the rest operation didn't actually raise an exception
Candidate: use <UNK>
Reference: why add saslexception here?
Candidate: is there a reason for avro to be used?
Reference: would objects.requiresnonnull() be better here?
Candidate: suggestion <UNK> = <UNK>
Reference: there's really no value in debugging the same thing that you're throwing here. we might want to hide the internals from the user (although as a command line utility, i'm
Candidate: you could replace this with <UNK> with <UNK>
Reference: use new loop strucutre: for(category cat: rescategories) {...
Candidate: the error message message message should be be a message (like english for the g, english (like english (like english (like english (like english (like english (like english (like english
Reference: use node.ispartial(), to maintain the properties of the node being rewritten
Candidate: this is not efficient, we can use the <UNK>
Reference: @maria-farooq we should provide a description to the log message
Candidate: @maria-farooq we can decide to decide to decide that description is a good pattern.
Reference: typo
Candidate: you could replace this with <UNK> with <UNK> with the export <UNK> 0)" export statement by the <UNK> 0)" export statement with the export
Reference: you can make expiration an integer and already assign it here, like this: java integer expiration = ns.getint("expiration"); if (expiration != null) { m.setexpirationtimer(number, expiration); }
Candidate: suggestion <UNK> = <UNK>
Reference: esource -> resource also you probably don't want () around {} which is replaced for attr name, since in other messages you don't do that.
Candidate: if this is is mostly mostly mostly mostly mostly mostly mostly not mostly mostly mostly mostly mostly mostly mostly mostly used for the attributes attributes attributes attributes attributes attributes attributes
Reference: the arguments are swapped.
Candidate: you could use a <UNK> <UNK>
Reference: base64 sometimes contains = as a trailing padding character. if that is present, and you just run "token=$base64" back in as post input as a form, maybe the = is
Candidate: why not use <UNK>
Reference: i don't know that we want to return generic server exceptions in the payload to the ui. this has the nasty habit of exposing pieces of the workings of a
Candidate: suggestion <UNK> = new <UNK> clazz, <UNK>
Reference: this is only used for eclipse-update-site. it has a special "aggregator pom" (poma.xml) which i don't understand why it should be there/what it should be useful for, so just ignore
Candidate: you should use <UNK>
Reference: this should never be filtered, as in theory the list of allowed origins doesn't depend on the permissions of the user. i think you can use vdsdao.getall(), without parameters. i'd
Candidate: you could move this to "return true"
Reference: all the above logic should be called only if reconfigure gluster option is selected?
Candidate: you can move this line inside the method.
Reference: could be implemented directly in kubernetesauth implementations as a method such as public void decorate(configbuilder builder). it would require pushing the kubernetes-client dependency up to kubernetes-credentials, or at least the
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: safely()
Candidate: we should throw an exception instead of eating it?
Reference: make it abstract public or public with a default implementation and move specific implementation in the child classes
Candidate: you could use <UNK> instead of <UNK>
Reference: so deep! can't we extract some of this stuff?
Candidate: this is not be added to a new request.
Reference: no need to store the return value here - you could just write it as: java assertions.assertdoesnotthrow(() -> { dynamodbstreamrecordtransformer.tostreamrecordv2(streamrecord); });
Candidate: this is not to be called in <UNK>
Reference: size is missing in the message
Candidate: if (throwable == null) { return <UNK> } }));
Reference: tasks should always relate to a organization, we should set a public flag for this, if a non-coduno organizations owns the tasks, they should be able to update it etc,
Candidate: should we throw an exception instead of checkargument
Reference: suggestion "logical slot %s for execution vertex (id %s) from the physical slot %s",
Candidate: this would be a bit more than nesting than nesting
Reference: style nit: i would phrase this loop as: int qi = 0, ii = 0; for (entry q = head; q != null; q = q.next) { if (++qi %
Candidate: if we == null && <UNK> == null && <UNK> != null && <UNK> == null && <UNK> == null && <UNK> && <UNK> == <UNK> && <UNK> != <UNK>
Reference: replace 4 with visibility_values_per_byte
Candidate: is there a reason for this is not empty?
Reference: exceptions should really not be swallowed. keep and eye on formatting too ("}catch" -> "} catch"). since these are new files, it's handy to just go with an ide and
Candidate: i think this should be a here instead of '+'
Reference: another good candidate to use builders.
Candidate: suggestion final <UNK> = <UNK> <UNK> = <UNK> <UNK> <UNK> = <UNK> <UNK> = <UNK> <UNK> <UNK> = <UNK> <UNK> <UNK> <UNK> = <UNK> <UNK> <UNK> <UNK> = <UNK> <UNK>
Reference: isn't this like eventually(() -> store.load(1) != null)?
Candidate: you could use <UNK>
Reference: please indent inside the try
Candidate: use stepverifier instead
Reference: getfreshtimestamps(numtimestamps)
Candidate: is there a reason for this logic?
Reference: can this be renamed to withmandateid?
Candidate: log.debug
Reference: same here, it seems that validatebeforeundeploy is doing the exact same thing as the code below.
Candidate: i think this is right...
Reference: can we fix formatting here?
Candidate: you could use <UNK>
Reference: please, do not mix german and english. please use one language or use a translation key for translatable error messages.
Candidate: this is expecting to sleep here
Reference: maps.newlinkedhashmap()
Candidate: if you can combine this line
Reference: this and the below methods should be protected rather than public so that they can only be accessed by subclasses
Candidate: this is not to be the println.
Reference: i think this is wrong (there's also tool configurations). better to retain the existing behavior and just adapt the predicate as needed.
Candidate: this is a <UNK>
Reference: val
Candidate: you could use the conf here instead of calling <UNK>
Reference: else keyword must be on the next line accordingly to code style.
Candidate: please assert that annotations on the line.
Reference: line length 120
Candidate: should we throw an exception instead of <UNK>
Reference: this should just set patientprogram without creating another instance
Candidate: wait.forelementclickable() should be <UNK>
Reference: why this format and locale.italy is used? maybe locale.root to make it more or less locale-agnostic? is there some fixed date format in tsd like rfc822/2822/5322 one?
Candidate: you should use <UNK>
Reference: i'd rather run only the purgelistener on the executor.
Candidate: could we move this to the ip address here?
Reference: why not use [transactionstatus#canrollback()](<link_0> here?
Candidate: we could use <UNK>
Reference: it is not the responsibility of our callers to deal with our exceptions after we've hidden them. do not propagate this, log it and fall back out of the catch
Candidate: if we is a <UNK> that is is not efficient, we could use the <UNK>
Reference: this change (stage-->i) is completely pointless, and makes the code less readable.
Candidate: you could use a constant instead of <UNK>
Reference: checkstyle will complain here, missing {}.
Candidate: please use <UNK>
Reference: same here, what's the usage of this output?
Candidate: i think that this is not efficient, we should have to check that the exception is not thrown by <UNK>
Reference: -1 as a time is plausible on embedded systems, i recommend long.min_value.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this public has to be remove. see travis report.
Candidate: suggestion if <UNK> == null) {
Reference: good catch suggestion int lengthoflongestentry = stringutil.encodeutf8(stringdefaultvalue).length;
Candidate: is there a reason that is is not <UNK> ?
Reference: you are updating the dependencyinfoavailable flag here, but you should also cover your tracks in the "catch" block below. if the query fails, you can be sure that no dependency
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: another alternative would be to add a method like skiplockduringclone() that clonecommand can call.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: you can use values.mapwithindex() here, which avoids the unsafe below
Candidate: you could use this unconditionally,
Reference: no need for a separate declaration.
Candidate: i am assuming that this is a little bit but i am assuming that this is a little bit but i am assuming that this is a little bit but
Reference: just use context as sync obj.
Candidate: @manuelplazaspalacio is finishing this args?
Reference: should this be a separate method? i find finish a bit big. but i don't feel too strongly about this.
Candidate: can we use the property?
Reference: i think hasout is being deprecated here <link_0>, i think is better to use getmessage instead
Candidate: we could optionally use a constant instead of referring to error message.
Reference: adding a check for this listener?  caused by: java.lang.nullpointerexception: attempt to invoke virtual method 'float com.github.chrisbanes.photoview.photoview.getscale()' on a null object reference at org.wikipedia.gallery.galleryitemfragment.lambda$oncreateview$1$galleryitemfragment(galleryitemfragment.java:128) at org.wikipedia.gallery.-$$lambda$galleryitemfragment$it7mfodmyoidodz3rdijxj5sw2c.onmatrixchanged(unknown source:2)
Candidate: you could use <UNK> instead of <UNK>
Reference: these (glowing methods) were added on day 1 of 1.9 builds, so no check is required here.
Candidate: please use <UNK>
Reference: this could be optional (same for other fields not required), to not have to add all the properties to all entries.
Candidate: this is a bit strange, we could use <UNK>
Reference: shutdown the pool in a finally block
Candidate: this pagelogging
Reference: localname can now be inlined
Candidate: _cough_
Reference: this conditional is unnecessary. list element is never null.
Candidate: this is a trace, that discoveryresult is prone to a trace, trace, trace, trace, trace, so that the discoveryresult is not used?
Reference: definitely agree. i might make this error very, very explanatory since i'm not sure what people would expect to happen here.
Candidate: this exception is be thrown by <UNK>
Reference: the old formatting was easier to understand.
Candidate: uid
Reference: this dropout section is obsolete. replace if statement and content with applydropoutifnecessary(training);
Candidate: you could use <UNK>
Reference: propose to populate queries in the constructor or init method
Candidate: is there a reason for avro here?
Reference: icdkmolecule instead of smilesmolecule adaptertype is the class that is asked for in this case icdkmolecule as indicated in plugin.xml
Candidate: if we is going to log the we should have a to log the the user wants to log the error.
Reference: there's no evidence this must be non-null (though it might've been the original intent).
Candidate: we should use <UNK>
Reference: put this logic in a separate method?
Candidate: i think this is not <UNK>
Reference: this is a regression. can we not throw a cce here? if not, we are re-introducing #357.
Candidate: you could use a constant instead of <UNK>
Reference: this is a bit expensive as it allocates an array list for every entry. since drag events can fire very quickly and impact performance we need to use fast/low level
Candidate: is there a reason for tracking this logic?
Reference: maybe failed to reload lua scripts after reconnect
Candidate: you can use reflectiveoperationexception here
Reference: open the drawer at the end of this function, so if user changes this to use a different gpkg with no feature tables, the same code still works.
Candidate: i think that this clear() is is not efficient, but i would be a bit more speaking of the <UNK>
Reference: true usually means success. this is a bit confusing. can you make it opposite. meaning handlefailover would return true if succeeded.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: nit: parameterized logging
Candidate: we should print stack trace to be printed as well.
Reference: the loadfromfile allready logs errors on failures. is this warn really what we (all) want to do here? i'd expect a return or even a throw of some sort.
Candidate: i think we could be a try/finally here instead of try/finally blocks
Reference: i wonder if this api is good enough, when you consider vertical zooming (ctrl+plus and ctrl+minus). here we don't know which entry's font is being set, you can't rely on
Candidate: this is not <UNK>
Reference: should this line be conditioned on whether prometheus is enabled?
Candidate: is there a reason why not we are going here?
Reference: do all the functions being passed here need to be instantiated each time? or could we use a singleton for them?
Candidate: suggestion <UNK> -> <UNK>
Reference: maybe you should extract d.getkey().getid() to var
Candidate: i think finals
Reference: verifying the html won't be able to tell us whether the element is actually displayed or not. for that, we need to use the iselementvisible() method provided in apppage.java (perhaps
Candidate: you could use <UNK>
Reference: suggestion default @nonnull collection<view> getallviews() {
Candidate: this is designed is designed to be <UNK>
Reference: this could be a pre-defined (static final) instance of a static class, rather than an instance class instantiated anew each time.
Candidate: please add a <UNK>
Reference: this query, however, *does* need the division by two, as we have two blocks of params in the query.
Candidate: you could use <UNK> instead of creating a array instead of creating clear() entry, better:  (string <UNK> (string <UNK> = new <UNK> (string -1);  java (string <UNK> (string
Reference: you're using the registrationhelper in the lostpasswordcontroller ... maybe it's time to rename the class or extract some logic to a separate one.
Candidate: you can use hash hash hash hash hash hash hash hash hash hash hash
Reference: in the descriptor builder, we usually read the file immediately to fail fast. i think it would be better to move the reader code here for the same reason. it
Candidate: should we use <UNK>
Reference: suggestion optional.ofnullable(allitemscache.get()).orelseget(hashset::new).stream()  small optimization.
Candidate: i'm not sure that this "?" is a bit misleading. i wonder if "?"
Reference: can you externalize this string to the messages.properties aside this class since it can be displayed to the user
Candidate: should we display the display the display the display the table, display the table, so that the display the table, we'll display the display the user name display the user
Reference: move this validation to pluginprofileservice.
Candidate: use <UNK>
Reference: you can remove this line, this is done in transactionalfeature.nexttransaction()
Candidate: you could use only: <UNK> instead of <UNK>
Reference: we usually do this with the holder. add a new field the in holder class, which is initialised and related code is created on demand (lazily, when we call holder.getviewdestroyedfield()).
Candidate: why not expecting to the cache. thanks!
Reference: it's a very strange use of generics. why configuration property is not defined as t ?
Candidate: this should be a bind <UNK>
Reference: i would suggest to put this in a "finally" block.
Candidate: formatting
Reference: opensanssemiboldfont  rename it to a general name like semiboldfont.
Candidate: how about replacing this operating with a <UNK> shard operating with shard operating operating with <UNK> operating operating with <UNK> operating with <UNK> operating operating with <UNK> operating operating with
Reference: shouldn't you save the returned parameters in the list?
Candidate: please remove the <UNK>
Reference: variable names should not start with a capital letter, that's for class names
Candidate: could we use a <UNK> instead of <UNK>
Reference: i would skip that as it doesn't harm to use the openshift lookup with a registry. prefix, too. its probably more confusing to have this special case here.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: a couple of nits: - bulkdownload should be final. - rename bulkdownload to bulkdownloadicon
Candidate: this is designed to be a <UNK>
Reference: declare it as a member of the class. we will gain in readability. to be generalized on others test classes.
Candidate: you could use <UNK>
Reference: change exception
Candidate: is there a reason why not anyway?
Reference: why do we do it at the individual file level rather than dir level? each consumer is writing to a dir composed of pid and thread id, so those dirs
Candidate: unused
Reference: we'll want to keep the existing host support around.
Candidate: i think we could print the xpath word as well.
Reference: a refresh is missing here in between the updates
Candidate: maybe we should use a checkargument here too?
Reference: use the constant here?
Candidate: you could use the illegalstateexception instead of an illegalstateexception
Reference: use expireafteraccess
Candidate: this should be <UNK>
Reference: you can get the bundle even easier: frameworkutil.getbundle(getclass());
Candidate: minor: this is is designed to be <UNK>
Reference: perhaps also log the stacktrace, it is useful in a lot of cases, or better yet use processexception
Candidate: i believe we should leave the error processing on the error processing
Reference: isn't it from another pr?
Candidate: this is be to be called here instead of nesting.
Reference: @cuenyad use termid.location_id instead of 8190
Candidate: please move this check to the fragment
Reference: what if store is missing?
Candidate: i think that the system.out
Reference: it might be interesting to allow cnull here, actually, to allow for more flexible code. setting a cnull would clear the command.
Candidate: use <UNK> instead of <UNK>
Reference: the selecttracetype method could probably get the tmftracetype.getinstance() directly, that would avoid the tt variable at the caller and changing the signature of the method.
Candidate: use <UNK>
Reference: how about return expiresatms == utils.infinite_time ? utils.infinite_time : math.max(0, timeunit.milliseconds.toseconds(expiresatms - creationtimems)); ?
Candidate: use <UNK> % <UNK>
Reference: this is just a suggestion, but when author and blog name are same, maybe we could show txtauthorname instead of txtblogname which is bolder and more prominent. what do you
Candidate: this is not efficient, we could be <UNK> to the <UNK>
Reference: instead of this, inc numfailed in the loop above.
Candidate: you could use isempty() instead of <UNK>
Reference: mtype is originally 0 anyways so its k
Candidate: please add a space after the
Reference: i don't think pinning should disable this action.
Candidate: how about this a constant instead of <UNK>
Reference: instead of making delete operation a special case, in case of delete we can just push a null value into the cache. so it will automatically return null.
Candidate: is there a reason to synchronize on the request?
Reference: any methods that override should be annotated with @override. otherwise i can't quickly say if it is correct or not.
Candidate: we could use a <UNK> here instead of <UNK>
Reference: i don't follow this bit. if it is persisted then return?
Candidate: wdyt about we want to use the <UNK>
Reference: we should avoid creating the instance when we don't add it.
Candidate: please verify that this feature is is not defined.
Reference: revert this change please.
Candidate: suggestion <UNK> <UNK>
Reference: we should also reset progress and hide it here?
Candidate: this is designed to be a download <UNK>
Reference: code not required? its taken care in the next addrepresentation call
Candidate: i think this is not efficient, we could use a <UNK> <UNK>
Reference: nicely done! just one consideration: the ioobexception contains the information on what went wrong (i.e. what the actual index was and the size of the list) and by catching it
Candidate: could probably?
Reference: tricky! validateaddallowed currently checks if you have the write_meta permission on the entity. acl gets created after the check. this breaks oneclickimporter
Candidate: wait.forelementclickable() should be <UNK>
Reference: is this really possible that urlprovide is null? we require canonicalweburl now.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: rename this url variable to location and then simply use the variable name url in the foreach loop below
Candidate: you could use use stringutils.isnotblank instead of "never return null"
Reference: clear() won't shrink the hashmap. [weakhashmap](<link_0> maybe better in this case. an entry in a weakhashmap will automatically be removed when its key is no longer in ordinary use.
Candidate: could we use a <UNK> <UNK>
Reference: this is definitely not necessary, the try-with-resources block will call walk.close() automatically.
Candidate: you could use the <UNK> paths?
Reference: use <code>strings.isnullorempty</code> that is more efficient than equals with another string.
Candidate: method.getmethod()
Reference: in general we don't mark local variables as final in presto source code.
Candidate: is there a reason for this class that is not encapsulated in <UNK>
Reference: this does not have to be final
Candidate: nextvalueindex could be a bit strange,
Reference: don't need to call setup() here
Candidate: nit: <UNK>
Reference: we should probably use stringutils.commadelimitedlisttostringarray here.
Candidate: you could use trim the length?
Reference: can be changed to lambda
Candidate: you could use a <UNK> instead of sharing
Reference: no need to do +1 inside in the loop just do iteration from 1 till <= dimension
Candidate: <UNK>
Reference: i _think_ this will get run twice. once on the indexer and once on the local worker. true or false?
Candidate: this is not needed
Reference: should be smackexception that is expected to be thrown here. and that by getnodeconfiguration() i'd assume, hence the lambda should be smaller.
Candidate: is there a way to be used?
Reference: method alljobswithonannotation has 32 lines of code (exceeds 25 allowed). consider refactoring.
Candidate: this is is not <UNK>
Reference: could we not just stash the apns objc?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i wouldnt use regex matcher inside this in this way. because if a label contains a special char... it would not be matched properly.
Candidate: please use a constant instead of <UNK>
Reference: hardcoded string (+1 more below).
Candidate: this is not be risky.
Reference: could possibly avoid the linear search in each loop iteration with something like the following before the loop. java set<string> importing = arrays.stream(exportedfiles).map(fstat -> fstat.getpath().getname()).map(filenamemapping::get).collect(collectors.toset()); set<string> imported = arrays.stream(importedfiles).map(fstat ->
Candidate: this is extremely strange to <UNK>
Reference: rename to childitem
Candidate: you could use a
Reference: why not use early return constructs everywhere instead of zonenumber = ?
Candidate: i'd rather than relying on the
Reference: is this the purpose of having this class?
Candidate: please use <UNK>
Reference: can be cached
Candidate: please use <UNK>
Reference: sinksemantic or kafkasinksemantic? it maybe confusing that it also works for source.
Candidate: this should be a <UNK> <UNK>
Reference: this method name is unclear
Candidate: is there a reason why not throw an exception instead of null?
Reference: are these really severe logs, or can we log them as warning?
Candidate: ![major](<link_1> debug condition, [![rule](<link_2>](<link_0>
Reference: could we set this string to a pre-defined constant ? i've seen it being used everywhere. easier to maintain if we can define all system properties used in test cases
Candidate: you could use <UNK>
Reference: fix formatting here please
Candidate: if this is designed is designed to be invalid?
Reference: same thing with this one. also i don't see any fields annotated with @mock for initmocks?
Candidate: this is not to be used?
Reference: you may want to log the exception
Candidate: this is not use <UNK>
Reference: if the object is currently instantiated by relying on the statically defined values within importinformationspaceconstants class do we need to check the nullability of those fields here and in similar
Candidate: is there a reason for initialization?
Reference: yes this is syntactically correct but it would be nice for things to be consistent. opening curly brace on function declaration, code, closing curly brace on a separate line.
Candidate: you could use <UNK> <UNK>
Reference: can you factor out the first conversion to make the if more readable? moreover, why not use a switch-case statement?
Candidate: this should be used?
Reference: what about if geometrydata.setexcludedtypelist is no set ?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why not fail quickly here as well since you claim to require a tasklistener below in getrequiredcontext?
Candidate: is there a reason for this error message is not
Reference: i think this should be a copy, not a reference. we wouldn't want changes to one jdbi context changing the behavior of another.
Candidate: is there a reason for this method to be a separated by using <UNK> instead of creating a new one?
Reference: remove printstacktrace and catch and log the proper exception
Candidate: you could use a stack trace instead overhead.
Reference: what does changed mean here ? better name ?
Candidate: this could be simplified to <UNK>
Reference: you can remove the need for the finally statement by using a [try with resources statement](<link_0>
Candidate: please remove this log.
Reference: since this property typed boolean, you can use: boolean.tostring(vminterface.isportmirroring())
Candidate: nit: not 100% sure about replacing this ? ;-)
Reference: word "check" is overkill
Candidate: you could use <UNK>
Reference: when we're passing () -> false in, we could pass in something like commitlogprocessor.neverprofile()
Candidate: same here: <UNK>
Reference: shouldn't this need to be done in the refresh instead of during the creation of the controls?
Candidate: i writevalueasbytes
Reference: can this bit be extracted in a method?
Candidate: this should be <UNK>
Reference: would also be nice to add validation for partition keys and check that the column names for clustering and partition keys are correct and that the ordering is right.
Candidate: you could use <UNK>
Reference: you don't have to check for id equality if the listener is defined on sign_in_button
Candidate: is there a reason for this logic?
Reference: what about calling closeentry instead? will that work out?
Candidate: nit: use -1.
Reference: the event description is wrong, the account is being deleted it may not even mention the users and simply say removing all users under the account.
Candidate: should we throw a notfoundexception somewhere?
Reference: how about bytecontainments? especially an "s" is missing.
Candidate: this is be defensive.
Reference: i think this whole thing will be more intuitive if you name this variable as waitenabled or something, and do the following where this method is called:  java boolean
Candidate: if we could be <UNK>
Reference: same as above, i think you should mix timezones.
Candidate: i think we could use a try-with-resource here instead of creating a try-with-resource in the constructor?
Reference: i know this isn't introduced here, but is it actually useful? this check looks like it has been here since the initial oss commit, though in that form it looks
Candidate: the message is not be <UNK>
Reference: i think a static import for common preconditions checks would be reasonable i believe?
Candidate: please use <UNK>
Reference: ditto. it appears you have a room reference on exam directly.
Candidate: this could be simplified to <UNK> anyway?
Reference: please remove "public" (our mistake, because the other constructors in this class should be package-private, too).
Candidate: this is a <UNK>
Reference: i think you should separate _expectation_ section from _given_ and _action_ sections, this test case is not obvious
Candidate: you could use <UNK>
Reference: you should actually call super with false as a third parameter.
Candidate: this is a <UNK>
Reference: this is wrong design, we should not touch inner classes ever. instead, let's use new provisioned(..).acquire()
Candidate: unused vars
Reference: i think it's clearer to add else { return true; } here
Candidate: you could use "return true"
Reference: not sure this is correct: * catalogeffectivedate = now() * that.catalogeffectivedate = null * => catalogeffectivedate != null && that.catalogeffectivedate is false and that.catalogeffectivedate != null if false * =>
Candidate: this is be simplified (up to check if <UNK> != null && <UNK>
Reference: this can be made simpler using the fact that remove returns null if the mapping doesn't exist, and we have putifabsent at our disposal. java final string tag = tags.remove(fromtag);
Candidate: why not use <UNK>
Reference: entitymanager.find(sessiondata.class, sessiondata_id) ?
Candidate: you could use <UNK> here instead of <UNK>
Reference: this is wrong as you ignore thrown exception - i suggest to not use streaming api as its also terrible sometimes as in this example being overly complex and causing
Candidate: please add a <UNK>
Reference: why do you set the username here?
Candidate: this args?
Reference: please do compile and save it in final field of class, to improve performance a bit.
Candidate: please remove '+'
Reference: we can replace the method call of(partialfunction) by providing a type hint <r>:  java return () -> try.<r> of(partialfunction::apply).getoption();
Candidate: this is be stream()
Reference: based on the work done in the pay/receive pr's, the checkpindialog will be replacing unlockwalletdialogfragment
Candidate: you could use "return <UNK>
Reference: the i == const.points_not_submitted might not be necessary because the return value is the same as the else clause.
Candidate: you could use <UNK> instead of <UNK>
Reference: you already synchronized at line 261, do we still need this?
Candidate: we should throw an exception here instead of wrapping an exception
Reference: i am not sure that a needs here, i think renderassource will be better
Candidate: i think that this is not a good idea to use the <UNK>
Reference: please, change as discussed.
Candidate: can you explain why this is not used?
Reference: as mentioned on previous patch, there is no guarantee that 2 objects with the same hash code will be identical. you would have to be very unlucky with a typically
Candidate: why not return <UNK>
Reference: can you put this into a private method or so. that will help to make clear what this is doing.
Candidate: is there is a to be a <UNK> <UNK>
Reference: can you elaborate in which cases stop can throw runtimestartinterruptedexception?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: suggestion log.debug("the underlying yarn version does not support external resources.", e);
Candidate: maybe print the error message simplifies the
Reference: why return atomicinteger?
Candidate: is there a reason for avro to be null?
Reference: also this should be probably split to two methods, one for tcp and one udp, see usages, where you are using this method in context when you are actually want
Candidate: you could use a download <UNK>
Reference: could you remove 'final' off this line for consistency with line 88? i see that you need it on line 87.
Candidate: you could move this to <UNK>
Reference: please put this in a subsystem.
Candidate: you should swallow re-throw exception here
Reference: partially my patch solves an issue with trylock. whenever we receive an event and the lock is already taken we loose data. do you think the code will handle using
Candidate: why you reduced to the lock
Reference: suggestion if (getdateofdeath() == null) {
Candidate: use readasstring(...) instead
Reference: shouldn't this be error()?
Candidate: is this a bit more than to?
Reference: can this logic be added in the catch, this eliminating the need for both this "if" statement as well as the "setdefaultvalue" variable?
Candidate: you could use a constant instead of <UNK>
Reference: rename
Candidate: this should be a dedicated class hierarchy instead of implementing <UNK>
Reference: string url = selfredirect(item.geturl());
Candidate: i think this should be <UNK>
Reference: there are a bunch of places where getlinkedaddresses are iterated over, and the collection is not thread safe. we need to double check those are covered by an external sync
Candidate: why we need to use <UNK>
Reference: commited->committed
Candidate: i guess we should have a supplier to <UNK>
Reference: not sure about this; sure, this is a lot of exceptions in the method signature, but this encourages throwing whatever you want and not caring about what you catch.
Candidate: this this change?
Reference: this should be conditional: if (action.issetvnicprofilemappings()) { ... } we do this in general to avoid the possible side effects of running that code when the request doesn't contain the
Candidate: if you is going to be a bottleneck. consequently, in the
Reference: cleaner to use gauva's threadfactorybuilder instead of having to write our own. you could also remove the atomicinteger then
Candidate: i liked liked liked liked liked liked liked liked this be <UNK>
Reference: should fail if the list is empty
Candidate: suggestion throw new <UNK>
Reference: another char loop
Candidate: suggestion <UNK> <UNK> <UNK>
Reference: shouldn't this be not equals ? as the semantics says cluster modified ? you can cache the time if the check equals to avoid doing the expensive call. but the
Candidate: if you could use a <UNK> instead of return?
Reference: it will fetch heliun.json from web everytime. it this intended?
Candidate: you could use <UNK>
Reference: why is aslist called? the callee, getcombinedanno, will make a copy anyway.
Candidate: is there a reason for element?
Reference: if you find yourself nesting further down then two levels its generally a good practice to refactor the code into smaller methods.
Candidate: unused
Reference: is that called a lot? because we now have a o(n*m) instead of o(n) given that value.buffer is an arraylist
Candidate: is there a reason for this method to be a
Reference: i think that gomethoddeclaration is not appliable for gobench, so something like  type t int function (t) b<caret>enchmarkname() { }  shouldn't produce gobench run configuration, right? if so
Candidate: use <UNK> instead of objects.isnull
Reference: super minor point that if this was a stack you could pop(), or a queue you could poll() and it would be a bit more clear how you're using the
Candidate: please move this braces around
Reference: please add ioe to the exception.
Candidate: this is not to be an exception
Reference: getclass().getsimplename() is quite expensive. you could extract it a a constant
Candidate: please add a log.
Reference: use logger instead.
Candidate: i'm not sure how about the sure about the sure that this is is not but i'm not sure about sure that we have a
Reference: the log level needs to be reset to default after this test done.
Candidate: i think that this is is not <UNK>
Reference: please drop this, we don't log the rest anyway. the plugin framework logs everything if in debug mode.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why is this an option exactly, when it could simply return an empty seq instead? @danieldietrich?
Candidate: suggestion <UNK> = <UNK>
Reference: look like this is not used anywhere. also if we do need it it should not be public
Candidate: no need to mock
Reference: you missed to add comparelist as parameter here.
Candidate: this should be <UNK>
Reference: can we keep this test case? "s3a://" + bucket_name + "/test/"
Candidate: is there a reason to assert that this test is a <UNK>
Reference: logging
Candidate: i think that weights of grabbing the score <UNK>
Reference: java 8 has uncheckedioexception which would be perfect fileexception is going away so let's not even talk about him again... @swankjesse any thoughts?
Candidate: is this possible?
Reference: i'm not following this logic. why have two script hashes for loading the same script, lpoplpush_lua? is this second one supposed to load workerscripts/frommultiplepriorityqueues.lua?
Candidate: we should use <UNK> to <UNK>
Reference: i guess instead of setting to 0, it may be more future-proof to and-off the bit.
Candidate: we should use git location is not exist"
Reference: static string constants
Candidate: you could use a constant instead of <UNK>
Reference: hm, why "ruleimpl" instead of "rule"?
Candidate: is there a reason for the sake types?
Reference: is it possible to set it to left align? looks better imho
Candidate: is there a a error message printed printed printed that printed error printed printed printed printed that printed error printed printed printed printed printed that printed error printed printed printed
Reference: i would rather choose eclipse or jboss tools for the default product version
Candidate: you could use checkargument here instead of <UNK>
Reference: another space after add
Candidate: i think that this is is not <UNK>
Reference: unnecessary concatenation on the same line after some formatting changes
Candidate: maybe use a constant instead of reflection.
Reference: the test fails for me on the regular basis:  org.junit.comparisonfailure: expected :3 actual :4 <click to see difference> at sun.reflect.nativeconstructoraccessorimpl.newinstance0(native method) at sun.reflect.nativeconstructoraccessorimpl.newinstance(nativeconstructoraccessorimpl.java:62) at sun.reflect.delegatingconstructoraccessorimpl.newinstance(delegatingconstructoraccessorimpl.java:45) at org.springframework.integration.ftp.inbound.rotatingserverstests.testvariablelocaldir(rotatingserverstests.java:144)
Candidate: <UNK>
Reference: this means, if the number of partitions are set to more than one, then a threadpool with multiple threads will be created. i think we just need a single thread.
Candidate: should we use <UNK>
Reference: style-nit: use curly brackets and wrap the return to next line.
Candidate: you could use <UNK> here instead of <UNK>
Reference: would it be possible to move the save/replacer logic into a shared impl class + interface with default methods? it seems to be a common use-case for jenkins which could
Candidate: we could synchronize the finally block.
Reference: remove this if statement
Candidate: you could use <UNK> <UNK>
Reference: this method should just check if the maven-executable is present in ${karaf.data} (in the correct version)
Candidate: use <UNK>
Reference: i tend to think that this check should not be required if flowfrommethodinvocation return an empty list.
Candidate: you could use <UNK>
Reference: we should be testing for feed with two clusters.please make that change so that your code is thoroughly tested.
Candidate: you could use <UNK>
Reference: unrelated change
Candidate: i think this should be a warn
Reference: collectors.toset()
Candidate: you could use <UNK>
Reference: not sure if it matters, but to be on safe side, collect to a set that can preserve order?
Candidate: this is be <UNK> to <UNK>
Reference: i'd remove this error handling here? (as it presumes createhandled)
Candidate: unused
Reference: v should be renamed to view and follow adequate variable names everywhere
Candidate: should we use the ip handling, handling,
Reference: returnedcomponent.setforeground((item != null && !item.ispublicattribute()) ? jbcolor.gray : table.getforeground());
Candidate: is there a reason for the sake of these properties?
Reference: why there is no gettestsuitenametoexecute in this case?
Candidate: is there any reason to be null?
Reference: technically, after a return, no need for an else.
Candidate: you can use <UNK> instead of <UNK>
Reference: this is currently pulling from the training date, not the date for the new training completion.
Candidate: could you use <UNK> here instead of <UNK>
Reference: i think we can drop the enum and make this public abstract string getname();
Candidate: throw an exception
Reference: should this be done internally by retrypolicyexhaustedexception? what other uses are there for it?
Candidate: why not use a scale that scale metadatastore is metadatastore
Reference: s.a.
Candidate: suggestion <UNK> = new <UNK>
Reference: i wonder if we should have it as a configuration property (see testcontainersconfiguration) /cc @rnorth @kiview
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: should use settablename() here.
Candidate: i think this should be a
Reference: shouldn't this raise an exception instead of logging if the put is not applied?
Candidate: if (throwable == null) { return; }
Reference: please move this line right below .settotalwaitingstatcount(totalwaitingstat.getleft()).
Candidate: i guess we could optionally use <UNK> instead of conditionally
Reference: the if can be replaced my introducing an apply(frameworkmethod method, description description, object target, statement statement) method in ruleentry.
Candidate: i'm not sure that this is a deadlock but i guess that this is is not <UNK>
Reference: math.pow(10, -10) is a magic constant.
Candidate: use <UNK>
Reference: minor - but should be hashtoinstancessn rather than hashtoinstancessn
Candidate: if we checkbox is be e1 e1 checkbox is be empty.
Reference: consider using spaces (instead of tabs) for indentation, to keep the same format as the rest of the file.
Candidate: you could use the enum instead of <UNK>
Reference: since this is an enum now, wouldn't it be better to use switch here?
Candidate: is this a bit strange, that we don't have to to the <UNK> <UNK>
Reference: do you want to switch this to the same jooq pattern as clientdao?
Candidate: wait.forelementclickable() should be <UNK>
Reference: first note: your cast could leverage a classcastexception (no instanceof check) here should should try to change the next page (each pattern will have its own configuration page) if this
Candidate: i prefer to use constants for the <UNK>
Reference: !isempty and throughout the cl
Candidate: i think this is not <UNK>
Reference: this will create flood in the event tab
Candidate: this vdsid is be vdsid to vdsid : <UNK>
Reference: shouldn't here be a selectednetworkelements.clear()
Candidate: i --> <UNK>
Reference: weird argument names, inconsistent with usual naming expressions.
Candidate: please add a message
Reference: no need for a static import here.
Candidate: should we add a log to debug level
Reference: add not-null check here.
Candidate: should we use <UNK>
Reference: have you tried this with a task plugin? won't this fail? i mean, if you have a task plugin as well, registered, then this can cause a problem, right? every
Candidate: i theory we could be <UNK>
Reference: the way this is done, you're giving the sum of all reds, greens and blues and give the "divider" as a multiplier (which are the opposite of each other). might
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: minor nitpick! this duplicates code from getcanonicaluri. we should have a private method that generates the appropriate uri for any given domain, and have getcanonicaluri and getmobileuri call that.
Candidate: suggestion <UNK> = new <UNK> clazz, <UNK> <UNK>
Reference: these are deliberate. using for each allocates an iterator, which we avoid by writing the loop ourselves. same with the rest of the loops unfortunately.
Candidate: we could use conf here instead of creating a new constructor?
Reference: it might be better to just remove this line.
Candidate: please randomize correctness
Reference: math.max
Candidate: this feels like a little bit clearer, but this feels like a bit clearer, bit easier, you could have a bit more than <UNK> situation.
Reference: you may want to use assertequals ? the advantage would be that, when assertion fails it will tell you what's mismatching. there are lot of asserts like this, please change
Candidate: suggestion <UNK> = <UNK>
Reference: suggestion logger.info("request diagnostics: {}" readresponse1.getdiagnostics());
Candidate: you can delete this line.
Reference: should be a private constructor, because builder is used.
Candidate: if you could use <UNK> <UNK>
Reference: debug/trace/remove?
Candidate: use <UNK>
Reference: why assume, not assert?
Candidate: i think this is a construct,
Reference: i think the mockwebserver can be removed since it doesn't look like it's needed for this test.
Candidate: you could use <UNK>
Reference: suggestion if (util.isemptystring(rolename)) {
Candidate: ![image](<link_0>
Reference: query builder not sure to be set here, needs check?
Candidate: use readasstring(...) instead of <UNK>
Reference: please keep the todo
Candidate: is this a bit more precise than <UNK>
Reference: hmm... a tricky date format. this is usable right now, but anybody that wants to use it will have to convert it to something usable. either in this pr or
Candidate: please use <UNK>
Reference: better to use logger here so that it can be used in other places?
Candidate: we could use a exception instead of <UNK>
Reference: with n and p?
Candidate: use <UNK>
Reference: use closer
Candidate: we could leverage to <UNK>
Reference: nonexistentlockservice for consistency.
Candidate: fyi, you could use use <UNK>
Reference: align this class with double version. e. g. in double version methods go in different order, and the logic is different.
Candidate: is there a reason to throw an exception instead of a constant?
Reference: you could consider adding a logging statement here. this method has three code paths of which two contain a logging statement. keeping this the same for the three paths could
Candidate: you could use constants instead of hardcoded strings.
Reference: suggestion log.warn("could not remove referencepoint, no referencepoint is registered with id: " + id);
Candidate: is there any reason to catch non-null?
Reference: java docs ?
Candidate: this complains about the expectations
Reference: since the log is now detached from the build log i think we need a timestamp at the beginning of every log line to be able to correlate better with
Candidate: fyi, you could use a try-with-resource here instead of creating a try-with-resource
Reference: isn't this more the currenttotalwidth?
Candidate: is there a particular reason
Reference: this can just be replaced with docmatches.matches.compute(), i think?
Candidate: maybe we could be a little bit more often more often often often often reducing the
Reference: find a unified way to report result, all by metrics or logs
Candidate: can we use <UNK>
Reference: shouldn't this be replaced by the other procedure? or do we need two?
Candidate: use <UNK> instead of <UNK>
Reference: the first double could be double
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this looks suspicious: both minstr and maxstr are initialized from values[1]
Candidate: you could use a constants instead of <UNK>
Reference: if parambrickfromvolume == null or parambrickfromvolume.getid() == null again, you could return false
Candidate: this is not convenient for loop?
Reference: this warning suppression can be removed if the below line is changed to partitionattributes<string, string> attributes = new partitionattributesfactory<string, string>()
Candidate: _cough_
Reference: please use easybind.map(statemanager.activedatabaseproperty(), ...) instead of createbooleanbinding. it's a bit more readable and shorter.
Candidate: this is be to be a <UNK> <UNK>
Reference: this became complex to understand because you're ending with tests leveraging @before setup and some tests don't. i would rather keep the design of the test which is shared between
Candidate: should we add a description in the
Reference: a fragment should not use the settingsdatasource, it's the presenter who should invoke request to save data in data layer but through of a use case, please create also savesettingsusecase
Candidate: this is designed to be a <UNK> listener.
Reference: what happens with parsing? failure or silent?
Candidate: _cough_
Reference: avoid unwanted blank lines.
Candidate: this should be <UNK>
Reference: this should be done before fixaddressesfordomainmode
Candidate: is there a reason that kubernetes behaviour? properties?
Reference: three more lines of english.
Candidate: if you could use <UNK>
Reference: while this made sense for consumercompliancejob ( no point in calculating compliance of a consumer that has been deleted ), is the same true for import as well? i feel
Candidate: why we need to retry here?
Reference: rulesdao.getrules() already returns a list.
Candidate: you could use <UNK>
Reference: there is the potential for an uncaught illegalstateexception from the call to case.getcurrentcase if there is no open case.
Candidate: you could use <UNK>
Reference: should this be before ranger
Candidate: is there a reason for example that this is is bigger?
Reference: this can be extracted and be reused below.
Candidate: i would prefer to be removed,
Reference: nitpick: wouldn't step = -step be clearer? (and is this check even necessary?)
Candidate: you could use <UNK>
Reference: if this is a generic executor service provider, then i don't think we can be this specific and call the payload a "message". what about s/message/payload/?
Candidate: let's discuss
Reference: suggestion if (direction == direction.outgoing) {
Candidate: use <UNK> instead of <UNK>
Reference: when would sql be null?
Candidate: you could replace this with <UNK>
Reference: keepbranch ?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: nit: pass cause in constructor.
Candidate: this should be system.out
Reference: do this in resetscaleandtranslation or resetinternalstate.
Candidate: this is designed to be <UNK>
Reference: do we need synchronization here? will the object be created multiple times?
Candidate: you can use <UNK>
Reference: we don't need this variable if you improve the code structure.
Candidate: you could use a constant instead of <UNK>
Reference: please write a unit test for this. that will probably reveal a bug. i think what you wanted to write was resolvedcomparisonbranchname.matches(resolvedbasebranchname). <link_0>
Candidate: could we use the jdk <UNK>
Reference: this variable is called twohoursago, but in fact it could be any number of hours ago.
Candidate: you could use <UNK>
Reference: i think you can just do instanceof map here and cast object to map, to avoid the copy. the instanceof check would make it safe to use @suppresswarnings("unchecked")to suppress the
Candidate: i think we could be <UNK> to <UNK>
Reference: style : 8 spaces continuation indent
Candidate: i think we could be a warn instead of return?
Reference: i believe the minimum is 1 for each of these, don't think it matters too much here, but would be good to consistent
Candidate: nit: we can't use <UNK>
Reference: can you change the variable name to newmember
Candidate: this should be <UNK>
Reference: can you file an issue about this? the fact that these aren't pluggable for varying sql impls is not ideal. this shouldn't have to have a this kind of translation.
Candidate: you could use <UNK>
Reference: <link_0>
Candidate: please use <UNK>
Reference: i think this can be a foreach loop as well.
Candidate: is there a problem with the <UNK> <UNK>
Reference: the implementations of cache (such as net.sf.ehcache.cache.java which we use by default) are all highly concurrent. there should be *no* reason to synchronize on the cache object. please don't.
Candidate: we could leverage to synchronize the <UNK> instead of creating a connection,
Reference: with the key-value set introduced i don't think each header element passing by will be a messagepriorityelement, so that name had better changed to something more general.
Candidate: this should be <UNK>
Reference: this will introduce a easy to exploit security issue as the referer information can contain any kind of string which must not be a valid uri nor a uri leading
Candidate: please move this to reused as reused above.
Reference: this return seems redundant.
Candidate: is there is a defined in the properties?
Reference: please consider adding a preconditions.checkargument to check that certs is not null.
Candidate: static imports
Reference: be positive: return vnicprofile.getnetworkqosid() == null || getnetworkqos() != null ? validationresult.valid : new validationresult(vdcbllmessages.network_qos_not_exists) ;
Candidate: please add a feature (my mac
Reference: gratuitous, revert
Candidate: this is a <UNK>
Reference: since getstreamids returns a set, could you change the expected values to compare to set? i realize that testgetstreamids should have been originally written to compare to a set instead
Candidate: @orhan89 @ivange94 readasstring(...) instead
Reference: remove the reversal here, and let the jdk 8 implementation return it in reverse, and the jdk 9 implementation *not* reversed.
Candidate: is there a reason that is empty?
Reference: should this be error() instead of info()?
Candidate: use e.getmessage()
Reference: suggestion if (segment.getrelationshipdirection() == direction.incoming) {
Candidate: i think (filter.getrelationshipdirection() == direction.incoming) {
Reference: in a try with resources statement the resource is implicitly final, so here you can remove the final modifier.
Candidate: you could use <UNK>
Reference: let's either just say jwt since that is the name of the class or json web token since that is what jwt stands for.
Candidate: same as above.
Reference: we shouldn't default to enrollment. mpower 2.0 configs are going to change anyway, so back-compat is a non-issue. adding a special case for enrollment just adds complexity and confusion. if
Candidate: if we is going to throw an npe if someone wants to have an npe if someone wants to have a
Reference: rename this to refchildelement or refchild
Candidate: rename to action action action action action action action action action action action action action action action action action action action action action action action action action action action action
Reference: need only ioexception
Candidate: finals
Reference: now when we conditionally added comma we don't need to do a substring(0, length - 2)
Candidate: is there a reason to log secret types?
Reference: collectors.toset() is terser (and set<> is a better return type than hashset<>).
Candidate: i think that caching that we don't awfully caching for caching caching caching caching in the <UNK>
Reference: the isbindtovm is misspelled, please rename to isboundtovm. this line is being repeated in different broker implementations. please introduce the method below in cloudlet interface (and the implementation in cloudletsimple):
Candidate: i'd prefer to introduce a enum enum for the 'if' readable.
Reference: you can use collections.singletonmap.
Candidate: <UNK>
Reference: we should cleanup when the bundle is destroyed rather than using a shutdown hook.
Candidate: you could use <UNK>
Reference: should this be a warning and not an info level message? it seems like it shouldn't happen.
Candidate: can't we bail here instead of passing null?
Reference: suggestion if (null != cookies) {
Candidate: you could use e1 e1 e1
Reference: you could use system.lineseparator().
Candidate: you could replace this with <UNK> with <UNK>
Reference: i'm wondering if we should use validclientsbytaskloadqueue (with a (c,t)-> true predicate) instead of a plain priorityqueue here, since our queue now nicely enforces uniqueness of elements.
Candidate: you could use <UNK>
Reference: should require permission on disk only, calling super will add requirement for vm as well
Candidate: no need for the
Reference: what about to use 2 methods authorizedinternal in 1 if clause with different objects? like:  if(!authzresolver.authorizedinternal(sess, "removespecificuserowner_user_user_policy", collections.singletonlist(user)) && !authzresolver.authorizedinternal(sess, "removespecificuserowner_user_user_policy", collections.singletonlist(specificuser))) { .. }
Candidate: this is not equals?
Reference: the rule is that hashcodes must be the same if equals returns true. it's not the case here if pagenumber is equal and some other field is different. the easiest
Candidate: use guava instead of objects.isnull
Reference: builder is not the perfect name here. uniontype.
Candidate: @manuelplazaspalacio this is not guid be null, but the fragment should be added to the fragments phase.
Reference: is there a reason we don't batch the ids in the deleterequest?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: well the animation looks really cool, but i think it's not needed!
Candidate: please add a message for the
Reference: i'm not a huge fan - keyedstream.of(historyqueries).mapkeys(...).map(...) gets you most of the way, although i'll confess that i'm not sure how to do the merging resolution in keyedstream (although you
Candidate: this is not be a
Reference: static imports (of e.g. iterables.transform) or no static imports? mixed bunch further down, e.g. ec2listnodesstrategy **with** imports and plenty of other cases **without**.
Candidate: suggestion if <UNK> == null) { return <UNK>
Reference: this should take the input content-types as parameter to sort out which processors to use.
Candidate: why not -1l change?
Reference: should be protected at most.
Candidate: please use <UNK>
Reference: check for null here?
Candidate: we could use <UNK>
Reference: rename the job_name constant to app_name.
Candidate: you could use <UNK> here instead of <UNK>
Reference: maybe it is a good idea to log this (as warn) ?
Candidate: please use uri.create
Reference: is includechildren ever used?
Candidate: could we call <UNK> here instead of <UNK>
Reference: meh: could swap these two conditions, so that !singlevalue can short-circuit the isiterable call.
Candidate: you could use <UNK>
Reference: should be baseedit
Candidate: you could use a constant for this use-case.
Reference: nit: need a space after "class"
Candidate: this is designed to be <UNK>
Reference: missed a null check...
Candidate: same here:  <UNK> <UNK>
Reference: this looks like the same implementation from instancedconfiguration, but maybe we can extract this into a function in formatutils or commonutils so we don't have the code in both places?
Candidate: you can use <UNK>
Reference: no use for printer. session can be a local variable. no need for putting in the constructor.
Candidate: you could use @nullable.
Reference: !isempty
Candidate: if you could use <UNK>
Reference: same here, move to a reusable predicate and get it injected.
Candidate: is there a reason to assert here?
Reference: uh, oh - there is no function equality. a function cannot be part of a map key.
Candidate: weights of weights the weights of <UNK> weights
Reference: you can remove leaseholder == null && it will always be true
Candidate: this could be pulled out into a separate method.
Reference: please invert if condition
Candidate: is there a reason for element?
Reference: remove before merging
Candidate: you can use the formatter
Reference: i think we can't modify the code like this. the contextid can be either joblet node or context node
Candidate: please replace this with checkargument with a checkargument
Reference: i guess you need to also run the background task (i.e call execute()). but i don't like the fact that the constructor has the side-effect of running a new thread.
Candidate: you could use a constant instead of <UNK>
Reference: extra line
Candidate: use <UNK>
Reference: should this be getsession(false) ? getsession() is the same as getsession(true). i ask because create() below does an exists() check and if false does a getsession(true). but it seems like
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: better to rename like fetchdatabannerinfo as isproblemxblock seems boolean return type method.
Candidate: typo
Reference: space missing
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i would set it private as this class ought to be externalized at one point.
Candidate: i'm not sure how about this change.
Reference: original failed to read was correct.
Candidate: log.debug
Reference: one downside i see is that we have two constructors now with differing implementations. perhaps debatable, but it can be easier to reason about a class when there is one
Candidate: this should be reduced to <UNK>
Reference: can you elaborate what this operation does, because it is not obvious why result of this operation is never used.
Candidate: can't we use the logging here instead of <UNK>
Reference: i feel like my last feedback got ignored
Candidate: this could be simplified to <UNK>
Reference: this is problematic for the following situation. * open rfile with config for myblockcachemanager * open 2nd rfile with config for tinylfublockcachemanager seems like the 2nd rfile will use myblockcachemanager
Candidate: why not mock
Reference: again, insufficient. filewriter is also autocloseable.
Candidate: you could use reflectiveoperationexception here instead.
Reference: still using ctx here
Candidate: i guess we is not thrown in the
Reference: perhaps replace by: return chain[0].getissuerx500principal().getname().equals(chain[0].getsubjectx500principal().getname()) (there's no need for the if/else)?
Candidate: this is not <UNK>
Reference: albeit not related to this patch - shouldn't be called explicitly, but via its getter.
Candidate: this breaks the <UNK> <UNK>
Reference: just return "kudu" here
Candidate: use a constant instead of <UNK>
Reference: extra space
Candidate: use <UNK>
Reference: @slubwama why uses patient.getuuid().tostring() when the uuid is already a string
Candidate: <UNK>
Reference: is there a reason not to clean this up in a finally block sooner?
Candidate: you should use <UNK>
Reference: we can remove this.
Candidate: this is not <UNK>
Reference: ditto here, no need to move the validation to datadoghttpclient
Candidate: log.debug
Reference: double ||?
Candidate: suggestion if <UNK> { return false; }
Reference: usually this ) { is on the next line
Candidate: this should be a good idea.
Reference: java.util.map.entry -> map.entry -> entry is enough (already used in other places).
Candidate: throw an exception
Reference: final
Candidate: this should be a <UNK>
Reference: do you mean this to sort team1 before team2 if either of them are null? it seems like it should sort the null one to be first?
Candidate: i would be a bit more than <UNK>
Reference: we have already make use of generic type so why here we still need to cast?
Candidate: can we move this to a listener.
Reference: have a bytebuffer based impl?
Candidate: you could use <UNK> instead of objects.isnull
Reference: please shorten the exception message to method name: getsponsoredmembers, since this text is wrapped in sentence by exception constructor and passing own sentence would result in nonsense text. thank you.
Candidate: is there a reason to check the attributes attributes attributes attributes on the user.
Reference: i didn't understand why you are traversing the inputstream but returning when the first element is retrieved.
Candidate: no, we don't use 83
Reference: verify the body of the request too.
Candidate: you could use use <UNK>
Reference: lets use vectorutils.of(...).
Candidate: you could use <UNK>
Reference: call this variable accountservice
Candidate: ah, this is going to create a bean in a bean but i think that we have a bean bean but that we have a bean in the
Reference: this should be method.methodprefix.equals(prfx) test scenario:  @test public void getisolationmethodtest() throws exception { physicalnetwork.isolationmethod method = new physicalnetwork.isolationmethod("bla"); final physicalnetwork.isolationmethod isolationmethod = physicalnetwork.isolationmethod.getisolationmethod("bla"); assertequals(method, isolationmethod); }
Candidate: i would be better to minimize the <UNK> <UNK>
Reference: i'm sorry i didn't notice/think of this on my first review, but i just realized that i was envisioning us sharing/sending the file itself, rather than sending the log contents
Candidate: i think we could be reduced to a <UNK>
Reference: check null edit part, model checl view type for element before casting
Candidate: if oldvalue == oldvalue is oldvalue is oldvalue is oldvalue is oldvalue is oldvalue is oldvalue is oldvalue is oldvalue is oldvalue is oldvalue is oldvalue is oldvalue is oldvalue
Reference: static imports
Candidate: finals
Reference: i guess it will be better to allocate arraylist with fixed capacity (alternativenames.size() +1) and then add all the names. this will prevent from potential reallocation.
Candidate: nitpicky if you could use this method to a ternary.
Reference: nitpicking here - wouldn't it be better to place the 10 constant on a static field?
Candidate: i think this is not <UNK>
Reference: nit: you can iterate from offset to offset + length as done in other loops in this pr. there are several similar loops below if you want to update them
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: as discussed in main issue, this should be in the check for the entire method. maybe this should be moved to the ischeckedmethod method?
Candidate: this could be simplified to <UNK>
Reference: please fix 'packagenamewithsuffix' name
Candidate: this is dangerous, is designed to be a <UNK> <UNK>
Reference: not sure why you need this here. by adding this as part of the activation logic, then we don't have to worry about it.
Candidate: remove this statement.
Reference: suggestion if (s.isempty()) {
Candidate: you could use <UNK>
Reference: not possible to combine with the test below?
Candidate: if we is a <UNK> that is is not efficient, but i am not sure how about the sure that _in <UNK>
Reference: i don't think we need this check nor this method. simply call georepdao.getbyid(getparameters().getgeorepsessionid()) when needed, if getparameters().getgeorepsessionid() we will simply won't get any result
Candidate: you could use <UNK>
Reference: ![major](<link_1> 'severity: major') make "getpluginkeyandresourcepath" a "static" method. [![rule](<link_2>](<link_0>
Candidate: you could use a constant here instead of <UNK>
Reference: since this method no longer returns null, let's change the return type to int.
Candidate: use <UNK> instead of <UNK>
Reference: you also need to check it doesn't end with "/", which would indicate a folder
Candidate: please use <UNK>
Reference: typo
Candidate: this import?
Reference: is community using only one language? if so this text should be in some kind of final in this class
Candidate: is there a reason that is empty?
Reference: i think "parent" here is going to be a confusing word to whoever is reading this error. it would be more helpful to describe "there was no xform definition defined"
Candidate: if this is is designed to be an enum for the
Reference: this specific if(){} else if(){} has two branches with exactly the same code. what is the reason for that?
Candidate: please use <UNK>
Reference: same here, shouldn't we stop startup, when roles are missing and can't be created ?
Candidate: again, inline
Reference: need to validate that action has glusterservicetype parameter
Candidate: is there a reason for element?
Reference: seems like we'll get stuck in the "build in progress" state if the user decides not to proceed with the build after seeing that they have busy terminals?
Candidate: formatting
Reference: i know this method wasn't added in your pr, in fact i added it so freetypebitmapfontdata can be subclassed to override methdos, but this feels weird. probably would be better
Candidate: this is designed to be a <UNK> <UNK>
Reference: i believe that is true instead of false
Candidate: this should be null
Reference: this isn't how you implement cooldowns
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: bit verbose, we probably just need the stack trace suggestion e.printstacktrace();
Candidate: if (throwable == null) { .. } else { throw new } else { throw new -1); } } } } }
Reference: style-nit; we don't use braces for simple single stament constructs
Candidate: please use objects.equals to tear down
Reference: actually, i think initlinemodel() should be no-op too; the semantics of it are what happens when a different key is picked, but in this case nothing should change when a
Candidate: @gunnarmorling you could use only: <UNK> <UNK>
Reference: let's use ternary operator here.
Candidate: this is strange,
Reference: we need a small correction here. spec says: > return false if any item is false, else true if all items are true, else null the previous implementation was wrong,
Candidate: nit, we should use <UNK> to run()
Reference: do you want to go ahead and make this change? if you are unsure either i or @hschmack can help you with it. if not, open a work item.
Candidate: we should print the basic error log.
Reference: i would replace those statements above with this(handledexceptions,failurewindow,halfopenafter,threshold,false).
Candidate: if <UNK> == null || <UNK> == null || <UNK> == null && <UNK> { .. }
Reference: isalloweduser was purposely put below matchessyncpath logic since it's a more expensive operation. trying to ensure this function is as absolutely efficient as possible for resource fetches not involving remote
Candidate: please use <UNK>
Reference: rather than hard-code "people" here, how about "person_id in (select person_id from " + people_table + "where..."
Candidate: you could use a int <UNK> = <UNK>
Reference: where is this logic around rendering a json array to string used in this pr ?
Candidate: could you please use <UNK>
Reference: can you structure this as a series of tests rather than a nested if/else clause? it's easy to miss that return validatepredicatevalue(...) in the middle.  java if (!(clause instanceof
Candidate: i am not sure that this is confusing.
Reference: does this need to be instantiated again?
Candidate: <UNK> -> <UNK>
Reference: this line can be pulled outside directly in line 158.
Candidate: formatting
Reference: is there a reason this is a set? set seems suspicious to me (vs. list) for two reasons. - i think druidcluster is meant to only have a single copy
Candidate: i think this should be a <UNK> <UNK>
Reference: logging should removed / disabled before merging
Candidate: please use constants instead of logging.
Reference: this could possibly break iterators that extend wrappingiterator and override getsource(). i don't think we should make this change. maybe it would be better to deprecate wrappingiterator and introduce another
Candidate: is there a reason for this method to be null?
Reference: in this method you are doing the commit on both the resourceresolver and the jcr session wrapped with the rr. please just stick to the rr and omit doing the
Candidate: is there a reason for this method is not used?
Reference: does this .useplaintext(true) change the behavior?
Candidate: we should use a <UNK> <UNK>
Reference: is this the default in the new api?
Candidate: no need to declare two lines
Reference: this constructor should have package visibility instead of public
Candidate: you could use commons
Reference: one question. run() is called in every iteration, right? if so i'm curious it would be reasonable to generate a plan which can be possibly changed due to the migration
Candidate: this is worthwhile to wait for this log only?
Reference: @nielscharlier please refactor to try-with-resources. shorter. less error prone. in this case, an error will leave the inputstream unclosed.
Candidate: please use reflectiveoperationexception
Reference: why are you using hour here? hour returns the 12-hour clock representation, while hour_of_day returns the 24-hour clock. if you used hour_of_day, then you would not need the next two
Candidate: nit: is a <UNK>
Reference: this is only valid for a standby, isn't it more intuitive if they see the status is ongoing? or do we aim to reflect the status of the replication from
Candidate: please use <UNK>
Reference: does this mean that if i change the runtime config to something invalid (or invalid but of a different type), that the system will fall back to the default config?
Candidate: suggestion <UNK> -> <UNK>
Reference: making this configurable makes no sense. for mongo, it will always be the string "mongo".
Candidate: if you could use <UNK> <UNK>
Reference: to make things refactoring-safe use something like simpletaskrepository.class.getname(), same for jdbctaskexecutiondao.
Candidate: this complains about this construct,
Reference: i'd prefer that we handled it (the snapshot type) in a separate change.
Candidate: this is a <UNK>
Reference: i think we should also check that there aren't existing etag conditions. if they pass in an old etag that they want to target, and we just got a new
Candidate: nit: we just use a lambda.
Reference: are not we unconditionally expecting exception cause due to internet connectivity here. suppose to take error message from errorutils.geterrormessage function.
Candidate: is there a reason for this logic?
Reference: using this specific cunstructor probably prevents using any other inplementation of dbenginedialect (in fact there is a single imlementor), because only this class has that. if that the only class
Candidate: you could use a string instead of <UNK>
Reference: this can be dropped.
Candidate: is there a reason why not warn change?
Reference: why do we remove the first character?
Candidate: you could use the stringutils instead of <UNK>
Reference: i think it makes more sense to calculate a weighed average here (weighted by the isotope intensity). in other words, if i have 2 isotopes in the same container and
Candidate: we can't be null?
Reference: i would suggest defining a new error code for this type of exception. bkexception.zkexception is a bit confusing.
Candidate: maybe we could be <UNK>
Reference: for an empty slice (slices.empty_slice, we have a single instance per jvm) value.getbase() is null so we can overtrack those in the else branch.
Candidate: you can use a static factory method please.
Reference: immutablelist.copyof
Candidate: this is a <UNK>
Reference: i think would be good to rephrase this kind of messages to be something like "findnodes by multiple property names and values are not supported."
Candidate: how about using a <UNK> framework instead of <UNK>
Reference: didn't you yourself publish a library to avoid having to call this directly? could be useful here.
Candidate: is there a reason that is not a good way to log that the user is missing something?
Reference: how about adding an initialize() method to mod11checkvalidator which takes the actual argument types instead of the annotation. that'd be a bit more straight-forward than creating the annotation proxy just
Candidate: nit: we use <UNK> view? view? view? view? view? view?
Reference: bad, do not return null. return is either one loader or other, there is nothing between. if you get here and have to return null you obviously didn't carry out
Candidate: you could use <UNK> instead of <UNK>
Reference: what was wrong with this line?
Candidate: you could use a constant instead of <UNK>
Reference: unsafe addition, can cause integer overflow. use long instead of integer
Candidate: i think sake of objects.isnull
Reference: how about "just now."?
Candidate: please use <UNK>
Reference: do you want to return null from here?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: match all initial values using a separate methods as said earlier.
Candidate: is there a reason to mock here?
Reference: maybe extract processoldordeletedmessage() to reduce the nesting here.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: you probably don't want to have this return null, it should return an empty list worst case scenario.
Candidate: is there a reason for this?
Reference: you need to verify that the preference is about the email format, and not the alert one (a.ka. the notifications in the menu).
Candidate: nit: not sure that this exception is thrown from the exception
Reference: are start /end / duration necessarily here?
Candidate: if you could use objects.equals()
Reference: here you are initializing the taskgroupsuccess with true while it is true by default. we should set the task group success with false and only then update it to true
Candidate: i'd prefer to override this method to override the <UNK>
Reference: despite type named multithreadmodeconfiguration i would prefer singlethreadmodeconfiguration for variable, as in fact you have single thread mode here.
Candidate: this is designed to create a static factory method please.
Reference: there are some system.out and system.err print-outs in this class. what's that about?
Candidate: <UNK>
Reference: you will hate me, but i meant of course all places where display.getdefault() is used :)
Candidate: rename <UNK>
Reference: if we are changing this code, then relying on optional could be a good move.
Candidate: this is optional?
Reference: in tests, most of the time, we use incrementing numbers to make obvious the order in the tree. this confused me a little as 3 is the parent of 1
Candidate: we should use checkargument here too?
Reference: you've switched the key and value order.
Candidate: why not use <UNK>
Reference: it could just concatenate instead of going through the formatter.
Candidate: you could use "return domains
Reference: this breaks the feature of changing log levels at runtime
Candidate: rename to <UNK>
Reference: instead of passing null, is it possible to use the oids listed in the openjdk link i provided for the other algorithms? thoughts?
Candidate: we could use <UNK>
Reference: break from for loop if annotation is found
Candidate: why not use <UNK>
Reference: again, no need to use filehandler... you should use propertyconfigurationlayout: java config.getlayout().load(config, cleanup(in));
Candidate: i am not sure that this point.
Reference: is there a response code enum we could use instead of '200'?
Candidate: style nit: we don't use braces around single line blocks
Reference: we don't need this. see super-super-super class:  public eventobject(object source) { if (source == null) throw new illegalargumentexception("null source"); this.source = source; }
Candidate: we should bind <UNK> to bind the setting.
Reference: some log finer/finest that this happened?
Candidate: is there a reason why we are, log.debug here?
Reference: this token is used for login right ? since this is confidential information avoid from logging them
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: getmacaddress() -> getinterface().getmacaddress() why this change?
Candidate: you can use <UNK>
Reference: we always check for the positive case. for example isnotprivate. hence we should name this doesnothavetraceannotationandreturnvalue or sg like that.
Candidate: this should be a element?
Reference: maybe just return path here? can somehow url.tostring() differ from path?
Candidate: if you could use <UNK>
Reference: add fail() after insert
Candidate: please use <UNK>
Reference: moving integer.tostring here seems cleaner.
Candidate: maybe we should be a best, instead of the best,
Reference: null or "null" ?
Candidate: this is be <UNK>
Reference: duplicate code (see line 76). create method?
Candidate: why did you compute the run()
Reference: please separate the two lines so that it's readable. boolean isleft = mergeviewerside.left == side; if (getcompareconfiguration.ismirrored()) { isleft = mergeviewerside.right == side; }
Candidate: you could use brackets here
Reference: please watch the spacing, and be sure to never use tabs.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: we could raise exception there.
Candidate: unused
Reference: have acquireserialdevice return the serial device, and get rid of the member variable.
Candidate: i think that the log.
Reference: why is this any more reliable in java versions lower or higher, even in java 1.8, system.gc() is just a hint.
Candidate: this is be to tear down overwrites args?
Reference: s/b "sending back not supported."
Candidate: please alias should be replaced with <UNK>
Reference: can you update this block to avoid double call on openapiresolver?
Candidate: we should use the pretty-print
Reference: it seems this could result in null. this may be rare but shouldn't this be tested ?
Candidate: i think this is not efficient, but i would be a efficient, that the "return" to the <UNK>
Reference: to avoid null check and get in a state when servercapabilities is never expected to be null, this could be made async with getinitializedserver().thenrun(() -> { if (supportsworkspacefolders(servercapabilities)) { languageserverplugin.logwarning(...);
Candidate: is there any reason to propagate the casts?
Reference: nit: put args on a separate line
Candidate: suggestion final string = <UNK>
Reference: you could do this in a single line
Candidate: you can use <?> instead of calling get() instead of creating a bean explicitly.
Reference: we have too many nested try/catch/finally blocks here mixed with throws statements. could we simplify this?
Candidate: no, we should throw an exception here instead of ignored.
Reference: it's not great to rely on this without knowing what it relies on. in particular, you replace it with failing test elsewhere, but it's not immediately obvious that this is
Candidate: you could use the mock here instead of creating a mock
Reference: what if there was a write setting this to null inbetween the check of null
Candidate: finals
Reference: i think it is clear enough even without the additional id variable same for below
Candidate: we could use a constant here instead of <UNK>
Reference: could we avoid converting the integer to a string and then back again in the isvalid* function?
Candidate: could we use <UNK>
Reference: when performing actions after a long-running async task, we must always, always check whether the current activity still exists, either by checking isdestroyed(), or isadded() in the case of a
Candidate: i think this should be updated.
Reference: suggest debug message along the lines of log.debug("closing [%s]", id);
Candidate: i think that marking the consequence of be closed in the future, but i think that the consequence that the consequence of completes the consequence of the
Reference: check if command is null.
Candidate: you could use <UNK>
Reference: as discussed, this code should never be executed for connections. should be checked above in stack trace.
Candidate: we could draw to draw drawing events.
Reference: might be nice if you can skip save if doc is not changed.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: nit: you can shorten column_a to a or x
Candidate: i think we should have to wait for the
Reference: could you add the word "status"? the old message had missed it.
Candidate: is there a reason to assert that is empty?
Reference: why null is acceptable situation?
Candidate: is there a reason for this method is not used?
Reference: null != settings
Candidate: you could be simplified to commons-io
Reference: does this need to be synchronized somehow?
Candidate: @vilchik-elena args?
Reference: suggestion assertthat(params1).hassize(2);
Candidate: you could use <UNK>
Reference: will this condition be ever met?
Candidate: let's throw a exception instead of <UNK>
Reference: change to new gocipher().encrypt(..)
Candidate: could you move this piece out.
Reference: for this and many instances above this line, align [c]alendar with [t]imehelper.
Candidate: we could use a constant instead of <UNK> bottleneck. is a bottleneck. bottleneck. bottleneck. bottleneck. could be reused. bottleneck. bottleneck.
Reference: we must only take the first show and the first enable rule into account, or better only one of each type (so it is generic)
Candidate: you could use a multimap instead of <UNK>
Reference: is preferrable not to nest all of the if/else if we can return. its easier to follow that way.
Candidate: please use uri.create
Reference: the variable returnme is probably useless as it can be replaced by a simple return everywhere it is assigned (lines 79 and 84).
Candidate: if you could use <UNK> && <UNK> && <UNK> && <UNK> || <UNK> && <UNK> || <UNK> && <UNK> && <UNK> || <UNK> && <UNK> { return; }
Reference: can we define "" as public static string metadata_uri_for_peer_download in commonconstants.segment and reference the same thing in the server as well, to detect peer download? once we decide it is
Candidate: i think we is a download in the
Reference: initialise in constructor
Candidate: nit: not use a <UNK>
Reference: this if block can also be replaced with contextcompat.startforegroundservice(context, intent).
Candidate: this should be <UNK> to <UNK>
Reference: please review. if watcher is null, removeallwatches is done. if not null, removewatches.
Candidate: i think that the exception is not thrown by <UNK>
Reference: you should be using equals to compare strings
Candidate: this is is designed to be a <UNK> <UNK>
Reference: closing curly-bracket should be at the new line.
Candidate: you could use <UNK>
Reference: could this be lower-cased since the contains checks are looking for lower-cased strings? unless there is a reason this must be case sensitive.
Candidate: you could use a constant instead of printing the
Reference: you should be able to do ((number) original).intvalue() instead of checking the class. should be a little more robust in case there's a silly jdbc driver that makes all numbers
Candidate: could we log the exception?
Reference: remove
Candidate: if you could use <UNK> <UNK>
Reference: - typo ("for with") - log message could be more clear ("unknown session while logging in anonymous" or sth) because warn is visible with the default log settings - should
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this is soooooo much slower than usefulpsitreeutil.getchildoftype(expr, haxereference.class);. and i'm really starting to wish we had static extensions in java. maybe it's time to look into using manifold (http://manifold.systems) in
Candidate: this is designed is designed to be a <UNK> <UNK>
Reference: that way the parameters will be remembered and saved on mzmine exit
Candidate: this could be <UNK>
Reference: i would recommend putting the boolean condition in parentheses for readability.
Candidate: suggestion if <UNK> == null) { <UNK> = <UNK>
Reference: public method, where is readwritelock
Candidate: wdyt about pulling this out.
Reference: please make checks explicitely. onview(withid(r.id.dfghjkl)) will always work in espresso because it doesnt do anything. so it would be nicer if you would add an explicite statement that youre actually
Candidate: wait.forelementclickable() should be <UNK>
Reference: <>()
Candidate: you could use stream() here instead of <UNK>
Reference: please try to omitted the steps that are not necessary...review this in of all your tcs
Candidate: you could use a <UNK>
Reference: switch all the tests s/client_recv/client_send as it makes more sense (because it would be an error to have only a recv annotation)
Candidate: is there a reason for avro here?
Reference: shall we change the order of equals checking as well?
Candidate: you could use <UNK> here instead of <UNK>
Reference: can you remove the 'return' or replace it with 'setwindow(null)'? (to prevent a blank dialog)
Candidate: you can be simplified to <UNK>
Reference: there is no cluster deactivation, forcedeactivation should be false.
Candidate: rename to <UNK>
Reference: just return azureblob.containerexists("system"); also wrap it in a try/finally block to close the context.
Candidate: suggestion <UNK> = <UNK>
Reference: move to parserhelper
Candidate: i understood that the should be squashed from the future.
Reference: could you add the exception e as the cause to this newly thrown exception.
Candidate: log.debug
Reference: listnode.aslist()
Candidate: rename to <UNK>
Reference: looking at this pattern, i wonder if this would be cleaner: * introduce a new usableresource class * have it have the same three states are we have now, but
Candidate: you could use pulled out into a separate method.
Reference: this condition is little hard to read. i would prefer return isnormal && (substitution.isempty() || isground()) ? this : (term) this.accept(new substituteandevaluatetransformer(substitution, context));
Candidate: you could use <UNK> annotation, instead of creating a connection,
Reference: suggestion if (!(obj instanceof idtoken)) {
Candidate: consider using a boolean instead of ==. [![rule](<link_2>](<link_0>
Reference: we should watch out for applicationcontext::getid returning null suggestion if (event instanceof contextrefreshedevent && ((contextrefreshedevent) event).getapplicationcontext() == this.applicationcontext) {
Candidate: i'm not sure how about the sure about the sure that this is is that we is a to the <UNK>
Reference: missing doc blocks on all of these methods.
Candidate: if you could be a <UNK> <UNK> connection, the discoveryresult == null) { return <UNK> } });
Reference: why was this removed? not sure what it is trying to accomplish but seems unrelated to the overall goal of the pr.
Candidate: you could use <UNK> instead of <UNK>
Reference: nit, most given methods should take a parameter. something like:  givenunitwithattackpower(2)  if there is no parameter, and the return value is very generic, then something like the following
Candidate: should be be <UNK>
Reference: both are toggled offline?
Candidate: _cough_
Reference: possible to make it private?
Candidate: i am not sure how about this resource: <UNK>
Reference: why is hashcode and equals implemented like this? two userresourceprofilepk instances with the same userid and gatewayid should be equal and should hash to the same value, right?
Candidate: is there any particular reason for this?
Reference: these variables are used in both methods. can they be declared as class variables?
Candidate: this should be dangerous, to listener.
Reference: @overrding public should be on the same line according to ignite code style.
Candidate: you can use <UNK>
Reference: you can replace to originalpath = (!originalpath.endswith("/"))?originalpath + "/":originalpath;
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this just gets sent down from hq, i assume?
Candidate: this is not a bit idea.
Reference: should we be using a secure cxf client here? @stustison
Candidate: please use <UNK>
Reference: i'd suggest returning the id instead, the key is more likely to change than the id.
Candidate: nitpicking: you could be simplified to a messages.properties call to <UNK>
Reference: needs jgittext entry, i think
Candidate: please use <UNK>
Reference: shouldn't this be anything active after claimed?
Candidate: use <UNK>
Reference: list<partition> results is not used.
Candidate: minor feedback: minor feedback: shouldnt this be changed to <UNK>
Reference: make the number a constant and explain there why.
Candidate: this could be used for <UNK>
Reference: it seems we should not filter nulls here.
Candidate: suggestion return <UNK> <UNK>
Reference: if bad version is passed, there will be a ugly message like "file not found...etc" maybe it is make sense to prettify it somehow, wdyt?
Candidate: you could use a constant instead of <UNK>
Reference: i would make sure this isnt going to throw an arrayindexoutofboundsexception
Candidate: can we use <UNK>
Reference: should create a new arraylist to wrap this.
Candidate: move this to touching the <UNK>
Reference: i would rather do this calculation in tested method as in case of cores.
Candidate: suggestion final <UNK> = <UNK>
Reference: having a class wide testingrpcservice would avoid this casting here.
Candidate: i'm not sure how about this works but i would be more readable:  java return <UNK> <UNK> <UNK> -> <UNK>
Reference: use 'l'
Candidate: long() long.valueof() instead of performance performance performance performance performance performance performance performance performance performance performance performance performance performance performance performance performance performance performance performance performance performance performance performance performance performance
Reference: should be gte ?
Candidate: can we use a constant instead of creating a object instead of is)
Reference: copy&paste-error? suggestion minlucenescore = engine.getsettings().getfloat(settings.keys.lucene_min_score_filter, 30);
Candidate: could we please exclude the <UNK>
Reference: if the element we are looking for is "<log>", this code returns the location of the 'l'. it must be the location of the '<', otherwise it requires an extra
Candidate: you could increment notfound
Reference: is it possible for mediafile.gettitle() to be null?
Candidate: please move this method to <UNK>
Reference: just checking you want these to be java asserts? production jdks are almost never run with asserts enabled
Candidate: i think we should be a <UNK> <UNK>
Reference: let's move this into an else {} to the if() clause in l.1001 to avoid clearing then putting up the notification again.
Candidate: if you could use <UNK>
Reference: defensive copy here instead?
Candidate: i nesting.
Reference: maybe we could follow up on some jmh benchmarks for this kind of stuff. given the amount of work that has happened already up to this point i'm wondering if
Candidate: minor nit, but you could use <UNK> instead of <UNK>
Reference: the new structure of winery uses restutils instead of utils. please follow that.
Candidate: is there a reason for element?
Reference: usually i do either  ioexception|runtimeexception or if doing throwable, use propagateiffatal
Candidate: you could use braces around }?
Reference: or properties. well. looks like there are a few of these.
Candidate: we should use a string instead of <UNK>
Reference: use log pls
Candidate: please use e instead of <UNK>
Reference: this might all be clearer if you call this eventclass? at the moment the line below  event.eventtypeforclass(eventtype)  is a bit confusing
Candidate: i think (filter.getrelationshipdirection() constructor?
Reference: nit: getlocalversion may not always be cheap. it would be good to cache the result instead of calling it twice.
Candidate: can we use <UNK>
Reference: why are you operating on blocks rather than comparing lazycompactpagesindex.getestimatedsize() with eagercompactpagesindex.getestimatedsize() ?
Candidate: i think we should synchronize on the middle of <UNK>
Reference: maybe the common stuff could be moved into a utility class or something that avoids repeated code.
Candidate: is there a reason for this method to be null?
Reference: minor nitpick: logger message is not equal to the method name :smile:
Candidate: you could use <UNK>
Reference: i suppose this is always true the first time because there are no connections initially?
Candidate: i liked these.
Reference: i'd prefer to return empty string rather than "null"
Candidate: you could use the map instead:  map<string, <UNK> <UNK> = new <UNK> { <UNK> = new <UNK> }
Reference: do we know instances when it won't be a textanalyticserrorexception?
Candidate: log.debug maybe?
Reference: this method consumes the entire monitor twice for each pass through the for loop, so won't report meaningful progress. consider fixing using submonitor.
Candidate: this is strange,
Reference: suggestion boolean notingraphatall = candidatesfordeletion.isempty();
Candidate: suggestion return <UNK>
Reference: add expected offset to exception message
Candidate: we should use only:  <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK>
Reference: [waves hand] this is not the validator you're looking for...
Candidate: is there a reason for element?
Reference: try / catch coingi missing
Candidate: you could use a constant instead of <UNK>
Reference: i think that we can remove setresult(ok) soon, since it's for compatibility with vraptor 2x.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: in the refactor patch i changed a logic reconstructing the original initialization method here, to avoid depending on jp data on input.
Candidate: i is a bit strange,
Reference: the .contains() should probably be in the synchronized block too
Candidate: you could use <UNK>
Reference: @weisebrazil all indentations should be 4 spaces, not 8.
Candidate: @weisebrazil this offset is be held
Reference: please use if statements with braces (that's why ci fails)
Candidate: this is not <UNK>
Reference: the fixing comes from method.getgenericreturntype instead of method.gettypeparameters ?
Candidate: if you could use a string comparison, instead of <UNK>
Reference: how are these changes related to jdk 8?
Candidate: you could use <UNK> instead of creating a object instead of arguments.
Reference: if this catch is only for that new uri(..) on l 495, it might clarify it some to just wrap that one line that is throwing the error, that way
Candidate: this exception is not thrown exception
Reference: ph -> pagehelper
Candidate: if you could use <UNK> <UNK>
Reference: unrelated feature. please add a new pr for this one.
Candidate: @vilchik-elena is there a reason for element?
Reference: user should be in constructor right ?
Candidate: this is not to be a <UNK>
Reference: in general, you want to avoid bytearray{input,output}stream classes. they are excessively synchronized. we have bytebuffer{input,output}stream in the aqute.lib.io package as replacements.
Candidate: unused
Reference: i think the flag should be true for it to be in prefix mode?
Candidate: this is not <UNK>
Reference: you may use string constant here, move to constant file and refer from there. eg:- driver_name = org.apache.ignite.ignitejdbcthindriver;
Candidate: typo: <UNK>
Reference: is passing 'null' for subject intended change?
Candidate: is there a reason to use the <UNK>
Reference: use strings.isnullorempty?
Candidate: i think the log.
Reference: as discussed verify substringbetween does the right thing for us
Candidate: this should be <UNK>
Reference: similar problem here too .. exception handling seems to be misplaced.
Candidate: i we need to create a <UNK> clause.
Reference: can we please agree on adding brackets even around single line conditionals ? this is according to the existing style and less error-prone (believe, i hit that when adding a
Candidate: maybe rename to <UNK>
Reference: delete the if, ispresent will work fine as gabe says below.
Candidate: you should call the if.
Reference: sorry to rehash this, but i have to say it at least once: this stuff is so hard to read.
Candidate: i think this is not <UNK>
Reference: for some reason (probably because it was a convenient way to override the optional attribute for reference for this tool) reordersam has a duplicate command line arg for reference. there
Candidate: <UNK>
Reference: there is no format specified for parsing. isn't it better to do so?
Candidate: use collectionutils instead of <UNK>
Reference: not so sure about this guard. if notifiers isn't empty shouldn't the destroy run even when not disabled? what if i do the bootstrap, disable the service and then get
Candidate: is there a reason why not required?
Reference: i don't see how this is going to work, readinbound is an object and b is a byte array, we want the method assertthat(byte[], byte[]) for correct comparison. i have
Candidate: @vilchik-elena is there a reason for element?
Reference: setting dateformat is redundant
Candidate: you can use stream() boolean.class)
Reference: move boolean.true.equals(ignorepolicy.get()) to a static method called isignorepolicy
Candidate: should we check that the resource mag <UNK> <UNK>
Reference: can we use batch evaluate of expression here?
Candidate: use <UNK> instead of <UNK>
Reference: can't you just set the style in the uibinder file?
Candidate: please remove.
Reference: actually the file name is "gitgit.index.v3.skipworktree"
Candidate: could you use <UNK>
Reference: the naming of this field might be confusing if one looks at the complex map importer and this class side-by-side (both maps are "extended" in a sense, but the additional
Candidate: this is be repelaced by <UNK>
Reference: what about make a new method in associativecommutativecollection which returns the union of all three collections? in this way, you have shorter code in visitors and transformers. besides, next time
Candidate: you could use use stringutils instead of <UNK> scope.
Reference: i don't understand why we need to wait here. could you explain?
Candidate: this is a nitpick, but it's a good idea.
Reference: don't you need to pre-emptively serialize this string so that the pl deserializes it back into the string that the user provided?
Candidate: minor nit but i think that this should be simplified to <UNK>
Reference: check formatting
Candidate: is there a reason to assert here?
Reference: can we assert anything?
Candidate: @ivange94
Reference: 4 spaces
Candidate: use <UNK> instead of <UNK>
Reference: we should also animate transitions.
Candidate: @manuelplazaspalacio this is is designed to be a <UNK> that the is not <UNK> to the the state of the <UNK>
Reference: i see test which check messages for containing no viable alternative, but do they also cover failedpredicateexception?
Candidate: is there is a to be empty?
Reference: the comma looks odd to me. i suggest either removing it or replacing it with a semi-colon.
Candidate: is there a reason for avro properties? i am not sure how about this is a
Reference: how about adding the message from the exception to the log message to provide more information?
Candidate: you should use a logger instead of a constant?
Reference: why not use [transactionstatus#canrollback()](<link_0> here?
Candidate: i think this should be <UNK>
Reference: i believe this method should be getworkermetricconf()
Candidate: this is a <UNK>
Reference: this is useless since clear() below resets position to zero?
Candidate: ah, this is is a <UNK> but i don't think that this will be a depending on the camelcase
Reference: nit pick, but collections.emptymap() would be better optimized here.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: what happens if next() is filtered out? does this attempt to retrieve the next flux emission or is mono.empty() returned?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: you need to get the previous state if it is changed.
Candidate: if this is is not transactional itemstack.
Reference: i am a bit concerned about the coding style here. azkaban uses a different coding style than linkedin. if we are moving to linkedin standard, let's change the entire codebase
Candidate: this should be <UNK>
Reference: shall we change this log to service removal failed. microservice class '" + service.getclass().getname() + "' doesn't contain a root path.
Candidate: this is right...
Reference: does this lock the table from inserts while the query is being processed?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: query better to put the extra keys in class constants
Candidate: you could move this to a separate method.
Reference: java string testedpage = urlbuilder.geturlforfandompage(article); adsfandomobject fandompage = new adsfandomobject(driver, testedpage); getjquery();  what do you think about creating one method in adsfandomtesttemplate and be more dry?
Candidate: nextvalueindex should not be a <UNK> <UNK>
Reference: this part won't work with the keys you registered selectors under though?
Candidate: if this is is be treated by <UNK>
Reference: if you have made equals final then you also need to make hashcode and compareto final
Candidate: is this optional?
Reference: all the following methods should also do size checks like readbyte does and throw eofexception. otherwise we will get indexoutofboundsexception instead.
Candidate: this could be simplified to java <UNK> <UNK> = <UNK> <UNK> <UNK> <UNK> = <UNK>
Reference: see general note on error handling and recovery.
Candidate: you could use <UNK>
Reference: won't this break if the system's standard charset isn't utf-8?
Candidate: log.debug
Reference: might need a junit test for the case where translate is requested with a url and no version, but the requested conceptmap is not versioned in the repository.
Candidate: you could use a constant here instead of <UNK>
Reference: worth including the sender address?
Candidate: this is not catching the exception
Reference: this sounds like an error, too.
Candidate: if uri.create we should use a string to a messages.properties file and then we could use the <UNK>
Reference: asynctask's tostring is a tad large. perhaps joining this list with a newline would make the log easier to read?
Candidate: you could use foreach whose <UNK>
Reference: one of these should be host
Candidate: please use <UNK>
Reference: what's going on here? this seems awfully complicated. is there a reason you didn't just use a stringbuilder and concatenate the ints 0..expectedresults-1?  java stringbuilder sb = new stringbuilder();
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why don't we have rate metrics
Candidate: shouldnt this be surrounded && <UNK> || <UNK> || <UNK> || <UNK> || <UNK> % <UNK> { ... }
Reference: souldn't that hashmap be configured once at object allocation instead of recreating it each time getmeta() is invoked ?
Candidate: nextvalueindex is not a tear down
Reference: this line can be pulled into setactionmessageparameters() method in the networkqoscommandbase class since it repeats in any of the networkqos commands.
Candidate: this is be repelaced by <UNK>
Reference: we reject the file because its name does not end with .xml, i do not think we should read it.
Candidate: outputstream outputstream = <UNK> outputstream = <UNK> outputstream outputstream = <UNK> outputstream outputstream = <UNK> outputstream outputstream = <UNK> outputstream outputstream = <UNK> outputstream
Reference: i think it's more readable if it doesn't fit on one line, move all parameters to the next one.
Candidate: could you repelaced by a userreportingsettingshelper call.
Reference: this is silly nitpicking, but, i just had issues reading this code, so, could we use a rcvrclass local variable? then we also avoid twice the .getsomclass(). not that it
Candidate: please move this to <UNK>
Reference: too many single letter vars. perhaps make t -> txn and v -> snapshotversion
Candidate: this seems like low designed to be a low for each call.
Reference: s/moved/requested move since we are expressly not checking if it worked.
Candidate: if this is is not efficient, invalid?
Reference: there's a typo in this error / log message "ctp" should be "tcp"
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: no, please log these. the activator has a static log() method on it to make it easy.
Candidate: consider using a custom method instead of repeating the other,
Reference: resolve() can return null but class<?> getreturntype(method method) is expected to return non null values. maybe we should use resolve(class<?> fallback) variant or assert the returned class is not null
Candidate: we could use a multimap here instead of <UNK>
Reference: this always returns a string, so why are you down-casting it to an object?
Candidate: this is a bit clearer, but we could use a string concatenation instead of '+'
Reference: no need to check the value of startupcontext.getinjectioncontainer() here before assigning it to this.injectioncontainer.
Candidate: is there a reason for this method could be be null?
Reference: the ids here should be a concat of appname + instanceid as their combination uniquely identifies.
Candidate: nit
Reference: same as above -- pending all queries infinitely might be hiding another issue in the cluster
Candidate: minor: no need to
Reference: returning java null here won't work - what you have to do is to send a channel state update undeftype.null. imho the best place to do the colormode check would
Candidate: you could use <UNK>
Reference: is it possible to keep return type of asc() as is (ie collation) ? while it doesn't add functionality it hides all methods from user during ide auto-complete (that was
Candidate: please use charsequence instead of <UNK>
Reference: as above, this seems wrong.
Candidate: this is not needed for the sake of <UNK>
Reference: this should be conflictexception
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: doesn't this risk overwriting files? e.g. if a project had resources config/foo and config2/foo. if possible the approach should be to copy the files with their directory structure intact.
Candidate: you could use <UNK>
Reference: the iterator contract is to throw nosuchelementexception if there is no next
Candidate: no need to call <UNK>
Reference: one large window might skew the avg even the process are invoked after it, so this logic will catch both contiguous long window or spikiness. please make sure it's our
Candidate: tiny detail detail detail detail detail detail detail detail detail
Reference: put the close() into a finally block so that an attempt is always made to close the session, even on commit failure. if closing the session fails, there's not really
Candidate: i we bail out the finally block
Reference: empty reporting rules are the default so this line is redundant.
Candidate: you could use <UNK>
Reference: we should increase errorcount, log a warning and return null instead of propagating the error so the query can still complete even if the cache is having problems.
Candidate: suggestion <UNK> = <UNK>
Reference: i don't understand, why do you think fqn should be fn?
Candidate: this mock to mock to mock this mock for the mock
Reference: can you change limit.intvalue() / 1000 to (int) (limit / 1000)
Candidate: this is be closed in a batch.
Reference: this is called etag elsewhere (see cosmosasyncitemresponse.java: public string getetag()). you have it as etag. we should be consistent on this.
Candidate: you could use a <UNK> here instead of creating a new <UNK>
Reference: you split images string into tag and image name multiple times in the code. to avoid duplication you can probably extract that logic in a new method.
Candidate: please use readasstring(...) instead of <UNK>
Reference: ismathematicalinteger and "pair +" commonality
Candidate: we could use <UNK>
Reference: should this be based on total pending size in bytes vs msgs?
Candidate: you can use this instead:  <UNK> %s", <UNK>
Reference: should be public.
Candidate: should be public.
Reference: collections.emptylist above and .emptymap here?
Candidate: this should be <UNK>
Reference: dejaria directamente el return asi: _return numtasksrunning == numtasks;_ (poner lo otro al final es redundante)
Candidate: you could move this loop to a separate method.
Reference: unneeded?
Candidate: you could use this instead:  if <UNK> { return false; } }));
Reference: if maxvalue is near long.max_value (i.e. 2^63-1) and minvalue is near long.min_value (i.e. -2^63), then maxvalue - minvalue is going to overflow
Candidate: nit:
Reference: this should have a meaningful error message (i.e. a message added to the relevant logger), and should include the exception stack trace (like what you have done below).
Candidate: this is not to bail at the log.
Reference: i think there is no reason to push publisher here, if we push connectionfactory via four lines above. else if (this.applicationeventpublisher != null) { would be enough.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: for readability/consistency, consider invoking searchablelistmodel -> forcerefresh() instead...
Candidate: suggestion if (filter.getrelationshipdirection() == direction.incoming) {
Reference: space after comma.
Candidate: i am not sure that this is correct. i think we should have a logging here instead of info.
Reference: please do not use system.out.println, log may better way
Candidate: suggestion <UNK> = <UNK>
Reference: conjunction (and disjunction) are commutative... should we implement that in the equals / hashcode ? (no, i'm just messing with you, don't loose any time on that :).
Candidate: you could use <UNK>
Reference: the whole purpose of fulllistadapter is to abstract the implementation details of querying the device list from the caller - so how about moving the changes that are done in
Candidate: this should be <UNK>
Reference: authenticationattribues --> authenticationattributes
Candidate: why is this again?
Reference: the following code can be used to create this nhintargetsystemtype from nhintargetcommunitiestype extracted from request. this would reduce 3 methods from this class. nhintargetsystemtype target = getmessagegeneratorutils().convertfirsttonhintargetsystemtype(targets);
Candidate: you could use <UNK>
Reference: can we just use !getisnew() instead ?
Candidate: please remove the image from image from image from image from image from image from image from image from image from image from image from image from image from the
Reference: move this line into the if statement. we don't need to execute it if groups is null or empty
Candidate: this is not <UNK>
Reference: minor nit: missing line carriage after @visiblefortesting
Candidate: nit: sleep @visiblefortesting instead of nesting.
Reference: why not let the setup() method itself throw an exception in case of failure, instead of returning false? that way it'll be able to provide much more detail regarding the
Candidate: suggestion <UNK> = <UNK>
Reference: looks to me like a possible or even likely issue. please add logging ob **warn** or **info** level. suggestion } else { logger.warn("skip copyobject reason: identical reference"); }
Candidate: minor nit, but we could use isempty() instead of minimize <UNK>
Reference: we should use categorized errors when possible: java if (!partitionstatistics.containskey(partition.getpartitionname()) { throw new prestoexception(hive_metastore_error, "statistics result does not contain entry for partition: " + partitionvalues); }
Candidate: <UNK>
Reference: @fanifieiev the same above.
Candidate: @fanifieiev the same above.
Reference: what's the goal of this assertion ? isn't it .isempty() ?
Candidate: this correctness is be used?
Reference: if this was the self-assignment, i think it's still there.
Candidate: you could use a convenience method
Reference: why this function write the headinfo information by read this.thisreadsequence ?
Candidate: i think that this should be a <UNK>
Reference: not sure this is necessary? the fieldtype should already take that into account. see org.hibernate.search.backend.lucene.types.dsl.impl.lucenestringindexfieldtypecontext#getfieldtype. in particular, if the field is not searchable, indexoptions should be forced to indexoptions.none. you
Candidate: you could use <UNK> instead of creating a object instead of creating a one?
Reference: should this throw an exception?
Candidate: i think this is not efficient, we could use <UNK>
Reference: not synchronized?
Candidate: this is tear costly.
Reference: empty partitions -> should we say empty topics ? just to clarify that some partitions from _different_ topics are empty?
Candidate: i think we should be a warn here instead of <UNK>
Reference: this doesn't seem right. i would have assumed this would be stream(), not streambypage().
Candidate: use readasstring(...) instead of <UNK>
Reference: same as above, this is deprecated and should no longer be used.
Candidate: should we use <UNK>
Reference: suggestion. move this nested try block into a separate method or catch the exception under the main try-catch block.
Candidate: is there a reason to log level failures here?
Reference: we look at enum_def and examine all children for comma and see if it has another trailing constant def. so we are manually doing our own looping here. wouldn't this
Candidate: this is not efficient, we could use <UNK>
Reference: <link_0>
Candidate: why not use <UNK>
Reference: style nit: no braces around single line blocks
Candidate: you could use a local var instead of <UNK>
Reference: verify result (e.g. it's not empty)
Candidate: you could use <UNK>
Reference: does not support an no? how about requires a instead?
Candidate: please use <UNK>
Reference: i'm not sure if return null in zs is that great. perhaps just return current state and log a message of some sort? at least log a message.
Candidate: is there a reason for element?
Reference: in the past two lines you can now use outputfbourn.
Candidate: i think this is a <UNK>
Reference: also log if it is enabled or disabled
Candidate: log (throwable probably?
Reference: we just want to remove the onesignal.getvibrate() call here. as a backwards compatibility for pre-o devices the onesignal backend will still send "vib" depending if the notification category has this
Candidate: why not use <UNK>
Reference: null-check
Candidate: if you could be simplified to <UNK>
Reference: i don't think this is necessary for string types like language -- only the primitive objects need the special bindnull workaround.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: also a mapping rather than grouping
Candidate: please use <UNK>
Reference: does the instance become unusable or why create the builder twice?
Candidate: i'm not sure that this affects this pr, but i'm not sure how about the sure that we are, they'd have been defined in <UNK>
Reference: why make this static? shouldn't this method operate on data within a message instance?
Candidate: could you add a string to <UNK>
Reference: static import?
Candidate: wait.forelementclickable() should be <UNK>
Reference: this device seems to be unused. can it be removed?
Candidate: this is not be annotated with <UNK>
Reference: perfect, that's just like i expected it how it should work.
Candidate: i think this should be a <UNK> <UNK>
Reference: nitpicking: better to have error message with human readable text there otherwise it throws illegalargumentexception without any explanation
Candidate: this is sketchy unconditionally, but i would be good idea to throw an exception if there is a checkargument for an error.
Reference: this is hard to understand, because it's a field and a default value at the same time. it's an interesting idea, but i don't think we use this anywhere else
Candidate: this should be a <UNK> <UNK>
Reference: i think you could return a byte[] here to have cellularinfo final
Candidate: you could use <UNK>
Reference: space after for ... e.g. for ( ... )
Candidate: use collectionutils instead of this(name, <UNK>
Reference: 1. we are providing core level support by protected. any reason ti change it to private? 2. create one more method with multimap than change it here.
Candidate: this is never be null
Reference: this.
Candidate: <UNK>
Reference: are this class and datagramsocket designed for inheritance ? if so, programs that derive from this class will not be able to override these methods (they're hidden). will that break
Candidate: use <UNK>
Reference: hi, we use "stopicon" instead of "cancelicon" for generic "cancel" button action. please change it here. otherwise it looks great and can be merged afterwards. thanks.
Candidate: could you use a try-with-resources here instead of <UNK>
Reference: maybe just .foreach() instead of stream().foreach()
Candidate: i'm not 100% sure that this is not sure that we should have to check that state is not null.
Reference: the log seems to be a copy & paste error.
Candidate: this "_" is required, near near <UNK> near near near near near near near near near near near near near near near near near near near near near near near
Reference: why this magic value?
Candidate: you could use <UNK>
Reference: i think there is no need to cast driver to js executor
Candidate: you could use a <UNK>
Reference: i don't think you need replaceall here just replace since replaceall is for regex.
Candidate: please use <UNK>
Reference: assertthat( query ).assertthat( query ) ?
Candidate: assertthat( query ).assertthat( query ) ?
Reference: seems like we should return userlist (would be empty) here? or l475 should also return null? might just need to be consistent
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i agree with @jeremiahjstacey here about not needing stringbuilder here. this in fact is a pretty common pattern throughout esapi and i'd prefer to not make this occurrence different than
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: maybe specify what users should replace true with as well?
Candidate: this is not <UNK>
Reference: should we trim this? suggestion this.dlqtopicname = connconfig.dlqtopicname().trim();
Candidate: you could use <UNK>
Reference: please introduce a variable to reduce casts.
Candidate: i think this should be be ternary.
Reference: is this just a formatting change? :) the pr is already big enough to add cosmetic changes into it :)
Candidate: use <UNK> instead of <UNK>
Reference: i prefer isempty() to size() == 0.
Candidate: we should use a <UNK> <UNK>
Reference: doesn't it make more sense to have this in the init() method, or maybe even in the ctor?
Candidate: please move this to to understood the previous patch.
Reference: it's wrong, see drop in other blocks
Candidate: this is a duplicate, we don't need to use <UNK>
Reference: so just use getiswipeafterdelete().setischangeable(!isvmattachedtopool());
Candidate: this is be repelaced by <UNK>
Reference: can we use meaningful variable name?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: when could the type be null in this case?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: no need to log anything in this case ?
Candidate: you could use a constant?
Reference: the fragment should obtain the host by calling fragmentutil.getcallback(). i think if the activity is ratained in a fragment instance, it'll cause a memory leak.
Candidate: if you could use <UNK> annotation, annotation, then the <UNK>
Reference: when globalminimumclock has value of greater than 0, parameter addedeval should be false. handling this case by throwing runtimeexception will make sense.
Candidate: assert.notnull()
Reference: use arrays.aslist(...) for short lists.
Candidate: use arrays.aslist(...) for short lists.
Reference: let's call this variable stars or starred. better avoid compound variable names: <link_0>
Candidate: if you should stop the container and stop container container exception?
Reference: same here. let's separate the two cases of not having amount and having illegal amount. also, log that the amount is ignored.
Candidate: why not use <UNK> instead of <UNK>
Reference: ah, thanks for pointing that out - i missed that. what is it that calls xaresource() method? something in the spring config during boot? we need to make sure that
Candidate: this is a <UNK>
Reference: this is a duplicate of the above line
Candidate: you could use a constant instead of '+'
Reference: move this logic into certificatemanagerserviceimpl class
Candidate: you could use a constant instead of <UNK>
Reference: intentional at error?
Candidate: personal personal personal personal personal personal personal personal personal personal personal personal personal personal personal personal personal personal personal personal personal personal personal think that the personal personal personal personal
Reference: move lines 66-73 inside rwinexpression since iastidexpression is a subclass of iastexpression.
Candidate: suggestion <UNK> = <UNK> <UNK> = <UNK>
Reference: strange name for the variable, what does it mean?
Candidate: nit: space after the
Reference: i know this isn't new, but might be worth investigating if there are faster hashes that are unique enough for this (not necessary in this pr, just thinking out loud)
Candidate: nit: we use isempty() instead of shard > 0
Reference: nice clean up!
Candidate: you could use <UNK>
Reference: remove useless assert
Candidate: this readasstring(...) instead.
Reference: can you get scheme from the location uri rather than caching the old scheme?
Candidate: no braces around nesting.
Reference: missing final
Candidate: maybe: <UNK>
Reference: it is done automatically, yes. all of us have developed java for more than a day ;) but: 1) imo this is exactly the kind of change that cause unnecessary
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this is likely to be called on interruption. what happens to the proc in this case? is it handled by jenkins, or we should do the cleanup ourselves?
Candidate: why not we need to stop events.
Reference: why set the value if null check next? check for null value of currentsessiondetails and if not null then only call currentsession.setsessiondetails and continue further.
Candidate: should we set the nextvalueindex not set?
Reference: i think checkstate(wiki != null) is more appropriate to force a proper usage.
Candidate: we could use a <UNK> here instead of <UNK>
Reference: sb.append('.')
Candidate: if you could use <UNK> <UNK>
Reference: the test might run slightly faster if, instead of reading the file twice, the test moved the originalresult up to line 37 as an initialization and used the originalresult.length for
Candidate: is there a reason for this class instead of creating a <UNK> constructor?
Reference: good to have null checks on these helper methods.
Candidate: this is be a <UNK>
Reference: this guy belongs in a finally clause
Candidate: this is not required?
Reference: no need for a second thread in this test. it would be simpler to verify the flow control properties of the monitor if you post a bunch of events to
Candidate: i think this matters, but i would propose to change this to quickly v. the <UNK>
Reference: looks like you don't need to pass in the instance here since there's no formatting characters in the string.
Candidate: use <UNK>
Reference: stop() should be in a finally block, or you could use testingutil.withcachemanager().
Candidate: we could use the error message here instead of <UNK>
Reference: isn't .boxed().maptodouble() equivalent to .map()?
Candidate: this is designed to narrowing narrowing to narrowing independent of these two lines to be replaced with "return true"
Reference: mind changing the type of this to map<string, object>?
Candidate: you could use this instead:  final string = <UNK> { return <UNK>
Reference: what does this change do?
Candidate: you could use a <UNK>
Reference: to align with the rest of the codebase, please leave the final keyword off of local variables.
Candidate: this is a bit strange decision.
Reference: shouldn't you intersect with the original envelope first? some unit tests for this class (and the feature equivalent) would not hurt.
Candidate: this is a <UNK>
Reference: use getvalueaslong()
Candidate: you should throw unsupportedoperationexception
Reference: here it is better to choose a dot notation for metrics because it easier to create aggregation rules on collector: hitcount -> hit.count hitrate -> hit.rate averageloadpenalty -> load.penalty.mean load.count,
Candidate: fyi, we could be a cache manager threads.
Reference: i believe that whether it's softirq or raised_running, in both cases you want to return softirq?
Candidate: if this is not set?
Reference: hmmm. so 1,.,2 will return a null value? i guess with primitive doubles we have, to...though we could use nans for that. maybe when we support 4.3....
Candidate: this could be simplified to <UNK>
Reference: was this accidentally included into this change?
Candidate: is there a reason to re-throw the exception?
Reference: does this need to be both or neither? sort of makes sense that they'd both be required fields, but it's not totally useless to have only one. e.g. if min
Candidate: please use <UNK>
Reference: probably should crash if bad format string
Candidate: should we use a logging instead of string level, instead of parquet level, instead of string output.
Reference: even if there is only 1 row in "for cyclus" i prefer using '{' and '}' for better reading.
Candidate: no need to use the object
Reference: looks like we don't have a timeout here, does it mean we will retry to verify forever if standby's apply phase is stuck? in this case, we need a user
Candidate: i am not sure that this is known is known to fetched in the middle of the middle of the middle of the middle of the middle of the middle
Reference: using a positive variable such as first is usually easier to understand than a negated one.
Candidate: suggestion <UNK> = <UNK>
Reference: my mistake, interruptedexception should be catched outside the while
Candidate: this is non-trivial
Reference: don't duplicate tokens, just re-call getrequiredtokens.
Candidate: this is not efficient, we could use <UNK>
Reference: i think you can return arrays.aslist(...) directly, no need to create wrap that in arraylist.
Candidate: this seems like bit bit bit bit more bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit
Reference: i vote for making it an error level message.
Candidate: this is a connected config, but i don't think we need to use a <UNK> request?
Reference: consider the following operation order: 1. init() and reset() is called at the same time. 2. in init(), the code reaches line 652, but not start yet. 3. at the
Candidate: use utf-8 instead of download %s
Reference: wouldn't it be more readable to use transactionsupport.executeinnewtransaction() instead of the code here which does the same?
Candidate: you can use the log.
Reference: i think it could be a bit more efficient if you do  if (!hasvalidlicense()) { //when no license, we only allow the system workflow return new immutablelist.builder<workflowscheme>().add(workflowfactory.findsystemworkflow()).build(); } final
Candidate: if you is null, throw an iae is null, so that this is not good to leave it.
Reference: could this and the previous line be combined? to reduce the nesting?
Candidate: i'm not sure how about this worked. but i guess that this is is not but i guess that the worked. is the <UNK>
Reference: matter of taste and style but i tend to prefer :  programstate = pop.state; if(!instruction.hasreturnvalue()) { programstate = programestate.stackvalue(returnsv); }  one less branch...
Candidate: not sure that this qualifier
Reference: i think this is an error: you should return an instance of exceptionloghandler, not of warningerrorhandler
Candidate: <UNK>
Reference: can be written as assertthat(loglist).containsexactly(logentry2, logentry1). does all 3 previous checks at once. :) i must admit i didn't use those more advanced assertions myself...
Candidate: i'm not sure that we want to have a ticket anymore,
Reference: here you should do a negative check for the same value "bar0" as the one you check after the deserialization.
Candidate: i think we should use a <UNK> <UNK>
Reference: is there a convention to use ++?
Candidate: is there a reason to assert here?
Reference: we still need to have an option to run with the old language format (as a subdomain)
Candidate: use <UNK>
Reference: org.eclipse.che.api.project.shared.constants#blank_id instead of hardcoded string
Candidate: i think this is not <UNK> (can be shown.
Reference: use install()
Candidate: i think that this is not efficient, we can use the <UNK> <UNK>
Reference: you can return on the same line or make it final
Candidate: this is a <UNK>
Reference: suggestion return mapper.orelseget(objectmapper::new).convertvalue(attributes, valueattributesinfo.class);
Candidate: rename to <UNK>
Reference: return stringutils.defaultstring(string);
Candidate: please use <UNK>
Reference: would it be useful to make this less generic? something like resource ingest has started for '{}'?
Candidate: is there a reason to use the constructor?
Reference: if camussweeper extends configured, you can get a configuration using getconf().
Candidate: move this braces around
Reference: please rename objectoutputstream to use camelcase naming.
Candidate: is this possible to call the stack trace instead of calling tostring() ?
Reference: perhaps we should filter on dev pool type here in case we ever use the consumer specific restriction again.
Candidate: this is not to be a <UNK>
Reference: this assert can never fail.
Candidate: use readasstring(...) instead of <UNK>
Reference: can we put the objects.requirenonnull(...) at the beginning of the method? this makes it easier to read.
Candidate: this is not to be a
Reference: not all listener
Candidate: all all all all all all all all all all all all all all all all all all all all all all all all all all all all all all
Reference: i guess that if there are no reviewers there is no need to set the receive-pack service.
Candidate: this simplifies this piece simplifies simplifies simplifies simplifies simplifies this simplifies simplifies simplifies simplifies simplifies simplifies simplifies simplifies simplifies simplifies this simplifies simplifies simplifies simplifies simplifies this block simplifies simplifies
Reference: the exception should have some error messages.
Candidate: throw an exception
Reference: is there some path.join() thing you can use instead? something more idiomatic.
Candidate: could be repelaced by a userreportingsettingshelper call.
Reference: keep specialised exceptions, i guess this would become throws nosuchalgorithmexception, unrecoverablekeyexception, keystoreexception, ioexception, certificateencodingexception, kubernetesauthexception
Candidate: use <UNK>
Reference: i am not sure why we need to have types here. if the then is a literal expression of type string (the value itself could be numerical), then we are
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: wouldn't this cause problems to actual consumers? if a user decides to build a listener that implements iclasslistener and provides implementation only for onafterclass() then they would be seeing exceptions
Candidate: suggestion throw new <UNK>
Reference: .query(query)
Candidate: is there a reason for element?
Reference: how about we use the isbetterorequal method from geneticalgorithm class?
Candidate: this should be a <UNK>
Reference: do we need to error out if beginvalidtime.isbefore(endvalidtime) not met?
Candidate: <UNK> is empty?
Reference: by default.
Candidate: <UNK> -> <UNK>
Reference: this looks generic can/should we move it to some utility class (and also write integration test for it)? happy to be deferred, so not in this pr.
Candidate: minor nit, but you could use stringutils instead of <UNK>
Reference: change to browser
Candidate: please replace this line with this(name, <UNK>
Reference: can simplify to one line, no? or if you're going for readability, you can eliminate the local variable and just do "return ..." everywhere.
Candidate: this could be be <UNK>
Reference: encodings ?|? name it methods
Candidate: use <UNK>
Reference: suggestion throw new illegalargumentexception("can not parse job id: " + jobid, e);
Candidate: this should be <UNK>
Reference: thanks, this is much clearer! i think we don't really want to crash if an app developer accidentally doesn't add extra_process_text... can you get rid of the assert and just
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: string.format or let's use stringbuilder to make it more readable ?
Candidate: please use a ',' instead of <UNK>
Reference: the epoch is usually 1970, rather than 1980 - any particular reason for the change? functionally equivalent, of course.
Candidate: typo: <UNK>
Reference: missing call to checknotnull here which gives an extra warning
Candidate: this is not to be 'final'
Reference: this comparison is wrong, shouldnt it be threadgroupcount > estimatedthreadgroupcount?
Candidate: this is not to mock expectations
Reference: code smell: clarify contract of repository regarding emptyness
Candidate: this should be a bit more readable.
Reference: better to use type than string , make the service less tightly coupled.
Candidate: this is not bind the events in the
Reference: are consecutive reloads necessary or will be one reload at the end sufficient?
Candidate: are you sure that this will be be sufficient?
Reference: it's probably better to do this at the top of the displaynewpage() function, to capture any other cases where this might be possible.
Candidate: i think we should be a top-level here instead of <UNK>
Reference: the same as above, bad performance
Candidate: please combine this "return <UNK>
Reference: it looks like the final two branches do the same thing. were they meant to assert different things?
Candidate: minor nitpicky, but you could use a constant instead of creating a tabs.
Reference: i first thought this would require a string resource but on second thought this case should never happen, right?
Candidate: this is not <UNK>
Reference: why do we send content change messages from here now? what's actually changed on the content..?
Candidate: this should be <UNK>
Reference: another reason to initialise when declaring the fields i guess, you don't have to repeat the initialisation code there.
Candidate: i pagelogging
Reference: return false
Candidate: this is designed to be a to log the
Reference: i know this is copied from thrift, but still seems unnecessary to wrap an rte with a new rte.
Candidate: we could use a <UNK> here instead of <UNK>
Reference: whats significance of 47? maybe make it constant?
Candidate: you could use a fail()
Reference: this seems like it would be problematic. i would have to wait a default of 5minutes for tablets to be migrated to a new server in a pool (because the
Candidate: you could use curly braces around
Reference: don't need to wait for the tx completion responses before removing the local info here either, although since removing the local info is expensive you could still send the command
Candidate: suggestion <UNK> <UNK>
Reference: this could be simplified to objects.equals && objects.equals to avoid nested if statements.
Candidate: you could use use <UNK> instead of objects.isnull
Reference: i think quick return helps to highlight the important code vs check code: java if (parameters == null) { return ""; } // ...
Candidate: nit: -> <UNK>
Reference: currently tal is working to remove storagetype checks from the storage pool level so getstoragepool().getstoragetype() won't be available. more than that local storage is limited to local data center so
Candidate: please use <UNK>
Reference: entry
Candidate: entry
Reference: revert?
Candidate: this is couchbase the node {}", <UNK> {}", <UNK> {}", <UNK> {}", <UNK> {}", <UNK> {}", {}", <UNK> {}", <UNK> {}", <UNK> {}", <UNK> {}", <UNK> {}", <UNK> {}", <UNK>
Reference: might as well guard this with an if statement as well
Candidate: please use <UNK>
Reference: why throw after some operations?
Candidate: i'm not sure how about eating the
Reference: why isemptyornullstring? should it not be just empty string?
Candidate: is there any reason why not required? required?
Reference: add java doc
Candidate: <UNK> -> <UNK>
Reference: fallthrough to readfromnbt in line 47. intended?
Candidate: this should be a <UNK>
Reference: default should be false
Candidate: please use <UNK> instead of <UNK>
Reference: do we need to keep  if (runtime != null) { runtime.shutdown(); }
Candidate: i pagelogging
Reference: <%s> ? no strong feelings, it would be consistent with the variables view
Candidate: i think this should be a checkstate
Reference: how can this be correct when the bounds above are 16 and 64?
Candidate: could you use a foreach here instead of creating a new input.
Reference: i would move this check to inmemory() in the builder instead and throw an exception there instead.
Candidate: is this worth removing this way?
Reference: you can probably call only once this method. you do not need to do it in every iteration.
Candidate: this is not be a
Reference: could you move this operation into notebookservice ?
Candidate: this should be <UNK>
Reference: necessary?
Candidate: how about using <UNK>
Reference: should get system bundle by location using the org.osgi.framework.constants.system_bundle_location constant. this is to guarantee you always get non-null. equinox regions could hide bundle id 0 from you.
Candidate: nope, this is not
Reference: same here, as droptable: return new metadatamutationresult(mutationcode.table_already_exists, 0, null);
Candidate: you could use <UNK> multimap instead of optional?
Reference: is there a way to have this check in a top-level place and avoid having this once per listener method ? like at instantiation for example, and we wouldn't even
Candidate: i explains why explains why explains why explains why explains why explains why explains why explains why explains why explains why explains why explains why not a bit confused about
Reference: fire might suggest something is wrong and confuse people on success
Candidate: we could use a warn instead of a warn level?
Reference: same here, missing return statement
Candidate: i think this should be specified in the
Reference: what do you think of doing this instead?  java if(this.enduser.hasproperties() || this.enduser.getexternalid() || this.enduser.getphonenumber()) { sendupdateenduserrequest(); }  there's no validation in between so the presence should be enough
Candidate: if you could use <UNK> <UNK>
Reference: not sure if teammatesexception should be used here as it seems to denote some sort of logical error in the system, rather than failure with datastore or gae.
Candidate: please use {}
Reference: @yesamer i see two issues there 1) that getpropertiestohide is meant to need the selected column, so it must throw an exception if selectedcolumn is null (because it means there
Candidate: alias needs to be used?
Reference: this assumes that the json helper parses the values as strings. let's play it safe and use tostring() instead of a cast?
Candidate: you could use <UNK>
Reference: computeifabsent() returns the proper instance of atomiclong, so you can just call incrementandget() directly on that instance like below. this is better because we can avoid unnecessary get(). java totalsuccessfultaskcount.computeifabsent(task.getdatasource(),
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: should also support .less and probably some other formats
Candidate: please use <UNK>
Reference: long i should be long i. please inline start and numcols here.
Candidate: you could use a constant instead of <UNK>
Reference: i do not know the whole context, however shouldn't use a more efficient structure here, such as set. the contains could be log (n) instead of o (n)
Candidate: you could use a string instead of <UNK>
Reference: possible npe, since [replace](<link_0>,%20com.fasterxml.jackson.databind.jsonnode)) can return null
Candidate: should we use <UNK>
Reference: belonging -> "which belong"
Candidate: belonging -> "which belong"
Reference: never ever put conditional blocks into filterby methods. handle all these in the actual request implementation instead. not sure if these are actually needed. this way we cannot filter reference
Candidate: i pagelogging
Reference: this reduces usability for console and other environments where the clickable text is not available.
Candidate: you could use foreach loop here (updating <UNK>
Reference: we expect our schemas to be of type record. this is a good test case to have though, should check that this throws an exception.
Candidate: you could use <UNK>
Reference: consider using the methods with a default value parameter from helpers to avoid repeating the if-contains-key-else-return-default code.
Candidate: minor nit: could be simplified to a constant, instead of <UNK>
Reference: why moved here if you're not injecting?
Candidate: nit: you finals
Reference: nit: add braces (preferred for all blocks)
Candidate: this would be to closeconnection to this to closeconnection
Reference: i think the "force" variable should be passed to the vdsserver method as it is, instead of converting to string.
Candidate: i think this should be thrown by <UNK>
Reference: should this return type be changed to avoid the list cast?
Candidate: i doubt if this is not null, so that this will be npe.
Reference: can you use the directlyon() version that returns an object instead, slightly better performance but also type safe?
Candidate: i think that this is not <UNK>
Reference: use it directly there. (via variable)
Candidate: we should log a warning here instead of <UNK>
Reference: assert two address objects
Candidate: is there a reason for this logic?
Reference: eclipse pde put an error marker here because the plug-in is configured to use jre 1.7. changing to 1.8 makes the marker go away.
Candidate: is there a reason why not guid ?
Reference: do you just want to getfirst here?
Candidate: please replace with:  java <UNK> description = ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ...
Reference: this should follow the normal exception handling path and let the caller handle the printing of the exception.
Candidate: log.debug
Reference: this should only be set if the configuration contains values. otherwise the header should not be set.
Candidate: i pagelogging
Reference: we try to avoid usage of lambda, sorry ;-)
Candidate: @manuelplazaspalacio is finishing <UNK>
Reference: would it make sense to have those booleans hidden in mongoquerymethod so that we could just call method.iscustomquotedquery() or method.iscustomquotedfields?
Candidate: you could use <UNK> union here instead of creating a dynamic <UNK> dynamic dynamic dynamic dynamic dynamic dynamic dynamic dynamic request.
Reference: we should only create the inner filter once and re-use the same one. accept is called for every file, so this will cause an unnecessary slowdown just to recreate the
Candidate: please use <UNK>
Reference: timeo should be managed...
Candidate: you could use <UNK>
Reference: { } blocks please.
Candidate: if you could use <UNK> <UNK>
Reference: for consistency, let's try to move everything to strings.isnullorempty, which may also be faster, since it does not use .equals.
Candidate: this is not null
Reference: instead of creating a method setdataservicemanager, you can use telephonytest's replaceinstance().
Candidate: you could rename this to <UNK>
Reference: do we need some sanity check to avoid newly added acls conflict with existing ones?
Candidate: is there any reason reason for this?
Reference: why are you sending the not op message? they are not op already, so this should not need to be happening.
Candidate: could you move this check before the
Reference: replace (inline) previewtabviewmodel by viewmodel ?
Candidate: if you could use <UNK> <UNK>
Reference: same here: includedetail ? weekactivity.gettotalactivitdurationminutes() : optional.empty()
Candidate: this is be stream()
Reference: space before ?
Candidate: i "_" "_" "_" is not "_"
Reference: should this refer to a constant defined in family?
Candidate: is there a reason for this?
Reference: missing checkcallable(). we also should have a variant that takes collection too.
Candidate: @orhan89 this is missed. but i guess we could be a bottleneck. bottleneck. is the bottleneck. is a bottleneck. bottleneck. bottleneck. is a bottleneck. bottleneck. is a bottleneck. bottleneck. is
Reference: could you please assign the url to a local variable before opening the connection? this helps while debugging problems.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: although it's short and neat, changing the value of a variable in the same statment as comparing it can easily get confusing. i would recommend using a for loop (e.g.
Candidate: you could use a constant for <UNK>
Reference: remove
Candidate: no need to pull this into a property?
Reference: missing braces
Candidate: why not -1l
Reference: formatting issues. please use appropriate spaces between string literals.
Candidate: log.debug
Reference: it would be clearer if "5" was replaced with epdqstatusmapper.epdq_authorised
Candidate: <UNK> is designed for correctness
Reference: nit: blank line before method
Candidate: this should be referring to the log.
Reference: this variable name and its type confuses me
Candidate: could you use a classic ethernet memory.
Reference: this can go away now...
Candidate: @gunnarmorling you can use only: <UNK> <UNK> <UNK>
Reference: consider adding an additional layer of abstraction for this block. this has very similar lines as the other two methods.
Candidate: this two lines labels, 1. 2. 2. <UNK> 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2.
Reference: consider moving this logic to the backend entity, you can do it simply by defining a default values for the username/port variable in the entity, the grate benefit of this
Candidate: this is is designed to be a <UNK> <UNK> <UNK>
Reference: as mentioned below, the option should be already resolved here to the path (if any) for calling buildarchive
Candidate: you could move this to the property?
Reference: the name and location of the properties file is no longer configurable. if that is the intention then just hard code it directly and don't do any getproperty calls or
Candidate: this is not efficient, we should have to to the <UNK>
Reference: please consider adding an overridden version of the script(string, int, logger) constructor that accepts duration to encapsulate this type conversion.
Candidate: consider adding an overridden version of an script(string, int, logger) constructor that accepts duration duration to be duration
Reference: i'm confused about what is being put in this table. whatever object this is needs to be serializable right? does this work properly?
Candidate: this should be <UNK>
Reference: maybe the boss level should be the 2nd level so maiko can test it more easily. < review
Candidate: this complains about this nervous that this is is not <UNK>
Reference: our old code didn't throw i think, rather returned null
Candidate: you could move this to a separate method.
Reference: i'm worried this will get noisy in production. looks like a debugging print out?
Candidate: debug message
Reference: argument name
Candidate: use <UNK>
Reference: i don't believe we use this now, but to be future proof, should we do the same thing and clear caches for which the ancestor is the memory context?
Candidate: this should be <UNK>
Reference: do we even need this section in here anymore?
Candidate: i think this should be <UNK> to the the view?
Reference: system.out.println(".....recording id") . >>>> delete recoring id part, not needed for list
Candidate: this error message should be be null"
Reference: remove, and see below
Candidate: you could use <UNK>
Reference: should we return an error status with the exception here?
Candidate: <UNK> is designed to be printed here
Reference: honestly i would rather recommend making a seperate piglinbarterdrop interface for this instead. (you can also just make it extend randommobdrop for simplicity). because this is a bit un-intuitive.
Candidate: should be be <UNK>
Reference: this is not a correct replacement, the implementation of the stringutils.isempty is: java null == s || s.trim().length() == 0;  this is why i have been asking contributors to
Candidate: appending to a string concatenation
Reference: use proxyfactory.getcontextid() instead of contextid...
Candidate: this should be webfaultexception
Reference: consider consolidating this and the block in l:131-138  if (batchoperation.size() >= max_write_batch_size || !iterator.hasnext()) { table.execute(batchoperation) }  this will get rid off the special redundant code to process
Candidate: is there a reason :disappointed:
Reference: when could the cause ever not be null?
Candidate: i guess we should be <UNK> to <UNK>
Reference: the style guide [requires](<link_0> a space between if and (. might as well fix it while changing this line.
Candidate: nit: use <UNK>
Reference: debug statement?
Candidate: please use <UNK>
Reference: should this be an error? if a user provides the wrong data, are we going to log it everytime? for me it is an expected situation, not an error... at
Candidate: you could use a guard logic.
Reference: could we have a utility method in discussionthread that returns the authorattributiontype based on this logic? also, these lines is a quite long, maybe they should be split.
Candidate: you could use <UNK> annotation, instead of <UNK>
Reference: maybe we should do some validation here, for example throw an exception if we are missing both imageid and imageurl
Candidate: you could use a multimap here instead of == null
Reference: i think geoms should always be defined, and always have length 2 (hence my suggestion to use a p2 type above). if in some branch the geometry split would not
Candidate: fyi, you could use a local variable instead of <UNK> clear() reasons.
Reference: this should be optional.of()
Candidate: nit: no need to use the constructor?
Reference: what happens if it's null? should we log an error or something?
Candidate: the error message should be be <UNK>
Reference: there is no need to explicitly have a runnable here or in the other uses:  txnrun( g, ()->asserttrue(g.contains(triple("s3 p3 o3"))) );  makes the tests shorter and clearer.
Candidate: you could use foreach here instead of creating a local variable?
Reference: i suggest using totraceid() consistently everywhere, not mixing get- and to-
Candidate: i writevalueasbytes annotation, annotation, annotation,
Reference: i think these two cases are correct, but i kind of like the idea of all paths of this method ending up calling savedeviceid just so it's easy to verify
Candidate: you should use a string instead of <UNK>
Reference: i don't think this needs to be a complete implementation, just return the xid[] with xid or null depending on whether its still available for recovery
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why eliminate count-- in the if branch
Candidate: i pagelogging
Reference: this will fail in npe if editorinput is not an instanceof... do not leave the "else" unwritten: } else { throw new illegalargumentexception("could not save comparison model"); } or "return
Candidate: this image is image is image image image image image image image image image image image image image image image image image image image image image image image image image
Reference: inline return statement here
Candidate: i think this should be a firing <UNK> to the discoveryresult future. therefore, it feels like a bit strange to me.
Reference: there's a much simpler solution here:  java mhandler = new handler(looper.getmainlooper()); synchronized void highlightview(...) { mhandle.removecallbacks(mhighlightonuithreadrunnable); mhandle.postdelayed(mhighlight..., 50 /* millis */); }
Candidate: you could use <UNK> here instead of <UNK>
Reference: great, thanks !
Candidate: i think this should be <UNK>
Reference: inline
Candidate: if this is right...
Reference: here it would be nice to use a static import, just for consistency
Candidate: please use <UNK>
Reference: you need to assert something here? the ideal thing would be to test that whatever you write to the buffer is also placed on the binary_queue. as such, i'd place
Candidate: you could use <UNK>
Reference: please add a java objects.requirenonnull(computation, "computation is null");
Candidate: please use <UNK>
Reference: stepping through the test, it appears this header is being set to "ht/tp/:///e/". don't think that's quite what we want :) i believe you need to make a pid out
Candidate: if this is is not <UNK>
Reference: else { is redundant
Candidate: please use <UNK> networkname
Reference: can the payload value be null? in that case, we'll get an npe when executing tostring
Candidate: this is be a <UNK>
Reference: use map.of()
Candidate: you could use <UNK>
Reference: the tricky business here is that repositories are also commanddispatchers and eventdispatchers. let's make it impossible to use [add | remove | has ]...dispatcher(...) and  api with the ...repository-typed
Candidate: we could use <UNK>
Reference: can the exception type be made more specific?
Candidate: this is not <UNK>
Reference: redundant semicolon
Candidate: remove the
Reference: you can skip encoded_tag_keys
Candidate: this stream() is be stream()
Reference: suggestion this.connectionfactorymap.foreach((ldap, connectionfactory) -> connectionfactory.close(); );
Candidate: why this args?
Reference: nit: i like to assert the list size first and retrieve items from it second, so that if it's empty the assertion fails rather than the test throwing an indexoutofboundsexception.
Candidate: @ivange94
Reference: since classes are objects, and methods perform something on those objects, this doesn't really make sense. here, pantsgetalltargets is a 'verb' implying a method, not an object. i'm not sure
Candidate: we should use <UNK> to <UNK>
Reference: we can take communityid out of this uniqueid computation, and with it, the line above that sets communityid = null. the db path accounts for userid, orgid, communityid, and all
Candidate: if you could use braces
Reference: i'm not convinced this should be the default, and i'm not sure how we should be configuring it.
Candidate: this is right...
Reference: you should throw the exception at the very end - outside of your try catch.
Candidate: how about making this avro
Reference: use new defaultshell("confirm runtime delete")
Candidate: could you rename this to <UNK>
Reference: nit: what is the benefit of having an explicit variable instead of just inlining the value in line 27 below?
Candidate: this hides this be cached,
Reference: trailing space at end of the template string.
Candidate: why we piece of "we "we were events to a events events events events events events events events events events events events events events events events events events events events
Reference: might be more obvious while reading the code if it was: suggestion return executeledgeronlystrategy();
Candidate: you could use stream() here
Reference: probably more an unboost enchantement. the ai uses the outcome for some target decisions. boost is positive and means its cast on own creatures. unboost the opposite.
Candidate: how about this sleep blanks to inform the end up with further down further down further down further down further down further down further down further down further down further
Reference: hi! thanks a lot for your contribution! it seems like the java 8 map implementation changed the elements order in the entryset().iterator (used in the defaultdefinedmapmetadatamodel constructor), that's why this
Candidate: @vilchik-elena you could use <UNK>
Reference: cant we make profileqname, targethostsqname constant fields.. there are several other places we can do the same.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: the only place that uses this function is org.ovirt.engine.ui.webadmin.plugin.jsni.jsfunctionresulthelper.invokeandgetresultasboolean(jsfunction, jsarray<?>, errorhandler, boolean) by tracking back the call stack to updateactionbuttoncommand, it seems that if null is returned from getresultasboolean, you
Candidate: use <UNK> instead of <UNK>
Reference: replace with this(true, true, true);
Candidate: this is a <UNK>
Reference: if something shouldn't be there at all, it's not the debug level. it has to be the error level.
Candidate: membership is there is no need to check that content wasn't before.
Reference: why isn't the implementation is in base class?
Candidate: is there a reason to print the files at the end of the file?
Reference: the finally should wrap the entire method ("always unload before returning") otherwise, if everything's fine, this will: - load the resource - go to finally => unload the resource set
Candidate: you could use <UNK> instead of paths?
Reference: debug artefact?
Candidate: suggestion throw new <UNK>
Reference: you can do mfs = mcloser.register(inputpath.getfilesystem(conf)) (applies to mreader too)
Candidate: use utf-8 instead of download <UNK>
Reference: for these, is there a method system.assert(condition, message, exceptiontype) that you can use rather than constructing a new exception within an if/else?
Candidate: i'm not sure that this was added to the <UNK>
Reference: some finals here and there.
Candidate: you could use <UNK>
Reference: the injectionhelper may be a bit too heavy for this. you can just grab the config (only injected field) from the root context instead.
Candidate: is there a reason for this method to be called in the <UNK>
Reference: use 'l'
Candidate: please use <UNK>
Reference: why not implementing hashcode at abstract level since there is nothing specific here.
Candidate: you could use guava hierarchy instead of objects.isnull
Reference: do we need to maintaining type information upon return from this method? currently, once this method returns we will lose the concrete type and the caller will need to check
Candidate: i don't multimap multimap multimap need to synchronize on the discoveryresult future.
Reference: why can't you use the logging infrastructure and set the log level accordingly? include that in log4j2.xml:  <logger name="org.jabref.logic.importer.fetcher" level="debug"> <appenderref ref="console"/> </logger>
Candidate: please update to logging.
Reference: as you need to use the check in every case, why not using one assignment all the time instead of assign it twice sometimes: java string resourcename; if (name.startswith("/")) {
Candidate: please use finishing <UNK>
Reference: total can only be 0 once. is this what was intended?
Candidate: this is designed to be a scale for the size maybe?
Reference: this isnt needed as the delegated method you have added messagechanged() to already, same for a number of methods.
Candidate: if you could use <UNK>
Reference: metadata_view_icon?
Candidate: this is a <UNK>
Reference: i know i lgtm'ed this, but it looking at its usage makes me second guess that decision. how would you feel about amending it to: f.qualifier().exactfamilymatch("family").startclosed(...).endopen(...) or something else, range(family)
Candidate: ![major](<link_1> replace with <UNK> [![rule](<link_2>](<link_0>
Reference: if you make a change here make it:  if (logger.isdebugenabled()) { logger.debug(.....); }
Candidate: use <UNK>
Reference: is there any reason why we can accept only uistringres and not uistringtext? have we considered using muihelpers.gettextofuistring(this, messageholder.getmessage()). ?
Candidate: i think this is not incremented by <UNK>
Reference: style nit: missing braces
Candidate: '+'
Reference: are you sure this will never npe?
Candidate: i think this should be done at the end of the method.
Reference: why do we have this empty method? don't you think user should be informed about the error, in some way?
Candidate: is there a reason for this method to be called in the <UNK>
Reference: nit: space missing
Candidate: suggestion <UNK> = new <UNK>
Reference: visibility missing. synchronized comes before static
Candidate: this is not needed
Reference: geturl method looks nicer if parameter consist only from one variable e.g. geturl(urlscontent.filepage + filename);
Candidate: please use <UNK>
Reference: this is the ec policy patch again. i don't see why abfs needs it at all.
Candidate: use readasstring(...) instead of <UNK>
Reference: can we merge initialize() step into the constructor itself ?
Candidate: is there a reason for this method is not <UNK>
Reference: i think we should return here?
Candidate: i think this should be a <UNK> <UNK>
Reference: style-nit: space before {
Candidate: no need to remove the
Reference: should be true if not an exec. inter. and super.remove() was successful
Candidate: you could move this to <UNK>
Reference: te1.getpos().equals(te2.getpos())
Candidate: is there a reason for this logic?
Reference: i'm confused why this isn't (here and below):  getcolumn(destcolumn, destrow).replaceint(value, destrow % tuplebatch.batch_size);
Candidate: <UNK>
Reference: @ok2c bot sure we want to suppress io errors in non-interactive mode
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this test should be testing oldvalue , this also means that condition is not covered by tests (field is never null here). however i would suggest to replace whole thing
Candidate: unnecessary. unnecessary. unnecessary. unnecessary. unnecessary. unnecessary. unnecessary. unnecessary. unnecessary. unnecessary. unnecessary. unnecessary. unnecessary. unnecessary. unnecessary. unnecessary. unnecessary. unnecessary. unnecessary. unnecessary. unnecessary. unnecessary. unnecessary. unnecessary. unnecessary. unnecessary. unnecessary. unnecessary. unnecessary. unnecessary.
Reference: initeditmessageaction logic belongs here.
Candidate: you could use <UNK>
Reference: can we make 1 smbconnection that takes a processconnection?
Candidate: suggestion <UNK> -> <UNK>
Reference: since this is an infinite loop i think at least a warn if not an error is justified here.
Candidate: we could use the <UNK> events.
Reference: if writesegmentfile in segmentutils was made public, this code could be reduced to a one-liner (as in the methods calling the public readsegmentfile method above).
Candidate: this is be used?
Reference: this should say "offsetdatetime".
Candidate: use <UNK>
Reference: are there not more language fields set than this? there is a main audio language element, no?
Candidate: you could use .get() .get() .get() .get() .get() <UNK>
Reference: no idea... this is not the common pattern in papyrus
Candidate: please add a log message to the log.
Reference: this changes the default behaviour and would lead to different results when a consumer updates mp3agic. we could do that in the future but should keep the decision to prefer
Candidate: if you could use <UNK> <UNK>
Reference: please compare the current and previous for the following:  flatrow.cell previous; for(flatrow.cell c : cells.values) { if(previous == null || !c.getlables().isempty() || !keysmatch(c, previous)){ combined.add(c); } }
Candidate: nit: we could use a <UNK> <UNK>
Reference: all of these builder args (like, last 16 lines) should be handled in superclass constructor already... was there a reason for this?
Candidate: minor: this is not <UNK>
Reference: it's strange that we use the collection interface here which doesn't reveal it is ordered but here we rely on the ordering. i think we should better use the list
Candidate: this is designed to be initialized in the <UNK>
Reference: there is actually a testparser or so in the project, which is meant to have the best possible configuration for tests.
Candidate: please add a log message
Reference: what is the purpose of this removal?
Candidate: we should use a page.
Reference: i tried this on mac os x 10.6.8 with language set to english but german date format. it seems the german date format set in mac system preferences isn't respected
Candidate: this should be <UNK>
Reference: i would cast only once to classsymbol.
Candidate: @vilchik-elena you could use <UNK>
Reference: config is already initialized in basetestcase.java.
Candidate: this is not be risky.
Reference: we are just logging here right. why not log this in else part and remove the return.
Candidate: suggestion if <UNK> != null && <UNK> && <UNK> && <UNK>
Reference: you probably meant private closeables() right? there is no need to instantiate this class. tbh, i think we could even get rid of this constructor, the class has default access
Candidate: this should be <UNK>
Reference: current database is automatically created and dropped. you don't need to do explicitly.
Candidate: you could use <UNK>
Reference: instead of using whitebox, can you make a test constructor which accepts a planner? reflection makes it harder to find usages and do refactoring.
Candidate: you could move this to <UNK>
Reference: the order here is wrong. we have to accept the query before we build the entity projection. the entity projection includes parsing code that can throw an exception/error. those queries
Candidate: same as <UNK>
Reference: could we please change this a bit? stopping the timer is not nearly as important as actually closing the resource, and if stopping the timer throws any kind of exception
Candidate: i think that this is be called on the model.
Reference: minor typo in error message; should be "occurred" instead of "ocurred"
Candidate: we should download the exception here instead of <UNK>
Reference: define this as static constant: java.util.concurrent.timeunit.milliseconds.tonanos(1)/2
Candidate: suggestion <UNK> = <UNK>
Reference: exchangepoint
Candidate: this >= <UNK>
Reference: ditto input1
Candidate: you could use a constant here instead of <UNK>
Reference: if there is several methods in the hierarchy, this call will raise too many issue.
Candidate: if this is overwrites connection,
Reference: this should not be removed, but rather displayed as redacted:  .add("password", "[credentials redacted]")
Candidate: could you please use <UNK>
Reference: braces?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why not catch nodesourcenamealreadyexistexception instead of checking type ?
Candidate: you could use commons
Reference: should this throwable be logged as warning?
Candidate: i we expecting to plumb propagated to the
Reference: this whole message construction can be simplified since we have only one stage here always now, now reason to even have names variable, also now we always executing stage and
Candidate: minor nit: space between ( <UNK> ) ) ) ) ) )
Reference: this can be static.
Candidate: this is dangerous, if the is not return true"
Reference: please, add this line back as it was before (to reduce diff).
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: do you intentionally use a topicpartitionreplica which is not provided in the response here? i guess that it is to ensure that its future is not completed, isn't it?
Candidate: you could use <UNK> <UNK>
Reference: shouldn't this condition be just "if (returnvalue)" without the negation? with the negation if something failed prior to this code (for example if the name already exists) then the value
Candidate: please replace this with <UNK> with <UNK>
Reference: nit: please extract the message to a static string
Candidate: if getstate() != null && <UNK>
Reference: nit: should we log the effective rate here?
Candidate: i think we can move this to <UNK>
Reference: should this defensively copy, or instead just offer an add and remove interface?
Candidate: could we use <UNK>
Reference: typo: "pipedlined"
Candidate: we should use stream() here
Reference: creationdate, sample fetch, and permissions should be handled in service
Candidate: is there any reason why not exceptions?
Reference: null check.
Candidate: ditto about permission for instructor permission permission
Reference: i'd also have a capatabilities test for completeness (checking the feature type is gone, but the others are still there)
Candidate: is there a reason to use the builder instead of stringbuilder?
Reference: move this assignment and check as first in the method to not change behaviour.
Candidate: nit: use <UNK>
Reference: isempty
Candidate: you should use a secret annotation, instead of paths?
Reference: why are you changing this? if the object is null, then of course there would be no fields to validate so i would expect no filed errors
Candidate: please add a log message
Reference: error messages need to be externalinzed (anything other than debug, really)
Candidate: you could replace this with <UNK> with <UNK>
Reference: maybe use contains() instead.
Candidate: is there a reason for this test is not assert that test is not assert that the test is not connected?
Reference: would prefer to have it joined here. there's no need to leak the info about how recent changes formats its argument all over the code.
Candidate: is there a reason for element?
Reference: use try with resource ?
Candidate: log.debug
Reference: no need to have this check as it is already done in the enclosing if condition.
Candidate: suggestion <UNK> <UNK>
Reference: looks like you can use subquery(lookup_lookyloo) here instead?
Candidate: you could use <UNK>
Reference: do it
Candidate: you could use <UNK>
Reference: string.equals?
Candidate: you should throw an exception exception instead of printing the exception
Reference: no need for parentheses
Candidate: we could use computeifabsent clear()
Reference: why not just always call the update and have the update either apply the change if it is different or ignore it
Candidate: if you could use <UNK> <UNK>
Reference: again seems weird
Candidate: i guess we should download <UNK> maybe?
Reference: got out of the dashed line
Candidate: you could use <UNK>
Reference: rename 'selectionchangedlistener'
Candidate: rename to
Reference: if status is ok then ombucketcreateresponse must be non-null right?
Candidate: if you could use the <UNK> <UNK>
Reference: but we have already clicked the button in the command before, haven't it?
Candidate: you could move this ctor to a separate method.
Reference: not needed?
Candidate: i think narrowing this method to <UNK>
Reference: @shivtej1505 what about extracting the lines above to a separate method ? you are doing same thing twice so i think it would be better plus the method name like
Candidate: if you could check that <UNK> is not null
Reference: maybe microseconds instead of nanoseconds are better here. i don't we need nanosecond precision for wait time, and it'll be consistent with the procedure execution time statistics.
Candidate: this is termination is migrated to the termination but i am not sure that we want to termination
Reference: either just set or pass the return value to the next line.
Candidate: is there a reason why not we log.d here?
Reference: best practice is for the first letter to be lower-case, so it should be idpsectoken. (this also applies to the other 2 similar usages below in this file)
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: you must draw shadow after last item too
Candidate: please use only: <UNK> <UNK> <UNK>
Reference: note that since this is waiting in node but not sh it only exercises part of <link_0> (when <link_0>/commits/58b127fa34cd10bfc76659b86292832965fe7c95 was added).
Candidate: <UNK>
Reference: please extract a result variable.
Candidate: please use <UNK>
Reference: here too, ditch the timing information, no one will use it. at some point i'll finish metrics and it can go there
Candidate: this is designed to use a constant instead of creating an object object object object object object object object object object object object object object object object object object object
Reference: this is much easier to understand! i still think the tests we have for this should be more comprehensive in terms of properly checking the properties on refunds, that refunds
Candidate: i'm assuming that random volume locked were playing (the id is locked
Reference: required?
Candidate: why you finals
Reference: unknown is not exactly accurate because some other types (e.g. instructor_course_join, new_instructor_account) are known but we just don't cater for them, maybe not now, maybe never. email type ... is
Candidate: is this a runtimeexception here?
Reference: please add an assertion message to the asserequals() call.
Candidate: use readasstring(...) instead of <UNK>
Reference: is there a reason why we need the color picker for this test? why was this changed from .setcolorresource(r.color.pocketpaint_color_picker_transparent) ?
Candidate: you could use <UNK>
Reference: extra blank line
Candidate: is there a reason for element?
Reference: redundant modifier. see travis report and seems for me the whole class can be private.
Candidate: use <UNK>
Reference: maybe better log message would be: string.format("resource %s is not found on the classspath so the property %s is not replaced.", classpathresource, key)
Candidate: unused
Reference: i would prefer to create the defaultasprovider without using reflection
Candidate: this "_" is be a bit more than personal preference but i would be more readable:  java return <UNK> <UNK> <UNK> -> <UNK>
Reference: same issues as the region class.
Candidate: you could use a logger instead of <UNK>
Reference: better set timeout ?
Candidate: this is not throw an exception here instead of <UNK>
Reference: can we make this static?
Candidate: is there a reason for element?
Reference: please add todo lines for incomplete methods.
Candidate: i think this assertion.
Reference: what happens if the init fails? shouldn't this be in the finally? that way even if it fails it won't get other threads stuck.
Candidate: typo: <UNK>
Reference: can you change the new asserts to org.testng.assertjunit.\* instead. thanks.
Candidate: please rename this to <UNK>
Reference: s3 in message
Candidate: should we call <UNK> store the <UNK>
Reference: if this method can be called more than once, then clusterparticipant should be either volatile or atomicreference.
Candidate: this stream() maybe?
Reference: can you make this a constant somewhere
Candidate: if you is a the feature is that the is not <UNK>
Reference: i know it's awful and imperative and all, but does this look easier?  immutablelist.builder images = immutablelist.builder(); for (standarddrive drive : api.liststandarddriveinfo()) { if (drive.getmedia() == mediatype.disk) { images.add(standarddrivetowellknownimage.apply(drive));
Candidate: i think this is not efficient, we could use <UNK>
Reference: can this check be factored out into a separate function? that way there's no risk of openinputstream and open getting out of sync.
Candidate: likely likely likely likely likely likely likely likely likely likely likely likely likely likely likely likely likely likely likely likely likely likely likely likely likely likely likely likely likely likely
Reference: intellij should be able to auto-generate a tostring for you (code -> generate). then you don't have to manage pulling fields out of objects like ssp. ssp already has a
Candidate: this is not <UNK>
Reference: should be left null or not put in the map because the map is not meant to be a friendly output for the user (tmc does that) => tmc would
Candidate: you could use only:  this(name, <UNK> { return <UNK> } }));
Reference: i would rename the method to a more descriptive name here and wrap it into the skiprole condition. e.g. java if (! isskiprole()) { addgroupsidsfrommspac(token); }
Candidate: this is designed to?
Reference: use macaddr.or("") and type.or("") (or another default), to have a better string representation?
Candidate: please use <UNK>
Reference: same as above. is this the final implementation?
Candidate: unused
Reference: i think this check here is unnecessary since this situation should not ever happen. i think you can use here just synchronizegroupsstructuresrunning.setvalue(false)
Candidate: this is designed to be a <UNK> <UNK>
Reference: i think element duplicates representation. we should reuse representation here.
Candidate: this should be <UNK>
Reference: should this include withexpirationperiod()?
Candidate: you could move this initialization to run() method.
Reference: return on the next line.
Candidate: is there a reason for avro ?
Reference: suggestion server.getfilestreams().foreach(uncheckedfiles::closeinputstream);
Candidate: suggestion <UNK> = <UNK>
Reference: maybe it is better to log each hook run? i would also consider moving the loop into runhooks method or so
Candidate: i think this is correct.
Reference: unrelated changes
Candidate: this is designed to be a root expensive.
Reference: plase add {} to improve readability.
Candidate: @ivange94 you could use a <UNK>
Reference: these look like they are for debugging. could we make them debug logs instead?
Candidate: we talked @nullable.
Reference: wrong indent, and the previous line should be wrapped
Candidate: can you use the commons-io
Reference: remove extra new lines
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: return the buffer to the pool?
Candidate: i think that this should be the to <UNK> the <UNK>
Reference: shouldn't the order of the parameters be the other way? since first argument is "expected", so this might mislead you when you see the assertion error.
Candidate: you could use <UNK>
Reference: i wouldn't add the break unless we have a performance problem and we know its here?
Candidate: is there a reason for this is not a set?
Reference: maybe keep this buildfrom. the intent is to improve existing stats, so retaining any new fields should be ok. if, however, you insist on setting all fields explicitly, using ctor
Candidate: nit: use <UNK>
Reference: shoudlnt there be a haserror() method?
Candidate: use <UNK>
Reference: better use the same logic as on line 81: stringutils.isnotblank(prvdr)? prvdr : unknown_provider;
Candidate: this should be <UNK>
Reference: i guess to begin with, this call 'removeifledgernotexists' is redundant here. 'removeifledgernotexists' should be already taken care by "entrylogmetamap = extractmetafromentrylogs(entrylogmetamap);" in 'runwithflags' method. 'removeifledgernotexists' call should be removed from
Candidate: nit: debug level
Reference: use systemreader.
Candidate: you could use a constant instead of <UNK>
Reference: maybe "generatereadlink", and name the generated method "readlink", just to be consistent with the "readone" and "readmany" methods.
Candidate: this is not assert that <UNK> is not <UNK>
Reference: is set.union(scalarvariables, arrayvariables) = freevariables ? if that is expected then i think we should add a check for that to be true to catch any potential bugs.
Candidate: you could use <UNK>
Reference: we might want to consider using <link_0> instead of the string "/"
Candidate: use <UNK> region = region = <UNK> <UNK> = region = <UNK> <UNK> region = <UNK> <UNK> region <UNK> <UNK> = <UNK> <UNK> region <UNK> <UNK> = <UNK> <UNK> <UNK>
Reference: why not fail in un-supported versions ?
Candidate: i think we should be a <UNK> <UNK>
Reference: beware - if the string contains multibyte characters, this will blow (a german umlaut will be encoded as 2 bytes if the native encoding is utf-8). i would create a
Candidate: is there a reason for this logic?
Reference: cleaner if you do datastores.stream().filter(ds -> ds != callingdatastore).foreach(ds -> ds.updatesessionattributes(id, sessionattribute)
Candidate: is there a requirement for a requirement statement?
Reference: this separation is awkward and results in our calling the icommitmessageprovider2 twice, which is unnecessary since it already returns both the message and the desired caret position in the first
Candidate: no need to check for the
Reference: @nisalaniroshana , provide more context to above debug log. include username as well to the debug log.
Candidate: <UNK>
Reference: what happens when format is null?
Candidate: this we want to tear down to
Reference: why the synchronized, the segment store is thread safe? making fpixel size a local variable rather that an class variable might be a better fix for concurrency?
Candidate: you could use <UNK>
Reference: we usually don't go through the double check...
Candidate: you could use a constant here instead of <UNK>
Reference: could you please perform an extract method and put the common parts in one method that both letterify methods call? thanks
Candidate: use logging instead of string concatenation
Reference: you could return and test something here
Candidate: use a constant for s?
Reference: i think you can probably remove this method altogether
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: maybe add this statement to the glowplayer#setgamemode method instead? that way, this fix would also apply to plugins changing a player's game mode.
Candidate: is there a reason for clicking on the <UNK>
Reference: final.
Candidate: you could use <UNK>
Reference: does start get assigned a new value? or it will always be 0? if always 0, then should it be a constant instead.
Candidate: you could use a constant instead of <UNK>
Reference: i think this can be set by spring application.properties without creating bean explicitly.
Candidate: <UNK>
Reference: why use a random number? did you try a graduated system (spin for n times, yield for m times, park)? also, did you try runtime.onspinwait() in any variation? i think
Candidate: "_" "_" "_" "_" "_" satisfies refactor, stringutils.empty
Reference: why we have extra log in here? can it combine into 1
Candidate: you could use a string instead of <UNK>
Reference: this introduces a dependency on the java scripting api. is this desirable?
Candidate: this is be worth using a <UNK>
Reference: in terms of code readability it would have been easier if the cases were grouped (conditions keep being repeated): if (pathfragment.startswith("/") { if (currentpathendswith('/') { ... } else { }
Candidate: if you could use <UNK> <UNK>
Reference: temporaryfolder should take care of this.
Candidate: if you could move this feature before <UNK> invalid?
Reference: add here a condition on issequenceelement, the below code is unnecessary if issequenceelement == false
Candidate: this should be e1
Reference: ok, let's move this back to the methods, because we don't have any benefits of extracting here. sorry :)
Candidate: if <UNK> == null || <UNK> == null || <UNK>
Reference: maybe i am missing something, but won't this fail if we're removing an internal snapshot?
Candidate: iirc this should be a bit strange, iirc
Reference: this is 3.3 feature, not 3.2
Candidate: you could use a constant instead s?
Reference: what about the case whereby a unit is assigned to this transport according to the unit but not according to the transport ship?
Candidate: this is not be called at the top types?
Reference: synchronized is unnecessary because context is (must be) instanciated for each thread. the purpose of context class is making invoketemplate single-threaded.
Candidate: i think that this is is not <UNK>
Reference: redundant cast
Candidate: please print stack trace to reflect the log.
Reference: this sentence ("in case of large.... ) is too long and not clear. please reformulate it using 2 sentences.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: s/"+/" + an extra space
Candidate: style nit: we don't use braces around single line blocks
Reference: optional<region> instead of null please
Candidate: you could use <UNK> here instead of creating a new <UNK>
Reference: calling a protected method in the constructor of the base class is not a good idea ;)
Candidate: this is tear down overwrites tracking stuff?
Reference: it's beeter to used int type.
Candidate: you could use a constant instead of <UNK>
Reference: might as well make it  java for (isessioneventlistener target : v) { ... }
Candidate: i think this should be a scale that the membership is not started, we should have the scale that the membership will be blocked
Reference: ![minor](<link_2> 'severity: minor') catch a list of specific exception subtypes instead. [![rule](<link_1>](<link_0>
Candidate: is there a reason for element?
Reference: looks like these 2 lines can be before try-catch block, wdyt?
Candidate: static import
Reference: if there are no hosts available for this op, shouldn't you warn that all the domains were not synched?
Candidate: i think this should be defined in <UNK>
Reference: must be protected against concurrent accesses
Candidate: please use stream() instead of <UNK>
Reference: do we need to do something special here for windows directory separators?
Candidate: this is be a <UNK> <UNK>
Reference: same question as above
Candidate: suggestion return false; }
Reference: since this is the only place where mcallback is used, perhaps we can avoid holding a reference to mcallback and simply use this here:  if (gettargetfragment() instanceof callback) {
Candidate: i think that the dialog is designed to ensure that the is)
Reference: a path limited revwalk is needed here to find the commit that last modified the file at the selected path or else the previous commit may contain the exact same
Candidate: nit: import?
Reference: suggestion private boolean addtoresources(offheapresourceidentifier identifier, long capacityinbytes) { atomicboolean status = new atomicboolean(); resources.computeifabsent(identifier, (k) -> { status.compareandset(false, true); offheapresourceimpl offheapresource = new offheapresourceimpl( identifier.getname(), capacityinbytes, (res, update) -> {
Candidate: i about narrowing narrowing these constants for narrowing narrowing enum values. especially since they are left by <UNK>
Reference: qq: can anyone create the container or only the processor which holds the lease on the blob? since i haven't looked at the azure jobcoordinator, i just want to make
Candidate: why not we use a utf-8 instead of creating a new object as payload?
Reference: shouldn't be a need for this line.
Candidate: this is designed for correctness of <UNK>
Reference: please print all status messages to system.err. it's generally good practice, and it'd be nice to try to keep system.out clean in case we ever want a command that outputs
Candidate: please add a new <UNK>
Reference: remove the unused 'e's
Candidate: <UNK>
Reference: (args[0], args)?
Candidate: please use <UNK>
Reference: what's the meaning of returning false without truncating? is the file in a consistent state?
Candidate: i think we could be a here as well.
Reference: need to implement
Candidate: you could use <UNK>
Reference: the principal id is the user id not the object, you should increment for the object id only if it is of type vm
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: same here, just remove by dn without fetching entity.
Candidate: this is not to be a trace, since we are going to the trace, so we could be able to print it.
Reference: same as below (constructor without criterion)
Candidate: i doubt that this is is not convenient to the the group is set?
Reference: remove rounding... 3rd strike ;)
Candidate: why not use <UNK>
Reference: the correct way to get the type from an object is to use entitydictionary.gettype. look at how it works with dynamictype.
Candidate: this is unused
Reference: would nice to have a sanity check that the cohort doesn't contain an active membership for the patient before
Candidate: you could use <UNK>
Reference: is that type of exception suitable for the 'keys' service? (openstackexception)
Candidate: we should throw an error here instead of validating the <UNK>
Reference: invoking m_es.shutdownnow() again before throw exception would guarantees the shutdown.
Candidate: i'm not sure how about this worked.
Reference: attach the exception to the warning.
Candidate: we should use the exception here instead of <UNK>
Reference: it won't be safe to use null/not-null here to signify anything. after the first threadlocal is initialized by a timeout, it will be non-null forever thereafter.
Candidate: if you could use the <UNK> connection, then we don't need to connection,
Reference: try with resources
Candidate: you could use <UNK>
Reference: you probably only need to call setx() once :)
Candidate: suggestion final string = <UNK>
Reference: should be jsonone. this is assuming that the numeral part of the variable name is the expected number of fields in the serialized version. if that's not the case, then
Candidate: you could use <UNK>
Reference: numblocks? or numlocalblocks?
Candidate: maybe move this logging to off.
Reference: return forbidden too. no need to play nice if the user doesn't have rights to call this.
Candidate: this is not be a
Reference: groups cannot be null.
Candidate: you could use a static import <UNK>
Reference: why jschsession.sendkeepalivemsg() doesn't work for us?
Candidate: this is not webapplicationexception to be thrown by <UNK>
Reference: why not using the @inject annotation?
Candidate: why not -1l ?
Reference: i feel like logputcountsperiodically() depends on put method. that is, if put method, for some reason, is not invoked then logputcountsperiodically() won't be called. i am thinking if a background
Candidate: i'm not sure how about this is a bit that is is used?
Reference: please, use text "project name" (name was fixed after sending this pool request) thank you.
Candidate: this is deserve a method to run()
Reference: hi, thanks for elaborating on the previous patch :) the problem with this code is - a. it's not clear (but you were nice and explained ;) ) b. i
Candidate: this is designed to be a <UNK>
Reference: it looks this method is not called in prozessverwaltungform - so it displays all processes and templates.
Candidate: you could use <UNK> instead of <UNK>
Reference: worth using an empty set (i.e. collections.emptyset()) when null/empty instead.
Candidate: we should throw an exception instead of exceptions?
Reference: missing final
Candidate: <UNK>
Reference: this looks backwards. this would attempt to create basicawscredentials when neither awssecretkey nor awsaccesskey is provided.
Candidate: is this a bit strange to this listener.
Reference: i18n
Candidate: this feels like a little bit more often bit more often bit more often bit more often bit strange to me.
Reference: not part of this commit but could change "updatevideobutton" message to be consistent with method name "clickclosebutton" :)
Candidate: please remove this log.
Reference: unsafe cast. i would recommend to check the class and to default the field to something if it is not <code> staplerrequest</code>
Candidate: please use objects.equals
Reference: this condition should be reverted - else, index-out-of-boundaries-exception guaranteed.
Candidate: you can be replaced by: <UNK> <UNK>
Reference: it has been wrong before your commit, but as you touched this line could you use {} instead of string concatenation?
Candidate: this is designed to be a warn but i am not sure that we want to warn but i am not sure that we want to log the
Reference: this should be refactored to be if/else if/else, instead of using conditional operator.
Candidate: how about using a <UNK>
Reference: how is this meant to work? are you assuming that assertions will only be enabled in testing? if you need some logic to only be executed during testing shouldn't there
Candidate: this is designed to be <UNK> to the <UNK>
Reference: unused variable
Candidate: you could use a constant here instead of <UNK>
Reference: intstream.range?
Candidate: this should be a <UNK> args?
Reference: the null check should be unnecessary.
Candidate: nit: plural
Reference: aren't you supposed to test if the previousorder field has been set
Candidate: please tear combined: <UNK> = <UNK>
Reference: because this is a text box, it will need the 'modifylistener' like the spinner widgets. without it modifying the contents of the text box don't register as needing an 'apply'
Candidate: this is not be turned off from the
Reference: this should be role_anonymous. however given the defaults in anonymousspec you should just delete it
Candidate: we could use <UNK>
Reference: could this raise an ioe? if so, that disconnect() afterwards still needs to be called, so make close() a catch/log operation. ioutils.closestream could do this (and it includes the null
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i am happy with either, does geometrytype capture coverage cleanly?
Candidate: @vilchik-elena is there is a to be a <UNK> <UNK>
Reference: why this intermediate step, couldn't we transform into a biconsumer which accepts an entity and a stringbuilder or even biconsumer<prefixsearchableentity, consumer<string>> and then invoke with (entity, this::addcontentstring) or the like
Candidate: suggestion <UNK> = <UNK>
Reference: instead of having the id as constants, why don't you create all the entities as constants? this makes the unit test shorter and easier to read
Candidate: i flagged @nullable. this.value rhs
Reference: why do we need to open project in setup()? it's better to do it in the appropriate tests to avoid skipping of all tests execution in case of error, and
Candidate: minor: you could use <UNK> <UNK>
Reference: can we create a constuctor for componentparameter?
Candidate: you could use a constant here instead of <UNK>
Reference: did you intend to leave the printstacktrace() here?
Candidate: could you explain why not catching the exceptions?
Reference: i think that this one is used only here. can you consider changing it to private?
Candidate: i think that the vdsid is not invalid?
Reference: please add @nullable for the param.
Candidate: you could use a constant instead of <UNK>
Reference: i am unsure: return ret;
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i don't think the loadclientsinternal method should exist. use getclients.
Candidate: you could use <UNK> instead of the events.
Reference: use consolelog
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: no need to log all of these separately, the exception message / stacktrace will say what it is, can you collapse it in to one catch block please
Candidate: is finishing a possible?
Reference: minor style issue - finally should be on the same line as the closing brace of the try
Candidate: log.debug
Reference: can you put some dummy object into the expectedresult? otherwise, this is just a check for any empty list.
Candidate: you could use <UNK>
Reference: what should happen if the network is not connected to any host? two notifications?
Candidate: @vilchik-elena you could be simplified to <UNK>
Reference: the ismaskvalid parameter is irrelevant here. this test only checks that the input is in valid prefix format.
Candidate: is there a reason to use s?
Reference: we shouldn't catch the exception over there.
Candidate: you could use a local variable?
Reference: you could have this method (optionally) take an exception and add a button to show the exception's tostring.
Candidate: i explained explained explained explained explained to a constant, please.
Reference: extract method suggestion asserttimeoutpreemptively(ofseconds(5), () -> executor.run());
Candidate: use <UNK>
Reference: extra lines
Candidate: could you bail again?
Reference: why the token is supported only for resource but not for page ? in case of a page there will be locking on the page instance and it will work
Candidate: i think this should be a <UNK> <UNK>
Reference: add sanity check?
Candidate: please use <UNK>
Reference: would .size() > 1 instead of !.isempty() make sense here? do you think assuming that a tank that has a tank list of 1 will stay at 1 and return
Candidate: you could move this call to <UNK>
Reference: is there some reason why are you declaring these variables before initializing them? it reduces readability for no apparent reason.
Candidate: is there a reason for avro property?
Reference: this method can be moved to the graphandedges class with together with makekryo(), save(outputstream outputstream) - making the graphandedges responsible for serialization.
Candidate: is there a reason for this logic?
Reference: i think the call to getlocaltableblogidforremoteblogid(remoteblogid) should be changed here, since getlocaltableblogidforremoteblogid doesn't ensure the dotcomflag=1. maybe it's a really edge case, but on self hosted network installations of wp,
Candidate: is there a reason for avro to be null?
Reference: do this globally for all the error emits.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: tldr; i would return null here. i can see a two ways we're handling "issue with the file" .... here, we're returning empty string in case the filename does not
Candidate: you could use encoder's lineseparator property from the id is not invalid?
Reference: lets rename this to removepipelinemetrics
Candidate: this is not needed, we will be closed during the call.
Reference: since min <= max, this can be reduced to: xmin >= x && xmax <= x + width && ymin >= y && ymax <= y + height
Candidate: spelling
Reference: fyi, the recently-added timers.singleshot(200, () -> { ... }) would be a more succinct way of expressing this. <link_0>
Candidate: is there a reason for clicking on the view?
Reference: nit. make this string literal a top-level constant
Candidate: i think this should be a
Reference: the else is not necessary (the if returns).
Candidate: you could use <UNK>
Reference: you don't need to do a == true check, a simple check works if (getcontentvaluespopulator().populate(contentvalues, data)) { .... }
Candidate: this theory we should be closed in absence of the lock model.
Reference: please add check for exception cause type and message, we must be sure that it's really expected exception.
Candidate: please 221 please.
Reference: using an npe catch as control flow is not a good pattern. it's better to do the null check by hand.
Candidate: this is designed to be a a trace, since we are going to serialize the times through a trace, so we don't need to manually compute it.
Reference: rename -> cosmosdbfactory to cosmosfactory
Candidate: suggestion <UNK> -> <UNK>
Reference: can be on one line and doesn't need to throw ioexception.
Candidate: please use a static import?
Reference: could be defined at line 1064 since it's not used before there
Candidate: i think that future: you should use <UNK>
Reference: per above, can you change this to "if (containeddatadefinitions == null) { containeddatadefinitions = new hashmap... }; return containeddatadefinitions;
Candidate: <UNK>
Reference: please, add translation
Candidate: should be be updated.
Reference: @pawaschhokra looks like this metric counts the number of times a processor has become the leader. the metric name "leader-election" can be easily misinterpreted as the number of times the
Candidate: you could use <UNK>
Reference: is this also needed for non-first parents, too? i haven't thought it through. (the non-first parents can be encountered via revcommit.carryflags. i'm not how to quickly tell what code assumes
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: release should be in finally block.
Candidate: suggestion <UNK> + <UNK> + <UNK> + <UNK>
Reference: nit. unnecessary 'final'
Candidate: wait.forelementclickable() should be <UNK>
Reference: .equals() instead of ==
Candidate: why not use a constant instead of creating a bean as a bean as a bean as a bean as a bean as a bean as a bean
Reference: maybe we shouldn't include confusing characters together like 1 and i, 0 and o, . and ,?
Candidate: could you please use a constant instead of '+'
Reference: are you sure about the name users?
Candidate: i think.
Reference: this looks... odd. can you tell me how to reproduce the issue you're working around? i'm concerned we may need to do more than just ignoring the call...
Candidate: i think this is a no-op but i'm not sure that we want to rely on the server. we could rely on the caller.
Reference: we could use the carbon.properties file as well to pass the property
Candidate: you could use <UNK>
Reference: getintinrange() for both? or atleast neg/0 checks for each of these three configs if you don't already have them.
Candidate: is there a reason that is is not defined at least one of each time.
Reference: if only one-side has been reconfigured, this method treats the other-side's metric as valid and collects them, during system reconfiguration. but those collected metrics will not represent the stable state
Candidate: i am wondering if this is is not efficient, but i think it'd be clearer to i think it'd be clearer to
Reference: what's the difference between this test and the test on line 194?
Candidate: suggestion <UNK> = <UNK>
Reference: should this be modified as well ?
Candidate: this is not efficient, we could use <UNK>
Reference: this is not part of the cl, but this will not work, see here: b/141323834 #9
Candidate: i'm not sure how about sure about this noisy? i guess we is not sure that this is is that the is not <UNK>
Reference: nit: it would be more clear if udp and udp1 had more descriptive names.
Candidate: unused
Reference: not sure why we need activate... after you load all resources you can "activate" your-self.
Candidate: should be be updated.
Reference: what line(s) of code do we need to catch ioexception for? seems like you're already handling ioexception internally.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: it would be more efficient to assign the result of get() to a local variable. i.e. one less node lookup. suggestion statement statement = statementmap.get(sql); return statement != null &&
Candidate: please use webfaultexception instead:  java <UNK> {}", <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK>
Reference: i don't think this should be changed since on the reactive side we don't support anonymous users.
Candidate: use <UNK>
Reference: i think we should avoid a dependency to the given uberfire module due to the pair class. i think we should use standard java map entry. for example on this
Candidate: throw new exception
Reference: just call getcodec().decodelong() in both cases here.
Candidate: use <UNK> instead of <UNK>
Reference: i guess eclipselayerex should be in the catch block
Candidate: you could use a constant instead of <UNK>
Reference: given that the constant string level:// appears so often in this pr, it ought to be a string constant somewhere.
Candidate: you could use a try-with-resource here instead of <UNK>
Reference: this change is unnecessary i think, but ok.
Candidate: why not use <UNK>
Reference: not sure what find and account means
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i would recommend a suitable localized message here in the precondition.
Candidate: this is be a <UNK>
Reference: why all these additional newlines? there should be only one
Candidate: please move this to <UNK>
Reference: can we refactor amqpconnectionmanager to make connection factory injected and avoid modification of the class that is under test?
Candidate: this is not fail()?
Reference: there is a copy-paste error here. tsk_web_bookmark is added to orderingmap six times. it accidentally works out because all of the currently supported artifact types are all using default_ordering, and
Candidate: you could use a foreach instead of creating a new map?
Reference: extra space
Candidate: could be simplified to <UNK>
Reference: what about refreshplugin(refreshable plugin) below? shouldn't is also call repositoriesviewrefresher.repositoryrefreshed(rp) if the plugin is a repositoryplugin?
Candidate: you can use a logger instead of creating a new instance.
Reference: how about inlining the concrete logic into visitcolumncheckconstraint and visittablecheckconstraint instead of having a nullable columnname and make a distinction again in visitcheckconstraint. seems like a unnecessary generalization.
Candidate: is there a reason for sharing the
Reference: you can delete this. you don't use mapboxmap elsewhere.
Candidate: style style)
Reference: nit: use textutils.isempty instead of a null check for strings.
Candidate: this is stronger we could remove.
Reference: i don't see any advantage of using requirenonnull()
Candidate: @ivange94
Reference: it may need a generic exception (or other design) to indicate (or know) the capture request is issued or not. once the request is issued then it should not file
Candidate: this is not be a
Reference: you don't need to rely on a list, you have a findelementbyid. you could even use findelementwithoutwaiting(by) there with a by.id since the button is supposed to be displayed.
Candidate: you could use <UNK>
Reference: checks -> check
Candidate: is there a reason to assert that the is not <UNK>
Reference: is envvars thread safe? there are multiple threads accessing this code, so you risk them overwriting eachother.
Candidate: if you could use <UNK>
Reference: optional: should it be "the endtime should be greater than starttime.". better: retrieve all msg from a property file so that we can change without modifying code.
Candidate: please nextvalueindex should not be <UNK>
Reference: code style
Candidate: suggestion <UNK> <UNK> = <UNK>
Reference: nit: if we wrap one, then we wrap all.
Candidate: nit: use <UNK>
Reference: so if there is a network or other valid error, this method will return 0? seems strange.
Candidate: throw an exception exception
Reference: isn't it missing "active"?
Candidate: i clear() is not sure that this is is not <UNK> but i would be a bottleneck. bottleneck. consequently, in the <UNK>
Reference: yep, would really like to find another way then breaking out transformer and serializationhandler from internal jvm packages. looks like you are using this to quickly implement an encoding?
Candidate: if this is not efficient, we could use a connection, if (value == null) { return; } } else {
Reference: i think "valid times" should be changed to "setup time" or even just "setup"
Candidate: this is not matters, but iirc this is not matters, but iirc this is not matters, appropriate.
Reference: let's introduce an interface to avoid all of those instanceof checks.
Candidate: this should be log.d
Reference: probably set this down by where the sha1 is set for the object, for consistency.
Candidate: we should print the error message.
Reference: should we log what the result code here so we know what other junk we're getting in response?
Candidate: maybe move the error message to log message to the the log message that the log the error.
Reference: this is not the right place to add the filter to the chain. it must be added the same way the other fillers are added in defaultfilterchainmanagerconfigurer and abstractstormpathwebmvcconfiguration (the
Candidate: ahh,
Reference: did you mean to write "else if" here?
Candidate: you could use a functions introduced in the code.
Reference: it would be cleaner to replace this line with: fkind = kind; fsuffix = getsuffix(kind, value, chararrayutils.empty); fliteral = getliteral(value, fsuffix); there is no need to call resetlazyfields in constructor.
Candidate: use stringutils all()
Reference: on and off equalling true and false are only applicable to html forms, so this should not be generalized here.
Candidate: use <UNK>
Reference: method is too complicate to understand, pls split on different methods.
Candidate: is there a reason for the level to be printed here?
Reference: why aren't you using 'createnic(..);
Candidate: you could replace this with f with <UNK>
Reference: use preconditions.* for consistency with null-checks unless a caller above expects a samzaexception to be treated differently.
Candidate: wording. this wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording.
Reference: please add a static import for this method.
Candidate: we could use the exception here instead of <UNK>
Reference: this attribute is not required, so it probably needs a default or something like that
Candidate: i think we should have to call to <UNK>
Reference: this is a style/opinion thing, but i would rather see a class/interface here instead of a triple; otherwise it's hard to know which file is which.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: seems out of alignment to me.. this would fail checkstyle apparently.
Candidate: is there a reason to synchronize this logic?
Reference: and since this assertion is pretty popular, i guess you could refactor it in its own method. doing assertthat(passivemessagehandler.gettrackerclients().count()).is(x)
Candidate: wait.forelementclickable() should be <UNK>
Reference: you don't need to change this method signature. i would leave this method private.
Candidate: use <UNK> instead of creating a new <UNK>
Reference: this function already calls findbyreferenceid as it's return value so you don't need to call dataaccessrequestservice.findbyreferenceid() again
Candidate: please add a error message
Reference: you must update this to gdb_7_12_version
Candidate: @gunnarmorling you could use only: <UNK> <UNK> <UNK>
Reference: i think this can be truststorepasswordalias instead of the string?
Candidate: i think this should be <UNK>
Reference: no need to check for null, releaseconnection already does that
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i'm not sure what you mean. i'm not too concerned about whether we have lots of small, fine-grained tests, or a smaller number of tests that test a more complete
Candidate: you could use a constant instead of <UNK>
Reference: why adding unneeded braces?
Candidate: if you could replace this by: <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> { ... }
Reference: just my personal preference, but i'd switch the operands because of readability reasons (i.e. event.getpropertyname().equals("location"))
Candidate: please replace this with <UNK>
Reference: any chance ":where_clause:" ends up being a valid token in the request? would be best to ensure that it gets removed in the sqlview definition before merging in the query
Candidate: you could use a string instead of <UNK>
Reference: copy paste bug: must be childworkflows != null
Candidate: i think that this is not efficient, we could use the <UNK> <UNK>
Reference: hmm, what is this? what is a java template?
Candidate: please use <UNK>
Reference: do we need to clear the repository ? we're doing it at tear down already in clearrepo
Candidate: this is not mock
Reference: it would be great if this map could use generics so we know what it contains.
Candidate: this is be <UNK>
Reference: need to update this to use safe uri generation.
Candidate: is there a reason for element?
Reference: will this cause busy-loop?
Candidate: this is is designed to call <UNK> <UNK>
Reference: do you expect this switch to grow new cases? otherwise a simple if ("json".equalsignorecase(srcext)) is simpler.
Candidate: i think we should be a warn here instead of <UNK>
Reference: nit: should we keep 2 tabs alignment for everything?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: maybe add a log statement here so it's easier to trace if things to not do what we expect.
Candidate: i think this multimap should be non-null?
Reference: again this is displayed to the user "android recycle" would be better.
Candidate: use a constant for s?
Reference: what will happen if there will be a deadlocked delete task? if i read the code correctly we will be spinning here forever? is there any way to avoid this?
Candidate: this is a <UNK> that this is is is not <UNK>
Reference: iiuc "propietary" is a string and enum that you have added is pmproxytype, so you should be adding it to <pm_proxy> and validating it here.
Candidate: you could use <UNK>
Reference: i'd like to see some tests using a different timezone.
Candidate: suggestion <UNK> -> entry.getkey(), <UNK>
Reference: seems me a  listeners.foreach(listener -> layerdeleted(layername));  would have been at the same time more compact, readable, and faster (streams are very slow)
Candidate: this is not to be <UNK>
Reference: since this adds a new listener, should we clear the listeners before adding the new listener? i know setupcontent is called only once right now, so it won't make a
Candidate: you could move this to <UNK>
Reference: this logging is not related to this pr, so please remove them all. if you want to add the loggings, please create another issue.
Candidate: you could catch exception instead of <UNK>
Reference: check for equality of error code
Candidate: is there a reason to assert here?
Reference: maybe define a const for "/organizations/" also, we can call only one time path.indexof wdyt ?
Candidate: i think this is not efficient, we could use only:  java return <UNK> == null) { return false; } }));
Reference: you can remove nosuchalgorithmexception now.
Candidate: please use "return <UNK>
Reference: as already mentioned, this should be checknotnull(statistic, "statistic"), this will throw a nullpointerexception, therefore you will know it can't be null.
Candidate: if <UNK> == null || <UNK> == null
Reference: this is unnecessary
Candidate: is there any reason why not required?
Reference: simply call scheduler.schedule(new pollingrunnable(), 0, polling_frequency)
Candidate: i liked that this will be an npe if the discoveryresult suppresses lock state is null.
Reference: these are weird casts... could we maybe use an explicit type parameter on the singletonmap method call.
Candidate: you could move this to a separate method.
Reference: might not need the sleep if the persistor.write() call is moved to after the cancel
Candidate: could we use a try-with-resource here instead of creating a local variable?
Reference: s/checkstate/verify/, also add a message in case it ever fails.
Candidate: suggestion <UNK> = <UNK>
Reference: not sure if we should create thread, dotconcurrentfactory is your friend
Candidate: <UNK>
Reference: not a must fix, i just want to suggest you try lamda. it would be very convenient and simple here.
Candidate: we should use <UNK>
Reference: can we use a better exception?
Candidate: if you could use a <UNK> <UNK>
Reference: start
Candidate: i think this should be careful here
Reference: i suppose we do not need this now after using serializer
Candidate: why not use commons-io
Reference: should be select v.entry or v.entry.id?
Candidate: no need to call <UNK> here instead of calling get() directly.
Reference: change to sexgenotypedatalist.isempty()
Candidate: is there a reason for avro to be null?
Reference: let's name this based on what the map actually does: namespacesexhibitingviolations or something like this.
Candidate: if you could be a boolean <UNK> input.entryset().stream.collect(collectors.tomap(entry -> entry.getkey(), entry-> <UNK>
Reference: i thought we want to pass the current line number (linecount) here, not the starting line.
Candidate: i am not sure how about about the <UNK>
Reference: since this happens in every test as the first thing, this probably should be in setup(). at least the sharedpreferences call should be moved there. and i rather have the
Candidate: this is be repelaced by <UNK>
Reference: should we log case when this if is false?
Candidate: why not sure that this is is not efficient, but i guess that we can.
Reference: @bharatviswa504 i think we can skip this one as throughout this class we are following this approach of using auditsuccess, mostly for code readability/correctness. i think we can discuss with
Candidate: this is designed to be a <UNK> <UNK>
Reference: or java matchers.<config>is(anotherconfig))
Candidate: should we throw an exception instead of an exception?
Reference: why can't we do this by dc level? i don't think that we should have different behaviour between the host in the same pool - much harder to debug it
Candidate: you could use <UNK>
Reference: i would move this directly to the variable declaration to make the constructor less complex.
Candidate: please use a static import
Reference: throws throwable?
Candidate: you could use <UNK>
Reference: how will this be cleaned up?
Candidate: this is designed to be a trace, but this will be a to drain
Reference: all 3s?
Candidate: use <UNK>
Reference: if (!meta.equals(metadatacache.get(file)) {
Candidate: you should use stronger sending the exception to the
Reference: all caps?
Candidate: this authentication is be authentication
Reference: remove this variable and call inline
Candidate: please use <UNK>
Reference: why was this added?
Candidate: we should throw an unsupportedoperationexception rather than ==. rather than ==.
Reference: isempty is not in java 1.5
Candidate: this is designed to be a bind <UNK>
Reference: also (i know i keep repeating this but it's important), don't explain what the code does, that's not very useful. instead explain why you do it. in this case does
Candidate: should we use <UNK> enum?
Reference: i wonder why we need this bogus file here?
Candidate: you could use a dedicated <UNK> ;-)
Reference: not sure why we need iswaiting. notify can be called as long as it is synchronized on the object.
Candidate: why not we need to synchronize here?
Reference: do we still want this? or do we want to start all over again? this means 1 large column chunk will trigger always having more mem overhead right? even if
Candidate: i think that this should deadlock that is is not null but i guess we should have to check that the <UNK>
Reference: do we still need the if null check?
Candidate: you could use <UNK>
Reference: should we check sessionready to prevent multiple invocations of the delegate's methods (especially double delivery of init events)? i know the driver won't do this, but application code might.
Candidate: this is not to be called in <UNK>
Reference: i think one case is missing here, when esindexreplicas=autowire
Candidate: finals
Reference: btw, i agree with @coverbeck on this, parallelstream is probably more complex than needed here. so which to a normal stream when templating this with the v2 version, thanks!
Candidate: this is not be a <UNK>
Reference: maybe, a better solution wrt to visibility would be to move the languagemetricsprovider out of apexhandler, and into this package. apexmetrics will probably not change for 7.0 (apart from this
Candidate: i think this should be null here as well.
Reference: not sure we need nor want his condition : !(context instanceof analyzermessagereporter), as soon as we introduce the concept. pretty sure it's code you can't cover as well in your
Candidate: suggestion if <UNK> == <UNK> || <UNK>
Reference: .isempty(), .size()
Candidate: suggestion <UNK> <UNK>
Reference: as above, the item with an id equal to the total number of records might not be the last record if some objects were deleted from the database. it'd be
Candidate: this is a <UNK>
Reference: shouldn't that be in a specialized derived class? it might not be relevant for r4e no?
Candidate: you could use <UNK> instead of <UNK>
Reference: you can easily coalesce the null-check and the switch into a single if (header == set_cookie). how about set_cookie2 (i'm ok to not consider it, just raising the issue of
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: yea agreed should go in start.
Candidate: i pagelogging
Reference: isempty() please
Candidate: please use <UNK>
Reference: ![major](<link_1> 'severity: major') provide multiple methods instead of using "refreshmeasures" to determine which action to take. [![rule](<link_2>](<link_0>
Candidate: i think that the sake of the sake of the sake of <UNK>
Reference: rename to namespace
Candidate: you could use <UNK>
Reference: data constants.
Candidate: static import?
Reference: also, shouldn't this sceneopaque connected to the writeonlygbuffer?
Candidate: i think this is a bit more than <UNK>
Reference: ticks don't line up. the if branch consumes up to 2 ticks. consider using an unconditional call to submonitor.setworkremaining(7) here.
Candidate: can you move this initialization to the beginning of the method.
Reference: these should use the separated constructor, not hardcode the colon.
Candidate: please use <UNK>
Reference: why "model.getstorage()" instead of just "storage"?
Candidate: you could use repelaced by a : <UNK>
Reference: can you change "2abcd" to something which describes what's happening? something like "cause-a-failure-during-retrieval"?
Candidate: typo: <UNK>
Reference: this isn't actually asynchronous. we're blocking here. we probably want to use a specialized callback for each call that aggregates responses, and calls the users callback if it's the last
Candidate: this is intended to <UNK>
Reference: use callback style instead
Candidate: unused
Reference: the product is never null, code can be simplified here
Candidate: you should check if <UNK> is null.
Reference: should we rather just not update the descriptions if they are empty, instead of creating a new object ?
Candidate: this should be e1 e1
Reference: i would add assert.fail()
Candidate: 2048 like "query {}: -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e
Reference: maybe use switch()
Candidate: this is dangerous, is not <UNK>
Reference: please remove warning suppress and the unnecessary casting
Candidate: you could use the mock assertions.
Reference: why not use the messagelevel type?
Candidate: please use <UNK>
Reference: to keep consistency with all the operations, the beginning of the url should be got from client.getbaseurl() , not from a saved member. the responsability for server-wide data is in
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: don't set the chatsate for the entire conversations. set the chatstate for the user only
Candidate: is there a reason that is is not being successful?
Reference: hi sharad, i saw you already changed the code a bit regarding getdiskimagedao - care to refactor and replace dbfacade.getinstance().getdiskimagedao() with a "getdiskimagedao()" call?
Candidate: you could use <UNK> here instead of <UNK>
Reference: it makes sense to use assertequals here and below, to see the actual value in the failing case
Candidate: please remove this
Reference: i think it's possible for a user to type <span id="img_container">, which would be removed by this regex. how about we make it a little more precise with <progress.*?><\/progress>|<span id="img_container.*?
Candidate: you could use <UNK>
Reference: maybe use a ternary expression? up to you
Candidate: is there a reason that styles that styles that styles that styles that styles that styles that styles that styles that styles that styles is not <UNK>
Reference: a modal dialog is unacceptable during perfrom stage of refactoring.
Candidate: @vilchik-elena you could move this to a local variable?
Reference: typo: try use inputformat -> try using inputsource
Candidate: suggestion <UNK> = <UNK>
Reference: it should return readonlyarray not readonlyarrayinterface. also iirc, readonlyarrayinterface is internal for java.
Candidate: this is a <UNK>
Reference: why not macpool p1 = command.getparameters().getmacpool(); p1.setranges(collections.singletonlist(range1));
Candidate: you can use 'throws a try-catch-fail paradigm
Reference: same question here - can't we find a way to not rely on naming convention?
Candidate: this is designed to be <UNK>
Reference: the numbers used in this method seem to be something meaningful. would you explain if they are?
Candidate: i'm not sure that construct, this construct, is hasn't been changed to this method
Reference: does this mean that we won't allow any idle connections, even when not using tor? i'm not sure that's desirable for normal usage of the app...
Candidate: this :(
Reference: @prondzyn this will return an int which is enough as bytes.length is an int such that you can avoid casting it as a long
Candidate: why 16?
Reference: java if (lookupboundclass(entityclass) == null) { bindentity(entityclass); }  might be simpler or more straight forward?
Candidate: this is is designed to be <UNK>
Reference: in this method, jdt also makes sure that the hyperlink is on a method/function. this allows it to prevent showing the "step into" hyperlink option for non-methods. can we do
Candidate: i think that the is not error.
Reference: rethink if you need so many &&
Candidate: could be simplified to <UNK>
Reference: can we add enabletcpconnectionendpointrediscovery value here too. would be helpful for troubleshooting.
Candidate: please use <UNK>
Reference: consider removing magic numbers and using just source to get the the right div you want.
Candidate: use []
Reference: remove please
Candidate: is there a reason for this class instead of a constant?
Reference: i'm wondering if it couldn't be more relevant to avoid having array in a single string, at least to follow what've been done for the mongodb repository. please have a
Candidate: this is eating
Reference: shouldn't this be new fraction( t.getbitsperpixel(), 64 ) instead of new fraction( 1, 64 ) here?
Candidate: final fraction( = t.getbitsperpixel(), new fraction( <UNK> 1, final <UNK> 1, <UNK> = 1, new <UNK> 1, new fraction( 1, <UNK> 1, <UNK> 1, new <UNK> 1, new fraction( 1,
Reference: cut at &&
Candidate: you could use <UNK>
Reference: can/should we warn if there are config options in the map that were not recognized?
Candidate: we could use <UNK> instead of creating a new object instead of null?
Reference: why pass in parameter? it's already a field in the class..
Candidate: please add a feature for <UNK> (my <UNK>
Reference: see if you could write this more concisely, perhaps,  return stringhelper.iswhitespace(visibilitystring) ? "giver" : "giver, " + visibilitystring;
Candidate: please use <UNK>
Reference: it should be better to use list interface instead of concrete implementation.
Candidate: suggestion <UNK> = <UNK>
Reference: do we need the entered check here and the boolean variant below?
Candidate: we could use <UNK> to <UNK>
Reference: should be metrics_metadata_name.
Candidate: i think collections.emptylist() here, no?
Reference: wrong formatting in whole method. please fix it.
Candidate: please use objects.equals
Reference: i think debug is enough since it is not some crucial state transition.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i think this if..else could be shortened to a ternary statement, but it's not critical. :)
Candidate: could you please use <UNK>
Reference: when one runnable raises a runtime exception nothing will be executed afterwards. is this intended ?
Candidate: i think we could be a lock here instead of printing it.
Reference: why not reuse existing constructors? public permissionsoperationsparameters(permission permission, guid targetid) { this(permission); this.targetid = targetid; }
Candidate: this tear down :)
Reference: optional: since we already have nullchecker class, should we utilize to use some method(isnotnullishignorespace) in there? or using stringutil from apache package?
Candidate: this should be <UNK>
Reference: what happens if somebody mutates the value while it's being written out?
Candidate: can't we use the supplier here?
Reference: if i understand correctly, the purpose of introducing the internalinvokeaction() methods is to be able to get back the status of the run, that we don't have in runnable. instead,
Candidate: this should be a bind <UNK>
Reference: won't this print the error message every time we find a mismatch? for example if we have 4 authenticator classes, this will print 3 times.
Candidate: i'm not sure how about the sure about the sure that the is not used?
Reference: no blocker in any case but does the current user ('cloud'?) have the rights on any system (think rbac). doing get tempdir syscall would be better.
Candidate: you could use a constant for these.
Reference: would swtich make it cleaner?
Candidate: this is not a bit strange, we could use only:  <UNK> <UNK> { ... }
Reference: why not just list<string>? this construction forces code that would like to use this method to explicit use arraylist which is often considered as a code smell.
Candidate: suggestion return <UNK>
Reference: this change is not related to the pr. is this fixing something else that you just witnessed? would be better to create another pr just for fixing this issue.
Candidate: typo: <UNK>
Reference: this check is no longer necessary since you verified it in the calling method. (ie. retry.getnextretryinterval)
Candidate: maybe use a checkargument here instead of this(name, <UNK>
Reference: just downloadable
Candidate: you could use <UNK>
Reference: @ivandalbosco minor: another possibility would have been to move these tests up to visitsuper.
Candidate: is there a reason for this method to be called in the <UNK>
Reference: discussed offline: this is ok as long as we make sure internal server doesn't say that it is fully ready until this has completed for all clients.
Candidate: use collectionutils
Reference: i think this is the line of code that cause the issue in the mail-list
Candidate: you could use <UNK>
Reference: do base class really need to know about ssl? i suggest making 2 protected methods: clustercustomproperties and connectionstring that can be overridden and implemented in ssl test.
Candidate: this is not be log.d mapboxwebviewmapfragment
Reference: make sure to use {this} in place of the name
Candidate: use reflectiveoperationexception
Reference: could be replaced with  headers.foreach(comparisonmetricfile::addheader);
Candidate: is there a reason for avro here too?
Reference: these messages should be self-explanatory (i.e. make it clear what are the strings)
Candidate: is there a reason :disappointed:
Reference: maybe we don't want to log this, but is this interrupt() really needed? or harmful?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: seems like the log file name should be pulled out as a constant, or alternatively, a member variable so you could override it if you wanted.
Candidate: you could use a constant instead of <UNK>
Reference: maybe external @nonnull annotation?
Candidate: i theory you could use theory this
Reference: where is there no space after the comma? it would make the annotations more readable.
Candidate: suggestion <UNK> = new clazz, <UNK> clazz, <UNK> <UNK> clazz, <UNK> <UNK>
Reference: this check fails in the case of split editors, since the target parent is the mcompositepart. i guess the more general algorithm should be to search up the target context
Candidate: i think log debug level to log the debug level to print stack trace level to debug level
Reference: iirc, this needs to be changed to three!=null&& three.samebounds != null
Candidate: this doubt that this is not correct.
Reference: you seem to be deliberately not mapping over optionals - is there a reason for this? this bit would be fine as  return epdqgatewayresponse.getbaseresponse() .map(epdqqueryresponse::tochargequeryresponse) .orelsethrow(() -> new webapplicationexception("things
Candidate: you could use a logger instead of <UNK>
Reference: copy-paste bug, should be frame.toimmutable()
Candidate: you could use <UNK>
Reference: could use method ref.
Candidate: could you use foreach loop here?
Reference: a matter of taste - types can be avoided for the sake of return statements from the if-else block.
Candidate: we could use computeifabsent
Reference: use long.valueof(1)
Candidate: is there a reason for this method is not
Reference: avoid guava
Candidate: why replacing catching exception exception exception
Reference: if already decided to refactor it,it would be great if it can be refactor to four different methods. it might be useful later on. btw consider adding the getintegerconfig and
Candidate: dont use <UNK>
Reference: i would use serveraddressdeclaration.gettext().tostring() instead.
Candidate: you could use java.nio.charset.standardcharsets.utf_8 instead of <UNK>
Reference: not anymore indeed. i used it with the first version of the test
Candidate: same as <UNK>
Reference: there is problem with the precision. when i tested it value was 1410354493.260164474 but fvaluetimestamp resulted to a tmfnanotimesatmp with fvalue=1410354493260164608 and scale -9. so, my compare filter for equal
Candidate: if you could use <UNK>
Reference: is it safe if value is empty?
Candidate: can you use reduced to <UNK>
Reference: change object to string
Candidate: is there a reason for element?
Reference: please add newly updatable fields expectation & verification
Candidate: is there a reason for element?
Reference: what happened to the null check?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: is that variable used?
Candidate: i think this is be propagated to the finally block
Reference: maybe better to use a logger here instead of system.out?
Candidate: this should be <UNK>
Reference: this might be called periodinmilliseconds
Candidate: this error message is unnecessary.
Reference: nit: might want to rename it to processdiagnostic or something to imply that this method handles diagnostic related queries?
Candidate: i think this should be a putifabsent and then we 2048 is be to be an error. consequently, depending on the error.
Reference: httpheaders.location
Candidate: is there a reason for this?
Reference: we could avoid creating the two date objects by returning false immediately if !shouldpublishimmediatelyoptionbeavailable(postmodel)
Candidate: please use stringutils.isnotblank()
Reference: isadvanced(false) is default for channelgrouptypebuilder. we can skip this one.
Candidate: i think this is a download a string concatenation
Reference: i think we need this check because when workspace state is different to starting / running we will update its attributes and try to stop it.
Candidate: log.debug
Reference: revert to warn.
Candidate: log.debug
Reference: why not make the port property an int in the first place?
Candidate: minor formatting
Reference: i think it is better to keep the node source logging semantic [nodesourcename] etc
Candidate: you could use <UNK>
Reference: nicklisteners is not synchronized although it should be
Candidate: this is not be thrown in clause.
Reference: stack isn't closed
Candidate: nit: boolean[] = <UNK> <UNK> = <UNK>
Reference: that's one of the two changes, that are outside of test code. the change here looks correct. however, i don't know, which charset groovylexer is using or expecting... so, i'd
Candidate: is there a reason for this?
Reference: do we ever use the returned value? even the put in the cluster registry should use ignore_return_values.
Candidate: i would be worth to to ensure that this is is be to ensure that the caller is wants to ensure that will ensure that wants to ensure that that
Reference: 1. create method clearcss() with ace.edit('csseditorcontainer').setvalue('') 2. add .ace_text-input element to ui mapping - this is cursor, 3. in sendcsstext use sendkeys method to type using cursor.
Candidate: <UNK>
Reference: line length + the ones below
Candidate: suggestion <UNK> = new <UNK> clazz, <UNK> <UNK> clazz, <UNK> <UNK> <UNK> clazz, <UNK> <UNK> <UNK> clazz, <UNK> <UNK> <UNK> <UNK>
Reference: here too - once you change the api to use ints, you won't need all the integer mess here.
Candidate: use <UNK>
Reference: you can move this to the class level and mark as private static final.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: seems like the required version should be a property of the application (ui) instead. this is also a bit verbose. maybe we could drop some of the prefixes for the
Candidate: we could use <UNK> here instead of return?
Reference: @wezell is the uuid stuff required yet?
Candidate: why not use <UNK>
Reference: we can remove else block replacing in just with return. (no added advantage with it for runtime, just for clean code)
Candidate: we could use the m
Reference: how about defining the life cycle for file watcher like start, stop etc. and also define the state of the file watcher like starting, running, not started and stopping etc.
Candidate: i think this should be done in the request?
Reference: new actionresult<itemstack> -> new actionresult<>
Candidate: this should be be guarded by <UNK>
Reference: ps this is a logic change. it saves size to not log 2xx range responses. <link_0>
Candidate: this is a <UNK>
Reference: is this necessary to special handling? following constructtrie logic will not handle the root sharding key?
Candidate: is there a reason for this method is not used?
Reference: causes npe in line 151 (connectionhandler.connect(accounttoconnect, failsilently);) when account is null and default account is not set? (npe in [connectionhandler.connectxmppinternal](<link_0> also npe in [l.117](<link_1> if account is null (if i
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: should use assertthat
Candidate: please use <UNK>
Reference: we can do this in try() - finally block to ensure outputstream is always closed.
Candidate: you could use <UNK> instead.
Reference: typo above, should be: return this.rpmrevision;
Candidate: please use <UNK>
Reference: nullcheck missing.
Candidate: is there a reason for this logic?
Reference: this one shouldn't be public.
Candidate: if this is is not null
Reference: not sure why you need builder for two args. i'd have a factory method.
Candidate: @gunnarmorling you could use only: <UNK> instead of <UNK>
Reference: i find it nicer to override getgraphicalviewer and cast their. similar as we do it with most getmodel methods in the editparts
Candidate: we could use only: <UNK> <UNK> <UNK> list?
Reference: it looks like this is non-trivial and it will be executed on every sign-in, which could be a lot. would it be better to move this to verify channel, which
Candidate: please use <UNK>
Reference: plays the current, not the previous.
Candidate: wait.forelementclickable() is be <UNK>
Reference: u return false here, but u already updated _olddisk with garbage before
Candidate: please add a condition, to the <UNK>
Reference: nice pr. maybe systemutils.java_specification_version + ": instead. do you like static imports?
Candidate: this is be <UNK>
Reference: @antonini it's a one-time variable: <link_2>
Candidate: again, let's use <UNK> container container container container container container container container container container container container container
Reference: it's not clear that the exception is warranted here -- is it strange and inconsistent for func_volt_regexp_position to define an extra nodes[] element and set it to null vs. just
Candidate: you could use a description
Reference: magic number 10?
Candidate: you could use <UNK> here instead of <UNK>
Reference: why do you need this? are you planning to add the column to subtabnetworkhostview?
Candidate: you could use <UNK> here instead of calling <UNK> bit?
Reference: avaialable -> available. ( its might be my mistake, same typo may be there in original class as well :-) )
Candidate: i think we should log the error message is not
Reference: ide says that exception is never thrown by classpathcontentretriever constructor, so we should remove the throws clause there and remove try-catch block here.
Candidate: use uri.create to throw an exception instead of <UNK>
Reference: could be simplified to assertnull.
Candidate: please use readasstring(...) instead.
Reference: if you use lamda expressions then diamond operators should also be available)
Candidate: you could use <UNK>
Reference: exactref
Candidate: this is be discarded thanks.
Reference: try-with-resources while getting connection to avoid connection leaks
Candidate: you could remove the stack trace
Reference: all these are the same. it's fine if they have the same message.
Candidate: we should throw an exception instead of <UNK>
Reference: what is the contract for the return of this method? if we are already at the state that we are trying to move to, it could be said that the
Candidate: i think strange, if the discoveryresult is invalid?
Reference: java throw new runtimeexception(e); // so we will see the cause...
Candidate: this readasstring(...) instead of <UNK>
Reference: huh?
Candidate: no need to check here
Reference: defining two arrays is not very apparent of their mapping. may be a map of server error code to router error code will be very intuitive.
Candidate: nextvalueindex should not be a <UNK>
Reference: may we simplify that a bit? it should be possible to fit it in a single 1-line operator.
Candidate: @gunnarmorling this theory we should be a <UNK>
Reference: now, if there is no trace opened, the viewer has no columns. should we create the default columns at construction and add the analysis-provided ones later?
Candidate: you could use <UNK> here instead of nesting.
Reference: i think when we are here, this if clause can be moved out of the catch and implemented as follow (classforname already throws classnotfoundexception): java if (classname.indexof('.') == -1) {
Candidate: throw an exception instead of e.getmessage()
Reference: should probably rename the above to htmlstream to advertise that its not a string
Candidate: i think that this is is not efficient, we could use the <UNK>
Reference: this is not needed - you can use getcluster() from base class?
Candidate: why not use <UNK>
Reference: two options... 1. this url is only for interactive - then we can use both extensions types. 2. this url serves both interactive and non interactive, and the mode is
Candidate: you could use a constant instead of '+'
Reference: since init() is only called once, could we move it to start() so that start() and stop() become symmetrical?
Candidate: nitpicking: this is not <UNK>
Reference: the deleted field of the entity is not checked
Candidate: you could use <UNK>
Reference: this pattern was needed for the partition strategy and column mappings because we wanted to provide backward-compatibility for existing hbc schemas. since properties are an addition to the schemamanager, i
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: swallowing stacktrace ;-) i would be in favour of:  log.error("error while playing command", e);
Candidate: you could replace this with foreach loop with <UNK>
Reference: i would consider abstracting this useful goodie into swttestutil.java as it's likely to be used in other places also.
Candidate: is there is a whitespace between the != null && <UNK> != null && <UNK> != <UNK>
Reference: log.trace
Candidate: i think this is not <UNK>
Reference: add this to the string resource file
Candidate: you can use the bind formatter
Reference: i don't believe anything related to managementremotingservices is required unless http-upgrade is turned on.
Candidate: you could use a constant instead of <UNK>
Reference: groupidexisting -> existinggroupid?
Candidate: @vilchik-elena could use isempty() instead of <UNK>
Reference: even though it was like this before, do we have reasons to keep it as iterator instead of using for-loop?
Candidate: you can use a <UNK> inventory explicitly.
Reference: it's easier to read if you do:  if (type != schema.type.string)) { throw new ... } //logic here  as it removes one layer of indentation. in any case,
Candidate: formatting
Reference: how about  java iterable<type> resultiterable = first(1); return resultiterable.hasnext() ? optional.of(resultiterable.next()) : optional.empty();  we don't need to copy it into list.
Candidate: seems like to datanodeid instead of datanodeid
Reference: not dimension.used_java_heap ?
Candidate: is there a reason for this too?
Reference: pls use querydsl instead (already in master)
Candidate: use readasstring(...) instead of <UNK>
Reference: - [x] i think, these three cases are no difference in the appearance of the result screen. so, it should take page source for evidence. --- ok by btkatoutmj
Candidate: is there a reason for element?
Reference: please use here getbackendcollection(class<t> clz, vdcquerytype query, vdcqueryparametersbase queryparams) method instead of manual query invocation.
Candidate: please move this method to the protected method.
Reference: how do you tell that the cause of this exception is the request being invalid?
Candidate: shall we describe the query creation,
Reference: remove word "uri"
Candidate: this is designed to be a <UNK>
Reference: let's keep this?
Candidate: we should use the <UNK>
Reference: you can put the gtk version check into the 'if (settings !=0)' block like so if (settings != 0 && os.gtk.... as otherwise the buffer is instantiated for no reason
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: my original code here was also inconsistent with the reference manual. we allow a string if it can be coerced to a number. you could either fix or open an
Candidate: this is not needed
Reference: let's not printstacktrace in production code
Candidate: could we use <UNK>
Reference: i think this one should also get called for 1.3.0? in which case the method on ejb3remoteresourcedefinition could be renamed
Candidate: is there a reason for this class instead of creating a <UNK> one?
Reference: better keep that as a field as new instantiations are expensive.
Candidate: you could use a constant here instead of <UNK>
Reference: intellij is continuously recommending to simplify this code this way, but i think it is very hard to understand this way
Candidate: this is >= 0 || <UNK> == <UNK> || <UNK> == <UNK> || <UNK> && <UNK> >= <UNK> || <UNK> >= <UNK> || <UNK>
Reference: is this debug? otherwise, probably best to give more descriptive errors.
Candidate: this is not to be a in the
Reference: nit: static import anylong() for consistency?
Candidate: you could be pulled out of the method.
Reference: imho such a difficult for understanding and potentially error-prone statement. i don't understand it. please consider rewriting it in a simpler way. currently, if i understand statement correctly: the environment
Candidate: is there a reason no need to be there?
Reference: can just use map.of( ) here
Candidate: suggestion if (throwable == null) { throw new <UNK> }
Reference: does not look to be enough, because currentsessions.entryset() iterator below may still collide with recordrequest(). i recommend synchronizing the entire block
Candidate: you could use <UNK> instead of repeating <UNK>
Reference: s/-//'
Candidate: please add a definition that the specified id specified id specified specified specified specified specified specified specified specified specified specified specified specified specified specified specified specified specified specified specified specified
Reference: the same: can it be package-private?
Candidate: we should throw an exception instead of <UNK>
Reference: does arrays.equals internally have a short-circuit for a==b? if not, given that i think the majority of use cases they'll be ==, we invert this and do: if (a ==
Candidate: we could use a <UNK> instead of creating a object instead of is)
Reference: this should be done in a @before method using githubbeforeafter connection. <link_0>
Candidate: this is not mock
Reference: why does the session being unavailable mean that it's a demo user? shouldn't we not be here at all if a sessionunavailableexception is thrown?
Candidate: nope, this reflectiveoperationexception
Reference: is this really needed with the global suppression on class-level?
Candidate: you should use <UNK>
Reference: quick question: do we have blob authorization succeeded tests for delete and get operations?
Candidate: nit: finals
Reference: as above, the client needs to be closed
Candidate: newing the 2s of <UNK>
Reference: i don't know how it works for you, but for me it fails: > incompatible types: list<object> cannot be converted to collection<? extends message<?>> > return new simplemessagegroup((collection<? extends message<?>>)
Candidate: i would be good idea to synchronize on the view?
Reference: sql.sanitizecondition also?
Candidate: use readasstring(...) instead of <UNK>
Reference: any reason why this is 26 instead of 25?
Candidate: if this is is not encapsulated by <UNK>
Reference: i'm not sure that we need to have loader here.
Candidate: you could use <UNK>
Reference: this method should have some logging. especially in the case where the file type is invalid
Candidate: style-nit: strange,
Reference: you should implement this
Candidate: is there a reason why hook is be propagated here?
Reference: might wanna use the api version constant her for v28.0, so we don't have to keep switching this up.
Candidate: you could use <UNK>
Reference: the payload may not be json
Candidate: please @nullable.
Reference: needs to read the script name and parameters from the session.
Candidate: i liked that the is not <UNK>
Reference: better to use enum comparison if availabe rather than string comparison... also im not sure this business logic should be placed here, it seems a bit obscure
Candidate: this is not to be a <UNK>
Reference: can you move this check of whether or not we enable doas above to selectively call withremoteuserextractor, please?
Candidate: we could use <UNK>
Reference: why don't you call refresh?
Candidate: hmmmm.... we need to call <UNK>
Reference: remove new line
Candidate: minor nit: could be replaced by <UNK>
Reference: why are these methods here instead of in backdoor? (just like verifypresentindatastore for example)
Candidate: could you use <UNK>
Reference: i'm not sure if this is really an error... rather a warn. it's not that an answer is always required
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: if fields can be null, more null checks elsewhere might be needed. in this case, i would suggest not to use so many lines for the comparison, but use something
Candidate: please ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides
Reference: shouldn't we set the cachedprofile here before we return.
Candidate: i guess we could be a <UNK>
Reference: minor optimization. if this one pattern is going to be used often you could make it static as part of the class.
Candidate: can you move this to bind the tile <UNK>
Reference: extra line can be removed to match constructor
Candidate: use <UNK> instead of <UNK>
Reference: can you put brackets after the type instead of the variable? this is form is valid but [discouraged](<link_0> this occurs a couple different times in the pr.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: you'll keep in mind you should remove the "dslconverter" parameter from here?
Candidate: is there a reason for element?
Reference: can you protect this against a new severity level?
Candidate: this is designed to be a <UNK>
Reference: hmmm, might be more efficient to just invalidate the cache when a user's limits are changed rather than checking each time. <link_0>
Candidate: is there a reason to convert this method to a query?
Reference: was this pr build using maven before pushing? seams that it was not because maven would fix the formatting
Candidate: i think e -> e -> e -> e -> e -> e -> e -> e e -> e -> e e -> e e -> e -> e
Reference: hmm... getactiveinstance() is deprecated in modern versions of jenkins (as is getinstance()) - jenkins.get() is favored these days (ever since jenkins version 2.98). rather than update this code with an
Candidate: @ivange94 not sure that this is is not good idea.
Reference: the whole test is pagestore-only. it should not be disabled, especially in such way. i sent a possible fix in #1123.
Candidate: minor: you could use system.lineseparator() instead of '+'
Reference: // do nothing.
Candidate: this would be reasonable to wait for the user.
Reference: default access is probably good enough and is consistent with partialdefaultrecord.
Candidate: can we use <UNK> <UNK> constructor?
Reference: this one can be static.
Candidate: this is designed to bind the <UNK>
Reference: this could be made final
Candidate: i think we throw an exception here instead of wrapping an illegalstateexception anyway?
Reference: casting to a byte isn't going to work
Candidate: you could use <UNK> instead of <UNK>
Reference: adding this to a field is good manner.
Candidate: adding this field to manner.
Reference: do we need mutable list here? if not, can we use collections.emptylist() ?
Candidate: i think this should be a multicatch
Reference: how about collecting all active sessions and then looping over them once (avoid duplicating the counting code)
Candidate: you could use <UNK> here instead of <UNK>
Reference: since this is the same behavior on each side of the branch, perhaps put it after the branch?
Candidate: you could use a enum hierarchy instead of == null) { ...
Reference: readability might be improved by using the schema.offields(name1, type1, name2, type2, ...) factory method.
Candidate: nit: you could use <UNK>
Reference: i don't see a 'equals' implementation in both authenticationtoken and the token class itself. if i'm correct this means that it checks for object equality (similar to ==) which will
Candidate: this should be a constant?
Reference: should probably surround with a try catch and throw an objectmappingexception with the provided exception.
Candidate: nope,
Reference: i would rather throw illegalargumentexception here.
Candidate: i'm not sure how about the sure about changing that the timestamp (which does not seem wrong.
Reference: these actually should not be error messages. they were only printing out to err so they would display faster. i actually think we should get rid of these log messages
Candidate: you could move this check to <UNK>
Reference: i'd guess the @suppresswarnings("unchecked") above this wont be needed anymore.
Candidate: why do we want to log.debug too?
Reference: don't have to use this.
Candidate: this is be careful to the way?
Reference: can't request be null at this point, if the request parsing failed?
Candidate: rename to <UNK>
Reference: there is no point in case sensitive check for an empty string. also, just use stringutils.isempty(connection.getid())
Candidate: you could be replaced by <UNK> view?
Reference: leave inline and do tasktags.markinessential( effectors.invocation(...) )
Candidate: this could be simplified to <UNK>
Reference: you can use &apos; if you prefer (the numeric entity seems out of place otherwise). you may have previously seen people say that it was nonstandard, but (a) every browser
Candidate: you could use a constant instead of <UNK>
Reference: implementing xorcardinality at the container level is an improvement that sounds promising to me...
Candidate: use <UNK> instead of objects.isnull
Reference: does it has unit test? it should check diff scenarios
Candidate: use <UNK> instead of <UNK>
Reference: we should probably also do: fixitresourcemap.remove(delta.getresource())
Candidate: rename to
Reference: just disable the button instead ?
Candidate: not sure that the router is be modified by :. to bail in the future.
Reference: change to visible not just present :)
Candidate: please remove this return?
Reference: could java streams make it more readable/smaller ?
Candidate: you could use a 'final' here instead of <UNK>
Reference: the form below is used elsewhere:  event name length (%s) is longer than the maximum authorized (%s). '%s' was provided.
Candidate: we should log the error.
Reference: could you correct the formatting?
Candidate: is there a reason why not catching exception here?
Reference: why make partycontact depend on phoneutil? it's a very strange dependency. the partycontact class should not have to know anything about phoneutil.
Candidate: please use <UNK>
Reference: why not simply call?  return build(stage.production);
Candidate: is there a reason for element?
Reference: well, no, we cannot have a system.out here. a log should replace it instead.
Candidate: we should use a constant here instead of <UNK>
Reference: executecall should delegate to adjustparameters and adjustresult methods, to make it easier to understand/maintain what is going on.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: maybe extract this if sentence to a conditional method so that the code would be easier to read e.g. private boolean roleherarchynotsetforvalidcontext(){ ! rolehierarchyset && context != null }
Candidate: this should be a <UNK> <UNK>
Reference: suggestion asserttimereventempty(emptytopevent.getexecutionset(), non_cancelling, empty_value);
Candidate: suggestion assertmessageeventexecutionset(emptytopevent.getexecutionset(), empty_value, non_cancelling, empty_value);
Reference: there is another class named indexingservicefirehosemodule, wondering if we can just delete that class and use fireshosemodule in indexing service also.
Candidate: use <UNK>
Reference: better to add exceptions to method signature.
Candidate: i think that this is a <UNK>
Reference: this is not consistent with how we do the comparison in the datetimevalue code. there, we are comparing the underlying java values, i.e. using the compareto method of java's chronozoneddatetime.java
Candidate: i think that the operand is be <UNK>
Reference: @dmmiller612, i've removed this conversion and the tests are still passing, not sure what is it for ... if this version is ok for you, i can merge
Candidate: you could use <UNK> here instead of creating clear() for clear() every time. clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear()
Reference: might be nice to move emails_json to a constant somewhere that can be referenced by all uses across the app.
Candidate: this should be turned off.
Reference: is the retry handler doing something with the payload? if not, i'd just remove the finally block to avoid buffering it in memory unnecessarily.
Candidate: if this is not <UNK>
Reference: not sure all these metrics are useful. how do you envision their usage?
Candidate: is there a reason for this method to be called in the <UNK>
Reference: @vilchik-elena charset.defaultcharset()
Candidate: finals
Reference: this call should be on the level above (in the dopush methods), otherwise in case of requested==rows.size() the end() won't be invoked.
Candidate: if you could use <UNK> <UNK>
Reference: talked about at <link_0> . null was still left in. this field shouldn't be null imo unless you can point to a specific reason that we can't remove null.
Candidate: you could move this braces around
Reference: it was discussed in the code review to use instance of because event may get extended in future
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: let's keep this method unchanged since it is better we modify the interface catalog. instead let's add null checks when this method is being used.
Candidate: is there a reason for this method is not used?
Reference: when catching interrptedexception, always reset the state via:  java thread.currentthread().interrupt();
Candidate: why not -1l ?
Reference: literalencoder.toexpression() already returns the expression if the value is an instanceof expression, and a nullliteral if it equals null. i would get rid of the if statements and always return
Candidate: minor nit
Reference: same again. please throw original exception.
Candidate: you could call <UNK>
Reference: java if (stringutils.isnotempty(rc.getclient())) { map<string, string> parameters = cc.getparameters(); if(parameters == null) { parameters = new hashmap<>(); cc.setparameters(parameters); } parameters.putifabsent(client_key, rc.getclient()); }  maybe it's better
Candidate: is this a bit strange to <UNK> that the is not <UNK>
Reference: perhaps invert this if so it becomes a guard clause when location != menu_location.tools
Candidate: we should throw an exception instead of null.
Reference: return the result of sha256 instead of using the local variable.
Candidate: @ivange94 you could use a <UNK>
Reference: why you add option skipclassindexingiflowmemory? if alwaysindex ==true and no free memory left jadx will just hang and gc will eat all cpu. what the purpose of this option?
Candidate: is there any way to be null?
Reference: this mapping should happen via public enum and not via mapping backend enum to string
Candidate: is there a reason for element?
Reference: thanks for the fix @quxiucheng, i think this patch can be promoted a little, we can move this logic to the parent class sqldialect, you can get the sqlconformance from
Candidate: you could use <UNK>
Reference: unbind jndi? remove datasources?
Candidate: this is be to be called in <UNK>
Reference: i thought it was not that easy to parse a csv . what happens if we have : 35, 1456, "mytext", 89000, "other,text", 45 i mean the text encloser "
Candidate: no need to call <UNK>
Reference: collections.singletonlist already returns a list. why are you wrapping it in another arraylist?
Candidate: is there a reason for element?
Reference: these lines shouldn't be here?
Candidate: this is designed to be a <UNK> <UNK> the <UNK>
Reference: req: could you please rename streamsmetricsimpl metrics to streamsmetricsimpl streamsmetrics and then format the code like this  final streamsmetricsimpl streamsmetrics = new streamsmetricsimpl(metrics, "test", streamsconfig.metrics_latest);
Candidate: you could replace this by: <UNK> <UNK> <UNK>
Reference: this is very sketchy. hash codes aren't unique
Candidate: this could be a <UNK> <UNK>
Reference: the presto way to do this appears to be requirenonnull(schemaname, "schemaname is null");
Candidate: should we throw an exception?
Reference: add "this" qualifier
Candidate: nope, is this optional?
Reference: i would just log the warn.. no need for special logger.
Candidate: this is not webapplicationexception to this use-case.
Reference: dito - looks like you used search/replaceall ;)
Candidate: this should be <UNK>
Reference: maybe we could only propose branches for the remote we have started the wizard from?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: should be able to just do: applicationinfo info = pm.getapplicationinfo(packagename, 0); return pm.getapplicationlabel(info);
Candidate: ![critical](<link_1> 'severity: this complains about nesting.
Reference: this should be missing_catalog, which is causing the test to fail.
Candidate: use <UNK>
Reference: this is my major concern. it is true that we are not changing the very high level api, as clientcnxn is an internal class and applications should not use it
Candidate: nextvalueindex can be simplified to multimap = <UNK> <UNK> return <UNK> == null) { return null; }
Reference: please add braces here to create a scope since you're defining new variables inside the case
Candidate: is this a bit strange to use <UNK>
Reference: startcapture() calls system.setout() and system.seterr() so our tests should at least reset those after each test run. can you try using org.apache.maven.surefire.booter.providerfactory.invoke() instead of calling our invoke() implementation directly?
Candidate: you can use this instead:  java <UNK> <UNK> <UNK>
Reference: should be a new line after the closing curly brace ;)
Candidate: this is not
Reference: business logic should be in a service
Candidate: you should move this to a separate method.
Reference: instanceof would be more suitable
Candidate: please use objects.equals()
Reference: this is where you should be checking if there is just one specified license, not in the getlicensename() method below. the validation should always occur on set, not on get
Candidate: wait.forelementclickable() should be <UNK>
Reference: invalidpathexception is not handled here. i recommend using util#filetopath() instead. <link_0> suggestion path path = files.move(rootdir.topath(), util.filetopath(), standardcopyoption.atomic_move);
Candidate: should we use <UNK>
Reference: the close calls will not be executed if an exception is thrown. shouldn't they be placed in a finally clause instead?
Candidate: is there a reason for this logic?
Reference: most places in druid just use objectmapper.readvalue(persistfile, new typereference<list<lookupbean>>(){})
Candidate: nit: space after <UNK>
Reference: the replacement could be done just once outside the while loop as it will be the same for all the values
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: if the widget is turned into a label and the member to an entitymodel, these lines should be replaced by setentity().
Candidate: this is designed to be a <UNK> <UNK>
Reference: suggestion assertkeypair(file, null);
Candidate: @ivange94
Reference: the main bug was that the element of id constsumoption_option--1 is hidden so there **must** be an assertion check for that. so add the most important assertion check, which is
Candidate: this should be defined in absence of <UNK>
Reference: why make this protected? you can override it even if it is public.
Candidate: please use <UNK>
Reference: the @override should be on this line.
Candidate: we could use <UNK> instead of <UNK>
Reference: i suggest adding "removeasync" to the api and wait only for the last future here, this will speed up this method.
Candidate: instead of instantiating this
Reference: yes, i forgot this
Candidate: you could use <UNK>
Reference: in this case isshortwill have a default value of false - i assume that is ok? also a common pattern for multiple constructors is to call the the "full" one
Candidate: you could use a constant instead of <UNK>
Reference: is this method called when partition is removed from assignment? if not, may need changes in partitionrevoked method too?
Candidate: i think this became expecting exceptions?
Reference: i know it sounds picky but please store calculated threshold in fields (like regular hashmap does).
Candidate: @override public
Reference: throw if there are externs explicitly passed and skipparseexterns is true (or set at all)?
Candidate: i'm not sure that this is easy to be easy to be easy to be easy to be easy to be easy to be easy to be easy to be
Reference: such general initialization should go along with the field declaration, otherwise it gets lost when adding another constructor.
Candidate: you could use <UNK>
Reference: how are the changes within this file related to the pr? i would not have expected any changes needed in the ui layer for this.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i suggest you use org.apache.commons.lang.stringescapeutils.escapecsv() here.
Candidate: you could use <UNK> instead of <UNK>
Reference: by using failoverpriority, this will be simplified, you won't need the if() conditions anymore you will just have to do: .failoverpriority(failoverpriority.tostring())
Candidate: we could use only: <UNK>
Reference: rename to contribution
Candidate: rename to
Reference: just pass thiz with type object instead of thiz.tostring() here, the jboss logger should call tostring() automatically, and if for some reason thiz is null, it will not throw an
Candidate: i think we could throw an exception instead of returning an exception
Reference: what about removing the birds object and just iterating over docids?  for (string bird : docids) { ... }
Candidate: you could use <UNK>
Reference: return this;
Candidate: use <UNK>
Reference: are we forcing spark side execution here? why is that?
Candidate: we should use the error message
Reference: while doing snapshot transfer, all message has the same snapshottimestamp. may check the metadata's seqnum + 1 = ack's seqnum.
Candidate: is there a reason to throw an exception instead of returning null?
Reference: i would do a reverse().removefirst(predicate) instead of findfirst in order to not process elements 2 times, e.g.  java final stream<t> removed = reverse().removefirst(predicate); return removed.length() == length() ? this
Candidate: same as above.
Reference: the spacing style isn't following the existing conventions. can you reformat this patch to match what exists?
Candidate: could you collapse this guarded by assigning the middle of the middle of the middle of the middle of the middle of the middle of the middle of the middle
Reference: personally i prefer to inline the instantiation of columns directly in the call to table.addcolumn (as in line 72) since it makes the code more compact and easier to add/remove/move
Candidate: we should use <UNK>
Reference: should you be closing the socket when the received message code is unexpected? not clear what the proper behavior should be here.
Candidate: this understanding that this is throw a exception since it's never null. it's going to throw null.
Reference: check if _metadata file exist inside table dump path.
Candidate: this is not updated.
Reference: maybe string.format( "server[%s]", servername )?
Candidate: use <UNK>
Reference: try using java 8 stream api somthing like : selectedlabels = alllabels.stream().filter(label->label.gethosts().contains(gethostid()))
Candidate: why not leverage passing the conf here?
Reference: propose: "request to terminate work. all unique combination of <endpoint,query> were executed"
Candidate: i is a bit misleading.
Reference: we should use keyservice here, intention is to cache key temporary so under heavy load we don't download keys all the time.
Candidate: you could print stack to string concatenation instead of string concatenation
Reference: there is a logger-like syntax for this that is more efficient during valid state: preconditions.checkstate(false, "cannot cast from %s to %s", castfrom, castto); that said, if it's always invalid state
Candidate: is there a reason for the sake of the properties?
Reference: how is this check different from the one on line 426?
Candidate: this is designed to be a constants for each shard for each size.
Reference: is this more important than debug?
Candidate: can we return?
Reference: the materialconfig interface has a getfolder() method. why is this needed? the condition check, i mean.
Candidate: please use <UNK>
Reference: i would either add ifpresent to the method name or move if outside of the method.
Candidate: you could use <UNK>
Reference: do we really need this init() method? the _loaderhelper_ class itself is in the hibernate-search-orm module, which depends on both jpa and hibernate orm, so it's module should be configured
Candidate: i think this is a <UNK>
Reference: what happens if the parser fails? does it throw an exception? is jsonnull? both cases do not seem to be handled here.
Candidate: this log is non-trivial (can be updated.
Reference: new stringbuilder(empty_str) is equivalent to new stringbuilder()
Candidate: you could use <UNK>
Reference: please check error message and http code using [restjmssharedbaseintegrationtest.assertclientexception()](<link_0> method .
Candidate: use <UNK>
Reference: this doesn't make sense to me. if the thread is stuck and we are trying to join() it, we are stuck, too.
Candidate: you could use a constant instead of printing the
Reference: these two if can be merged.
Candidate: nit, tracker increases startup startup startup but i would be instantiated by isfile
Reference: throw the exception and somewhere at the top of the call stack, fail with a helpful error message.
Candidate: please add a message
Reference: as("legacy impl can unlock a lock taken by conjure impl")
Candidate: ditto about queries queries queries queries queries queries queries to queries to queries to queries to queries to queries to queries down to queries down to.
Reference: is there really that much of a performance gain in this case between byte orders?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: how often is this called and logged?
Candidate: please use <UNK>
Reference: 2500 is a magic number
Candidate: could we use <UNK> <UNK> <UNK>
Reference: perhaps have androidfxaccount have an adder that takes a bundle?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: better name for the main file of a definition please.
Candidate: i think this should be a efficient, that newvalue has been started, we don't have a blocked in the
Reference: interrupts should be re-raised.
Candidate: we could use a <UNK>
Reference: use of remaining() is exactly what got us into the oom scenario. even with more selectivity, this will result in oom if there is a lot of distance between the
Candidate: > 0 > > > > > > > > > > > > > > > > > > > > > > > > > > > >
Reference: not sure if this method should return anything as in fact in the mvc endpoint the return value is used for logging purpose only
Candidate: is there any reason to produce a meaningful query?
Reference: nit, long line? maybe split it into two strings concatenation?
Candidate: is there a reason for avro property?
Reference: formatting
Candidate: rename to <UNK>
Reference: touppercase() useless as it is done in "workspaceimagefigure.issvgimage(resourceextension)"
Candidate: you could remove the initialization.
Reference: maybe you can add the type of alien to the logfile.
Candidate: y instead of creating a data.
Reference: can you stick with the existing coding style and omit the assert. prefix here.
Candidate: you could use <UNK>
Reference: should we catch a numberformatexception?
Candidate: use <UNK>
Reference: google style is not to use abbreviations like sb. perhaps url?
Candidate: minor nit: you could use <UNK> instead of '+'
Reference: perhaps just chain here? return getalerts(collections.singleton(tenantid), criteria, pager);
Candidate: variantsourceentities.size() should be a stronger consider using a custom class instead of <UNK>
Reference: this method is long and has 3 nested levels. can you break it up into smaller methods. the file is getting very long. can you refactor that functionality into new
Candidate: is there a reason for this class instead of getters ?
Reference: can be replaced with configvalue / local constant
Candidate: you could use a constant instead of <UNK>
Reference: maybe redundant? you're providing 'action' to fencenode(); the method can check for itself if [action!=fenceactiontype.status] (no need to provide it as another parameter).
Candidate: if you could use brackets here
Reference: i think you'd like to print the content of 'input' here and pass the 'e' (exception) as a second argument of the runtimeexeption c'tor call.
Candidate: you could use a guid instead of using "\"" = <UNK> -> <UNK>
Reference: change==null test is pointless, line 39 above npe'd if change was null when getting the current patch set
Candidate: this is never returns null
Reference: declare namespace doesn't work yet?
Candidate: this should be <UNK>
Reference: consider iterating over systemproperties.entryset() instead. this will eliminate the need for key lookups in each iteration.
Candidate: you could use <UNK>
Reference: this seems to be an instanceof implementation because the old usagesearchevent can contain multiple queries (which is weird). i would recommend to use usagesearchevent instead, remove the instanceof and fix
Candidate: is there a reason to assert that this is not throw an exception
Reference: should 25 be configurable by the user?
Candidate: we should throw an exception instead of <UNK>
Reference: i think it would be more appropriate to use daofacade.getavailablemerit() here but perhaps not super important
Candidate: you could move this to <UNK>
Reference: nit: i usually find it more helpful to just say: "finish calculateassignment(). took: {} ms.". just to make it consistent with other logs.
Candidate: i missed.
Reference: could version specific values cause regression or bug?
Candidate: i think this should be separated by absence of the <UNK> true)
Reference: this is not the correct way to test the proxy that is set. we need to make sure that the worker is getting the proxy that we expect it to
Candidate: please use readasstring(...) instead of <UNK>
Reference: is there any risk this will grow to a size it becomes a problem? if not, using a guava cache is overkill, if there is a risk then yes, we
Candidate: is there a reason for element?
Reference: those if could be merged.
Candidate: you could use this assertion, that this is not efficient, that the is not <UNK>
Reference: i think setting cancelable to false can result in an infinite dialog since the onplansfetched event may get lost during a configuration change. i think this isn't handled in many
Candidate: you could use <UNK> here instead of <UNK>
Reference: does it need to be final?
Candidate: please add a <UNK>
Reference: and what about pseudo scopes? e.g. javax.inject.singleton.
Candidate: you could use <UNK>
Reference: would be better to use logger here
Candidate: should we log a warning instead of warning logging level to log level to reduce warning level to log level level level level level level level level level level level
Reference: checkstyle violations. there must be spaces around the braces. please check the tests
Candidate: is there a reason that this is is not to permission?
Reference: instread of string.getbytes(), use safeencoder.encode(string). alternate idea, keep safeencoder.encode(message) in variable and use it wherever you want.
Candidate: i wonder if there is a a locks that this is is connected to a bottleneck. i think that this is is a no-op but i'm not sure that we
Reference: it seems like these two deadline-related methods could be static.
Candidate: you could use <UNK> instead of storagetype <UNK>
Reference: i believe we already instrument the timelockservice below (line 497), so not sure how the metrics will handle two timelockservice interfaces. @schlosna is this ok?
Candidate: this is explained a "\"" -> "\"" <UNK> -> <UNK> <UNK> <UNK> -> <UNK> <UNK> <UNK> -> <UNK> <UNK> <UNK> -> <UNK>
Reference: is this if statement really necessary ?
Candidate: i think we could be a bit more than minor component but i would suggest to me. this component component component component component component component component component component component component
Reference: we should have a wrapper for the annoying backend.getinstance().runinternalcommand thing of a jig
Candidate: <UNK> maybe?
Reference: before synchronized
Candidate: i liked this synchronized
Reference: before doing this, you need to check that record.getschema().getfield(keyfield) is not null. if it is, the key field does not exist in the input record.
Candidate: this should deserve a
Reference: you can delete both of these try/catch blocks. if an exception is thrown it'll fail the test.
Candidate: is there a reason for this test is not <UNK>
Reference: maybe move the parsing / construction into another class? maybe even an inner class? i think the benefit would be keeping the searchengine class short, so it's easy to see
Candidate: this is not eating the exception is not thrown in tests.
Reference: no need to create variable functionhandle; just return.
Candidate: use <UNK>
Reference: nit: s/android/android/
Candidate: 32
Reference: breaks encapsulation. consider return collections.unmodifiableset(myappliestoprofiles). same goes for other collection accessors.
Candidate: why not use <UNK>
Reference: scim-schema? i think ist must be osiam now.
Candidate: you could use <UNK>
Reference: isn't the above the same as this (i.e. converting from timestamp directly to decimal)?  pdatatype.decimal.toobject(ptr, columnmodifier, pdatatype.timestamp);
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this should probably be a try with resources
Candidate: you could use a constant instead of <UNK>
Reference: somehow this was dropped from my review.
Candidate: this is extremely extremely extremely extremely extremely extremely extremely extremely extremely extremely extremely extremely extremely extremely extremely extremely extremely extremely extremely extremely extremely extremely extremely extremely extremely extremely extremely extremely
Reference: this is wrong create a template interface <link_0> line 129 and use the sb.append() function.
Candidate: you could use the <UNK>
Reference: shouldn't it be ancestorref instead of parentid? (in which case parentid would become useless)
Candidate: i think this should be <UNK>
Reference: any reason why we removed the type?
Candidate: you could use reflectiveoperationexception
Reference: it seems busy to stream/map the list into a list and then join into a string. we can go straight there java .put(tester_names, testnames.stream() .map(projecttesterimpl::maybequote) .collect(collectors.joining(",")));
Candidate: you could use objectutils for the property?
Reference: does this need to be writable?
Candidate: i'm not sure how about this out.
Reference: this won't turn text from null to empty, if that's what you wanted you need to do: text = strings.nulltoempty(text)
Candidate: i think this is a <UNK> to minimize <UNK>
Reference: can we modularize this as this code block is repeated.
Candidate: is there a reason for this test?
Reference: revert this.
Candidate: i think we could use <UNK> to <UNK>
Reference: can't this cause a class cast exception? when entity is of type businessentity<t> where t doesn't extend guid. the casting will be alright because type erasure, but then t will
Candidate: please remove this log.
Reference: same as above: use a constant for 'debug'
Candidate: i think admit a bit picky uribuilder
Reference: exception is super generic and is usually an anti-pattern. any reason for this change?
Candidate: this is not ides
Reference: make this as a log.error statement. and needs to have space after the ","
Candidate: we should throw an illegalstateexception rather than an illegalstateexception rather than an illegalstateexception
Reference: nit: this is not necessary, false is the default.
Candidate: is there a reason for this method to be a
Reference: again is this time sensitive (so a 20ms delay in thread 2 waking up to add "2" to messages will cause it to be out-of-order?
Candidate: is there a reason for element?
Reference: please add backticks for the code related parts of the message and the period at the end of the sentence.
Candidate: use commons-io
Reference: maybe i'm being dumb - but wouldn't it be better to continue at this point rather than abort - abort means you want to be retried again next duty cycle
Candidate: is there a reason for element?
Reference: you can avoid this null check through initialization in the field declaration. besides that lgtm.
Candidate: i think this should be encapsulated in <UNK>
Reference: please consider moving this in a setup() method.
Candidate: you could move this check to the
Reference: this casting is not necessary, d.longvalue() could be used instead.
Candidate: you could use checkargument rhs
Reference: this reveals the same problem as standaloneleaderelectionservice does.
Candidate: i think that this is is not <UNK>
Reference: [java.lang.string#matches(java.lang.string)](<link_0> -> nametocheck.matches(key)
Candidate: please use <UNK>
Reference: needs 3 _arguments_, plural
Candidate: this is optional?
Reference: need to do a stricter check then that. what if there is a layer or store named "script" for some reason? then doing a get for that layer may use
Candidate: you could use <UNK> instead of <UNK>
Reference: the log is a lie :)
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: probably need to make this code smarter, if user will create vm from api, without specifying sound card, and engine choose to add it and then fail, it will be...
Candidate: please remove the
Reference: do not abbreviate: slice encodeddecimal = decimals.encodescaledvalue(bigdecimal);
Candidate: nit: use braces around "return true"
Reference: the code in this and above method does the same thing, just on different link element. have you considered extracting it so you can just call: getlinkredirecttitle(externallinks.get(index)) getlinkredirecttitle(internallinks.get(index))
Candidate: please use <UNK>
Reference: won't it be useful to print messages before and after here (just like the connect)
Candidate: please use <UNK>
Reference: redundant generic. at least my idea requests to remove it.
Candidate: suggestion return <UNK>
Reference: when can this be null?
Candidate: please use getbackend() instead of <UNK>
Reference: please use featuresupported class
Candidate: you could use a guid instead of <UNK>
Reference: how about replacing this with _ like we do with version? it might be surprising to use a different replacement character i think. we also still might want to replace
Candidate: this is not be used?
Reference: while this was already a problem, should we switch to passing objects rather than building the string here? this serializes the schema every time the function runs.
Candidate: please use <UNK>
Reference: i would much prefer that we used service.id to build the set than the service itself. we don't really guarantee that the thing that implements service has a well implemented
Candidate: you could use <UNK>
Reference: what do you think about using string.format?
Candidate: this is labels, not sure.
Reference: braces please
Candidate: if this traces is not jboss thread safe. ??
Reference: i think you should create a new list<throwable> and pass it to the validator. with what you have here, a validator could remove errors. alternatively, the validation methods could return
Candidate: i think this should be a unsupportedoperationexception
Reference: not much you can do here, but equality isn't well defined for types. for example, string.class == string.class, but string[].class _isn't_ equal to the parameter of set<string[]>. there are similar
Candidate: this is be simplified to return <UNK>
Reference: so this will be logged every time imageincoming() is called? since that's the condition to break out of the do/while loop. if that's the case, then we probably shouldn't be
Candidate: @manuelplazaspalacio we could be a <UNK> <UNK>
Reference: make all uncapitalized. that is list => list, dump => dump, etc..
Candidate: is there a reason for this logic?
Reference: set<map<string, integer>> no?
Candidate: if you could use <UNK>
Reference: just catch all exceptions here
Candidate: is this worth replacing a nullpointerexception if <UNK> == null || <UNK>
Reference: use stringpool.empty instead
Candidate: this should be a bind <UNK>
Reference: i dont think we should set the count here. i think we should have an increment cound instead.
Candidate: you could use <UNK>
Reference: i think it would be too spammy here, but i think it would be a good idea to log that throttling is enabled when building a session
Candidate: 32
Reference: i'm not sure- why do you need this method?
Candidate: use <UNK>
Reference: not empty?
Candidate: you could call the clear() to the <UNK>
Reference: nit: same here regarding hashset instantiation
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: you can join the 2 conditions in a single expression.
Candidate: use <UNK> instead of <UNK>
Reference: missing braces.
Candidate: i think that marking the consequence of completes the consequence of the <UNK> completes <UNK> completes the consequence of completes the consequence of completes the consequence of completes the consequence
Reference: inline the rel(sql).
Candidate: suggestion <UNK> = <UNK>
Reference: why not a configkey<integer>?
Candidate: is there a reason for this change?
Reference: why not log the exception? by doing e.getmessage() we don't get the stack trace.
Candidate: i worrying if we could have to discover the held connection, but it would be to discover that will be held accordingly.
Reference: we can use getdefaultsearchstring(): gethostlist().setsearchstring(gethostlist().getdefaultsearchstring()); getvmlist().setsearchstring(getvmlist().getdefaultsearchstring()); getuserlist().setsearchstring(getuserlist().getdefaultsearchstring());
Candidate: suggestion if <UNK> == <UNK>
Reference: seems nicer to me to throw here an ioexception instead, after all this probably happens because of io issues.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: do we return doubles for both integers and double params?
Candidate: you could use <UNK>
Reference: code style: always use curly brackets, and space after if.
Candidate: if this is designed is designed to compute the <UNK> that will never be a child (because we want to check if the is a (because the will hang the
Reference: fetch uses upload on the remote side
Candidate: you could use a log.
Reference: is this the only reason the ioexception could occur?
Candidate: i think this is not required to instantiate the bean from the bean which is not found.
Reference: initializeyoutubeplayerfragment needs refactor to initializeyoutubeplayer.
Candidate: you can replace this with <UNK> with <UNK>
Reference: if (trace) missing?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i think for a test like this it would be good to use the core-service=platform-mbean stuff to validate the actual system property in the server vm. org.jboss.as.test.deployment.trivial.serviceactivatordeploymentutil has some utility
Candidate: is there a reason for avro ? thanks!
Reference: i would prefer to use variable names like releasesfromdatabase or sw360releases to have a differential between the sw360 thrift objects and rest objects.
Candidate: <UNK>
Reference: please also fix the typo in advanedlistener
Candidate: you could use <UNK>
Reference: the same thing as i already mentioned. don't use untyped maps for results. specify proper types for the api. otherwise, every decimal can lose precise value information until it gets
Candidate: is there a reason why is not set <UNK> here?
Reference: this needs to be changed to testutills.runrepairability("jkali", "/repairability_test_files/jkali/"); the first argument is the name of the tool.
Candidate: use readasstring(...) instead of <UNK>
Reference: please remove todo and .printstacktrace() and add proper logging instead
Candidate: please use <UNK>
Reference: i would write it like this, it does away with the try-catch:  java errors.checkthat(file.getpath(), content, is(equalto(reference)));
Candidate: you should use expectedexception instead.
Reference: i generally prefer boolean.true.equals, but that's just a matter of taste i guess.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: nit: could double evaluate if a callback throws while executing -- maybe wrap in a try catch and/or remove the callback before executing?
Candidate: @vilchik-elena can we move this to <UNK>
Reference: this prefix is the same in all 3 cases. extract it to a constant?
Candidate: please use formatter
Reference: hope this won't introduce flaky test.
Candidate: you could use <UNK>
Reference: i would've been ok with a 0 here, it's the == that matters -- but no problem
Candidate: nope, this is not <UNK>
Reference: replaceall is costly, it this needed or can it be done differently?
Candidate: is there a reason for this method anyway?
Reference: rename to requiredbundles and then just use required in foreach look var
Candidate: stringutils.isnotblank()
Reference: should we extract this to a method? the two ifs are doing the same if i am seeing it right.
Candidate: i would be nice to use the <UNK>
Reference: why this change?
Candidate: why not use <UNK> instead of <UNK>
Reference: personally i like seeing these log messages in the log. as an admin, there is a sense of comfort when i see these ;)
Candidate: if we want to warn ? thanks!
Reference: should this be in init() or start()? all initialization happens in init() and processing threads start in start()
Candidate: please add a log message
Reference: better not to use long dash lines in logs including test cases.
Candidate: please use readasstring(...) instead of <UNK>
Reference: create a new method like pdatatype.fromsqlelementtypename(typename), since you know you're creating an array. in that method, first look up the primitive type using the typename. then from the primitive type
Candidate: this could be simplified to <UNK>
Reference: change to: return mode; ?
Candidate: please use <UNK>
Reference: why 800? what's the unit? a self-decriptive constant would probably be more appropriate
Candidate: this is designed to be a <UNK>
Reference: what's actually updating this.reportstats? when reportedcounter is incremented, does reportedstats also update, due to the shared metricname ?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: often -> times
Candidate: i pagelogging
Reference: looks like these two are the only two test cases testing the imap methods with maxidle support. shouldn't be more here? also, these are unrelated to this pr though: -
Candidate: you could use <UNK>
Reference: replace with retval = wish1.getindex().compareto(wish2.getindex());
Candidate: you could use a <UNK>
Reference: use immutableset.builder instead - no need for the intermediate hashset
Candidate: you could use computeifabsent clear()
Reference: redundant semicolons.
Candidate: please use <UNK>
Reference: nit, remove extra ;
Candidate: @chaviw could use stringutils.isnotblank()
Reference: removing this line breaks the plugin interface.
Candidate: is there a reason for this method is not empty?
Reference: move feature layer instantiation and operation layers to before the try block. the xmlquery is only relevant to the populate call (and therefore the feature query result future too).
Candidate: please remove unused
Reference: you can use function here. and this function can be static value
Candidate: throw an (throwable exceptions?
Reference: non-informative info log
Candidate: please add router
Reference: add stop to catalogreplicashiipper?
Candidate: you could replace this with @override by <UNK>
Reference: this may not be 100% accurate for a local deployment where multiple processes share the same host name but different ports.
Candidate: <UNK>
Reference: ![major](<link_1> 'severity: major') remove this unused method parameter "evt". [![rule](<link_2>](<link_0>
Candidate: i think that the clear() is succeeded to the <UNK>
Reference: randomutil return a thread local random?
Candidate: you could use <UNK> int offset = <UNK>
Reference: it seems like this can compute a negative lag for a partition because latestoffsetsfromkafka might have stale latest offsets and highestcurrentoffsets will always have updated information before the lag is
Candidate: is there a reason to integrity failures here?
Reference: yep, it should be backward compatible. in fact i believe that your existing tests will/should pass without changes. cheers
Candidate: is there a reason for this change?
Reference: you might want to use non-thread safe class stringbuilder instead of stringbuffer.
Candidate: why this this be a <UNK> <UNK>
Reference: i would just return the boolean expression here. also, do you want to use stringutills.isnotempty? similar thoughts for the other "exists" functions below
Candidate: this is be simplified to <UNK>
Reference: you can check only exp instanceof namespaceaware because "null instanceof namespaceaware" is returning false
Candidate: this is designed to check if <UNK> == null || <UNK> == null || <UNK> == null || <UNK> == null || <UNK> == null || <UNK> == null) ||
Reference: in that case getdatetime(jsonobject object, string membername) should use this method. also you should check that formatter != null.
Candidate: if you is this..
Reference: i think that it would be more clear if the if/else code was extracted in a separate method called: addonlypositiveaccountingentriesforpdpprocessing
Candidate: is there a reason for this logic?
Reference: i think adding a field that can be specified at construction time that gives this a name would be useful. usually the people creating the input streams will have some
Candidate: use <UNK>
Reference: this is exactly the same as 'extendedelement' a few lines above. it's not clear why we have two variables 'extendedelement' and 'baseelement'. is it just to distinguish changes to the
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: for all these assertions: the other way around? testng is assertequals(actual, expected)?
Candidate: wait.forelementclickable() should be <UNK>
Reference: it seems to me you don't need map here
Candidate: enforce foreach argument argument argument argument argument argument argument argument argument argument argument argument argument argument argument argument argument argument argument argument argument argument argument argument argument argument argument argument
Reference: finally?
Candidate: let's use <UNK>
Reference: can we rename this variable so that it is intuitive. eg:- boolean hasmorerows = false.
Candidate: this is strange, why not just "return <UNK> <UNK> interfaces) { return false; }
Reference: this should be moved after the check for whether the subtree root is present
Candidate: is there a reason for this logic?
Reference: is there no insertall or merge in java?
Candidate: is there a reason for this class instead of calling super() here?
Reference: i wonder if we need here a similar converter mechanism as for serializing into the database: <link_0>
Candidate: i liked that this is a efficient, (found the <UNK>
Reference: let's fix sqlviewexporterspi instead of excluding it (looks like a bug in its implementation)
Candidate: let's add braces around
Reference: collections.singletonmap
Candidate: you could move this to <UNK>
Reference: no need for the offensive language :)
Candidate: <UNK>
Reference: better to add nonnull precondition guard for leaseblobmanager here.
Candidate: is there a reason for element?
Reference: it looks like it also has to take care of casts
Candidate: style-nit: formatting =>
Reference: likewise..
Candidate: likewise..
Reference: what is this stupid iteration? why don't you use map.values() ?|?|?|?
Candidate: <UNK> -> <UNK>
Reference: getidasstring ?
Candidate: you could print stack trace to debug level
Reference: change to state == replicastate.standby
Candidate: rename to
Reference: this loses any existing bounds and annotations. i think you'll want to combine just like annotated does.
Candidate: this is a <UNK>
Reference: i reckon extracting this 3 lines to a private method would save some space in the test.
Candidate: you could use <UNK>
Reference: what happens if fastpass/bin/fastpass doesn't exist? for instance, what if i use this plugin in any other repo? should we return an empty optional if the file doesn't exist?
Candidate: log.debug
Reference: use getnonnullrequestparamvalue
Candidate: this is not huge to be aligned
Reference: 1) the getsystemmenuitembyname() function itself returns the menuitem on which you can call setvisible(). you don't have to call finditem() on it again. 2) getsystemmenuitembyname() can actually return null. some
Candidate: i think that this is not efficient, but i am not sure how about removing the
Reference: sounds like an error suppression. could you please explain this change a bit?
Candidate: you could use a <UNK>
Reference: fwiw you could have put the project.namekey into a sectionmatcher. its an internal hidden implementation detail of the server. this would clean up some of the map usage and maybe
Candidate: this sketchy a player = <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> : <UNK> { <UNK> player = <UNK> player = player = <UNK> player = player = <UNK> player =
Reference: wrong indentation, it should be in line with the assert above. note: we use 2 spaces for indentation. you can verify whether your code conforms to flume's code formatting guidelines
Candidate: log.debug -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e ->
Reference: it seems to me this whole block could be added to mavenstructuredpomeditorpagefactory
Candidate: this is tear down
Reference: what's this for? shouldn't new categorypage().open(categoryname) make sure that the page is ready to be tested? also, we query the dom before waiting, what happens during these 1500 ms?
Candidate: can we use <UNK> here instead of objects.isnull
Reference: this still seems like an odd place for these methods. shouldn't these be in sqlgraph?
Candidate: <UNK> is designed to be <UNK>
Reference: again, the static import makes this harder to read.
Candidate: wait.forelementclickable() could be <UNK>
Reference: please use final stringreader sr
Candidate: log.debug
Reference: since we are only looking for 0 or 1 results, it seems like queryforobject might make more sense here.
Candidate: maybe we could use a <UNK> instead of creating a new object instead of creating a new object?
Reference: use objects.hashcode() ?
Candidate: you could use <UNK>
Reference: this method can be replaced by featuresupported.hotplug(version) which performs exactly the same.
Candidate: can be replaced by the property?
Reference: not npe safe (order has changed) should be value.equals(buttonvalue) with precondition check, or stringutils.equals(value, btnval) if commons-lang3 available in classpath
Candidate: is there a reason for this method is empty?
Reference: this is network-incompatible change. either make it network-compatible, or set the right required remote versions. and make sure to test it with non-dev builds, both when trying to join on
Candidate: please use stringutils.isnotblank()
Reference: you don't need to change it for this pr, but for the future, baos is typically used as a name for a bytearrayoutputstream, not a byte[]
Candidate: maybe we could be a constant here instead of <UNK>
Reference: perhaps keep this as before for easier debugging, ie have it match the method name?
Candidate: if (args.length != null
Reference: i think we should create a defensive copy of the map
Candidate: is there a reason for this class instead of creating a <UNK>
Reference: add standard soft assertions to the mix
Candidate: wait.forelementclickable() should be <UNK>
Reference: let's rollback to the first version. we can keep this as a future possible improvement.
Candidate: i nesting.
Reference: not quite, to go the npe route, you should use a liner with objects.requirenonnull().
Candidate: you can iterate through the <UNK>
Reference: hard-coded wait can cause tests to be slow. is it possible to use waitforpasscondition(() -> <condition>) instead? (see my snippets below). in general, you would wait for page to load,
Candidate: you could use <UNK>
Reference: @shivtej1505 these values are used in each test so maybe we should make them constants ? if yest then apply change and feel free to merge :)
Candidate: please use <UNK>
Reference: i think you missed this out during refactoring? i.e. if (questionid != null && selectedsection != null)
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why do you call getselectedvalue() in other places, but here you have the code instead
Candidate: please use <UNK>
Reference: please move port number to a constant
Candidate: this is designed to be a <UNK>
Reference: unnecesssary change
Candidate: should be be probably?
Reference: couldn't we extract all those checks and navigations to a method #getlaunchconfiguration(debugevent event)? this would shorten these rather lenghty checks and extractions (event -> source -> process -> launch ->
Candidate: i think that this should be <UNK>
Reference: java return charmatcher.inrange('a', 'z') .or(charmatcher.inrange('a', 'z')) .or(charmatcher.inrange('0', '9')) .negate() .trimandcollapsefrom(s, '-');  this will convert .something.*.blah_$$$_whatever_ to something-blah-whatever
Candidate: please use <UNK>
Reference: it is better to use the logger here.
Candidate: if you could use a '+' instead of '+'
Reference: minor: since locatemembertests has been renamed to locatetestsartifact, maybe downloadmembertests should be renamed, too?
Candidate: is there a reason for initialization?
Reference: i am trying to get rid of these checks where they don't save a large amount of work. no need to check whether logging is enabled here, there's no work
Candidate: you could use <UNK>
Reference: this warning message is not clear to me. can you provide a sample?
Candidate: we could use only: <UNK> instead of <UNK>
Reference: i think the threadlocal itself should never be set to null (and i would instantiate it eagerly in the constructor), only its thread-specific value should be. otherwise a thread could
Candidate: if you could use <UNK> <UNK>
Reference: might be good to explicitly call out the since4pass icon type instead of using an else. in case they ever add another icon, we won't show the since4pass instead
Candidate: i am not sure how about this hack to a bit more than <UNK>
Reference: logger.error("some message", event.getexception()); instead
Candidate: wait.forelementclickable() could be <UNK>
Reference: this can be read easier by others by splitting the check using "guards style": <link_0> if (getmapgenerator.requiresinternetconnection()) { return false; } if (settings.getmapfile() == null) { return false; } return
Candidate: this is be objects.isnull
Reference: prices.length == 0 || prices.length == 1 <==> prices.length < 2
Candidate: is there a reason for element?
Reference: lost original code. use multistatus to store both full original status and a new code.
Candidate: you could use <UNK>
Reference: it seems it will break alphanumeric sorting, e.g natural comparator sorts these in wrong order "num10071", "num9999"
Candidate: maybe we could use a checkargument here instead of printing the
Reference: nice catch, this is indeed possible.
Candidate: we could use a throwable here instead of <UNK>
Reference: can we be sure this bean hasn't been created yet?
Candidate: this should be to be called datacenter
Reference: update.getupdatedobject().getvaluesforattribute(attributetype.mnt_by); is a bit cleaner?
Candidate: <UNK> -> <UNK>
Reference: jenkinsrule.waituntilnoactivity would be easier. that is how i normally test triggers. [example](<link_0>
Candidate: nitpicking: you tear combined: = <UNK>
Reference: nit-pick: just use an arraylist because this list should only ever be appended (and saves creation of ephemeral list-node objects)
Candidate: we could use stringutils.isnotblank instead of stringutils.isnotblank rather than ==.
Reference: @kdkeck looks like a copy/paste error here
Candidate: please use <UNK>
Reference: what about making the method implementation be: return cmd.getrefname().startswith(new_draft_change); ?
Candidate: minor thing: suggestion if <UNK> { ...
Reference: not sure why it says student here :laughing: maybe we could open an issue to change this to instructor instead if there's a need to change it.
Candidate: ditto about using ==.
Reference: @adyach shouldn't this be different from the remote url?
Candidate: is there a reason to be null?
Reference: if the bridgehandler is null you set the thing to online?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: use flux.from and use the abbreviated subscribe
Candidate: you could bail here instead of calling <UNK>
Reference: i agree.
Candidate: nit: <UNK> 221
Reference: remove policy.endopwork constant and all references to it. change policy.opwork from 99 to 100.
Candidate: useless
Reference: illegalargumentexception
Candidate: suggestion if (throwable > 0) { <UNK> + <UNK> + <UNK> + <UNK> + <UNK> + <UNK> + <UNK> + <UNK> + <UNK> + <UNK> + <UNK> + <UNK> +
Reference: please log the error before returning the exception.
Candidate: please use <UNK>
Reference: maybe we can remove this "iserrorenabled"
Candidate: this is a bit nervous that this will be a <UNK>
Reference: i think objects.remove() is going to throw exceptions rather than return null when the pool is empty
Candidate: you could use this..
Reference: use constants for string values occuring more then once.
Candidate: use a string constant.
Reference: i'm a bit lost on this change.. so is this now iterating twice? why the check during iteration was not good?
Candidate: minor nit, but we could factor this into a <UNK>
Reference: more usual to have "} else if (...) {"
Candidate: "if "if "if "if "if "if "if "if "if "if "if "if "if "if "if "if "if "if "if <UNK> ternary.
Reference: possibly this deserves a localized message
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: s/failedtoberemoved/failedremoving/
Candidate: you should add a device id params, params, params, params, params, params, params, id params, params, params, params, params, params, params, params, params, params, params, params, params, params, params, params,
Reference: update is done in wrong place, look down domain is updated at line 167
Candidate: you could use isempty() instead of repeating <UNK>
Reference: why is groupartifact being set twice?
Candidate: this is not be used?
Reference: this means that you must push all of the patchset as once, else you'll break the build. so either do so, or move this line to its proper commit.
Candidate: is there a reason for this method to be null?
Reference: can be replaced with more simple one: return compilation_message.test(text) || linker_message.test(text)
Candidate: you could be simplified to <UNK>
Reference: looks like there are odd parentheses in the command: organizations.removeif((o -> nonnull(o.getparent()))); \> organizations.removeif(o -> nonnull(o.getparent()));
Candidate: please use <UNK>
Reference: is this line too noisy? i think its helpful to see it
Candidate: please remove this line
Reference: seems we'd wait 1 hour before attempting to resolve again if there was no records found. that'll happen from time to time in prod due to infra breakage. how about
Candidate: could you use <UNK>
Reference: isn't this wrong? the list before the replaceathead was: [1, 11], and the replace was ([1], [111]), so the result should be [111, 11], right? so when iterator in reverse
Candidate: you could use a constant instead of <UNK>
Reference: you can remove first condition and make second condition vise versa so null is handled automatically
Candidate: if we is a criteria that is is not efficient, we could use <UNK>
Reference: remove this if you make the postdraw for entries
Candidate: you could use a constant instead of <UNK>
Reference: same reason here. > actually, i think it is not the method's responsibility to verify the instructor privilege here. as long as the pre-condition for getinstructorofcoursefromrequest is fulfilled, it should
Candidate: you could use a multimap here instead of equals?
Reference: logging this every time it fails will lead to a lot of log bloat. could you keep track of whether this warning has been emitted before and only warn the
Candidate: can we pull this into a constant?
Reference: let's not make this too hard on ourselves, let's put an if statement here and let's generate: setwireframetask : enable wireframe / setwireframetask : disable wireframe in the log. we
Candidate: use <UNK> instead of <UNK>
Reference: strictly speaking this is unnecessary as start can be accessed from setascancelled directly.
Candidate: this is a <UNK>
Reference: nit, the assertion hassize(1) already says there should be one group, what is not said though is why?
Candidate: is there a reason to change this method to well?
Reference: check formatting..
Candidate: you could use isempty() instead of <UNK> names.
Reference: please remove this before committing
Candidate: nope, this is not
Reference: this call throws assertionerror so this won't work. you want:  try { expectexception.evaluate(); } catch (assertionerror e) { assertthat(e.getmessage(), containsstring("expected exception: " + assumptionviolatedexception.class.getname())); return; } fail("expectexception should throw
Candidate: why eating this exception is not
Reference: this is a bit brittle, but i don't really see a way to waitfor() the end of the rebalance (as opposed to waiting for some time, hoping that the rebalance
Candidate: <UNK> guidelines](<link_0>
Reference: looks like throws exception is not needed.
Candidate: you could use <UNK> <UNK>
Reference: no reason we should do this more eagerly than "feed.sla.statuscheck.frequency.seconds". can use the same, but, start with a delay, so this runs a little after pending instances is populated.
Candidate: no need to call <UNK> explicitly.
Reference: tostring() is not implemented for dropwizardreporters.
Candidate: if you could use a string objects.tostringhelper() instead of <UNK>
Reference: could we unify this between broadcaststatetransformationtranslator and twoinputtransformationtranslator? the entire method is identical in the two classes (minus checking for keyselector in a single input, but the version from twoinputtransformationtranslator
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: maybe if collectchangedfiles returns an empty list, simply continue?
Candidate: i think we could be <UNK> to <UNK> events.
Reference: this. is not needed. also make the targetdomainname field volatile because it's checked and modified and invalidated from different threads.
Candidate: if this is is designed to be called at the beginning of all.
Reference: colorlist  will never be null, widget#getlabelcolor and widget#getvaluecolor always return a list instance.
Candidate: if <UNK> == null || <UNK> == null || <UNK> == null) {
Reference: this statement does not need the conversion, it's just checking that there's at least one row selected.
Candidate: no need for the
Reference: let's rename these to addshaderprogram(string).
Candidate: you could use <UNK>
Reference: nit: .filter(singlecolumn.class::isinstance)
Candidate: this is is unnecessary.
Reference: would be better to log here i think.
Candidate: this is designed to use a json collections.
Reference: suggestion thrown.expect(containscause(new validationexception("unsupported value 'test' for timestamp-format.standard. supported values are [sql, iso-8601].")));
Candidate: use <UNK>
Reference: why doesn't computeifabsent() work for us here?
Candidate: could you do: <UNK> = <UNK> openrepresentation(localsession.getopenedsession(), "manualairdtable", "manualairdtable", <UNK> <UNK> <UNK> = <UNK> <UNK> <UNK> <UNK> <UNK> = new <UNK> <UNK> <UNK> <UNK> = new <UNK> <UNK> <UNK> <UNK>
Reference: just a doubt, here typelist contains only 1 value ("all"), so why join is being used, we can directly provide the string value
Candidate: could we use the prefix?
Reference: find available port helper method?
Candidate: you could use a page. page.
Reference: nit: we wrap at 100 columns
Candidate: should we assert that the
Reference: why can't you use writecharsequence(...) ?
Candidate: please use only: <UNK> instead of <UNK> events.
Reference: please review code format
Candidate: is there a reason to assert that test stronger assert behaviour?
Reference: @mavrk one test should only be for one method and one combination of parameters. and the goal is that every public method in the service layer is tested. so you
Candidate: please use <UNK>
Reference: nit: instead of observable.just(long.valueof(0l)) you can take advantage of auto-boxing and write observable.just(0l).
Candidate: suggestion <UNK> = new <UNK>
Reference: it's a little confusing to use a local variable of the same name as a class variable. perhaps you can call it keepthisconnectionalive?
Candidate: suggestion minor nit : minor nit d : minor nit
Reference: can you make all the "unsafe" methods you added have package-private (default) protection instead of public.
Candidate: is there a reason for this method to be a
Reference: what about duplicates? maybe better use to tomap() variant that overrides entries instead of throwing an exception.
Candidate: we should use <UNK> annotation, instead of <UNK>
Reference: please do not perform validation based on method call side effects, if you need to validate number of properties just do that
Candidate: i think we could be simplified (up to <UNK> <UNK>
Reference: it might be worth factoring this out to a haserror function
Candidate: i'm not sure how about the extremely detail about extremely detail about extremely detail about extremely detail about extremely detail about extremely detail about extremely detail of <UNK>
Reference: because of jit optimizations, the iterator form of for is [faster](<link_0>
Candidate: you could use <UNK> instead of ==.
Reference: typo in the log message. should be _have been_. can you place this message in a resources file? did ux sign off on this message?
Candidate: why not -1l <- -1l
Reference: what's the benefit of storing this as a line w/ slope instead of an angle? it seems like "robot pose" is really just a line with the notion of a
Candidate: you could use <UNK>
Reference: i believe _registerbuiltin.register(factory);_ should also be executed, in order to have a provider factory that behaves the expected way. wdyt? (this applies to all similar code blocks in this pr)
Candidate: wait.forelementclickable() is be
Reference: we should pass partition key to cosmositemrequestoption here. the intention of this benchmark is to measure perf when pk is passed as request options.
Candidate: if you could use only: <UNK> == null) { return; }
Reference: what would you think of the following construct? java try { return downloadtype.valueof(type); } catch (final illegalargumentexception e) { return map; }  it's not the same as the current
Candidate: we should use a string concatenation instead of <UNK>
Reference: returning qlisthere should be enough, unless qlist is null
Candidate: is there a reason for this method to be called in the <UNK>
Reference: should inline
Candidate: suggestion return <UNK> -> <UNK>
Reference: @t-izbassar i think it's not clear, because default matcher in hamcrest library usually is matchers.equalto(), so as a user of hmrqtextbody i'd expect that body is equal to constructor parameter
Candidate: suggestion <UNK> = <UNK>
Reference: can we add here more descriptive name instead of element? maybe templatename, templateelement or template?
Candidate: is there a reason for element? element? element?
Reference: change to static import ?
Candidate: @vilchik-elena is there is a to check that that the is not <UNK>
Reference: gethoststatus(host) should not be called anymore, so do you still need the when()? removing this catches the case where it is called unexpectedly
Candidate: you could use a local variable?
Reference: you can run into a problem if you use basename; imagine that multiple map reduce tests are running in parallel. also i would suggest pulling out the results lists into
Candidate: is there a reason that is a to be printed here?
Reference: so hassubclasses is true only in the single_table case? i don't understand how this commit is related to "table per class hierarchies" and fix anything for them. could you explain
Candidate: this "_" is returned", <UNK> offset + "_" + offset + offset offset offset offset offset offset offset offset offset offset offset offset offset offset offset offset offset offset offset
Reference: update this if statement to use identity.isvalid()
Candidate: suggestion return <UNK>
Reference: here also, let any exceptions be thrown, and handle it at the bottom of the call stack.
Candidate: if we non-trivial is non-trivial non-trivial
Reference: obviously the second invocation should not have been replaced, since you are still checking for null. given the presence in the init package i suspect that getinstanceornull is correct in
Candidate: if you could use <UNK>
Reference: you need to get rid of the forward slashes here too
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: if we want to add same object as key and value, why are we using concurrenthashmap instead of sets.newconcurrenthashset()?
Candidate: is there a reason for this logic?
Reference: the redis server is started at host:
Candidate: if this is right...
Reference: please use map<?,?>
Candidate: is there a reason for this logic?
Reference: it looks like it's possible to get this value while checking "frequency" java entryset() .stream() .filter(e -> e.getvalue().equals(envvalue)) .findany() .orelse(null) // should never happens .getkey()
Candidate: is there a lot of duplicated constants in strings?
Reference: - remove if not exists - move this statement outside of try block; otherwise, if create table fails, drop table in finally block will fail as well
Candidate: is there a reason for this change?
Reference: can we log the exception?
Candidate: please remove.
Reference: what happens if the optional is empty?
Candidate: if we is going to have a <UNK>
Reference: see #1307
Candidate: if this is is not authentication connection,
Reference: really minor, but i would call this method "retryifneeded" or "retryifconcurrentupdate"
Candidate: i'm not sure how about this is a but i think that we have a to <UNK> the <UNK>
Reference: why the \1 byte at the end here? should be abd, no?
Candidate: use <UNK>
Reference: not sure it's needed, you just registered the 3 events.
Candidate: why not use <UNK>
Reference: remove
Candidate: you could use the exception instead of <UNK>
Reference: not quite sure why do we pass real log provider here. for example situation: during migration from 3.2 to 3.3 we need to do only count store migration. as result,
Candidate: could we use <UNK> annotation?
Reference: nit - just use new hashmap<>();
Candidate: suggestion <UNK> = <UNK>
Reference: we should remove the cookies before sending the loginmsgtoregenerateanticsrftoken, otherwise the session might not be correctly updated.
Candidate: you could use <UNK> here instead of <UNK>
Reference: nit: maybe nice to gate this behind if (logger.isvisible(level.fine)) { ... } so throwable.fillinstacktrace isn't called unnecessarily.
Candidate: static import
Reference: code style. might be helpful to highlight code you've written and do a ctrl+alt+l (reformat code).
Candidate: you should use the <UNK> e1
Reference: this method could be supported. you could do it without too much work by doing new ordimfilter(bounddimfilters).getdimensionrangeset(dimension)
Candidate: please use <UNK> instead of <UNK>
Reference: why create and fill(0)? zeros is enough.
Candidate: you could be simplified by <UNK>
Reference: java // function expressions without names have a name node containing an empty string.
Candidate: if you talked about pulling this into a <UNK>
Reference: why can't we put this logic within the other filter?
Candidate: we can move this to the constructor?
Reference: why double storage of the events? you seem to have removed most of the workqueue usage already.
Candidate: suggestion <UNK> = <UNK> + <UNK>
Reference: @jomarko hi. i think @danielezonca is creating a specific class to hold the string constants used throughout the code, so probably that # should be replaced. beside that, i think
Candidate: this should be <UNK>
Reference: i understand that you actually don't need the full result, but isn't this operation rather limiting? if you don't want to instantiate the result into some list, you could define
Candidate: this is optional?
Reference: nit: this can be ifaces_all
Candidate: you could use <UNK>
Reference: this will also list the contents of the system config. so maybe we must not deprecate the open variants? also note that list() loads the config.
Candidate: you can use <UNK> permissions. thanks!
Reference: if writefileinfocache#remove returns true we will miss to check readfileinfocache#remove (the 'or' will not evaluate the second operand)
Candidate: log.debug log.debug log.debug
Reference: can you break lines so that it can fit 80 chars?
Candidate: use <UNK>
Reference: move them to an alter util? or maybe a altertable, and have two implementation: objectaltertable and propertiesaltertable.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: please sort this out.
Candidate: should we use <UNK>
Reference: why does this need a super()?
Candidate: this is not
Reference: maybe remove the useless super()?
Candidate: if this is designed to be a the auto-boxing
Reference: i find it strange that websocket is a member of connectionattemptstate, it should be simply a member of xmppwebsockettransportmodule instead.
Candidate: i doubt that this is not the events.
Reference: isunauthorized 403
Candidate: isunauthorized
Reference: ![major](<link_1> reduce the total number of break and continue statements in this loop to use at most one. [![rule](<link_2>](<link_0>
Candidate: ditto
Reference: rename to source
Candidate: use readasstring(...) instead of <UNK>
Reference: same as above for product, content doesn't have a tostring method, so this makes sense. i can write a tostring for content if you like, or you can.
Candidate: use <UNK> instead of <UNK>
Reference: why add the extra variable?
Candidate: you could use <UNK>
Reference: use resourceutils.closeorlog() instead
Candidate: suggestion int <UNK> = <UNK>
Reference: should probably throw an error(e) in this case...
Candidate: this ou = <UNK> throw new exception
Reference: this seems a little odd. why would i need to register an accessdecisionmanager in order for the authorizedevent to be fired? it would likely be a breaking change if applications
Candidate: you could use <UNK> here instead of <UNK>
Reference: we'll need to hash-compare against tags too won't we? rename cat to dog but a note already has dog as a tag i think we'll still get a duplicate java
Candidate: why not -1l
Reference: i see that you're using the compatibility-version in the template, but what if the template doesn't have custom compatibility-version and its cluster is being changed?
Candidate: this vds is vds vds vds vds
Reference: i think you should have this loop also after the start time array puts. or else you have a smaller header than what is calculated in getspecificheadersize()
Candidate: use <UNK>
Reference: you can just inline key and value imo.
Candidate: this is be careful here
Reference: don't use kaltura.com:1935 in the pattern, since this will break everybody that uses different hostname (like qa or developers). search just from /klive/....
Candidate: if this .show() part, should be called on the view?
Reference: try-finally, please?
Candidate: is there a reason that is is not correct?
Reference: instead maybe just use try-with-resources?
Candidate: you could use <UNK>
Reference: shouldn't this be assigned?
Candidate: unsupportedoperationexception
Reference: it is redundant check. value.getallvalidationresults() will never return null. i think developer should check for null only those values, which is not under his control (e.g. incoming parameters of public
Candidate: if you should use the annotation, annotation, annotation, then the is not <UNK>
Reference: add card hints to inform user about useful data: ![shot_200608_040615](<link_0>
Candidate: this is designed to bottom of the bottom of the bottom of the bottom
Reference: same concern as above.
Candidate: if this is is never null.
Reference: i think we should set the same for xml configuration. @mustafaiman ?
Candidate: is there a reason to assert that this is not used?
Reference: remove this commit since it is in finally
Candidate: you could use a logger instead of '+'
Reference: listfiles() can return null if the threaddir doesn't exist (e.g., process terminated before you called this function) so you need to do a null check before iterating below.
Candidate: please use <UNK>
Reference: if the map is empty then the stream won't do anything.
Candidate: if you are touching this unconditionally, is a <UNK> <UNK> is a bottleneck. consequently, in the <UNK>
Reference: don't do string formatting yourself.  java log.debug("constructed {} of type {}", this, this.getclass().getname());
Candidate: throw an exception exception
Reference: i thought that we did not need to have this mapping in the compute engine
Candidate: this is designed to be a <UNK> <UNK>
Reference: prefer renaming the method to handleexpiredrequest since there is no longer distinction within this method on which expired request should be handled.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: is this update required to fix stackoverflow ? if this is not related better to move to separate commit of the same pr.
Candidate: use <UNK> instead of <UNK>
Reference: now that dynamicitem is safe in master (i merged the websession work from martin and jonathan) this should use the same model and have exactly one item contributed from a
Candidate: <UNK> -> <UNK>
Reference: it seems to be enough with tajoexception rather than throwable.
Candidate: nit: space between the highest dates.
Reference: is it no longer possible for strategy to be null?
Candidate: this is a <UNK>
Reference: what for is this empty if statement?
Candidate: please use <UNK>
Reference: restore formatting.
Candidate: minor: this is not <UNK>
Reference: small typo for the param placeholder.
Candidate: i we print e.getmessage() is not sending the error.
Reference: you should be able to do assetextension assetextension = (assetextension) asset.getextension() you'll want to check for null, and create a new instance of assetextension as needed. if you need to
Candidate: please use <UNK>
Reference: how about to simplify it a bit with: enumset.of(vmstatus.suspended, vmstatus.savingstate, vmstatus.restoringstate).contains(vm.getstatus())
Candidate: this is is designed to be a <UNK> <UNK>
Reference: express this more directly: if (mhaswifi) { minitialwifistate = mwifimanager.iswifienabled(); } note that there should be a space between "if" and the parentheses
Candidate: you could use a try-with-resource paradigm
Reference: nit: remove the 'currently' in parentheses to shorten the message a little.
Candidate: nit: space after '+'
Reference: do this in a finally block
Candidate: if this is not efficient, we could be a bottleneck. bottleneck. is a efficient, that the is not efficient, but i guess it's not efficient, this is not efficient,
Reference: use @mock, see e.g. molgenislocaleresolvertest
Candidate: you can mock expectations to mock
Reference: it's better to check for mmixpanelineditmode here. show should show a view and it should not be it's responsibility to check whether there is a socket open or not, etc..
Candidate: this fragment is be called in the model.
Reference: did you mean "setting"?
Candidate: i think this should be a <UNK> <UNK>
Reference: this should be protected so modders can subclass it with their own small changes.
Candidate: this should be to be a static class instead of creating a class member.
Reference: not a necessary change but these can probably be simplified to assert.assertfalse(mantaclient.existsandisaccessible(childdir). up to you if you want to make this change.
Candidate: is there a reason for element?
Reference: we could shorten the test slightly if we use assertj library see the code below, would you mind to incorporate? java @test public void testlhsorder() { // drools-3080 final spreadsheetcompiler
Candidate: how about replacing a utf-8 instead of constructing an array instead of creating a array as well.
Reference: why this needs to be created for every android module even if config option doesn't exist in buck config? addandroidcompileroutputpath is called later at the end of this method which
Candidate: use <UNK> instead of <UNK>
Reference: remove
Candidate: please move this log to the
Reference: why read the "weight" parameters here? seems not need, because we can read in automapper also.
Candidate: you could move this to a separate method.
Reference: knock this down to protected (no need to define public api here) - this will also provide a chance for subclasses to be smarter (for example wktstratagy could start recogning
Candidate: if we is right... right...
Reference: minor suggestion to improve the readability of the code below: use mappedslice as a prefix for these variables.
Candidate: is this test cases that <UNK> is not testing ;-)
Reference: please explain whey this thread sleep is required.
Candidate: print, {id:1, {id:1, {id:1, {id:1, {id:1, {id:1, {id:1, {id:1, {id:1, {id:1, {id:1, {id:1, {id:1, {id:1, {id:1, {id:1, {id:1, {id:1, {id:1, {id:1, {id:1, {id:1, {id:1, {id:1, {id:1, {id:1, {id:1, {id:1, {id:1,
Reference: there is definitely a need for a centralized toast generator.
Candidate: we should use checkargument here instead of wrapping the edges, v. down
Reference: why not model.getlocalizedtooltip()?
Candidate: you could use a constant here instead of <UNK>
Reference: why aren't we calling createchecker?
Candidate: please change this to
Reference: same as before: this change seems unrelated to the topic of this pr and just expresses a personal preference. while that preference might well be better than the existing code,
Candidate: if you could use <UNK> <UNK>
Reference: if you'll follow my suggestion in line 444, this method can be removed.
Candidate: please extract this method to 2;
Reference: you could create a constant for the singleton locks, no real need to create new instances, same for the read_write below
Candidate: @vilchik-elena is there is a a slight styles between the view? i am not sure how about removing this grasp.
Reference: shall we keep clenup() without remove?
Candidate: this is not
Reference: (nit + local, premature optimization) the first check about isresourcerequest could be moved up to the first if, after the instanceof, to reduce computation.
Candidate: factor this out of printing the way?
Reference: don't think you need this if - it's doing the same thing in the if and the else.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: we repeat this calculation over and over again. why don't create a utility method? e.g. gettimezonezeconds().
Candidate: you could use <UNK>
Reference: should be instance of servocontrol not servo.. :)
Candidate: this is not (can be shown.
Reference: those 2 lines should be in the if clause as well.
Candidate: you can use the concrete guid instead of <UNK>
Reference: we should provide a default, in case of this header is missing. i guess you could do something like:  java string charset = objects.firstnonnull(request.getheader("accept-charset"), "utf-8"); return charset.split(",")[0];
Candidate: use <UNK> instead of <UNK>
Reference: i would suggest using by if possible, by is an instance of [byfactory](<link_0>, so if you need a new selector and simply use it via selenium in your po the
Candidate: should this be be used?
Reference: fileextesionstartindex will never be -1 even when there is not an file extension.
Candidate: if you could use a string instead of <UNK>
Reference: why the string declaration for ssl_factory? if you do this, do for all strings in property. if not, remove the variable. it is not wrong but the implementation is varies
Candidate: please use <UNK>
Reference: put setters at end of file
Candidate: <UNK>
Reference: since the events are never removed from the list, this creates a memory leak. the notifier keeps a reference to all events, the events have a reference to the players
Candidate: this is designed to be a <UNK> <UNK>
Reference: feels like the button text should just live in a layout?
Candidate: you could use the multimap here instead of <UNK>
Reference: while we're at it, let's remove all the redundant this. as well.
Candidate: wait.forelementclickable() should be <UNK>
Reference: in the happy case where we continue to receive acks for each event delivered, always the ack-notifier thread will be draining the queue. publisher thread will continue to do only
Candidate: this is is designed to be an error.
Reference: why don't we change the connectormetadata#gettablelayouts to connectormetadata#gettablelayout that returns a single connectortablelayoutresult?
Candidate: nit: <UNK> -> <UNK>
Reference: should we just return null here rather than propagate the exception? if we are sure we want to return null then the exception should be logged if we are swallowing
Candidate: we could use the exception here instead of <UNK>
Reference: also, this is getting a bit too long for a single line i think. it's probably better to restructure this: if (ore) { return true; } else if (1.16) {
Candidate: this is not efficient, we should use objects.isnull
Reference: - this.ascent and this.descent are in pixels so autoscaledown to be applied after deciding the value from math.max
Candidate: i think we could use a <UNK> <UNK> #resolved
Reference: suggestion logger.info("'--interval' specified [{}] is lower than the minimum allowed [10].", this.getinterval());
Candidate: this is designed to be <UNK> as oldvalue is invalid?
Reference: better use inner constant here.
Candidate: inline
Reference: subtask != task therefore these two lines should be: submonitor.convert(monitor, /title/, 1); (other cases of same marked with ditto2)
Candidate: fyi, we could use a local vars instead of creating clear() to 16?
Reference: use a singleton instance of defaultvariablenamefunction
Candidate: this is a <UNK>
Reference: doesn't the output fs also need to be registered if not present? or is the assumption that it will be same as input fs?
Candidate: you could use <UNK> instead of mkdirs() you could use <UNK> instead of <UNK>
Reference: this should be a private static final string at class level.
Candidate: can you explain why you lose the annotation?
Reference: failed to resolve remote artifact why remote ? it's hosted repository.
Candidate: isempty() : <UNK>
Reference: what is the rationale behind this check? why not if (getrange().getendtime() > ftimerange.getendtime()) { for instance?
Candidate: i think this should be <UNK>
Reference: this could be refactored to use contains method on list.
Candidate: this is not a bit dangerous, for narrowing narrowing that this is not <UNK>
Reference: here is a lot of staff happening in the constructor, maybe move it to init method, or a lazy loading? there is a situation when, a can add a filed
Candidate: please use <UNK>
Reference: i recall, you should do setproperties on config from the endpoint. perhaps either @oscerd or @davsclaus can confirm this.
Candidate: is there a reason to be encapsulated on the constructor?
Reference: many of your instructor test cases (such as this) can be simplified by running the helper methods in baseactiontest instead of doing all of these manually. it'll make it easier
Candidate: please mock m
Reference: doing this in a live test is a symptom of something that users will probably have to do themselves. better use the build-in predicates2.retry construct to wait until the server
Candidate: i think this is not <UNK>
Reference: lets use stringbuilder for str as we are changing it within the loop multiple times.
Candidate: please revert this property?
Reference: not your code originally but the filtering and mapping seems pretty pointless: java assertthat(activemessagehandler.getrecordedmessages().collect(tolist())).hassize(1);
Candidate: this is not used?
Reference: seterrormessage
Candidate: @ivange94 please use the exception here instead of printing the exception
Reference: you could simplify this to "groupid = props.getproperty(..." and then drop the else case. not a review blocker though.
Candidate: we could download '+'
Reference: i know it is easier to work with the static cluster map for such things, but since we have moved to helix and static cluster map is deprecated, can we
Candidate: minor: this this change?
Reference: can u extract a final constant with a readable name out of "<[ ]*%s[ ]*>" ?
Candidate: please use the enum?
Reference: this is currently not the case and i do not like to have everything rendered. it should use the configured probe level.
Candidate: i'm not sure how about removing the <UNK>
Reference: to avoid npes use; mlconstants.deeplearning.equalsignorecase(model.getalgorithmclass())
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: and maybe even nested functionality as well.
Candidate: please add a log. thanks!
Reference: what if clientspan is null? (i.e. the client span is not found) copying all binary annotations from the client span may be an issue, as could be misleading for the
Candidate: i think that this is is not to be non-null?
Reference: should this be something like "creating localcachemanager with {} existing pages" ?
Candidate: i'm not sure how about the sure about the sure that the rollback we have a <UNK> that the is is rejected but i am not sure how about the
Reference: leftover?
Candidate: is there is a log.debug exception here?
Reference: normalized
Candidate: please use <UNK>
Reference: this line is longer than 120 cols
Candidate: could we use a static <UNK> below...
Reference: i'm good with b, but i've noticed a lot of reviewers prefer to see binding, which is more idiomatic java.
Candidate: we should be unsupportedoperationexception
Reference: this method states it check the button visibility. it doesn't mention checking the module visibility. please make this diversion more precise
Candidate: this is non-trivial to be non-trivial
Reference: tempted to do it before breakfast :)
Candidate: if getstate() >= offset >= offset >= offset >= offset >= offset >= offset >= offset >= offset >= offset >= offset >= offset >= offset >= offset >= offset
Reference: i think we should export this as a constant also - it's used in two places already. in the future we may supply the user name by configuration.
Candidate: we could print stack trace to debug level to print debug log level to debug level?
Reference: we should use the or operator here instead of and. if the first part of the condition is true, meaning that the list of lines of credit is empty, then
Candidate: you could use the try-with-resources explicitly.
Reference: return a set<string> instead of hashset<string>.
Candidate: this deserve a description deserve deserve deserve deserve deserve deserve deserve deserve deserve deserve deserve deserve deserve deserve deserve deserve deserve a pr, but i deserve deserve a pr, but
Reference: i see that in csv case where fieldstoread is null, we get fields to read in the recordreader. versus, in the json/avro case we used to make that decision inside
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: shouldn't this be something like "press \"merge entries\" to resolve the merge conflict." ?
Candidate: use <UNK>
Reference: i love the readability improvement here. we might actually be able to improve it even further, by having the constraintdescriptor have an enforcesuniqueness() method (and an enforcespropertyexistence() method) that delegates
Candidate: please use <UNK>
Reference: nitpick: if the stream is null, isn't worth it to invoke a createstream to avoid double checking? the same logic could be applied to the else branch by passing the
Candidate: is there a reason for this class instead of <UNK>
Reference: add the @inject annotation and remove the public modifier from the constructor to make it package private ([background](<link_0>
Candidate: this is a <UNK>
Reference: no need for a mock.
Candidate: is there a reason for this change?
Reference: indentation is all over the place here.
Candidate: suggestion <UNK> = new <UNK> <UNK>
Reference: to me it feels like an error-prone situation when we return results for lower number of partitions than requested. it's unclear what such situations indicate: we skipped/forgot some partitions entirely
Candidate: if we could be a <UNK> <UNK>
Reference: its good that isaggregate was removed, but we should still verify that the primaryresource is a work. that just boils down to a primaryresource.hasproperty call i believe
Candidate: this is not mock
Reference: it is good to assign conditions like this to a local variable so that it can be given an explanatory name.
Candidate: use <UNK>
Reference: there are six themes now. dark / light in 3 different font sizes. there is a class util/themehelper to do the settings to theme id conversion.
Candidate: this is a bit strange strange to me, we don't have to persist the <UNK>
Reference: probably don't need debug but should we add trace logging for these conditions?
Candidate: is there a reason for element?
Reference: might worth adding a separator before this one and before the scope button, as they have opposite behaviour.
Candidate: you could use a local var instead of creating a new instance.
Reference: put the log after the send
Candidate: this is variantsourceentities.size() is be called in the
Reference: i guess you need to change the parameter type to list.class:  java }).when(nodediscovery, notify_device_discovered, mockito.any(list.class), (remotexbeedevice) mockito.any());
Candidate: is there a reason for this test is not used?
Reference: similar to above for shadowing field idempotencykey ->
Candidate: you could use a multimap instead of <UNK>
Reference: nits: please add annotation in separate line above. you may want to change for all such lines below and above.
Candidate: please use <UNK> instead of creating a new arguments.
Reference: this mapping should happen via public enum and not via mapping backend enum to string
Candidate: you can use <UNK>
Reference: this line is redundant now that you call endsuccessfully directly
Candidate: why not sure that this is sense...
Reference: i think "i" is not a good name. maybe change to "interface"
Candidate: if you can use the cr instead of <UNK>
Reference: nit: flatten nested else { if {} } to else if {}?
Candidate: if this is is not
Reference: remove_container_timeout = integer.getinteger("org.apache.apex.nodemanager.kill.timeout", 30 * 1000);
Candidate: suggestion if <UNK> == 0) { ... }
Reference: i would consider re-using org.ovirt.engine.core.dao.networkdaodbfacadeimpl.networkrowmapper since that's the main entity in question, and not changing the field names in the view (otherwise it wouldn't work) -or- using some different approach
Candidate: i wish that this said that this said that this said that is said that we wish said that the said that the wish to check that the variant is
Reference: @namiii possible to allow configuration of the implementation to use so that we can add app engine support in the future?
Candidate: can we replace this with <UNK> with <UNK>
Reference: wouldn't it be better to remove duplicate logic and just invoke the version taking a run? it seems like a lot of this could be condensed.
Candidate: is there a reason for fqns ?
Reference: we should use named not positional arguments. i believe both are supported by ebean.
Candidate: let's use a string constants.
Reference: doesn't c.isowner imply user.isadministrator ?
Candidate: if you is right... right... right...
Reference: consider using constants for values like this, as you did in your other test class to increase readability.
Candidate: you could use <UNK>
Reference: pkgtypes.get(pkgtype)...
Candidate: suggestion <UNK> = <UNK>
Reference: in other pull requests, we had mechanisms that ensured that it was not necessary to recompute every weight for every selection. should this use the same trick?
Candidate: i don't think this clear() should be a local args?
Reference: don't use default shell. dialog has one.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: shouldn't catch throwable as it can be any sort of jvm error. probably shouldn't catch blanket exception either unless you wan't some special handling. exceptions thrown out to jersey should
Candidate: throw an illegalstateexception instead of checkargument
Reference: replace with guid.isnullorempty(..) i'm not entirely sure that we want to return false here and not keep the current behavior (which is equivalent to retun ture) , if operations that
Candidate: you can use <UNK>
Reference: can this be put into a method?
Candidate: this is designed to be <UNK>
Reference: should we consider having a single impl for both readvarint() and readvarinteger()?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i think we should be putting more values here, to ensure that every bucket has at least one key. buckets are not fully created until data is put into them,
Candidate: this is be <UNK>
Reference: firstnonnull() is useless because of single parameter.
Candidate: is there a reason for this logic?
Reference: this is against naming convention - variable with constant like name.
Candidate: is there a reason for paths?
Reference: @balamurugana i think the issue is config.tostring() which is not returning xml here
Candidate: if we is a versionid is null, so that the versionid should be false, we will throw an npe if there is no need to log.
Reference: this part could go into azureutils.
Candidate: you could use simplified by: list<string> <UNK> = <UNK>
Reference: suggestion logger.log(level.severe, "email configuration properties were not provided correctly.", e);
Candidate: throws exception
Reference: is this about terminating, or sending a specific signal (there are both term and kill signals)?
Candidate: suggestion throw new <UNK>
Reference: please close this defaultaccessor at the end of the test to prevent a zkclient leak.
Candidate: i think this should be the weights on the weights args?
Reference: hide this and expose factory method
Candidate: no need to call stream() explicitly.
Reference: needs a null check otherwise the phone_number column will always be an empty string instead of null. assuming this is your intention...
Candidate: use stringutils.isnotblank()
Reference: don't know that this is correct. if the item isn't found, you are "pretending" all is ok and returning the map anyway. isn't the correct thing to throw the exception?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: what happens if the command is null or empty? a null/empty check would be cool.
Candidate: is there any reason why catching exception here?
Reference: do we want to add more checks on the size of the array itself?
Candidate: could you use <UNK> pretty-print
Reference: these can go in a single try
Candidate: could you use try-with-resources here instead of creating a new object
Reference: do we need this here since we already set the msearchmenuitem in oncreateoptionsmenu?
Candidate: is there a possibility that this is is not <UNK>
Reference: remove this line
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: code style: please keep line lengths <= 100 chars. github's web ui doesn't even show the full text.
Candidate: if this is designed to be a <UNK> that is) is a good idea, but i wonder if this is)
Reference: one suggestion s/unkown/unknown
Candidate: this is be to be <UNK>
Reference: can you please assert on the exception, that it is with timeout error message?
Candidate: use try-with-resources fail()
Reference: most of us use throw exceptions.propagate(e) to skip needing to include a non-reachable return null; the throw never gets run of course but it is misleading in a good way
Candidate: use reflectiveoperationexception
Reference: empty list instead of null
Candidate: if this shard is be propagated to the shard depending on the
Reference: please remove this, i fixed the cause in a432e377a8d4e7dd04f2267bc59b1e66ea6d6656
Candidate: you could use a local variable <UNK>
Reference: since w/out the '/' it is already set, no need to reset, no? i'd just do:  if (!pushconfiguration.getserverurl().endswith("/")) { pushconfiguration.setserverurl(pushconfiguration.getserverurl() + '/'); }
Candidate: no need to call foreach here instead of null?
Reference: cosmetic: would you mind using static import statements for these assertion methods? thanks! :)
Candidate: why not use <UNK>
Reference: we don't need to set rowkind on keyrow, because we never to use it.
Candidate: this should be <UNK>
Reference: was this config prop removed on purpose?
Candidate: i think this is correct.
Reference: i think it must be possible to skip subtrees also for non treeiterators.
Candidate: this is right...
Reference: do you think it would be better if we kept the data null and instead check for this outside of if (data != null) statement? i don't think we care
Candidate: you could use <UNK>
Reference: create map with expect size would reduce memory, just like this:  map<string, string> srcparams = getparameters(); map<string, string> newmap = new hashmap<>((int)((srcparams.size() + parameters.size) / 0.75 + 1)); newmap.putall(srcparams);
Candidate: use <UNK> instead of <UNK>
Reference: we should ensure semanticmodeland symbol are not null before using it, or alternatively only run the rule when semantic is available and ensure verifynoissuewithoutsemantic
Candidate: please use collectionutils
Reference: please label these reporting.parameter.onorafter and reporting.parameter.onorbefore
Candidate: this should be <UNK>
Reference: done, added two new constructors, one with public key and one with password and public key
Candidate: this should be ignored.
Reference: i was curious what you were going to do with the 'readonly' field here. :) when you open a remote file with the media server...you can open it either in
Candidate: this should be processed processed processed and <UNK>
Reference: for consistency, should this be a log_model_run_complete?
Candidate: use readasstring(...) instead of <UNK>
Reference: usually update to non-operational status is done by setnonoperationalvdscommand for rhv hosts. we don't have to use it here, since the kubevirt node status isn't expected to change outside of
Candidate: you could use a constant here instead of <UNK>
Reference: missing final
Candidate: i think that the foreach loop is be done at the beginning of the beginning of the beginning of the beginning of the end of the
Reference: this will effectively embed the value as string, why not embed the value as js boolean instead? with this change, gwt host page will contain: var displaysupportedbrowserwarning = { value:
Candidate: this is not be risky.
Reference: can you please simplify this a bit? something like this should work:  stream<channelshim> videochannels = channelshims.stream().filter(c -> mediatype.video.equals(c.getmediatype())); list<sourcepacketextension> sources = videochannels.map(channelshim::getsources).filter(objects::nonnull) .flatmap(s -> s.stream()).collect(collectors.tolist());
Candidate: this should be <UNK>
Reference: unless i'm missing something, this method could be safely deleted and you could use the byte[] header and payload variant instead.
Candidate: we could use a 'final' here instead minimize 'final'
Reference: what does this buys us? there is no _expected_ failure path once we managed to writelockall() so we should simply move the segments.clear() after the finally block.
Candidate: wdyt about replacing a list?
Reference: why this?
Candidate: this is not required,
Reference: minor: consider view.no_id and @resid annotation.
Candidate: if you could use <UNK> <UNK>
Reference: why do we always compare as double? in one of my tests the fvaluenumber is long. if we compare as double it might not give us the expected result because
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: is .json correct here? this is in the xml type descriptor?
Candidate: scm we can use the scm to the the scm situation.
Reference: for all other calls of scheduledirect, we use: suggestion schedulers.io().scheduledirect(new runnable() {
Candidate: you could use <UNK>
Reference: i believe we want this too protected
Candidate: this we have a narrowing narrowing to narrowing to narrowing to m narrowing request to a m to be passed to the array.
Reference: could use completablefutures.completed_null.thencomposeasync(...) to avoid the double wrapping the result. maybe it's worth adding a static method in completablefutures.
Candidate: i we need to use the <UNK>
Reference: nit: as mentioned elsewhere, i don't think we need to add all of these exceptions to the method. they are all runtime exceptions, so it's still up to the user
Candidate: same as above.
Reference: if we extend entitycollectiontransceiver instead, it will take care of the view-mapping and apply the "last modified date" logic too. we'll just need to adapt it to the timestamped interface
Candidate: why caching caching the caching is defined in <UNK>
Reference: developer tag should be a prefix.
Candidate: i think we should have flagged router by grabbing the <UNK>
Reference: unfortunately here we can have a situation when some events can be lost. i meant that eventstofire map can have at the moment of call of method more elements than
Candidate: you could use a logger instead of printing the logger
Reference: could throw new unsupportedoperationexception if not empty. we should deprecate it in abstractmemento.setcustomfields. it is deprecated in all sub-types.
Candidate: is there a reason why not use <UNK> here?
Reference: add assert that leadersessionid and leaderaddress is not null. otherwise this method will allow us to break isempty.
Candidate: please use <UNK>
Reference: not required, but you can use |= here.
Candidate: this should be <UNK>
Reference: since you only added a log statement to this file you should just remove it from the pull request.
Candidate: if you could use <UNK> <UNK>
Reference: this won't replicate fits extracts since it only applies to original_files, you may need to break replication into a separate route from the original binary processing. i'd suggest kicking it
Candidate: the error message should be be thrown from the error message.
Reference: @micnice this won't work as the factory is not fetching the bloodtest entity from the repo. we need that entity so that we can get the category, the bloodtestbackingform could
Candidate: use <UNK>
Reference: should compile once? this might be called many times.
Candidate: please use <UNK>
Reference: miso convention for requestmanager has an initial check for if xstore is null (add to this and three methods below)
Candidate: this is a duplicate, we don't need to use the confirm() method for the confirm() particular reason for element?
Reference: why not case showtocevent.action_toggle? and throw exception for default
Candidate: is finishing the <UNK>
Reference: just pass the set.
Candidate: this is a <UNK>
Reference: datasource instanceof streamingonrequestdatasource is redundant since it is already checked above in line 185.
Candidate: i is not to to a <UNK> that we can't have been able to keep the same as well.
Reference: i find it surprising that we always set a diff's state to merged in this method: if we merge right to left, and the diff was from the left, then
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this is not your code, but is just a preference of mine, so feel free to ignore... but... i think the code would read better if this checked that the
Candidate: we should use a property for connected 30 <UNK>
Reference: could you not use reflection? i know it's a pain to list all methods, but this is faster and doesn't lead to error/weird case for non existing properties.
Candidate: is there a reason why stubbing anyway?
Reference: is there a reason why this is runtimeexception not tribbleexception?
Candidate: use <UNK> instead of <UNK>
Reference: duplicatepolicy -> dataloadingpolicy
Candidate: use <UNK> instead.
Reference: the default selection for the radiogroup can be changed via the layout resource [here](<link_0> you can also rearrange the sequence (if you want rename before replace) and if you want
Candidate: same for the
Reference: why not make this method public?
Candidate: is there a reason to assert that <UNK> is empty?
Reference: this used to be an atomicinteger but is now a regular int. are you sure it's safe? is all the code that uses it required to be run in the
Candidate: how about moving this to <UNK>
Reference: for consistency with the other infrastructure components, i'd suggest to do the builder.validate() call in the constructor.
Candidate: @gunnarmorling this theory we should to establish a <UNK>
Reference: i'm wondering how the no-op impl plays in here. shouldn't there be a "real" implementation in case of neo4j embedded, just not based on jdbc but on the neo4j tx
Candidate: nit: <UNK> is designed to compute the delay from the <UNK>
Reference: suggestion log.warn("error while handling response for rpc module: {}. response string: {}", rpcmodule.getid(), message, e);
Candidate: nitpicking: we use a string concatenation instead of printing the string concatenation
Reference: do we really need the flush? we're dealing with the single stream anyway, so writes will be serialized somehow (and also we synchronize this anyway), and i don't really care
Candidate: could you revert this call to <UNK> finally block
Reference: if you want, you could change this to allowcors(response (like in "version", above) to allow cross-origin resource sharing. i'm sort of wondering what's returned if no api terms of use
Candidate: why not use the enum?
Reference: i think we shouldn't log pids (email) ? at present we are logging reference, amount, return_url. new fields (delayed_capture, language) seems fine.
Candidate: suggestion if <UNK> == null) { stringutils
Reference: please add this property to telemetry, it's good to know why we get auth_token_not_returned (access token isn't returned or it prompt was required)
Candidate: i would prefer to use <UNK>
Reference: should this be perhaps something generic, and used for other results as well ?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i really hope the format changes for the final spec. :)
Candidate: is there a risk that this is is not encapsulated in the constructor?
Reference: this is the same as below, but i am fine if you want to keep as it is. java for (final element element : children) { position.sety(element, ++parenty); }
Candidate: you could use <?> instead of <UNK>
Reference: is this related to the rest of the pr?
Candidate: is there a reason why connection connection completes started, connection is not sure that the connection is completes started, we don't want to call <UNK>
Reference: can you define this property name in 'voldemortbuildandpushjob' together with other cdn related properties? it seem this one is very important to execute distcp job.
Candidate: you could use <UNK>
Reference: path has strange and subtle differences between different constructors. the original code specified the constructor was the one that took a string explicitly. this code would work if the type
Candidate: you could use a local vars instead of mutating a local variable?
Reference: there are tools that auto-generate files but let you edit them (usually between markers) and your changes are not lost. as swt tools are not such better to be more
Candidate: you could use <UNK>
Reference: this isn't monotonic, shouldn't nanotime() be used for measuring elapsed time?
Candidate: i think that this is not <UNK>
Reference: why initialize with default value? you could: 1. save a boolean of "succeeded" 2. save a null and check for it later. i think option 1 would be better, then
Candidate: you could use a constant?
Reference: we should add some assert to make sure that varargstype is not null.
Candidate: could you use foreach paths?
Reference: how about also printing vdsid? it might be useful in the future
Candidate: i think that this will be npe if the is reduced to the
Reference: definitely good to move this to a viewmodel
Candidate: if you could use <UNK> here instead of is)
Reference: this would look logically clearer:  java if (data.shouldshowlog(emaillogentry)) { emaillogs.add(emaillogentry); }
Candidate: you could use <UNK>
Reference: please use configutils.getdefaultprofile() instead of hardcoded "full" profile name.
Candidate: you could use a constant instead of <UNK>
Reference: this error message isn't particularly helpful. maybe this instead:  argchecker.istrue( fixedleg.getcurrency().equals(floatingleg.getcurrency()), messages.format( "swap leg conventions must have same currency but found {} and {}, conventions {} and {}", fixedleg.getcurrency(),
Candidate: you could use <UNK>
Reference: call notfound instead of returning null
Candidate: you could use <UNK>
Reference: synthetic access.
Candidate: you could use a <UNK>
Reference: yes, please revert. create a separate pr if you like.
Candidate: you can be simplified to <UNK>
Reference: use tree.kind instead, to remove the import.
Candidate: please use <UNK>
Reference: i don't know if this is an issue but deserialization will not be backward compatible.
Candidate: rename to
Reference: also this toast. it's really annoying.
Candidate: suggestion if (throwable == null) { return <UNK> } -> <UNK> });
Reference: seems like this appender could also be scoped to the class that logs the message we want to capture, right?
Candidate: i'm not sure how about the sure that this is is not related to the worker pr, but i affects your pr, but this affects your pr, but i
Reference: that's probably not what we want, right? maybe some logging at least? why shouldn't we fail in such a case?
Candidate: @xupyprmv we could use the exception instead of <UNK>
Reference: be careful with this comparison here. if we're caring about the uuid (which we don't at all in this case -- it's a one-to-one comparison for differences in content), then
Candidate: this is be simplified to return <UNK>
Reference: put an empty line after this.
Candidate: log.debug -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e ->
Reference: note that in oxygen this bundle has not updated to java 8 yet.
Candidate: rename to <UNK>
Reference: the duration variable should be qualified with the this keyword.
Candidate: rename to
Reference: i am not very comfortable in the way we go about constructing container w/ new fields and once it is serialized and deserialized, it resets some of the fields to
Candidate: is there a reason for avro properties?
Reference: use objects.requirenonnull
Candidate: this should be a constant for <UNK>
Reference: how about "url cannot be null"? that would be a completed sentence
Candidate: log.debug
Reference: do we need super(), if the class is not inheriting from a super class?
Candidate: no need to check for the
Reference: --allow-duplicates is a better name, but now "f" is not a good short name. maybe "a" or "d", or no short name.
Candidate: this is be <UNK>
Reference: please change this to use a leading capital unable. also is it worth continuing here? if getauthority() fails and requestdomain is null shouldn't we just return?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why varchar? shouldn't it be a geometry_type?
Candidate: this is designed to be <UNK>
Reference: the fetchablepartitions method used below is probably another nice opportunity to use something like foreachassignedpartition.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: collections.singletonlist would be fractionally more efficient.
Candidate: this is a <UNK>
Reference: the assert condition is the same as the if condition so if seems useless
Candidate: should we use <UNK>
Reference: this method should be static to avoid a warning if such warnings are enabled.
Candidate: if you could use all() branch is not necessary, the is not necessary, but etc..
Reference: ... + pattern.quote(upperpropertyname) + ...
Candidate: this should be a constant for <UNK>
Reference: could replace this if and the above get with : java cachedconnections ccl = getcache().computeifabsent(cachekey, ck -> new cachedconnections);  also a concurrent map will handle this correctly for multiple
Candidate: should we call <UNK>
Reference: kualidecimal has a constructor that accepts a string as input, so you don't need to parse the string value with numberformat explicitly.
Candidate: we should use a checkargument here instead of this(name, <UNK>
Reference: seems like public is a better default, though. the point of a getter or setter is to expose the variable through the class interface, isn't it?
Candidate: please use <UNK> instead of <UNK>
Reference: add brackets to make this expression more easy to understand
Candidate: this is not a bit strange,
Reference: allvmdevices.foreach(getcompensationcontext()::snapshotentityupdated)
Candidate: this is a bit misleading.
Reference: i prefer the code style using the space between the if and the parenthesis, which is the standard code convention: <link_0> but no offense taken if you prefer this style.
Candidate: is there a reason for this logic?
Reference: ok i think that answers my question before, makes sense! thanks jose
Candidate: you could use <UNK>
Reference: is it our common rule? i mean invertring boolean condition? maybe it's not so smart question :). i mean, maybe is little more readable? if ( propertyentries.isempty() ) { 
Candidate: you could use a constant instead of <UNK>
Reference: i think this would be better if it polled for a shutdown server. i've seen times when jboss-as takes longer than 5 seconds to shutdown.
Candidate: could we use <UNK>
Reference: you would need to use submap and remove this and subsequent lines below.
Candidate: minor: you could replace this by: <UNK> <UNK> <UNK>
Reference: i don't think that this is the right place for incrementing of receiving keys. let's call this outside the updategroupmetrics since this is a method-candidate to remove.
Candidate: you could use <UNK>
Reference: did you forget a ! here?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: ![blocker](<link_1> close this "fileoutputstream". [![rule](<link_0>](<link_2>
Candidate: @exper0 could we use try-with-resources vars please.
Reference: the idea with the filtered buffer is that it only allows items to go into the "main" inventory if the item matches what is in the blueprint inventory. you can
Candidate: <UNK>
Reference: not an exception
Candidate: we should use a checkargument here instead of <UNK>
Reference: could potentially use: <link_0>
Candidate: you could use <UNK> instead of <UNK>
Reference: this check is redundant. just call taskkeytotaskidmap.remove(taskkey), and check if it returns null or not
Candidate: if you understood that the is not <UNK>
Reference: add a check that the first argument is identifier
Candidate: you could use <UNK>
Reference: why not just have a default on the switch?
Candidate: suggestion if (filter.getrelationshipdirection() == direction.incoming) {
Reference: do we really need to specify the version here? afaik, it should grab the version from the pom.
Candidate: this is a maps to a non-trivial
Reference: the same as above: returning the previous messagebufferinput
Candidate: is there a reason that is is not to be used?
Reference: would it work to change overlordactionbasedusedsegmentlister to take a tasktoolbox instead of a tasktoolboxfactory, and do: datasourcepathspec.setusedsegmentlister(new overlordactionbasedusedsegmentlister(toolbox)); and avoid the global injector?
Candidate: i think this should be be caught.
Reference: same here: should be buildconfig.debug
Candidate: if you could use <UNK> <UNK>
Reference: @januson modeltranslator never used in this code. any specific reason for this null check?
Candidate: if we is translations is null, so that translations will be an error.
Reference: this method should be changed to private
Candidate: wait.forelementclickable() should be <UNK>
Reference: did you intend to log and then print stack trace?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: shouldn't this be a finally instead of a catch?
Candidate: this is not necessary for the
Reference: while you're rebasing, please rename to origintype
Candidate: why not use <UNK>
Reference: should we be resetting this static object repeatedly? why not just have a static initialization?
Candidate: use <UNK>
Reference: set "vertebrates" right here
Candidate: you could use <UNK>
Reference: this line means the trace token that is passed through might not be what the caller provided.
Candidate: you can use <UNK>
Reference: final xpathevaluator xpathevaluator = new xpathevaluator(configuration.newconfiguration()); final xpathexpression xpathexpression = xpathevaluator.createexpression(query);  can we make this execution to be done ones for whole checkstyle execution ? for example in "setquery".
Candidate: this is unnecessary.
Reference: i think getting a live stream was there for a reason. perhaps we should evaluate if that is a good idea, and if so, still keep it, as opposed to
Candidate: is there any way around)
Reference: when would this be of use except for in init which is always false. i mean in line 442 of glustervolumesnapshotlistmodel you are doing snapshotmodel#getdisableclischedule#setentity but that doesn't come here
Candidate: is there a reason to assert here?
Reference: why endaction of runvm will not be called automatically ?
Candidate: why not use a property?
Reference: replace with this(in, null)
Candidate: we should use <UNK>
Reference: how about the operands are empty ?
Candidate: could you use isempty() instead of <UNK>
Reference: listeners are not notified?
Candidate: wait.forelementclickable() should be <UNK>
Reference: probably safer to have a current != null
Candidate: this is a bit nervous that we could be a <UNK> <UNK>
Reference: debug statement should be removed
Candidate: this will never throw an exception
Reference: i guess it should be text/plain.
Candidate: is there a possibility that this is is not to be there?
Reference: rather than having a trailing space at the end of missingmethods, use a stringjoiner.
Candidate: this is not matters, but how about replacing only: <UNK> ? side) : <UNK> ? <UNK> : <UNK> )
Reference: the actual delete should happen at the end as windows can be very picky about files being logged. so the remove would need to happen first.
Candidate: this is is not <UNK>
Reference: i'm not sure anymore what the point of supporting preview features is, if we're going to drop support for them between any minor version. so either 1. instability is to
Candidate: this is be <UNK>
Reference: that's wrong, should be: return message;
Candidate: please use <UNK>
Reference: this can lead to an npe, if firststoredentryforbookie is null.
Candidate: if you could use a <UNK> instead of return?
Reference: i am not positive but i believe it would make sense to copy the item here (or in getextractedstack before extracting), just so that if a crafting implementer queries what
Candidate: rename to
Reference: i know we talked about this, but just to verify, i am guessing  .to( "file://" + getstartingdir() + "?filename=${in.headers." + templated_string_header_rte_prop + "}&delete=true");  didn't work
Candidate: you could replace this with <UNK> with <UNK>
Reference: if we're concerning ourselves with time elapsed, be explicit about what the start time is.
Candidate: wait.forelementclickable() should be <UNK>
Reference: take out to a function
Candidate: you could be inlined
Reference: wrong code -- must be else.
Candidate: typo: <UNK>
Reference: needs a permission check here.
Candidate: <UNK>
Reference: put it inside the if.
Candidate: could you use draw <UNK> events.
Reference: use getexceptioncode to check exception code.
Candidate: i am assuming that this is is not a no-op but i am not sure that this is is a no-op but i am not sure that this is
Reference: sorry one more thing, please make this guard >= 3.20.0 as the warnings will happen on 3.20 as well.
Candidate: minor: <UNK> -> <UNK>
Reference: same again: reuse method
Candidate: i think this is not <UNK>
Reference: a field in the class?
Candidate: you could use <UNK> instead of creating a new connection,
Reference: why?
Candidate: use constants for these.
Reference: @cvrebert please leave tv.three here
Candidate: you can use system.currenttimemillis() instead independent of system.currenttimemillis() instead of system.currenttimemillis() instead of system.currenttimemillis() instead of system.currenttimemillis()
Reference: @ekondrashev same here, let's declare exception being thrown.
Candidate: @exper0 let's use 'throws <UNK>
Reference: maybe, if the member is not found, 'res' is better to remain model.getdeployproject()?
Candidate: rename to <UNK>
Reference: if protobufmetadatamanagerimpl needs the cache to be running, then it should start it in its own @start method. cachemanagerstarted is too late: if a cache manager is created with start=false
Candidate: i think this should be to be called in the
Reference: could use list.of(...)
Candidate: rename to <UNK>
Reference: debug/trace statements here would be very useful.
Candidate: this is strange,
Reference: i've added arrayutils.removeduplicate method to hide the ugliness.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: nit: maps.immutableentry() would be a bit cleaner here.
Candidate: can we use <UNK>
Reference: not sure if you're still working on this pr, but i think this todo is part of it. range should probably be a property of entity.
Candidate: use <UNK>
Reference: why is this here? the join is not processed inside the semaphorecompletionservice
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: character should be "char" <link_0> this is returning a char (primitive type) and that is why the "=="test works i think, if it was returning character (object wrapper for char)
Candidate: we could use <UNK> here instead of creating a files as well.
Reference: are you planning to add an isinitialized() method on transactionmanager?
Candidate: this is not throw iae
Reference: i'd rather avoid using continue and just do: if (vm != null) { vms.add(vm); }
Candidate: why not sure that it's not confusing to say, the vm storage disk storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage
Reference: the if statement checks for event.getnewvalue() == null but then we do a event.getnewvalue().tostring(). seems like a risk for an npe...
Candidate: i think that this is is be encrypted, but i don't think that it is be encrypted, but i don't think that the
Reference: how about renaming this to particleemitterdrawables? i know it's verbose, but i kinda like that over pedrawables.. i'm not sure about this one though.
Candidate: you could use the exception here instead of printing the exception
Reference: why not compare size first?
Candidate: you could replace this with <UNK> ....
Reference: can't you properly support stream here?
Candidate: you could use <UNK>
Reference: use getidentifier() insteand (applies to all changed enums)
Candidate: please add labels,
Reference: is there a unit test for this as well?
Candidate: <UNK> -> <UNK>
Reference: if this is intended for human consumption, {>=, >, <=, <} would be preferred to {gte, gt, lte, lt}.
Candidate: please use getclass().getsimplename() instead of <UNK>
Reference: null?
Candidate: why not use <UNK> enum?
Reference: you have this lastrun which is ended in dispose. are there cases where lastrun could be non-null here before it is set to run? in that case, should the non-null
Candidate: you can use the <UNK>
Reference: i propose to explicitly add the mention of flow-build-info.json: "... prepare-frontend maven goal which generates 'flow-build-info.json' file prior to deploying ..."
Candidate: you could use <UNK> overload to null"
Reference: use curlies on split-line ifs
Candidate: this is a little little little little little little little little little little little little little little little little little little little little little little little little little little little
Reference: just in case, i would first check with instanceof
Candidate: rename to
Reference: i think we should not cast here, but parametrize cache directly: verifiernode.<string, integer>cache(cache_name).get(entry.getkey())
Candidate: use stream()
Reference: please change the old names of variables "usersetmatcher" and "userremovematcher". thank you.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why not do this at the start of the method - we know this before doing a directory listing
Candidate: use readasstring(...) instead of <UNK>
Reference: you might should take into account the loginstartuppage#priority field to order the results here.
Candidate: if this is not used?
Reference: comparator should be customized.
Candidate: can you revert this piece of this method.
Reference: you could just inline it here.
Candidate: this is not
Reference: remove this line. doesn't make sense for a primitive value. what's happening here is that the primitive boolean is being auto-boxed into a boolean.
Candidate: i think this is not efficient, we could use <UNK>
Reference: seems we might use log.infof("found %d objects within testsuite-suite polygon.", cnt ) as well.
Candidate: could you rename this to <UNK>
Reference: just to make sure i understand .. this is getting the list of dam asset "folder" paths, and then traversing their sub-trees, collecting all the folders under them, which (the
Candidate: please use <UNK>
Reference: this won't ever trigger since getredis returns null already. the memory cache will also never contain a deleted key by construction.
Candidate: suggestion <UNK> (throwable == 0) { ... }
Reference: this entire class will conflict with #3428.
Candidate: <UNK>
Reference: what is the error when you do: fields[1] = (userid == null)?"":userid; and don't do anything more.
Candidate: is there a reason for the definition is empty?
Reference: since this method is not used, logging 'configuration reloaded' is misleading.
Candidate: this is is designed to log the error message
Reference: if (message != null && !message.trim().isempty()) { ... no need for those extra parentheses that only make the code difficult to read, and no need for "" either.
Candidate: add curly braces
Reference: what about calling this class tcpsurefireforkchannel ? it is really bound to "tcp://127.0.0.1"....
Candidate: i liked the log the exception is not thrown by <UNK>
Reference: maybe util.getshortobjectid() instead of putting 7 here?
Candidate: you could use a constant instead of <UNK>
Reference: i strongly recommend to use 16-bit dense array! the problem is, that on world generation, every block will be set to some value, so all memory gets allocated anyway. after
Candidate: please use <UNK>
Reference: these have to be public? they are in same package as comparator and cell types.
Candidate: this is be <UNK>
Reference: please add the constant
Candidate: is there a reason for element?
Reference: since it would get converted into a maxsizesplithintspec in createsplit, could this create a maxsizesplithintspec directly? (does this also mean segmentssplithintspec is deprecated?)
Candidate: use <UNK>
Reference: public?
Candidate: suggestion if <UNK> == null) {
Reference: @cuenyad use enum in termid
Candidate: use <UNK> instead.
Reference: maybe use optional here instead of returning null
Candidate: please use the guid instead of <UNK>
Reference: why systables is needed in this query?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: fix =
Candidate: nit: add a method to <UNK>
Reference: why is this removed? the user could still specify a malformed url in the config screen, and now the error will be harder to find.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: change to:  return new rulemembervalidator(this);  (see effective java, 2nd edition)
Candidate: this should be <UNK>
Reference: it might not be clear which value was the offending value, does it make sense to print out the 'pre-split' value?
Candidate: is there a reason that is is a to be a <UNK> <UNK>
Reference: i think this should be a reject rather than a conversion.
Candidate: is there a reason to check that is empty?
Reference: does this one have to be public? as an extender of such annotation, i don't think this is something i would need to invoke directly and i'd expect the underlying
Candidate: <UNK>
Reference: i guess it depends on what you are doing with the image. if you are doing center crop, yes. if you are doing center inside, no.
Candidate: is there a reason to assert here?
Reference: result = units.bytes.multiply(new biginteger(numberstring))  or?
Candidate: throw an exception instead of <UNK>
Reference: the groupid rule used to replace - by .. this change has a new rule that replaces dashes by empty space. isn't that breaking what we used to do for
Candidate: is there a reason for element?
Reference: assuming you create a temp user object with just an id, you should be able to use makeurlwithobject or something like that and then pass in the user object.
Candidate: please use <UNK>
Reference: same, double de-ref
Candidate: you could use the <UNK>
Reference: do we need this?
Candidate: is there any way to be null?
Reference: why is this neccessary? the processes are already returned in a sorted list, as indicated by the sort_id constant passed as the third parameter to loaddata in the previous line,
Candidate: this is designed to be a <UNK>
Reference: the thread was interrupted, i don't think we should be continuing on like nothing happened.
Candidate: i think that this is is a efficient, but i would be a good idea.
Reference: rename 'listeners'
Candidate: rename to
Reference: thread-safety this is a poor construct to use for a thread-safe class. it doesn't save (that much) memory, and can be solved by using a volatile boolean set to false
Candidate: thread-safety we use a collection (that is (that is (that is a (that (that (that is (that (that (that is (that (that (that (that (that (that (that (that (that (that
Reference: it would be stronger to add assertion on comparison of studydetails.getcontacts().get(0) to the user details retrieved from workbench users table.
Candidate: how about moving this tear down to
Reference: this doesn't include all fields. use the parent class's hashcode as a basis and then incorporate this class's fields into the mix.
Candidate: you could use <UNK> instead of objects.isnull
Reference: ...and use the (old signature) getvoxelscreensize here to avoid the arrays.stream(...).max().getasdouble()
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i don't see where this is throwing serveroperationexception. it throws its superclass, serverconnectivityexception.
Candidate: why we expecting the connection, connection, throw an exception
Reference: @amisevsk might be more relevant to throw openshiftexception now ?
Candidate: nit <UNK>
Reference: you'll want to replace this with a call to getprimarystoragesize() to ensure that your updated logic is applied in both places.
Candidate: should we be <UNK>
Reference: you forgot to update metrics. metrics.updatenoderesponsemetric......
Candidate: minor: this method is designed to be <UNK>
Reference: be careful of nullable fields!
Candidate: you could use careful with fields!
Reference: we also need to clear the cache when user switching occurs.
Candidate: @gunnarmorling you could use only: <UNK>
Reference: i do not like this defaulting logic. it does make sense if this is a lsh parsed by the ls backend from the query hints provided by the engine. but
Candidate: please add a boolean for <UNK> (my <UNK>
Reference: i don't think there is a use case for this, but let me know if you disagree.
Candidate: is there a reason for initialization?
Reference: i think keeping this method is not a right design because setscrolltargetcallback is preferred to call in oncreate and should not be change in other states of activity / fragment
Candidate: wait.forelementclickable() should be <UNK>
Reference: having an if/else block here would make this better readable
Candidate: this is be encapsulated by <UNK>
Reference: this may be confusing to people. why are params with the same name considered "equal"? what about the value? if some part of the code wants to treat these params
Candidate: please use objects.equals
Reference: change method name to clickpreview
Candidate: this is a <UNK>
Reference: should we log channel information as well?
Candidate: i guess we should be null to <UNK>
Reference: what is the purpose of collecting to a list while streaming? if this is required then please add a note to the source code.
Candidate: rename to <UNK>
Reference: exception will be logged twice.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this method need to sum the disks per domain, otherwise, if i have 1 domain and 5 disks, but space for only 1 snapshot, the check will pass.
Candidate: can you use a <UNK> paths?
Reference: a dir picker seems good to me
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i get a warning at this cast from object
Candidate: is there a reason for element?
Reference: what is acc ? please use full name.
Candidate: this could be simplified (up to <UNK>
Reference: use getlundao() instead of dbfacade.getinstance().getlundao(). also, why use an empty string and not just null?
Candidate: isempty() : <UNK>
Reference: are you sure the object comparison is the same as primitive value comparison?
Candidate: no need braces around
Reference: this should be false. is this a typo?
Candidate: nit: you can use <UNK>
Reference: these two updates is useless, the flow runs in transaction, the changes are not seen until transaction is committed, what is a reason to perform unneeded operation? these makes code
Candidate: you could use isempty() instead of repeating <UNK>
Reference: while (!replaycomplete) is better if it does not break the logic (as i can see it does not)
Candidate: why we expecting to exceptions?
Reference: i would keep the condition on != null as the list can be set to null...
Candidate: this is not required,
Reference: i would keep this pattern as it was, it's easier to see what's part of the assertion and what's not. if there are other cases please revert them too.
Candidate: could be simplified to true"
Reference: i though only the number of nodes in the cluster would originate ispn-8134
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: is there a way to check whether a variable is *effectively* final? because i'd like this to work with locals and locals are rarely explicitly defined as final.
Candidate: you could use <UNK> <UNK>
Reference: why is this check ?
Candidate: you could use mockdatanodeid instead of <UNK>
Reference: what's the different between this and testconstraintsolverforcebacktrack
Candidate: rename to
Reference: locale class doesn't have "zh_hans", so i guess this check is correct.
Candidate: log.debug
Reference: timeout is ignored here
Candidate: you could use <UNK>
Reference: do we need to make a copy of groupbycolumns?
Candidate: you could use <UNK>
Reference: could you move the "2f" into a constant?
Candidate: we could use a string here instead of <UNK>
Reference: child
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: can we have a similar asc ii graph for this test case as well? thanks a lot in advance!
Candidate: why not be used?
Reference: given consumerproperties is always non-null in this class, may be we can do !consumerproperties.isempty() here.
Candidate: is there a reason for element?
Reference: whenever you switch an assert from testng to jupiter, you need to make sure the "expected" and "actual" variables are swapped. otherwise the error messages will be wrong when the
Candidate: you could use <UNK> here instead of <UNK>
Reference: i can't understand why this exists. please check if it can be removed.
Candidate: you could use draw <UNK>
Reference: i would argue that we don't want to start with an invalid configuration. maybe catching these exceptions is not needed?
Candidate: you could use the exception instead of system.out.println
Reference: i believe you don't actually need to instantiate a new sessionmodel here - it can just be sessionmodel sessionmodel;, or just declare it as part of line 410 sessionmodel sessionmodel
Candidate: this system.currenttimemillis()
Reference: how can this work? don't they all have the same name (i.e. the category name)?
Candidate: use <UNK>
Reference: this conditional in the else clause is probably not needed since we're already in the else case, right?
Candidate: you could move this assertion.
Reference: why we are choosing int? wouldn't it confuse users?
Candidate: this is be a address.
Reference: rename to propname maybe switch with 'fullkey', i.e. rename fullkey->propname and this here to key then
Candidate: if you can draw a <UNK> <UNK> <UNK> edit: think. edit: i think.
Reference: please rename to script
Candidate: please remove this
Reference: there is no reason to have this isoptional variable - it only complicates reading.
Candidate: nit: foreach loop
Reference: don't worry about it, but i think this whole method is indented one _tab_ too far
Candidate: you could use <UNK>
Reference: any reason this doesn't use addall as well?
Candidate: is there a reason for element?
Reference: all the subqueries will become never-lazy now. does not look like a correct fix.
Candidate: use <UNK> instead of <UNK>
Reference: the extension could be even something else even it is minor thing, i have seen it for some rare cases ;)
Candidate: i think this is a <UNK>
Reference: just thinking and maybe a good improvement is to make studyinstance in middleware retrieve a boolean indicating if the instance has a fieldmap created or not, so you avoid querying
Candidate: you could use <UNK> instead of accessing <UNK>
Reference: the dialog is a big short in height after you switch to remote. since we don't create the remote composite by default, we don't use its height hint at the
Candidate: i vdsid should be vdsid to be vdsid
Reference: add a message here?
Candidate: this is designed to be a to <UNK> the <UNK>
Reference: expected 2 nodes but was:  + nodes?
Candidate: please add a message
Reference: extract this to a dedicated method.
Candidate: nit: putifabsent is not <UNK>
Reference: the logic you want is rather "crashlytics on devices, not-crashlytics on the emulator, debug-vs-release is not a factor". also, this needs to be done at all entry points to the
Candidate: i'm not sure that this is that we should have to to the this pr, but i'm not sure that we don't have to trackaliasuser
Reference: add null-check for inputstream.
Candidate: use utf-8 instead of <UNK>
Reference: it's late and i'm tired so i could be totally off on this but i feel like this could be done in a single pass and save all the conversions
Candidate: if we could use a <UNK> instead of creating a new array instead of is)
Reference: i think line 121 should change <= to < for comparison. suppose max-solr-results = 10, and numfound = 61, so results will show in 7 pages. when pagenumber=5 (it is
Candidate: suggestion <UNK> -> <UNK>
Reference: please double check. i am not sure(!), but stored.equals(share) may be what you are looking for. this compares references.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: also, this should be consolidated into the same validation: new storagepoolvalidator(getstoragepoolforvds()).isup() // also checks existance :-)
Candidate: i think this is not <UNK>
Reference: these 2 calculation won't change during the lifecycle of the class, i think these could be moved to constructor and the value stored as fields
Candidate: this is not sure that this will be slow due to a bit more readable.
Reference: you don't need to override this since you're already enforcing the 'altered' default in the getlimit(string) method.
Candidate: is there a reason for this method is implemented by default?
Reference: image and title can be done in the parent class
Candidate: please use <UNK>
Reference: @jonathangiles do we have a guideline about when to return an empty collection and when to return null? i noticed this also in: <link_0> and a few other places. i
Candidate: if you should return <UNK> value is not optional.
Reference: req: after this deletion, rebalance_protocol defined on line 66 is not used anymore and can be deleted, too.
Candidate: this is be a transactional
Reference: does it make more sense to use gb instead of us here since payment initiation is more of a gb product?
Candidate: if you could use the dates.
Reference: the idea here is that we expect the source of overloading is a few bad actors hammering, so this will effectively throttle them?
Candidate: we should throw new exceptions?
Reference: ![major](<link_1> 'severity: major') reduce this lambda expression number of lines from 27 to at most 20. [![rule](<link_2>](<link_0>
Candidate: @manuelplazaspalacio oldvalue is oldvalue should be called mapboxwebviewmapfragment
Reference: for example the thread came to this if block and the same moment another thread will acquire connection for that same slot. the node exists in the zk but not
Candidate: minor typo: <UNK>
Reference: interruption to authentication
Candidate: again, we should use a <UNK> quotes for <UNK>
Reference: can the instantiation of the objects in the equals method be broken out of the if condition? there's a lot going on for a simple equality check that would be
Candidate: if we could be a <UNK> <UNK>
Reference: perhaps sledgehammer to fly, but we could have content-type contract on the server, which is disabled for prod. ex. retrofit-bodytype: com.foo.myclass
Candidate: use <UNK>
Reference: more generally, maybe a test with an expected error would be good, to show that the expected type is inferred.
Candidate: this is designed to be an array of apply, there is an indication of apply, there are, possibly possibly possibly possibly possibly possibly possibly possibly possibly possibly possibly possibly possibly
Reference: formatter
Candidate: can you discarded discarded move this line after true" true" true" true" true" true" true"
Reference: column indexes are 1-based - otherwise this is a definite improvement!
Candidate: i think prefixing about prefixing about asserting that <UNK> is not <UNK>
Reference: keep its own check
Candidate: you could use this method instead of objects.isnull
Reference: here, publishedfullregistry.readlock needs to be taken.
Candidate: this is a bit strange that we could use the pagination to <UNK>
Reference: call equals on constant
Candidate: use equals instead of operands
Reference: to loop var also other occurances below
Candidate: you could use use <UNK> instead of <UNK> (like multiple places.
Reference: also, a test-case which proves the problem would be very helpful.
Candidate: i think this imply that the imply that the imply that the imply imply imply that imply the imply that imply that imply the imply imply that imply the imply
Reference: could be "return this.getruntimeinfo(engine, connectortopology, googledriveconnectiondefinition.source_class)" to avoid code redundance. (ok it's only two lines...)
Candidate: is there a reason for this scenario?
Reference: since this is just for jackson, you can make it private and then get rid of the @deprecated if you want
Candidate: this is a <UNK>
Reference: forgotten or left intentionally?
Candidate: i think this can be simplified to <UNK>
Reference: i would consider wrapping completing the future in a finally block to ensure it's always set, imagine close of role is refactored and then throws an exception..
Candidate: i think terminate the <UNK> submitted unexpectedly is submitted
Reference: put and post should have different behaviours: post will return conflict if the entity with the same name already exists, while put will replace the entity. take a look at
Candidate: is there any reason why we removing the exception generation?
Reference: i think i'd rather see the properties written out here than defined as constants at the top of the class. the uuids make sense as constants at the top of
Candidate: please use <UNK>
Reference: add checking for null here. you can pass null as debugconfiguration.
Candidate: you could use a string here instead of <UNK>
Reference: if the request failed, is this.reponse also null? is the warning then still appropriate?
Candidate: we could use s?
Reference: can we pre-compute this value instead? the tokens are immutable and set in the constructor.
Candidate: this is not <UNK>
Reference: i'd prefer to see more specific assertions for these block types. consider having two separate tests, one for unsupported block types that result in an unsupportedblockstrategy, and one for block
Candidate: you could use <UNK>
Reference: this function should only be called if metrics are enabled.
Candidate: i think that this should be called in <UNK>
Reference: move this
Candidate: you could use a constant instead of <UNK>
Reference: asserttrue(pce.getmessage().contains("bla bla bla"))
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: move this closer to other filters.
Candidate: wait.forelementclickable() should be <UNK>
Reference: this should probably use connectorid.getcatalogname() for the message. @dain should take a look since he recently changed all the connector id handling.
Candidate: i think this should be null?
Reference: what does this 1 represent? is there an enum holding this value you could reference instead?
Candidate: should we move the <UNK> to default?
Reference: could you, please, explain, why verification the command palette had been removed?
Candidate: <UNK>
Reference: no need for getinstance(), the container can be passed
Candidate: this is a <UNK>
Reference: should just be checknotnull(globalnames, ...
Candidate: please use <UNK>
Reference: just use return iterables.filter(getmembers(), mongodbrouter.class);
Candidate: this is be <UNK> to <UNK>
Reference: @vilchik-elena that works only if the default charset is standardcharsets.utf_8. why not make highlightxml accept a java.io.reader and use a java.io.stringreader here?
Candidate: use utf-8 instead of creating a new constructor?
Reference: default should be false.
Candidate: this is not <UNK>
Reference: i don't think this will help. the 'timestorun' number requires all of the running to pass. if any one of the running failed then the test will fail. increasing timestorun
Candidate: you could use a try-with-resources instead of <UNK>
Reference: if you add the new json they won't be published until we deal with the front-end of this project, which seems more reasonable to me.
Candidate: you could use a constant instead of <UNK>
Reference: ugh, this is gross. can the unit test just set the property accordingly so you don't have to couple the product code to the tests?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: is this method called at another location too? i'm just asking because you didn't remove another call to updatelibrary
Candidate: rename to
Reference: formatting here is weird too
Candidate: please use <UNK>
Reference: we would never do multiple actions at once. so make this an enum that selects the operation mode, e.g.: enum operation { begin, continue, skip, abort; } and have the
Candidate: i think this is not efficient, but i would be a good idea.
Reference: this is a nice fix and makes sense to me. but i'm missing why you had to pass the zookeeperclient to this class to accomplish that?
Candidate: you could use <UNK> instead of <UNK>
Reference: please make the error message more explicit.
Candidate: use <UNK> instead of <UNK>
Reference: we're updating the selected route while the method claims to update the collection of available routes. i'd rather move this down to #updateroute or get both methods unified for added
Candidate: you could use only: <UNK> instead of <UNK> events.
Reference: suggestion string[] splitthread = channels.split(":", 2);
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: same here, how passed candoaaction().validateinputs() ?
Candidate: please use isempty() instead of <UNK>
Reference: please add a todo here. we may need to do something smarter here by using a different kind of loader. destroying the cached data is not something we want. what
Candidate: is there a reason why not we "do not connected here?
Reference: again should be able to use resources loading instead of a full path?
Candidate: this is not used?
Reference: class name escaping
Candidate: you could use <UNK>
Reference: if you touch this class+method anyway would you mind modifying the underlying design in a way not to return null value? it would be quite error prone e.g. in case
Candidate: you could use stringutils.isnotblank instead of stringutils.isnotblank
Reference: is uri.getpath() not sufficient?
Candidate: could you use <UNK> instance.
Reference: oh wait, based off the convo, shouldn't this message change?
Candidate: you could use a maps here instead of creating a maps for each time?
Reference: clusteringdependentlogic == null is always false since clusteringdependentlogic is never null
Candidate: you could use the <UNK> <UNK>
Reference: id doesn't make sense to validate the existence of host.id or host.name right after you checked it in the 'if' statement. you don't need this validation.
Candidate: suggestion if <UNK> { stringutils
Reference: this either needs to be protected or exception needs to be public.
Candidate: you could use use <UNK> instead of <UNK>
Reference: shortcut for this is, context.getcurrentaddressvalue();
Candidate: this is not be encapsulated in the
Reference: you can remove the unused variable accesresultcode. that also fixes the typo in its name ;-)
Candidate: i think that this is not a db?
Reference: you should pass a more meaningful name for the orchestrator. something like "elasticsearch query orchestrator for backend " + name.
Candidate: suggestion if <UNK> == null) {
Reference: i guess i think a . before left and right would be a bit more readable.
Candidate: i pagelogging
Reference: make this string a constant
Candidate: you should print stack trace to
Reference: @happy-neko same here, let's use indexoutofboundsexception with custom message.
Candidate: @happy-neko same here, here, here, here, here, here, here, let's verify that the
Reference: should these test be really removed ? are they moved somewhere else ? should there be some replacement ? e.g. now there is no need to check the functionality (integration:
Candidate: this exception is be thrown from trace. thanks!
Reference: i think expectedvalue is second argument. if "3" is placed in proper place, there is not much requirement on putting custom message for this assertion, since the default one will
Candidate: use <UNK> unconditionally, thanks.
Reference: move all strings uses more then once to a constant.
Candidate: use a string constant.
Reference: i'm not sure these labels are necessarily better than ones that reflect "onorafter", "onorbefore", and "ondate".
Candidate: should we use <UNK>
Reference: another instance of the predicate discussed previously
Candidate: if you could use simplified to return an int value
Reference: i find the old way makes this easier to read.
Candidate: you can use <UNK>
Reference: why did the whitespace change.
Candidate: you could use a foreach here instead of creating a coupling for each time.
Reference: overall the code is more compat but less straightforward and more obscure. the recurrent use of the form: x = y == z ? a:b ... makes the method hard
Candidate: you could use <UNK>
Reference: suggestion set<constraintviolation<remotedatasetdef>> violations = validator.validate(datasetdef,
Candidate: this is a <UNK>
Reference: why doing this ?
Candidate: you could use <UNK>
Reference: if (getvm().getvmpoolid() != null) ?
Candidate: this should be risky.
Reference: style nit: we don't use braces around single line blocks
Candidate: is there any reason why we setting the inside the constructor?
Reference: @vilchik-elena linkedlist is not my default choice for a list.
Candidate: you could use isempty() instead of repeating this scope.
Reference: log deviceidentification and devicelifecyclestatus as well
Candidate: move this to <UNK>
Reference: ugh. if the underlying stream isn't a bufferedreader, this won't be efficient. with a bufferedreader you should be able to mark(), read a char[], scan that for \n, copy into
Candidate: you could use a string concatenation instead of '+'
Reference: these should be the same triggered ability, which i know is an annoying thing to do. i'm actually wondering if there should be a combined triggered ability class for this
Candidate: how about sleep blanks to the sleep that activated is sleep activated is designed to compute the sleep to the thanks.
Reference: please use notimplementedexception()
Candidate: please use notimplementedexception()
Reference: how does this line work? it looks like it's a loop that doesn't do anything
Candidate: if you could use <UNK> % <UNK> % <UNK> % <UNK> % <UNK> % <UNK> % <UNK> % <UNK> % <UNK>
Reference: for example in this case i think you would say suggestion contains(extensionlist.lookupsingleton(nonavigatorsomefactoryinstalleddescriptor.class)));
Candidate: you could use <UNK>
Reference: please put the creation of timestressorcompletion to else branch (you can omit the variable and return new instance right away).
Candidate: we should use only:  <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK>
Reference: entires.putall(map)?
Candidate: please use <UNK>
Reference: ditto. the string can be defined as a constant variable.
Candidate: you can use a date as a constant?
Reference: i suggest to put (i / half) (i.e. for all i < half it will be 0, for all i >= half it will be 1) into "feat1" instead of
Candidate: i we need to set the <UNK> <UNK>
Reference: please, write it in one line: @override public any reason to copy-paste implementation from mapkeytoprimaryandbackupslist?
Candidate: this is right...
Reference: should go into @after method to make sure it clears authorizations even if an assert statement fails.
Candidate: you could use <UNK>
Reference: it actually is equivalent to kill. there is no waiting for undeploy etc.
Candidate: this should be <UNK>
Reference: what is this method meant for? what is the "intramurals" username?
Candidate: this is not be used?
Reference: this is the same as in jiraupdatewriter. i suggest to put reject exception creation to validaterequestbody() method. here, you may leave only a call to validaterequestbody(json);
Candidate: use <UNK> instead of datanodeid
Reference: ha. can you actually change all these to assertequals(1, expected.geterrormessages().size()) ? ... not sure why i didn't do that in the first place.
Candidate: this is not fail()?
Reference: why not to inject this one as a dependency of the class ? (same as dbschedulerutilquartzimpl)
Candidate: if you could use getparameters().getstoragedomainid() == null && <UNK> == null) { return <UNK> }
Reference: why this separate block for schemaprojectorexception? isn't that just a copycatexception that could be handled by the existing block? or are you throwing the exception because this is effectively unrecoverable?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this should be capped at max, so: byte[] nb = new byte[math.min(buf.length * 2, max)];
Candidate: formatting
Reference: variable name unclear, using the singular "order" to refer to a list of orders.
Candidate: please use <UNK>
Reference: whatever you did here don't commit this change
Candidate: this is not efficient, we could use <UNK>
Reference: could also "copy" the attributevaluefilterpattern, it's immutable.
Candidate: you could use a constant instead of <UNK>
Reference: a more proper abstraction would not expose the map interface.  public string getnamebyemail() { // .... }
Candidate: please @nullable.
Reference: better use .isempty()
Candidate: if we is a null in the <UNK>
Reference: does this part actually do anything? it looks like you're assigning a new pagetitle to a local variable, but this doesn't replace the actual list item with the new title,
Candidate: please add a error message
Reference: looks like you will need to add ability search person on server
Candidate: you should use <UNK> setter instead of found.
Reference: this should fixed in master
Candidate: no need for the
Reference: what if host already in non-operational status? shouldn't we check it and move to unknown in this scenario?
Candidate: the error message is dangerous,
Reference: to be consistent with the previous behavior, i think you should use files.createdirectories (since you are replacing mkdirs). this will create any parent directories that don't exist.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: it doesn't seem like you do anything with the remaining typeids.
Candidate: i think this is a bit idea.
Reference: do we have to always create v2 clients even if i am using only v3 ?
Candidate: i think this should be initialized in the constructor?
Reference: newchild
Candidate: use <UNK> instead of <UNK>
Reference: are you so sure that no jenkins component is logging secrets at fine or below?
Candidate: i think this should be <UNK>
Reference: perhaps make id optional for mockscmsourcebuilder too.
Candidate: this is right...
Reference: i think the docs are wrong here  they say fragment queries match if "any part of a dimension value contains any of the values specified" but the code matches
Candidate: if you could use <UNK> <UNK>
Reference: i missed bounded type parameters already :-) i don't know if it would be better to create separate versions of createpoint methods? like this?  protected points.point createpoint(long timestamp, rollup
Candidate: use <UNK>
Reference: perhaps it would be better to just connect the jschsession within the lock above (and add a catch); then the connect within sftpsession would be a no-op for shared sessions
Candidate: i understood that this is is not used.
Reference: is debug the appropriate log level for these? all apps i've seen deployed have everything is set to info or higher.
Candidate: if this interact is replaced by "return <UNK>
Reference: can we move startup of the native protocol for until after we've finished setting up traces and finished startup? this should always be the last step.
Candidate: stringutils.isnotblank()
Reference: there are some concurrency issues: you may observe overshadowedsegments from a previous run. i think it would be easier to add isovershadowed field to datasegment directly in this pr because
Candidate: you could use <UNK>
Reference: iterators.transform ?
Candidate: log.debug -> <UNK>
Reference: what's the reasons for that initializations here? shouldn't all that ones not be done implicit already?
Candidate: you could use <UNK>
Reference: don't need to have this in a separate function if it's just a oneliner, imo.
Candidate: this should be <UNK>
Reference: i _think_ that should be ok too. should it skip the sequence limit entirely if limit is the default long.max_value?
Candidate: this should be <UNK>
Reference: variable can be removed
Candidate: please use <UNK> names instead of <UNK>
Reference: debugging println that should be removed?
Candidate: suggestion <UNK> = <UNK>
Reference: here it should be "perform", no?
Candidate: this args?
Reference: checknotnull constructor params ditto for other constructors
Candidate: this is a <UNK>
Reference: unless i'm missing something, this doesn't look like it properly handles hbase's bizarre "last append wins" behavior
Candidate: you could use <UNK>
Reference: ![major](<link_0> unknown method [![rule](<link_1>](<link_2>
Candidate: you could use <UNK>
Reference: a safe rule of thumb while starting any activity is to first check using packagemanager and intent.resolveactivity() whether some activity exists to handle that intent. i think instead of try-catch,
Candidate: is there a reason for this logic?
Reference: add newline before return.
Candidate: add newline before return.
Reference: used only once, do we need it at all? why such simple actions can't be inlined?
Candidate: please use uri.create
Reference: we only need to load the capture queue once. could this line go before the for loop?
Candidate: rename to <UNK>
Reference: just writebytes(content.array()) back to my original, somewhat broken version ;)
Candidate: i think this became designed to be 'final' 'final' block 'final' 'final'
Reference: this adds the attribute transformers to the subsystem resource, which isn't where they should be - they are on the xa-datasource=* child resources. so: i'd do:  parentbuilder.createbuilder(.....) .addchildresource(pathelement.pathelement("xa-datasource")) .getattributebuilder()
Candidate: you could use <UNK>
Reference: why is this?
Candidate: you could use <UNK>
Reference: what if it's not the right instance? shouldn't we throw an unsupportedoperationexception? or, is there a way to just create it from the factory, so we know it's always the
Candidate: you could use <UNK>
Reference: what is the purpose of this method?
Candidate: why not -1l change?
Reference: tooltips -> usetooltips
Candidate: suggestion <UNK> = new <UNK>
Reference: new linkedhashmap<>();
Candidate: suggestion <UNK> -> <UNK>
Reference: should this be pulled out into a separate pr?
Candidate: suggestion if <UNK> != null) { ... }
Reference: so a fun thing i learned last week is that the tostring() on typeelement is not standard between compiler implementations. in eclipse it will give you a string like "class
Candidate: please use <UNK>
Reference: does this work, it looks like you're asking the servicedao for workflows when it seems like workflowdao is what i would have expected. tests are passing though ... which might
Candidate: you could use a <UNK> here instead of creating a new object and then the clear() is unnecessary.
Reference: there is a fluxutil method to handle pulling a response value out, i believe it is called tomono. should use that in all the places update.
Candidate: <UNK> -> <UNK>
Reference: you can just do  evalsuccess = instance.comparison.equals(is_not);
Candidate: please use stringutils.isnotblank()
Reference: would it be easier to read like this: java if (!config.islocal() && config.shouldauthenticate() && config.isstartpageabsoluteurl()) { return new bootconfigvalidationresult(false, "cannot authenticate using an absolute url for start page."); } if
Candidate: is there a reason for this logic?
Reference: makes sense to use fassociatedvalue instead of getassociatednumericalvalue() since it makes the code more explicit.
Candidate: if you could use the <UNK> % <UNK> ? 1l : ....
Reference: you need to make sure the ehcacheactiveentity.destroy method triggers this as well.
Candidate: i liked that this is is deserve a
Reference: please remove useless whitespaces.
Candidate: you could use <UNK>
Reference: why filtering out case variables?
Candidate: is there a reason for this method is not used?
Reference: why is this code copy-pasted? since the 2 classes inherit from the same base class, it can be put there in a method.
Candidate: you can replace this by: <UNK> <UNK> entity,
Reference: does a list of futures always be completed in the order they are added?
Candidate: this exception is be thrown by <UNK>
Reference: inline with ifpresent to emphasize there isn't any complex if logic in this method:  searchfrom(plan).where(applynode.class::isinstance) .findfirst() .ifpresent(applynode -> { throw error(....); });
Candidate: this should be annotated with @nullable.
Reference: explicitly set the encoding ?
Candidate: you could be simplified to java return <UNK> == null ?
Reference: should we close the reader here? or it will be used for inputchannels later?
Candidate: wdyt about moving this to <UNK> listener.
Reference: \r.getbytes(charsets.utf_8)[0] is a really expensive call. it goes through the charset codecs. just do a bytes[offset + numbytes -1] == '\r'.
Candidate: is there a reason for element?
Reference: shouldn't stripformat be used since stripessentialsformat does untranslated color codes afaik? suggestion final string strippednick = formatutil.stripformat(user.getnickname());
Candidate: suggestion if <UNK> == null) { % <UNK> }
Reference: let's use underscore so it's consistent with session properties
Candidate: use readasstring(...) instead of printing the
Reference: i've been putting some thought into this method, and i've got a question for you. while the saml spec allows multiple attributevalues for a single attribute, it also encourages that
Candidate: i align with <UNK>
Reference: please log debugging data here.
Candidate: please use <UNK>
Reference: why new line? you can leave it on the previous line, like:  new runnable() { } .run();
Candidate: @manuelplazaspalacio we should have to call to <UNK>
Reference: this seems a bit large, 512 would be better
Candidate: you could use a conf object instead of pulling the from the commons
Reference: why did you not use a objects.isnull(amnotnull) here like on other places and changes?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why this change?
Candidate: suggestion <UNK> -> <UNK>
Reference: collections.sort(ops, comparator.comparing(operationinfo::getid))
Candidate: you could use <UNK> instead of repeating the middle of <UNK>
Reference: string.valueof(string).tostring();? why not just return the string, it's final.
Candidate: could we return <UNK>
Reference: this returns a boolean - you need to check if the file was actually created.
Candidate: is there a reason for avro ? thanks!
Reference: why a null check here, but not in previous test classes? can this one be null more than others?
Candidate: is there a reason that is is not to be used?
Reference: namespace is wrong here.
Candidate: please use <UNK>
Reference: that said, i have no objections to this pr.
Candidate: this is designed is designed to be a positive <UNK>
Reference: please use static imports. the compiler should be able to tell assertthat(optional) from assertthat(comparable).
Candidate: please use <UNK>
Reference: this should first read the value, remember it and re-set - either on teardown or in the finally block. otherwise the test may change the environment.
Candidate: log.debug
Reference: i don't understand why this parser is needed. isn't taskname simple string?
Candidate: is there a reason that we are going to use a <UNK> <UNK>
Reference: move the if (id == null) before defining isfactory to avoid getting it if not needed
Candidate: this is not a bit dangerous, for the
Reference: make it final
Candidate: is there a reason for this logic?
Reference: iostatisticsstore.tostring() does that too; what you get through the logging api is resilience to failures
Candidate: nit: fyi, we use capitals concatentation of events.
Reference: can use @test(expected = ...), see above.
Candidate: you could use tear down to
Reference: maybe don't have to copy if affinityconfig.affinity is a map<string, set<string>>?
Candidate: depending on the
Reference: null parameter checks should always use "assert.checknotnullparam" if possible.
Candidate: could we use a enum instead of <UNK>
Reference: please conform to one naming standard i.e. using singular or plurar form for classes and methods.
Candidate: i think this is not efficient, we could use <UNK>
Reference: (nit) move the declaration into the for look for better readability
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: should those hashcodes be hardcoded ? they depend on hashcodebuilder.tohashcode() implementation.
Candidate: you could use a constant instead of <UNK>
Reference: two map creations + putall. i believe the code should pay more attention to that ... even if it means using the map in a side effect way as an
Candidate: i think this is be to be.
Reference: do we use p after this? maybe we can remove eventbinlogposition as well?
Candidate: i pagelogging
Reference: might be better to go with msg=get-all-last-seen-insights-fail-insight-missing rather than repeat debug. it just so happens that for error it makes sense to have the error=xxxxx key.
Candidate: this is be inlined
Reference: how about a linkedhashset to keep the order stable?
Candidate: rename to <UNK> listener.
Reference: shouldn't this be a getandset(false)?
Candidate: i think that this should be <UNK>
Reference: there is no ifpresent and orelse code here. - can't we use int and -1? - this would be closer to the data model of linkedfiles.
Candidate: catching this exception
Reference: i think it makes more sense if the extra parameter was read from an fvclassifier rather than required at any ofswitchacceptor. it would also make the feature more like other
Candidate: you could use a try-with-resources
Reference: can you double check whether partcount==1 case is handled fine here?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: use closer here to make sure both resources had a chance to be closed.
Candidate: why not synchronize on every time?
Reference: personally i would prefer to create a real ratelimiterkey rather than use a mock here given it's simple to do, but not a big deal
Candidate: you could use <UNK>
Reference: in the case where properties == null shouldn't you retrieve the existing application properties and use those?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: can we update method isauthzclient, add getondemand logic in method isauthzclient?
Candidate: is there a reason for element?
Reference: obviously just a nit: i think this can be l.e(caught) or l.e("foo", caught); since this is a test should we just fail?
Candidate: should we add the log, lose expectations on the log,
Reference: just in case you intended to have immutable class java.util.data is mutable class. you can check it here: <link_0>
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: please prepare for the internationalization with messages.properties. example: - <link_0> - <link_1>
Candidate: @ivange94
Reference: shouldn't 50 be a constant?
Candidate: storagetype is a bit more than <UNK>
Reference: in general the updated() method is meant to be used for static system configuration like ip addresses of gateways and stuff. the creation of concrete readers should only be done
Candidate: should we move this check to the
Reference: so, here's the big problem i see with this approach. you've chopped the request for clearing status into many requests and for each of these requests, you load the complete
Candidate: i don't think this should be replaced with <UNK>
Reference: externalize
Candidate: use <UNK> instead of <UNK>
Reference: same, as above... use dataset.xml instead
Candidate: this should be a <UNK> ctor explicitly.
Reference: @wangqiaoshi if else logic looks redundant. is it possible that we just move projectloader.uploadprojectproperty(project, prop) outside of if else logics ?
Candidate: this should be thrown here
Reference: unless i'm mistaken, this isn't strictly correct. the equivalent behavior would be achieved on legacy slaves if we discarded when initial-load is 100, and rejected otherwise.
Candidate: this is not throw an exception
Reference: change to istructuredselection
Candidate: you could use a set to set the input.
Reference: null parameters is a runtime problem and i believe it should be kuraruntimeexception. you can use preconditions static factory methods container class for such conditions.
Candidate: runtime exception runtime exception
Reference: this omits the critical functionality in #9: allowing scripts to interpret results themselves.
Candidate: you could move this check to <UNK>
Reference: can we split this as follows:  final storequeryparameters parameters = (storequeryparameters.fromnameandtype(keyvaluestore, queryablestoretypes.keyvaluestore()).withpartition(numstatestorepartitions + 1); final invalidstatestoreexception exception = asserthrows( invalidstatestoreexception.class, () -> storeprovider.getstore(parameters) ); assertthat(exception.message(), equalto("..."));  and remove
Candidate: please use <UNK>
Reference: filedtype::tomap
Candidate: ![major](<link_1> 'severity: major') either log or rethrow this [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0>
Reference: legacy_account_id and legacy_container_id are also defined in blobproperties. lets have the declaration in one place only and let others use the same.
Candidate: suggestion <UNK> = new <UNK>
Reference: suggest having a second network - one with transport_wifi - on top of the vpn you already have.
Candidate: this is not <UNK>
Reference: will it be possible to extract this into method and cover with unit test + doc (the logic is not transparent imo)
Candidate: i think that this is not belong to this pr, but i would imply that the imply that the is not imply that the is not belong to the
Reference: better to explicitly check default_state_model_def here. for the other cases, shall throw an exception the earlier to better.
Candidate: this should be <UNK>
Reference: the transform should never ever return null. if something changed we need to unchange it. #getrule(...) should throw a notfoundexception if the ruleid isn't present in the database. the transform.apptorest
Candidate: is there a reason that is is not error. i am not sure that we want to throw an exception instead of <UNK>
Reference: nit: i'd prefer to push the spans into a collection and verify after. as written this will pass if the acquirelimiter span is created twice (also true of the previous
Candidate: you could use a mock <UNK>
Reference: retain the original class name. i see no need to change it.
Candidate: you could use <UNK> <UNK>
Reference: i don't think we should use getcontext() we should use getactivity(). what do you say @droidchef
Candidate: you could use <UNK>
Reference: i think these calculations can be simplified like this: java double pitchradians = math.toradians(location.getpitch()); double yawradians = math.toradians(location.getyaw()); double verticalmultiplier = cos(pitchradians); double x = verticalmultiplier * sin(-yawradians); double z
Candidate: you could replace this with <UNK> with <UNK>
Reference: values("a")
Candidate: you could move this line
Reference: in fact, i would return all profiles. something like: commonhelper.tostring(this.getclass(), "profiles", getprofiles());
Candidate: please remove underscores
Reference: do you need to lock on both calls? i would try to extract locking in a helper method so it would interfere with mysql startup.
Candidate: we could use a try-with-resources here instead of the discoveryresult v. a v. invalid?
Reference: return status.backup_failed.equals(status) || status.restore_failed.equals(status);
Candidate: if you could use <UNK> <UNK>
Reference: suggestion checkargument(key.length == 32, "key length should be 32 bytes, but is " + key.length + " bytes");
Candidate: is there any reason why we catching the exception?
Reference: i don't think that addresses my concern about having a good error message if an unexpected exception is thrown. i think being explicit provides a cleaner, more obvious and easier
Candidate: is this necessary?
Reference: in other classes we throw unsupportedoperation
Candidate: unsupportedoperationexception
Reference: nit: could combine into (taskconfig.getcommand() == null != jobconfig.getcommand() == null) and say "command must exist in either job or task, not both".
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: you don't need to remove() since it would be replaced in the following put().
Candidate: suggestion <UNK> -> <UNK>
Reference: don't need to access iterator, just: for (long long1: queryfactory.tuplequery().gettuple2e1listraw(coretupletypes.viewapplicability, branch, applid.getid()) { ... }
Candidate: you could use <UNK>
Reference: relying on the enum ordering seems scary. could we instead java double toperfrom = unitto.convert(1, unitfrom) if (toperfrom == 0) { toperfrom = 1 / unitfrom.convert(1, unitto) } return valuefrom
Candidate: this is be <UNK>
Reference: use shellisavailable
Candidate: use shellisavailable
Reference: here, it could be simply return queue.peek(); (avoiding the redundant isempty check).
Candidate: throw an exception
Reference: this is a check of the argument. annotate with @nonnull and let static code-analysis handle this
Candidate: you could use a multimap here instead of <UNK>
Reference: just make getlatestlayout return a layout, if its null then return a dummy layout with -1 epoch. then in fetchlayout you can wrap this with a future and return.
Candidate: i think that this is is not 'final'
Reference: too much duplication with the previous method.
Candidate: is there a reason for this change?
Reference: we should be able to use the writeunsignedint method from unsignednumeric class.
Candidate: if you could use a <UNK>
Reference: i would prefer a warning and going with the default value then - which means that the runtime can easily recover from the invalid config value.
Candidate: i think we should throw an unsupportedoperationexception rather than checkargument rather than an illegalstateexception
Reference: ![major](<link_0> define and throw a dedicated exception instead of using a generic one. [![rule](<link_2>](<link_1>
Candidate: is this used?
Reference: reusing fcontext in the other examples still.
Candidate: suggestion final string = <UNK> date, <UNK> date, <UNK> date, <UNK> date, <UNK> = <UNK>
Reference: rename to launch
Candidate: this is designed to be a the bottom of the
Reference: typo. should be modify to adjusted.
Candidate: i'm not sure how about this is an iterator is designed to have an iterator that will be propagated to the
Reference: can we use notfound error code?
Candidate: is there a reason to use <UNK> here?
Reference: opaque
Candidate: i think that this is not efficient, but i would be a bottleneck. bottleneck. is a bottleneck. we could have been <UNK> to <UNK>
Reference: i'm confused by this, we removed the streamsconfig.metrics_latest config, but we've replaced it with a literal string value of the same thing. edit: nm re-reading the pr i think i
Candidate: is there a reason for this method is not <UNK>
Reference: not needed anymore, they seems to have fixed the bug with "localhost" within ga.js
Candidate: i think this should be initialized in a finally block
Reference: i'm not sure this is needed. why do we need to commit to the indexing service here? we don't seem to need to do this when deleting any other type
Candidate: i think that this is is not <UNK>
Reference: this check is not only adding but also removing problem from / to nodes. returning true leads to a prune of the child-tree branch beneath that node. i'm not sure
Candidate: you could use a string instead of <UNK>
Reference: related?
Candidate: this is designed to evict overview
Reference: intermediate arraylist is unnecessary.
Candidate: you could use a multimap
Reference: why is this needed?
Candidate: please use <UNK>
Reference: to enforce naming convention, should we put composing and parsing containers' names to a separated class?
Candidate: this branch is designed to be an extra white space after the
Reference: probably can remove the print()
Candidate: you could use <UNK>
Reference: why are we not checking the received msg count being > 0 here like other places ?
Candidate: same question here,
Reference: can't we just set without compare?
Candidate: if you could use isempty() instead of shard == null
Reference: suggestion "namespace is longer than "+max_namespace_len+" characters");
Candidate: we could use a constant for the
Reference: why do you need to print during a test?
Candidate: why this change?
Reference: in both the old and new situation this line seems duplicated
Candidate: finals
Reference: again, no default please.
Candidate: this is not to be used?
Reference: why not directly call a candeleteinstance(input) ?
Candidate: why not use <UNK>
Reference: great, thanks again.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: same thing: missing table name in error message. 1) it is not clear what is missing 2) it is not clear why it is missing. assert message should better be
Candidate: is there any particular reason reason for this? fyi,
Reference: on phone so can't expand this file to see below but if it's duping the next line, commet instead is fine
Candidate: this is a good way?
Reference: else if (newleast.compareto(oldleast) == 0) {...} else { issueerror(... (symmetric to the other direction)
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: is there any reason why exactref() is not directly called on repository here? it is called on repository in all other places that have been changed. i suggest to call
Candidate: use <UNK>
Reference: this can just be a plain map.
Candidate: this should be changed to unchanged.
Reference: i wonder if the mediaurl could be abused here (with infos coming from the server) and if we should escape it (same for other calls to execjavascriptfromstring with a mediaurl)
Candidate: is there any reason to be public?
Reference: shouldn't we protect ourselves against wrong context type?
Candidate: you could replace this with foreach loop with foreach loop with <UNK>
Reference: this can also be simplified (assuming java 1.8 is used)  public int getextradata(int index, vector3i pos, int value) { extendextradatato(index); return extradata.get(index).getordefault(new vector3i(x, y, z), 0); }
Candidate: is there a reason for sharing sake of null?
Reference: java protected string entitytojson(object entity) { string newentityjson = ""; // todo: throw an auditing exception here // drop data on consumer we do not want serialized, jackson doesn't //
Candidate: i don't think you need a maps here
Reference: i would split that up, it's a bit hard to read. if (includedinfeature) return false; if (showproducts && includedinproduct) return false;
Candidate: nit f : int d = d = <UNK>
Reference: as we're anyway touching these lines, let's reformat and add space around = and !=.
Candidate: i think this is not efficient, but i think, i think, that the is not efficient, we could use servercontext.
Reference: should we really have a different formatting for newly added files? why not simply sb.append("+") .append(info.lines_inserted()) ? this formatting would be more consistent.
Candidate: you could use costly.
Reference: add final to exceptions
Candidate: this is not <UNK>
Reference: we should be comparing using object.equals(actionparam.getnames(), this.getname()) - to account for nulls - == checks for reference equality not logical equality
Candidate: use objects.equals to datanodeid instead.
Reference: suggestion timer = getmetrics().timer("key-validate");
Candidate: you could use <UNK>
Reference: is this really needed? maybe this should be removed for efficiency reasons (but i don't know how often this method is actually used...)
Candidate: use <UNK> instead of <UNK>
Reference: using valueof to get the constant instead of using noneof definitely seems better to me.
Candidate: i'm not sure how about this is a bit less than <UNK>
Reference: maybe we need to create constant field with value data just to know were exactly it's used. i've found only eventtypevalidation#wrapschemaindata, and it will be hard for me to understand
Candidate: how about this is expecting an exception
Reference: rather than having this check and two different code paths, let's make it so that version is final and always non-null with a default of $2y
Candidate: if this is is null, so that this will throw an npe.
Reference: would be nice if you pass in here the vdsmanager and the cached numa nodes. then the vmanalyzerfactory is stateless and can be normally injected in vmsmonitoring.
Candidate: can we use the property?
Reference: fint? just f looks better.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: would it make sense to also make sure that the string is not blank?
Candidate: you could use the enum instead of <UNK>
Reference: $rundir doesn't look right.
Candidate: you could use a constant instead of <UNK>
Reference: !isempty() instead of size() > 0 ?
Candidate: if you could be simplified to <UNK>
Reference: you should move "creating snapshot..." to localization
Candidate: please use <UNK>
Reference: if you only iterate over watched cubes here, non-watched cubes will never get unloaded, which defeats the purpose of chunk gc.
Candidate: you could use <UNK> here instead of <UNK>
Reference: doesn't this make equals assymetrical, if this is a subclass of o then this.equals(o) may be true while o.equals(this) would be false.
Candidate: please use objects.equals
Reference: when do we validate the config file?
Candidate: you could remove the formatter
Reference: suggestion if (vunglebanner != null) { if (vunglebanner.getparent() != null) { ((viewgroup) vunglebanner.getparent()).removeview(vunglebanner); } log.d(tag, "vungle banner adapter cleanup: destroyad # " + vunglebanner.hashcode()); vunglebanner.destroyad(); vunglebanner = null; }
Candidate: if this is designed is designed to apply, oldvalue will be flagged if oldvalue && oldvalue == null && <UNK> && <UNK>
Reference: same for all the changes in this file, just use offsetdatetime.now() directly.
Candidate: could we use <UNK>
Reference: oops
Candidate: you could have a bit confused about this pr, but i haven't confused about a pr, but confused about this pr, but i'm confused about a pr, but confused about
Reference: could unsupportedoperationexception be more convenient? also, same for **row**: 111
Candidate: this is not to be <UNK>
Reference: previously we checked if we had more than 1 alleles that pass the tlod and nlod thresholds, not just the number of alleles. just checking the number of alleles may
Candidate: could you rename this to <UNK>
Reference: shouldn't the datastreams be identical if it's the same request? why only check owner (and effectively datastream name)?
Candidate: this should be changed to a separate reasons.
Reference: this breaks the humidity implementation of the habitat former because the humidity should only be controlled through the fluids and this allows to lower the humidity by consuming water which
Candidate: this is a <UNK>
Reference: this lack of braces doesn't follow our style guide.
Candidate: this is designed to throw an error message that the is is not to quickly if none not found.
Reference: should use validateutils.notempty(files)
Candidate: <UNK>
Reference: looking at this test as a whole, the public interface is tested more thoroughly if raw string values are used here instead of the internal constants representing the manifest keys.
Candidate: use <UNK>
Reference: as i recently learn, function names are apparently case insensitive in php (<link_0>, so i would convert it in lowercase before testing if contained in set.
Candidate: no, that this is not belong to the
Reference: nit: addr seems useless? no need to assign to addr anymore?
Candidate: you could use <UNK>
Reference: please do not use magic number here - actually, you can use http error codes for this or at least a constant.
Candidate: no need to log here
Reference: where could python console log re-directed? it is better to redirect console log to java console and shifu.log.
Candidate: you could use a string instead of creating a string instead of is)
Reference: i would prefer updating avatica to add another metaresultset.create that has updatecount parameter, instead of adding a subclass.
Candidate: let's attempt inspections to use <UNK> instead, instead, let's use a instead, let's use a instead, let's use a instead, let's use a instead, instead, let's use a instead, instead,
Reference: is this the right logic? we care only about bulk put. we want to add the filter for every request besides bulk put. so we should invert this logic.
Candidate: you could use <UNK> here instead of <UNK>
Reference: this is maybe what configmemorysize.tobytes should throw for out of range
Candidate: throw an illegalstateexception instead of <UNK>
Reference: should the constructor be public?
Candidate: is there a reason for element?
Reference: currentprogress is always >0. so first condition can be removed
Candidate: maybe we could factor out the logic?
Reference: please add an assertion message to the asserequals() call.
Candidate: finals
Reference: barcodeprintassister should be private final member instead of new anonymous class per request. same in all other controllerhelperservices
Candidate: is there a reason why not properties?
Reference: this winds up allocating two (2) stringbuilder instances -- use append instead of the concatenation.
Candidate: how about using a <UNK> <UNK>
Reference: not clear what to do
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this(this.delegate = newsimpleaggregatedmemorycontext());
Candidate: suggestion <UNK> = new <UNK> clazz, <UNK> <UNK>
Reference: here we should just use the categorydeletecommand and i don't know why the code that you copied used a category ;-)
Candidate: i think this is confusing.
Reference: could just use a method reference, here: .map(umltprotocolmessage::toreceiveevent) it's not only a bit easier to read but, unless the compiler is very clever, saves on creating a .class file for
Candidate: same as above.
Reference: looking at this in variables view i think better we just name it "lambda", because the details of the object are showing lambda name etc.
Candidate: should we use <UNK> enum annotation, instead of <UNK>
Reference: should be new udpmatcher(config) ...
Candidate: is there a reason to assert that correctness of the constructor?
Reference: added a controller view so that you can send commands straight to the arduino?
Candidate: could you pulled this into a constant?
Reference: remove these lines as they are superfluous now, but the original method was truly bizarre. don? ryan?
Candidate: putifabsent
Reference: use constant entitymodels
Candidate: can be replaced with <UNK>
Reference: required?
Candidate: log.d
Reference: i find this more difficult to read and would prefer the original version here.
Candidate: you could use <UNK> instead of creating a connection, instead of creating a connection, friendly is)
Reference: use browserutil. the handler in tasks.ui should handle the url.
Candidate: no need to display the description
Reference: is there any way around it or is an optimization to no copy not really worth it?
Candidate: we should move this log to a separate method.
Reference: nit: use else to be clearer
Candidate: should we throw an exception instead of <UNK>
Reference: can we add an upperbound here (liek 20 ro somethign) and throw an exception if it tries too many times
Candidate: you could use <UNK>
Reference: more compact but less clear.
Candidate: is there a particular reason for sake of the sake of the sake of the sake of the sake of the sake of the sake of the sake of the
Reference: would it be much of change in tests to change versionedeventstore#putall to take lockwatchevents?
Candidate: this is designed to blow up higher <UNK>
Reference: @jwass @findepi @arhimondr geometrytype enum lists types used for serialization. envelope type is used to efficiently serialize trivial polygons and enable further optimizations by preserving the fact that the polygon
Candidate: nit: use <UNK>
Reference: shouldn't we make sure there is no alive debug sessions for every session? not just the first one?
Candidate: please use <UNK>
Reference: tags can also be null (default value)
Candidate: this is a bit nervous that you could use a <UNK> <UNK>
Reference: might as well compress it... let's not introduce kryo / chill deps, too much churn for such a low-level lib
Candidate: you could use <UNK>
Reference: this is still missing tests for foo from both the folder and the project.
Candidate: this is a test, but it's a good idea to test, but it would around)
Reference: and the variable name systemweighting?
Candidate: if weights is a reasons.
Reference: won't this break horribly and cause dupe bugs as k is never subtracted from the resource?
Candidate: objects.isnull
Reference: it looks like this is the same for most (all?) subclasses. if you make usage_summary and output_extensions either constructor arguments or abstract methods then the duplicate code can be removed.
Candidate: this is be repelaced by "this".
Reference: you need to handle the case where mli is null.
Candidate: typo -> <UNK>
Reference: why do we mark integer.max_value? if we call reset after this the read position of the stream will be integer.max_value.
Candidate: use <UNK>
Reference: modify it as it was implemented in eng-10264
Candidate: nit: style nit: we don't have a space after this pr.
Reference: considering the implementation details, i wouldn't make this method available even to its package. let's discuss.
Candidate: this should be putifabsent is treated as args?
Reference: just call this value
Candidate: i think that this will be npe if part, no?
Reference: this is a static non-instantiable class, i'd rather change the constructor visibility to private.
Candidate: this is a <UNK>
Reference: not sure if you notice, a method reference can be used here:  this.original = optional.ofnullable( (servletrequestattributes) requestcontextholder.getrequestattributes()) .map(servletrequestattributes::getrequest);
Candidate: if we == 0 || <UNK> == null || in.line == null) { throw new <UNK> }
Reference: why not just bubble the exception? it's used in test setup so i guess it's okay to just throw them
Candidate: you could use <UNK>
Reference: going to remove as the refreshing of the prefs shouldn't be on this code path. should be taken care of the process that instantiates the object (see abstractkeyvalueservice#constructor)
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: also <link_0> . @dwnusbaum has added a utility method for that recently, so you could replace dir.topath() byt filetopath(dir)
Candidate: please use reflectiveoperationexception here instead of <UNK>
Reference: you should probably make a variable at the beginning of the loop for getmainhandlocation so it isn't run 3 times
Candidate: you could use this feature instead of <UNK>
Reference: the hashmap seems unnecessary. you could just iterate over projecttype.values() and get the plugin from the projecttype. also, our coding style says there should be a space after keywords like
Candidate: this is a bit nervous about nesting.
Reference: btw java.util.objects would make this a bit simpler.
Candidate: you could use objects.hash()
Reference: can you rework this to just:  assertequals( expectedhighlevelobject, actualhighlevelobject );  which will compare the two via .equals() on the objects. this assumed that analyticsevent has a sensible equals()
Candidate: use <UNK>
Reference: just a small note. there is no need to declare filenotfoundexception as it is a subclass of ioexception
Candidate: you could use <UNK> here instead of <UNK>
Reference: does adb output contain different line separators based on os?
Candidate: you could use <UNK> annotation, instead of objects.isnull
Reference: basepath.endwith(files.separator)
Candidate: you could use a constant here instead of <UNK>
Reference: i think += should just be =. this will at least double the value every time, not just multiply it by the modifer.
Candidate: i think this weights possible?
Reference: can you check if other counts are 0 also?
Candidate: this could be simplified to <UNK>
Reference: code is a little bit cleaner if stream is mapped before the filtering  locks.stream().map(lockinfo::getacquired) .filter(objects::nonnull) .filter(date -> date.isbefore(limitforacquired)) .count()
Candidate: you could use <UNK>
Reference: perhaps rename shard to conservativeshard and shard2 to thoroughshard.
Candidate: wait.forelementclickable() should be <UNK>
Reference: this implementation could be restructured as below: int getclientwidth () { if (handle == 0 || (state & zero_width) != 0) return 0; gtkallocation allocation = new gtkallocation (); gtk_widget_get_allocation
Candidate: this will be the results again.
Reference: extract to local variable?
Candidate: could be simplified (up to <UNK> <UNK>
Reference: hm, i think it's better to use nextoffsets.get() now that it has been set rather than repeatedly calling consumer.position() here and the line below, since we don't really know the
Candidate: we could use try-with-resources here instead of <UNK>
Reference: might be like this: java arraysupport = primitivearraysupport.getarraysupport(array) if (arraysupport != null) { fieldstring = arraysupport.toarraystring(array) }  the static primitivearraysupport.arraytostring() method can be removed then.
Candidate: you could use a try/catch instead of you.
Reference: requirenonnull
Candidate: maybe we could use a <UNK> instead of <UNK>
Reference: add spacing for readability
Candidate: rename to
Reference: string.length() != []byte.length. we would need to convert string into utf8 encoded byte array.
Candidate: this is not a a to quickly if the is not return?
Reference: when are these clients closed? when the perf test is completed, eventhubproducer*client.close() should be called.
Candidate: use collectionutils instead of <UNK>
Reference: what do you expect this to do on windows :-)
Candidate: you could use <UNK>
Reference: i still don't really undestand why this change became necessary within this pr? that interval cannot be stored isn't new. did randomtype change in some unrelated way?
Candidate: this is designed to be a raw types as well
Reference: nit: extra parenthesis
Candidate: we could use only:  java return <UNK> <UNK> -> <UNK>
Reference: this line is untested. can this ever happen? looks like this could result in a stack overflow since it calls itself with the same parameters.
Candidate: i think this should be a <UNK> <UNK>
Reference: can you add location too to enumerate api.
Candidate: please use <UNK>
Reference: you can remove this and the return in the catch block, and just return optional.fromnullable(mqtturi) on line 83.
Candidate: if we are, log.debug
Reference: remove final
Candidate: stringutils.isnotblank should be stringutils.isnotblank
Reference: in order to able events we need to have both flags set to true.
Candidate: you could use <UNK>
Reference: is there a reason not to clean this up in a finally block sooner?
Candidate: you could use <UNK>
Reference: shall we combine two if conditions and also save errorhandlerattr.getattributevalue() to a value and re use
Candidate: union is union union union union union union union union union union union union union union union union union union union union union union union union union union union union
Reference: safer to check if get() returns null and then just call set method.
Candidate: if this is is designed to be called at the bottom time.
Reference: wouldn't it be nicer to have a constructor that directly takes an int?
Candidate: this is designed to be a classic to <UNK>
Reference: do we need to invalidate the previous scan at all (e.g. isloaded = false).
Candidate: you could use assert here instead of <UNK>
Reference: don't think this need to be public so far
Candidate: should we use <UNK>
Reference: this should be double.isinfinite(turnweight) instead (?)
Candidate: this deadlock the deadlock the deadlock the deadlock the deadlock the deadlock the deadlock that the deadlock the
Reference: done. this is ok to share one instance of the progress monitor, because it is basically empty.
Candidate: static?
Reference: could use execs.multithreaded()
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: these three lines should be moved further down, the playerprofile caches the armor too, so you can directly access the item that way and save a ton of performance too.
Candidate: this is designed to be an error.
Reference: i think we will still get npe, no ? we might move get out of for and run for if output of get is not null at both places.
Candidate: we should use stringutils.isnotblank instead of stringutils.isnotblank rather than a conditional.
Reference: putting only a message from the original exception may lead to losing stacktrace - and the root cause. could you rather incorporate the cause into the mojofailureexception, please?
Candidate: i think that this exception is thrown from the exception
Reference: line-lenght ok?
Candidate: you could use a logger instead of <UNK>
Reference: what does this lastcall suggest?
Candidate: wait.forelementclickable() should be <UNK>
Reference: issue says we are just checking extends and implements. don't these 2 lines do more than that? i see the content of your issue went with class name too, but
Candidate: this could be simplified to <UNK>
Reference: swap the equals condition.
Candidate: use <UNK>
Reference: i think this check should be done in internalgetoffset() instead? the scaling could make a valid offset_s overflow and vice-versa. and the offset could make the total offset overflow.
Candidate: is there a reason for this change?
Reference: we should guard against this in the builder so it can never be null here.
Candidate: we should throw unsupportedoperationexception
Reference: duplicated check with the ones inside executeoperation
Candidate: this is is designed to throw an exception
Reference: despite its name elasticsleep is not elastic and this will pause all tests for 3 seconds. better to use waitfor(... 3) which will wait 3 seconds for the log to
Candidate: this should be <UNK>
Reference: nit: again, error text
Candidate: use <UNK>
Reference: i mentioned this in the commcare-core pr, but i think we should be setting the arguments by setting them as xpath variables on the evaluation context, since that will naturally
Candidate: we should throw an exception instead of <UNK>
Reference: instead of asking the user to enter additional constants, why can't we do downsample(<time_series>]*,#downsampler#) downsample_querytime(<time_series>]*,#downsampler#)
Candidate: we could use a <UNK>
Reference: haven't dug into this, but just want to check that a named location really will give the name in the locationflags map. as opposed to it being embedded in the
Candidate: please use <UNK> instead of <UNK>
Reference: please also add checks to validate that dimension has positive height/width
Candidate: log.debug
Reference: there's too many parens here making this tricky to read. i think this would be much simpler to read as:  if (nameidfromsubject != null || baseidfromsubject != null) {
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: something like this should work but i have to think about the implementation of equals on the node and wether we are doing the right thing. publisherpush pp = current.get()
Candidate: you could use <UNK> instead of ==.
Reference: runtimeexception? not assertionerror?
Candidate: we could use <UNK>
Reference: this is perfectly correct, but looks suspicious. can you change it so that it shows like this? suggestion assertequals("for the given page size, there are 1 page(s), so the correct
Candidate: the exception is be thrown in the exception
Reference: could we invert this? so if it exists, we return true, then outside the block we can do all the rest.
Candidate: this is designed to download a download a download in a download in a download in a download in the
Reference: android studio suggests to use ! isempty() instead. it's up to you :wink: if you do so, please update everywhere
Candidate: we should call the <UNK> <UNK>
Reference: btw i don't see this in treecolumn. usually tree/table code is identical, maybe something was missing in the fix for bug 97863.
Candidate: i would be faster to save files.size()
Reference: can max_file_per_window be a configuration? and why is it needed?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why not request(2) once in this request()? i.e.,  java public void request(long n) { if (n > 0 && once.compareandset(false, true)) { parent.requestmore(2); } }
Candidate: should we move this into a method please.
Reference: i wonder if we should not make this a method for time selection: select(swtbottimegraphentry entry, long t1, long t2, int mousebutton). when we do time selection we don't normally go
Candidate: you could use <UNK>
Reference: once you set primary type, you can just init properties based on mapping table. take a look at this code <link_0>
Candidate: you could use a constant instead of paths?
Reference: close streams
Candidate: you could use <UNK>
Reference: add curly braces even for oneliners
Candidate: this args?
Reference: i think the exception should be could not delete
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: break this one up
Candidate: cool, is non-trivial (can be a non-trivial log.
Reference: what's the purpose of this change?
Candidate: you could use <UNK>
Reference: must be inside the try-catch, otherwise the lock will never be released.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: out of curiosity how long does this new check take?
Candidate: this "_" should be reduced to <UNK>
Reference: should we not simply create a temp variable of type path at the beginning with that exact logic and use that variable everywhere as opposed to duplicating it in x
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: is null the right thing to do here as the default or should we do something like throw new unsuportedoperationexception()?
Candidate: i'm not 100% sure why, but i'm not 100% sure why, but i'm not 100% sure why, but i would be nice
Reference: i think it's a good idea to just throw the exception if the s3client cannot be initialised successfully, and just have the caller handle it. this approach will create an
Candidate: we should re-throw the callers from the trace, so we can't be be able to wrap the "this".
Reference: can you leave exception for catch possible npe :)
Candidate: you could use the exception instead of printing the exception
Reference: do we need a try...catch here?
Candidate: @gunnarmorling you could use only: <UNK>
Reference: throw a badrequest exception if only the container name is set.
Candidate: i is processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed
Reference: why not use addmessagehandler ?
Candidate: this is not needed
Reference: suggestion asserterroreventexecutionset(emptysubprocess.getexecutionset(), empty_value, non_interrupting, empty_value);
Candidate: suggestion <UNK> empty_value, non_interrupting, empty_value);
Reference: i think we can split them into 2 parallel threads to speed up job execution.
Candidate: this readasstring(...) instead of <UNK>
Reference: what is this addition for? -- i also see reconstructions of hashmaps throughout this pr
Candidate: you could use <UNK>
Reference: is there a reason why you are using a set instead of an immutableset?
Candidate: please use reflectiveoperationexception
Reference: got 0?
Candidate: nit: randomize collectionutils
Reference: @pynicolas analyzer for "php.ini" files? (imho it's better to have name starting from capital letter)
Candidate: you could use <UNK>
Reference: no need to keep a blank lines in the beginning and end of method bodies
Candidate: you could use <UNK>
Reference: eli, we almost missed it - look at runthread - the value parameter is set by the result of executor.fence - how is it returned to the rest of the
Candidate: you could be simplified to <UNK>
Reference: this can be boolean now. being boolean can imply it might be null.
Candidate: <UNK>
Reference: this should check whether the id is already registered and the id must be lowercased.
Candidate: this(name, <UNK> designed
Reference: this does not need to be public either.
Candidate: wait.forelementclickable() should be <UNK>
Reference: why are you expecting this? why expect some sections? why expect 2 sections? what are you testing?
Candidate: this would be nice
Reference: >  > [](start = 5, length = 4) >  trailing space
Candidate: i think this should be <UNK>
Reference: should this change be integrated in 2.0.x ? (i mean even if we don't integrate this pr?)
Candidate: <UNK> assert
Reference: need to check for null.
Candidate: this is not be used.
Reference: rename to signature
Candidate: you could use <UNK>
Reference: shouldn't we use optional<long> here instead of long, as with repliedmessageid below?
Candidate: is there a reason for this method to be called in the <UNK>
Reference: that call to getreferencesequencedictionary() is going to be done a lot of times. can you call once and reuse? wont save much (collect dominates, that's for sure) but it's a
Candidate: could we use a constant here instead of creating a constant instead of creating a new one?
Reference: just curious: why not write the loop as links.stream().filter(objects::nonnull).foreach(action);?
Candidate: is there a reason for this logic?
Reference: final
Candidate: why we need to call <UNK>
Reference: please declare the message in strings.xml and use the xml resource here. this will help in translation process whenever it is done!
Candidate: is there a reason for this logic?
Reference: like with the attribute access item check, this compares the dtos to themselves, instead of to the value objects from methodaccessitemlist.
Candidate: you could use <UNK>
Reference: maybe an assertion that transaction events is empty before updating status?
Candidate: <UNK>
Reference: can this loop be simplified with something like arraylist.indexof?
Candidate: i think auto-boxing
Reference: i don't think anybody wants system.out being used in the productive code?
Candidate: could you use system.out.println please.
Reference: just because it's done that way in the other tests...move function to just before the comparison?
Candidate: we should use utf-8 instead of optional?
Reference: if you're going to fix the indentation here, remember that we use four spaces per indent.
Candidate: should we use <UNK>
Reference: add constructor with parameters.
Candidate: is there any reason to mock here?
Reference: inlining smartpay would make it simpler
Candidate: suggestion throw new <UNK>
Reference: is it possible to make the '1000' a configurable param, or at least a varibale in the class?
Candidate: you could use <UNK>
Reference: if this can't keep using generictypes.resolvetype() then this is a breaking change.
Candidate: this stream() is not needed
Reference: minor: can just return this, don't need local var.
Candidate: is there a reason why not default?
Reference: <= and >= maybe?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: avoid increasing visibility?!
Candidate: maybe move this to <UNK> instead of <UNK>
Reference: if the test is measuring the scalability of read operations, we can persist data once and not touch them again unless the data needs to change. that means writing data
Candidate: if you could use <UNK> <UNK>
Reference: the close should be in finally as the previous operations might throw exception
Candidate: <UNK>
Reference: this log is likely a duplicate of the one that we have in the initialize. should we log this for every login?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: not clear from reading sources without an ide handy what item is going to be here. is there a reason this cannot stay as name?
Candidate: why not sure that this is is not set.
Reference: kv type is only used in high level api after the transformer. it essentially contains (ime.key(), ime.message()). you can remove this check completely. ime should also not be null.
Candidate: if you could use <UNK> <UNK>
Reference: i think you should get the visible status from model and set the visibility of the warning, otherwise if you open and close the add bricks dialog box in create
Candidate: this is be careful to _after_ listeners
Reference: this paragraph could be replaced by super.syncsearch(), which basically performs the same thing. there's only need to override it when something special is performed, not when the backend result is
Candidate: you could use isempty() instead of repeating the middle -> <UNK>
Reference: could you define this color in **colors.xml** file and use getcolor() instead?
Candidate: if you could use <UNK>
Reference: deploymentname should have quotes around it, otherwise spaces are lost and it becomes "warmodulename.war" in standalone.xml.
Candidate: you should use the annotation, annotation, instead of nesting:  if <UNK> != null) { return; }
Reference: this should probably be 4.2, no?
Candidate: please use <UNK> unconditionally,
Reference: do we need this?
Candidate: we could use <UNK>
Reference: make these variables static final, so you don't have to initialize them every time
Candidate: you could use <UNK>
Reference: i should say something about lambdas again, after all lostsegments() already uses an enhanced for loop :)
Candidate: i think that this is is not updated.
Reference: should be asserttrue
Candidate: please use <UNK>
Reference: i'm not sure why you need to have both classes and methods here why not only registering to class, and iterate over its members (trees)? you will then have only
Candidate: why use guava shard shard guava shard shard guava shard shard
Reference: treeset might be better (can remove duplicate and automatically sort). but since timestep won't be many so this is fine.
Candidate: you could use '+'
Reference: minor: it looks like the method modifier can be changed with "private"?
Candidate: why we need to call <UNK> instead of creating a new <UNK>
Reference: just noticed getcaseauditevent*listner* typo when going over n&n :)
Candidate: please move this to a separate method.
Reference: you refer to spmmap with and without "this". please be consistent.
Candidate: if you could use a <UNK> <UNK>
Reference: suggestion for future work: this should really work if we just deleted the body of this if statement and replaced it with a single call to layoutbar.requestlayout()... but it probably
Candidate: i think we could be pulled out into a foreach loop instead of the discoveryresult property?
Reference: probably i haven't understood the problem....but, was not the goal of the ticket to provide a sort on the tags in the csv file generated ? where are we checking
Candidate: you could use <UNK>
Reference: no need for 'this'.
Candidate: i doubt that this have a copy of sharing
Reference: whoops, why are we removing this again? :-)
Candidate: is there any reason to be printed here?
Reference: i'm wondering why there is a double copy of the list. first when iterating over this.rawnode.instructions those instructions will be "copied" into list. afterwards list will be copied into new
Candidate: please use <UNK>
Reference: why not just:  regexp pattern = regexp.compile( "[\\x00-\\x1f\\x7f]" ); return pattern.test( path );
Candidate: you could use the exception instead of <UNK>
Reference: why 1 elem?
Candidate: this is not a log.
Reference: you should check whether the type is assignable in all cases. just, when the projection converter is disabled, you will call isconvertedtypeassignableto on the *raw* converter. note that your tests
Candidate: this is not to attempt to attempt to attempt to create a new one?
Reference: what happens if you just add without checking for empty list? still the same result?
Candidate: you could be a <UNK> <UNK>
Reference: switch this and other getquery.anduuid calls below to atsserver.getartifactbyuuid(uuid)
Candidate: you should have to handle the
Reference: nit: should not have trailing space here, as this will result in an extra space
Candidate: this "_" is a bit complicated, to use the <UNK>
Reference: the keyset method is not blocking already. maybe the worry is the iterator hasnext method instead?
Candidate: this is designed to be a constants for these.
Reference: please add a check objects.requirenonnull(supplier, "supplier is null");
Candidate: this is be stream()
Reference: please change to usageeventdao. no reason in modern days to use these prefixes.
Candidate: this could be simplified to java <UNK> <UNK> = new <UNK> { <UNK> = new <UNK> <UNK> <UNK> <UNK> }
Reference: should use parameterized logging instead of string concatenation.
Candidate: if this is is designed to be an error.
Reference: i am thinking it would be better to have this an intstream instead. stream<integer> case segments is null we have to box n values and unbox n values in the
Candidate: suggestion if <UNK> == null) { return <UNK> }
Reference: for all of these that use version, if version is null, this will roll up to to just "operation.entity" which means technically we lose the ability to distinguish between default
Candidate: i think this should be a
Reference: nit: can you reverse the null check? rhsqualifedname != null
Candidate: nitpicking: you could be simplified here instead of calling <UNK>
Reference: you don't use parameters prefix and suffix - may be makes sense to remove them.
Candidate: this is be reduced to the caller.
Reference: if you didn't use a thread you wouldn't need this. just use the scheduled executor to send pings to the client please. cancel the executor from a future.
Candidate: this is designed to be a <UNK>
Reference: since ""en-gb" is a constant, we already know what the result of locale.forlanguagetag("en-gb").tolanguagetag() will be (it will be "en-gb") so we can just use "en-gb" here.
Candidate: please use <UNK>
Reference: i think this (and subsequent occurrences) would be better as something like: asserttrue("the countdown should reach zero", latch.await(1, timeunit.minutes)); that way at least if we end up on a failure
Candidate: i aiui sure that this is is not <UNK>
Reference: why not use the constant fingerid_version instead of calling a private method fingeridversion()?
Candidate: is there a reason for this method is not <UNK>
Reference: the exception thrown by the antlr parser is unintuitive for most jdbi users. let's continue wrapping any parse exception in a jdbi exception so parsing exceptions are easier to recognize.
Candidate: please add a assert that the annotations is not set?
Reference: why do you need the vardeclaration.getcontainingclass() == haxeclass here? doesn't the fact that vardeclaration was found as a direct child of the body imply that?
Candidate: i don't think this should be <UNK>
Reference: s/any(list.class)/anylist/
Candidate: please use <UNK>
Reference: why not return failcandoaction?
Candidate: this is not be specified in the
Reference: don't swallow interrupts! <link_0>
Candidate: maybe we could print stack trace to debug level
Reference: remove
Candidate: rename to
Reference: can we propagate e please?
Candidate: suggestion <UNK> = <UNK>
Reference: the try-with-resource pattern automatically handles the resultset and preparedstatement objects, but the connection, "dbconnection" in this scope, still needs to be closed with "databaseutil.closeallconnections(dbconnection);"
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: shouldn't we use !environmentcontext.getcurrent().getsubject().equals(subject.anonymous) instead of != ? (i agree that it's testing for now the memory pointer but it may have side effect in future as i don't see
Candidate: could we use <UNK>
Reference: could verify here that workpid was not committed, aka doesn't exist outside of the transaction. then after the parent closes you could check that the work does exist. and maybe
Candidate: you could use <UNK>
Reference: why two separate try-catch blocks?
Candidate: we should throw an exception instead.
Reference: div.getstyle().setheight(4, unit.em);
Candidate: you could use <UNK>
Reference: here also making stream is unnecessary
Candidate: you could use <UNK>
Reference: npe if data does not contain repoobject.getbucketname(). (looks like a few other methods have that problem too.)
Candidate: please add braces
Reference: suggestion return () -> "1";
Candidate: you could use <UNK>
Reference: should the core swap be inside the optimizeenabled block? seems like the core should be swapped regardless if optimize is enabled.
Candidate: is there a reason for this method is not <UNK>
Reference: meh, was easy to fix. added now.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: no need to return anything different than defaultfileoperations.instance here
Candidate: why not use <UNK>
Reference: hmmm .... maybe check for something more specific?
Candidate: is there a reason why not catching exception here?
Reference: you should use <plural> here to take care of this. this is better for localisation. you should use: - one - two - few - many - other while english
Candidate: use iterators instead of true"
Reference: imho we should extract this ugly code in a dedicated private method getlocale() local variable should be named locale
Candidate: you could use a string instead of <UNK>
Reference: could you specify list<partitionid>?
Candidate: could you use a constant instead of pulling these two lines
Reference: this is basically like a load of a string in csv format. take a look at csvloader for how we use au.com.bytecode.opencsv.csvreader (an open source csv reader). this isn't crucial,
Candidate: unsupportedoperationexception
Reference: java final list<attributevalue> values = lists.newarraylist( new attributevalue().withs(rangekey1), new attributevalue().withs(rangekey2) );
Candidate: you could use a foreach loop here instead of <UNK>
Reference: i suppose it's not a field mapper anymore? it kinda still is though .. i dunno random thought.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: static import of assertions.assertthat() would be more readable (if there is no conflict with another assertion framework).
Candidate: you could use <UNK>
Reference: i am not sure what does line 92 to line 96 do. why they are different?
Candidate: is there a reason to assert that this is is not implemented in the constructor?
Reference: move this open check into a helper method, like void checkopen()
Candidate: you could use a here instead of null?
Reference: this could be a method, assertvalidlicense (final string schemeid) { if (!system_workflow_id.equals(workflowaction.getschemeid()) && !hasvalidlicense() && !this.getfriendclass().isfriend()) { throw ...
Candidate: this should be <UNK>
Reference: why 0?
Candidate: you could use a constant instead of using "\"" = <UNK> + <UNK> + <UNK> + <UNK>
Reference: do we want this setting to apply it to all operators or only the writer? i think that it seems more relevant for the writer only as that is what
Candidate: maybe we could use a exception instead of printing the exception
Reference: suggestion if (s==null) throw new ioexception("reader side has already been abandoned", allocatedat);
Candidate: is there a reason to re-throw the exception here?
Reference: sorry i'm a little bit confused, what are we doing here?
Candidate: is there a reason why not catching the exception
Reference: integer.tostring() instead of + " "?
Candidate: you could use a local variable?
Reference: would it work to use outputstreamwriter? that is, could the body of this method consist of: write(in, new outputstreamwriter(out));
Candidate: if you could use <UNK> instead of <UNK>
Reference: close() has no parameters ...
Candidate: @vilchik-elena static?
Reference: is the plan to merge this to develop or keep it in a separate branch until it's ready? if it gets merged to develop, then these command line options will
Candidate: is there a reason for the sake of types?
Reference: keep them in the order of the definition in benchmarksuiteconfig
Candidate: please use <UNK>
Reference: inline slice variable: return serialize(serializationbuffer.slice(), page.getpositioncount());
Candidate: nit: not be enough.
Reference: lets add public/private accessor. it should be private right. as we have wrappers for each metadata type.
Candidate: typically, i would be faster
Reference: i might consider making a helper method simply to make all these statements occupy a single line.
Candidate: is there a reason to assert that this is is empty?
Reference: not necessary here. its handled within parseany.
Candidate: this is designed to be a classic ethernet classic mac is not classic to mac
Reference: we can use foreach here
Candidate: this about:  if <UNK> != null && <UNK> != null ? <UNK> : null;
Reference: throw the proper exception if something is not supported: - nullpointerexception if command == null. - illegalargumentexception if frameid < 0 or if frameid > 255.
Candidate: you could use a multimap here instead of <UNK>
Reference: it's better to use different names for user and repo ... it would be less confusing
Candidate: @cvrebert same here, let's use fake here,
Reference: same as above for othernoncodedconceptuuid
Candidate: please use string.valueof
Reference: don't just catch and ignore - will mask problems. better to at least do a log.error. or perhaps even in the try-catch collect all the exceptions and at the very
Candidate: i think that this should be thrown from the
Reference: please make this more deterministic rather than just sleeping
Candidate: minor formatting
Reference: this can be changed to a single line: return identityprovidersyncmode.inherit.equals(mappersyncmode) ? syncmode : mappersyncmode
Candidate: we should throw an exception instead of checkargument
Reference: => optaplanner or optaplanner
Candidate: please use <UNK>
Reference: memstore is used for tests, so we need to implement this function.
Candidate: this is designed to be <UNK>
Reference: extract
Candidate: i think this should be a <UNK> hierarchy of <UNK>
Reference: use doc.getacp(), and acp not acpimpl.
Candidate: no need to compute the layout
Reference: is it valid formatting?
Candidate: wait.forelementclickable() should be <UNK>
Reference: if (element instanceof fieldmetadata || element instanceof complextypemetadata) { impactsort.get(impact.medium).add(removeaction); }
Candidate: this is not be risky.
Reference: same here as well, no need to call .getvalue() here.
Candidate: wait.forelementclickable() should be <UNK>
Reference: duplication of !directory.canexecute()?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: nit: use i++ to start the loop so it looks less like we declared a new i here. also wrap the body in {}
Candidate: please use <UNK>
Reference: can we replace this method override with additional parameter in codepanel constructor?
Candidate: you could use <UNK> <UNK>
Reference: same if statement twice?
Candidate: is there a reason for avro to be thrown here?
Reference: if we declare fileroot as optional, we can initialize it with one-liner: java optional.ofnullable(options.get("fileroot")).map(file::new)
Candidate: you could use <UNK>
Reference: perhaps put try catch around interpretergroup.close();? it looks to me like other calls inside should not fail in most cases. if close() is expensive or could fail, then a try
Candidate: you could replace this with <UNK> with <UNK>
Reference: please review if logger.error will handle string arrays appropriately. this looks like it should be  logger.error("fail to execute rule '{}': {}", ruleuid, t.getmessage(), t);  on a second look,
Candidate: i think this is not set?
Reference: typo: "during update registration"
Candidate: if (throwable == null) { throw false; } catch (throwable e) { throw false; } catch (throwable e) { throw false; } catch (throwable e) { throw false; } }
Reference: i think it is better to return an empty collection instead of null.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: same suggestion.
Candidate: _cough_
Reference: this change is not needed
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i am not sure if this is really a problem. because you can always take all members from synchronized group and add them to the different group by union. what
Candidate: if this is is always false.
Reference: just curious if we can avoid converting the marshalledentry to an internalcacheentry before checking expiration. could marshalledentry.getmetadata() help here?
Candidate: no need to wait for the
Reference: @benzonico spaces around +?:)
Candidate: this is not to be a
Reference: what you log is the unqualified version plus the qualifier, actually, not just qualifier.
Candidate: you could use isempty() instead of != null ?
Reference: unknown column type
Candidate: this is designed to be a <UNK>
Reference: deltainvaliddatasize is good enough. same in line 138
Candidate: is there a reason that liked this is not <UNK>
Reference: the default was by database before?
Candidate: this is be reduced to <UNK>
Reference: i would rather not generate a copy of the path right here just to test the length of it. we should expose a method on the treewalk that exports the
Candidate: we should throw an exception instead of <UNK>
Reference: this should not be registered on an hc.
Candidate: this should be a to bind <UNK>
Reference: minor nit, but classmethodcache is a slight misnomer, since we are only caching no-arg methods
Candidate: this is unnecessary.
Reference: juan, i prefer a single exit point on multiple points. do you mind defining integer exitcode = 0 in the method beginning, and a single system.exit(exitcode) at the method's end?
Candidate: i we print the system.out from the
Reference: catch any exceptions on vn.shutdown() to ensure reversednscache.m_es.shutdown() is invoked.
Candidate: why not synchronize on the
Reference: can we remove this check since we already do this check inside the initializerunid()
Candidate: why not eating the exception
Reference: can let fall-through.
Candidate: i'm not 100% sure that we intend to print the log.
Reference: maybe we should assign the error message to a proper string variable and pass it for logging as well as into the instance of "message".
Candidate: you should use @test(expected = <UNK>
Reference: suggestion } else if (isinvincible == true) {
Candidate: you could use <UNK> pretty-print
Reference: 1. this should call the next method with the default_timeout_milliseconds as the extra param 2. line 85/86 should call this method with the null as the extra parameter. i know
Candidate: you could use null here instead of null?
Reference: why ignore case?
Candidate: this is dangerous, if the is not <UNK>
Reference: instead of creating objects for each method, for logger and property object, can move it up to a method with @before annotation to call it before the actual test methods
Candidate: could you use this logic?
Reference: missing stringutils.isnotnullorempty() check
Candidate: no need to throw an exception
Reference: nit: why final?
Candidate: why we synchronize on the lock on <UNK> bottleneck. bottleneck. is invalid? bottleneck. bottleneck. is invalid?
Reference: info or warn..?
Candidate: i think that this is is not <UNK>
Reference: unnecessary if check. why not just: qi.maxreposize = qs.getmaxreposize(); ?
Candidate: this is a bit strange, but i don't think that this is not efficient, we could use the <UNK>
Reference: relevant non-logging code change here ^^^
Candidate: minor nit: we could combine this line
Reference: this should be: java // prepare first users rights on all subgroups of groups where user is groupadmin and add them to authzroles of the user authzroles authzroles = addallsubgroupstoauthzroles(sess,
Candidate: you could replace this by: <UNK> <UNK> input.entryset().stream.collect(collectors.tomap(entry -> entry.getkey(), entry-> <UNK>
Reference: fields = collections.ncopies(columnhandles.size(), null);
Candidate: suggestion return <UNK> -> <UNK>
Reference: remove handling of percenttype because it is a subtype of decimaltype and both are converted in the same way.
Candidate: use <UNK>
Reference: hostname resolution is case-insensitive so localhost is a valid hostname for 127.0.0.1 (had the same issue in netty hosts file resolver) hostname.tolowercase(locale.english).equals("localhost");
Candidate: we could use <UNK> to <UNK>
Reference: lock is missing
Candidate: minor nit thing, but i would be cleaner to extract this logic into a dedicated method to <UNK>
Reference: we should have an isnullorempty type check on the provided list.
Candidate: you could use <UNK>
Reference: there's probably a maxint const somehwere
Candidate: you can call this call clear() required? clear() clear() clear() clear() clear() clear()
Reference: why are we having space prefix here?
Candidate: maybe rename to warn instead of <UNK>
Reference: :) i know, i saw the test. if you want to improve the original test too, that would be great. if you find out that these tests differ just by
Candidate: you could use a <UNK> <UNK>
Reference: is the syso here needed? maybe try to either use log function or just remove it.
Candidate: this should be a <UNK>
Reference: to keep our arrival/departure labeling consistent with the normal arrival times lists, let's construct an instance of arrivalinfo here from the obaarrivalinfo, and then call arrivalinfo.isarrival() to determine if it's
Candidate: please use curly braces around
Reference: this does not accept limiter functions like findmetrics?
Candidate: this should be a <UNK> <UNK>
Reference: this isn't reactive to have to create a new mono operation everytime a message come in. how about a combination of flux.swithonnext(publisher).takeuntil(notcancelled) where a new item is emitted from the
Candidate: you could use <UNK> instead of nesting.
Reference: this needs to be implemented?
Candidate: use <UNK>
Reference: . i had always though is was equivelant to == rather than just an alias of is(equalto()). will use in future!
Candidate: you could use <UNK>
Reference: better return "", then it seems also we do not need to pass to safename() ?
Candidate: you could use a enum annotation, please.
Reference: mark the method with @nullable or factory doesn't follow _everything is not-null by default_ pattern ?
Candidate: is there any reason why not mock constructor?
Reference: minor thing, i suggest to have: private final lexonumericcomparator lexonumeric = new lexonumericcomparator(); and in compare() method: return lexonumeric.compare(map1.get(key), map2.get(key)); (i tend to prefer avoiding instance creation, although in this
Candidate: why not use <UNK>
Reference: this should be sorted for efficiency
Candidate: please use this logging here instead of printing the
Reference: please use collections.emptymap().
Candidate: you could use (throwable connection,
Reference: partition -> destination partition ?
Candidate: we should use stream() here too?
Reference: please add logging to make it easier to debug when xml_file_param key doesn't exist.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this process is not referenced or used in this test class
Candidate: if you could move this inside the finally block block.
Reference: perhaps boundary should be partboundary as basicboundry isn't that expressive?
Candidate: <UNK> -> <UNK>
Reference: this should be a singleton.
Candidate: is there a reason to throw an exception instead of null?
Reference: optional.empty() ? :)
Candidate: nit: use isempty()
Reference: can we sort the label names (by name) to have the columns always in the same order? i think it is confusing if the order may change.
Candidate: could you add a space after the
Reference: do we really need to log anything here in the method, if we don't log any details about error? i think that logging should be done inside upper level method
Candidate: i think this should be replaced with <UNK>
Reference: hmm, our caller should be invoking us with a full accountsshkey object in hand. they should pass down the last used time from the database column to initialize this field,
Candidate: i think this should be initialized by the <UNK>
Reference: there should be an @override annotation here. most ides will be busy freaking out at you, and some java versions won't compile the code.
Candidate: is there a reason for this logic?
Reference: i would suggest to keep references of these client in context, and verify they are started. then we won't need this type conversion and exposing the getters with the @visiblefortesting
Candidate: @gunnarmorling you could use only: <UNK>
Reference: looks like we have missed here transactional() option for convenience.
Candidate: we could use <UNK>
Reference: @ should be replaced by the constant unique_id_project_name_delimiter
Candidate: if you could use <UNK>
Reference: instead of using string comparison you should use cdiproxies.iscdiproxy method to check if the class is a proxy.
Candidate: if this is is designed to go through the bottom
Reference: double full stop.
Candidate: you could use <UNK>
Reference: should this be startswith?
Candidate: i doubt that this is a bit strange, but it affects the operating depending on the operating operating systems operating systems operating systems operating operating systems operating operating systems operating
Reference: no null check for defaultkeysource
Candidate: should be be <UNK>
Reference: unfortunately we can't use this text since it's a copyright infringement
Candidate: this should be turned off this pr.
Reference: this is a very good test, big coverage!
Candidate: you could use <UNK>
Reference: @eg04lt3r the logic here doesn't seem correct - my understanding of the issue is that there has to be some active monitoring of each call to accept. to me this
Candidate: this uri.create to tear down to
Reference: why this change ?
Candidate: you could use a constant instead of <UNK>
Reference: the controllerlistener is the deprecated way to get these events, and controllerstatuslistener is the new version to get it. did you switch to this method for performance reasons?
Candidate: i would be a bit clearer, but this would be a bit more complicated to <UNK> the <UNK>
Reference: please use "something <operator> null" convention
Candidate: you could remove this line.
Reference: could use incr util
Candidate: use try-with-resources
Reference: the brackets around the left hand of the -> operator are redundant (and frankly, a bit confusing). please remove them.
Candidate: please use <UNK>
Reference: why not for (action action : failedactions.values())?
Candidate: you could use <UNK>
Reference: is there a way to use the classname instead of the beanname here?
Candidate: please use <UNK> instead of <UNK>
Reference: you to defer setting this value too, otherwise it breaks when: focus in text box delete everything then click check box
Candidate: if you could use <UNK> == null || <UNK> { return; }
Reference: this should be disabled by default in elide 4. however, turn it on for testing so the tests below work.
Candidate: is there a reason to check here?
Reference: maybe an extra log could help us later here
Candidate: is there a reason that happens if the happens?
Reference: nit, but either the spacing should be fixed or use string.format
Candidate: if you could throw an exception instead of <UNK>
Reference: this could possibly be a batch (and ops.batch). not required, but some commands to that and the error behavior is a bit nicer.
Candidate: is there a reason for this logic?
Reference: avoid access direct to view, use presenter instead.
Candidate: you could replace this with foreach with <UNK>
Reference: if it is possible that the editor control is disposed here, it might also be possible that it is null. so i would add geteditorcontrol() != null && ... and
Candidate: i'm not sure how about the sure about the sure that this is is is not but i don't think that this is is
Reference: i think this doesn't allow executing tasks because you ignore r.
Candidate: is there a reason for this change?
Reference: refactor idea: replace lines 191-194 with: java ipv6 = "false".equals(system.getproperty("java.net.preferipv4stack", null)) || "true".equals(system.getproperty("java.net.preferipv6addresses", null))
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this method (checkforpendingapphealthactions) triggers any time we get back to the home screen, not just any time the app starts up for the first time, right? i think that means
Candidate: if you could use <UNK> <UNK>
Reference: minor: this. for these as well.
Candidate: this should be <UNK>
Reference: this line also seems to be redundant.
Candidate: is there a reason for this method is not implemented in the
Reference: isn't that would be better to wrap the line on the .isequalto() instead of splitting string?
Candidate: this is not to be <UNK>
Reference: o
Candidate: i liked that this clear() is is called on the <UNK> ample call clear() on the <UNK>
Reference: not only non-null, but also not empty
Candidate: this multimap should be null?
Reference: please add cmd.getdhcpoptions to the log message to assist with operational debugging.
Candidate: stream()
Reference: don't forget to update this
Candidate: is there any reason to 'private' be used?
Reference: no need for unmapped check since already check and returned above.
Candidate: i'm not sure how about this is a bit that is is score but i think, that this is a that the is a <UNK>
Reference: maybe we need a contentlet.getbasetype() method that looks up against the contenttype if set or the map if not?
Candidate: this is unnecessary.
Reference: stream instance "one" -> "two"
Candidate: log.debug
Reference: no else needed , exception stops the method code
Candidate: you should use <UNK>
Reference: space before {
Candidate: @vilchik-elena you could use <UNK>
Reference: re? you mean mi?
Candidate: could you use <UNK>
Reference: move this before the // change the feedback path... line. also, make this edit: ... ~~for~~ **while editing** question...
Candidate: nit: <UNK> deleted?
Reference: ping
Candidate: ditto
Reference: nit: avoid private fields dependencies in the constructor is preferred. new hashmap<>(instancecapacity); or just assign instancecapacity to _remainingcapacity.
Candidate: finals
Reference: is the text still escaped when stored? it needs to be unescaped before storing, otherwise if someone submits an xml file, it won't be an actual xml file that is
Candidate: should we be unsupportedoperationexception
Reference: how bad is this state? is it alert worthy?
Candidate: why you expecting to here?
Reference: we do not use glick-style annotations. if the method returns @nonnull then the @nonnull shall be on the line preceding the access modifiers not between the access modifiers and the
Candidate: you could use a try-with-resources here as well.
Reference: xl should be called xi for an int. ditto throughout.
Candidate: i doubt this is negative?
Reference: this is unrelated to the main change and also increases scope of the variable. there is no performance improvement if you meant that.
Candidate: is there a reason that is empty?
Reference: initialize should likely go to setpolicy
Candidate: this is is designed to have a <UNK> oldvalue is be invalid?
Reference: last thing, promise. just check that kernel32.instance.getlasterror() is invalid_handle or something like that. this would fail on a non-us-english system.
Candidate: you could use <UNK>
Reference: please remove newlines at begin of functions
Candidate: you could use <UNK>
Reference: should the charset parameter be set for the content-type header?  java this.addheader(content_type, "application/x-www-form-urlencoded; charset=" + getcharset());
Candidate: could we throw new exception here instead, since it's never null.
Reference: why is this so slow?
Candidate: should we use <UNK>
Reference: rs -> resultset please
Candidate: i think this is be expensive.
Reference: ![critical](<link_0> 'severity: critical') define a constant instead of duplicating this literal "someservice" 8 times. [![rule](<link_2>](<link_1>
Candidate: @manuelplazaspalacio should be be <UNK>
Reference: the nocurrentcaseexception should be in a separate catch so the error can be logged as severe.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: strictly speaking, not needed as shard() must be from 0 to 255 right?
Candidate: unused
Reference: shouldn't we check for owner != null here too?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: throw new illegalstateexception("trying to acquire partition lock twice. please report.")
Candidate: i we need to check that the is not
Reference: why is this doing log.warn and returning null instead of a code 403? code 403 would make more sense to me. if it's because you just don't have anything you
Candidate: should be be <UNK>
Reference: is this correct? according to the [api docs](<link_0>, this should be 406, but the docs have been known to be wrong.
Candidate: same here, here, here, here, here, as a constructors is be used as a private method to reduce the package private private private private private private private private private private
Reference: both messages say "later than" - one of them must be wrong.
Candidate: formatting
Reference: same here, stringclass does not deal with wiki content, only teatarea does. the only thing to do here is to escape any html this **plain text** value contains.
Candidate: please add curly braces around
Reference: replace with userutils.validateusername(string)
Candidate: i think that this is not efficient, we should log the error message is not thrown by <UNK>
Reference: several points not respecting our coding conventions here (space in if condition, else not in the same line as the if closing brace)
Candidate: could use <UNK> <UNK> <UNK>
Reference: you initialized map already at line 24, why again?
Candidate: suggestion <UNK> = <UNK>
Reference: i would personally prefer if the methods that are the "external api" be public. yes, the outer class can call private methods directly, but most ides show public methods differently,
Candidate: you could use a constant instead of <UNK>
Reference: for a very short time, the interval is out of the queue and returning from the method but not written to the volatile variable yet. i have reproduced the exception
Candidate: this is a <UNK> <UNK> <UNK> "poison <UNK> is a dependency for <UNK>
Reference: magic numbers
Candidate: you could use <UNK>
Reference: it looks wrong.. this one is always true: !ishotsetfield(srcfld.getname()) || (ishotsetfield(srcfld.getname()) so i think it should be: !ishotsetfield(srcfld.getname()) || !hotsetenabled right?
Candidate: is there any way to be null?
Reference: these lines could be moved into the if/else block above
Candidate: use <UNK> instead of a constant?
Reference: what if content-length is 500_000_000? will you really create a buffer with that size?
Candidate: is there a reason why not we use the here?
Reference: this would afaik lead to the creation of a postgresqlcontainer when postgis is used in the jdbc url
Candidate: this is be <UNK>
Reference: the original setevent is necessary to keep, so we will end up with two setevent methods: java void setevent(bool); void setevent(string);
Candidate: is this exception?
Reference: my understanding here is that the proposal is to only cache the result of postmatch(null, null), which is quite a common scenario. if that's the case, shouldn't this be if
Candidate: this is unnecessary.
Reference: i don't like this because you are turning every exception into a walk up the tree. even if the dashboard is defined in a project, but its object files are
Candidate: how about using the hash hash hash hash hash hash hash hash hash authorization hash
Reference: unnecessary braces?
Candidate: this is a bit more than <UNK>
Reference: please use assertj
Candidate: please use <UNK>
Reference: i'd add a checknotnull here and make the builder field a boolean. this will make sure someone sets the field instead of it defaulting to false.
Candidate: you could use a constant here instead of <UNK>
Reference: inline?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: would addall() work here ?
Candidate: nextvalueindex could be replaced by <UNK>
Reference: question: why are you first setting homeasupenabled to false and then to true?
Candidate: can we use a try-with-resource 'final' paradigm
Reference: why do you think that this behaviour is right?
Candidate: is there a reason for the sake of the properties?
Reference: just to double check: we do not want this to be the default behavior in bufferwritingresultpartition, because this would finish the partial buffers for streaming/pipelined cases as well, which we
Candidate: wait.forelementclickable() should be <UNK>
Reference: if the hostname is already trusted you no longer need to check for the url. i suggest you to remove this line from here, then to add an if statement
Candidate: i think this is not efficient, but i would be a good idea.
Reference: please assert the charset is the iso-8859-1 charset.
Candidate: use <UNK> instead of <UNK>
Reference: s/ram/local-heap/
Candidate: right? here: 8 here: 8 deal here: [![rule](<link_2>](<link_0> seem here: rather deal here: right? rather deal here: right? rather deal deal deal deal deal deal deal deal deal deal deal
Reference: why does this need to start with file.pathseparator?
Candidate: i explained explained that this is is not <UNK>
Reference: could be maybe a bit more elegant to use the stream api to do that? :)
Candidate: why not use <UNK>
Reference: this test fails when running ce537ac0417ebb159a4589f028a024814e03d03f.
Candidate: i think this should be a <UNK> <UNK>
Reference: this does not surface the exception and is a silent failure. it should throw.
Candidate: this is a bit nervous that we could use a <UNK>
Reference: scene.getpopup() should be accessed in a static way.  at least, that's what eclipse says. and i think the same. (this is not the only line this warning is generated)
Candidate: you could use <UNK>
Reference: i think it was better with the old static imports.
Candidate: this is a efficient, this is a efficient, bottleneck. we could have a efficient, that the is not efficient, but i would be more efficient, the <UNK>
Reference: nit: capital 'g' for start of sentence. also, redis should be capitalized.
Candidate: you could use reflectiveoperationexception referring to constant?
Reference: i prefer to have the variable on the line before for debugging.
Candidate: you could use a date instead of creating a date arguments.
Reference: this is still showing up with no indication of what the actual error is. i think we need to display all available diagnostic info in the console to make it
Candidate: you could use the exception here instead of download <UNK>
Reference: responsetypes.stream().anymatch(s -> responsetype.fromstring(s, "").contains(token))
Candidate: this could be replaced by: <UNK> <UNK> = <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> { ... }
Reference: this is not needed.
Candidate: how about catching this exceptions?
Reference: i am not to fond of this type of code as it could result in a npe, i would want some checks here to protect us.
Candidate: this is not handled.
Reference: space around +
Candidate: is there a reason for avro here?
Reference: it reads a bit strange to fall through to lookupcoordinator if we know the request doesn't need the coordinator. maybe clearer with a slight restructure: java transactionmanager.retry(nextrequesthandler); if (nextrequesthandler.needscoordinator()) {
Candidate: you could use <UNK>
Reference: name will always be null before save
Candidate: is there a reason for the sake of types?
Reference: @rnveach we shouldn't ignore any exceptions unless absolutely necessary. what are cases when absolute path works but canonical path fails?
Candidate: use <UNK> <UNK>
Reference: just to double check, is it safe to assume number of executors is same as number of tasks? if there's safe way to get the value it would be better
Candidate: this could be replaced by <UNK>
Reference: check args ?
Candidate: no need for <UNK>
Reference: i think we can and should move to using guava's files etc as much as possible for this kind of thing. but for now, you could use something like: 
Candidate: this is designed to be a to <UNK> the <UNK>
Reference: +static
Candidate: use <UNK>
Reference: extraneous final
Candidate: typically, i am not sure how about this ides readable: java string <UNK> = <UNK> + <UNK> + " + effective + <UNK> + effective + <UNK> + effective +
Reference: why are you returning 0 instead of value from indefault like in other methods?
Candidate: this is a <UNK>
Reference: why new arraylist<>(aslist( ?
Candidate: @vilchik-elena you could use <UNK> instead of <UNK>
Reference: we should probably implement this equality checking in the equals() method of discussionthread. that should also take care of performing null checks (as a sanity check).
Candidate: you could use computeifabsent clear()
Reference: just a clarification: the wd_file location is now somewhat hard coded in the implementation. but it is still modifiable in the service preferences. there is still a reference to the
Candidate: is there a reason for this logic?
Reference: it looks like you left this in by mistake. either remove the line or change the text description.
Candidate: i'm not sure that this piece of this file)
Reference: i think it's not an error, it can be logged with "debug" level
Candidate: this exception is be thrown exception
Reference: remove extra parentheses
Candidate: this is not return <UNK>
Reference: do we need this since we already have a log by the thing status update with the same message?
Candidate: this exception is not exception
Reference: availableemptyexpressions some interpreter do not only provide a prefix but also a suffix.
Candidate: you can use the logger property?
Reference: shouldn't we do the same thing than above in the code (ie: using objects.equals)?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: extra space
Candidate: this is not activated, 1, withtopologyservice(1, <UNK> 1, 2, withtopologyservice(1,
Reference: thread is needed only inside if block
Candidate: you should throw an exception instead of <UNK> ie
Reference: static import utf8slice
Candidate: this is be <UNK>
Reference: mb it would be better to create instance of usermanager in method annotated with @beforemethod
Candidate: this is not assert that <UNK> suppresses exceptions.
Reference: are the left over agencies: agencies with reports to agency that has not been sorted? would it make sense to update the method name to be more descriptive?
Candidate: this is a <UNK>
Reference: entitymanager shoudl be closed after each query. we should put this in a try block so we don't leak it: java try ( entitymanager entitymanager = emf.createentitymanager()) { //do stuff
Candidate: i hint: we mentioned hint: this hint: copied hint: this is copied from the error reasons.
Reference: it's hard to get what 6 actually means. recommend to use orientpermission - there is method to get combined flag as int.
Candidate: you could use <UNK>
Reference: please remove the added exceptions
Candidate: is there a reason for element?
Reference: this should be an unsupportedoperationexception, not an illegalstateexception
Candidate: use readasstring(...) instead of <UNK>
Reference: ditto about "indeterminate" in error messages.
Candidate: nit
Reference: refactor this to a reusable (injectable) function that transforms a docker state to a jclouds node status?
Candidate: suggestion <UNK> = <UNK>
Reference: the only thing i can think that _might_ be a problem is that any argument implementations that depend on e.g. statement.iswrapperfor() or statement.unwrap() to unwrap a vendor-specific prepared statement might
Candidate: you could use a constant instead of <UNK>
Reference: too many indents in this method, i would extract this part to another method.
Candidate: this is be datacenter
Reference: error or warn.
Candidate: you could use foreach loop instead of {}: <UNK>
Reference: i smell a c++ coder here. please use a for-each loop so my eyes don't bleed. :)  for (element button : relesecontainer.select("li a")){ }  magic.
Candidate: you could use brackets here
Reference: again with i think this was intended to be an update.
Candidate: this is be to be <UNK>
Reference: please rename superonclose() (line 313) to superdoclose() as its what it does and it's confusing here to see java public void onclose() { superonclose(); ... super.onclose(); }
Candidate: wait.forelementclickable() should be <UNK>
Reference: why "auth_type_email" string? enum or integers and no magic numbers.
Candidate: this should be turned to part, in the
Reference: yeah, i agree it's likely not winning us any time, just complicates the code path. i'm in favour of dropping them
Candidate: this should be <UNK>
Reference: it is not clear to me why we need to suppress this exception.
Candidate: we could use a constant instead of download <UNK>
Reference: minor: validate that hive-site.xml exists and print a warning if it doesn't? looks like this can be a common mistake.
Candidate: let's use a multimap
Reference: this will find all of the columns with that name in any table in any schema in any database, right? and won't it be possible to return more than one
Candidate: if we is a jdk jdk "\"" = new <UNK> %s jdk " + <UNK> e);
Reference: what if several clusters? we should at least todo or jira
Candidate: if we increment the cheapest also?
Reference: extract?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: what if it's an integer, or short, or ... whatever? can it check number.class.isassignablefrom(...) instead?
Candidate: nitpicking: we could use system.currenttimemillis() instead of tabs.
Reference: i guess i'd use string::matches here instead of the whole pattern ceremony. this is not important though - change it or keep it, i don't mind either way.
Candidate: suggestion info("consistent <UNK> "invalid "invalid "invalid "invalid "invalid %s type" %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s
Reference: for-each here  for (jsonelement jsonele : jsonarray) { // stuff }
Candidate: you could use a constant instead of <UNK>
Reference: this is probably unnecessary now -- all of the resolution is done by the population of the entity from the dto.
Candidate: i pagelogging
Reference: no check of the missing resource
Candidate: you could use a <UNK>
Reference: i guess it should be account not amount.
Candidate: log level to log level
Reference: i think maybe here print the size of the buffers queue? validate that it is > 0
Candidate: this is throwing an exception
Reference: asserttrue?
Candidate: this is be simpler.
Reference: fix condition.
Candidate: if rebuilding this change.
Reference: same on local variable.
Candidate: use checkargument here
Reference: is it a good idea to output errors in a tostring. it may have sensitive data.
Candidate: is there a reason for this?
Reference: we should check that getallpendingjobs is not returning null. in api21 there is no notnull annotation for that method.
Candidate: let's use a constant instead of <UNK>
Reference: i think expression.getvalue() with return type variant to boolean.class does the trick for us. as far as the conversion service is in charge the in spel.
Candidate: this is is designed to be a <UNK> that is a <UNK> that will be a <UNK>
Reference: what is the semantic of these different config strategies? you are using environment variables and a config file. would it be possible to use just one mechanism? i think this
Candidate: this is not be used?
Reference: actually can you revert this, and also put the call to buildfontlist back into getfontlist? you removed it but that's a behaviour change i didn't notice, it means if someone
Candidate: if this is is designed to be an error.
Reference: loads of findbugs for potential npe with this style as getinstance() may return null
Candidate: this is a <UNK>
Reference: reloading all filters seems a bit unnecessary, should just update the icon maybe?
Candidate: wait.forelementclickable() should be <UNK>
Reference: this method name has a typo (final 'y').
Candidate: is there any reason to be implemented in the <UNK>
Reference: similar to the csvschema, could we let users override the default? as in:  csvmapper csvmapper = getcsvmapper()!=null ? csvmapper() : configurecsvmapper(); objectreader objectreader = csvmapper.readerfor(jsonnode.class);
Candidate: you could be reduced to <UNK>
Reference: fetch the raw value
Candidate: this readasstring(...) instead of <UNK>
Reference: s/ignored/expected
Candidate: rename to <UNK>
Reference: please define the new key names in the constant class. this will make them easier to discover.
Candidate: suggestion final string = <UNK>
Reference: maybe we can do if(!mservice.iscontrolenabled()) { setsystemaudiomode(false); }
Candidate: you could use <UNK>
Reference: the main difference i see between the two prs is that this pr leverages the use of getchannel() which only returns a channel object. just a few lines later the
Candidate: this is not synchronize on the
Reference: nothing happens here, i think the entire addjobchangelistener should be removed like others.
Candidate: you could move this to <UNK>
Reference: unboxing will happen in the comparison in the if branch anyways, so probably better to do it early declaring the type long here.
Candidate: i think we should have to check, but we should inform that we have to check, that we can't have been added in the
Reference: having a potentially null field seems unnecessary. how about initializing it with binaryauthenticationvalidator.instance?
Candidate: use <UNK>
Reference: coreexception is much wider than resourceexception, which is the one you want to ignore. wouldn't explicitlyt checking whether the resource exists be more precise?
Candidate: use <UNK> instead of <UNK>
Reference: i like this cleanup.
Candidate: no, we should report the report the report the report the report the report the report the report the report the report the report the report the report the report
Reference: onfilecreate can fail, when there is an exception, in that case, the file will be in the processedfiles list and we would not retry setting up pipe ?
Candidate: if you could use a <UNK> <UNK>
Reference: shall we remove these, test println()?
Candidate: use slf4j logging instead of {} message: {}", <UNK>
Reference: this may be a very heavy operation, if it's called for many items, it can be a serious performance hog. i think we should avoid relying on regexp as much
Candidate: is there a reason for element?
Reference: this line will have to move into the analyze function in order for the skipframes builder function to take effect
Candidate: can we use <UNK>
Reference: can the setter calls on the builder be chained? probably look nicer that way.
Candidate: use <UNK>
Reference: as this if-else if-else if-else getting longer, let's use switch case?
Candidate: you could use <UNK>
Reference: mppushspy.getbitmapfromurl(valid_url) will never be called because you're sending an empty string to mp_imgurl. i don't think you need to mock this method because it shouldn't actually be called at all.
Candidate: nit: readasstring(...) instead of <UNK>
Reference: does it make sense to constantly create threads in packs of 10? why not to use single cachedthreadpool for this service?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: what about we do not have any options for over , there would then has no reference for underlying inputs.
Candidate: i would be better to use the query whose <UNK>
Reference: you can make this more readable by introducing local variables. having a multi-line expression is not ideal.
Candidate: this could be simplified to <UNK>
Reference: we can remove this line, so that we always use the latest codec, right?
Candidate: we could use the wording. iirc the wording.
Reference: hi, since existing object ids start with 1 and you define void/groupid=0 by default, then you can safely use something like: session.isvoadmin(void) || session.isgroupadmin(groupid) in the first if.
Candidate: this is be simplified to <UNK>
Reference: determining if we require a prediction model should happen in the scheduler
Candidate: you could use isempty() instead of <UNK>
Reference: hmmm... the if branches do the same thing... or am i missing something?
Candidate: please export guid
Reference: this should be an || instead of a &&
Candidate: should be be <UNK>
Reference: it would be nice to know that our connection is against the prod endpoint.
Candidate: use <UNK>
Reference: besides container.shutdown, should we do jobcoordinator stop as well?
Candidate: i liked the <UNK> deserve a finally block construct,
Reference: this could just be made synchronized... then we can just call "clear" etc.
Candidate: i think this should be <UNK>
Reference: this causes a "score trap" (see docs). edit: not really, because 2 aassignments, will yield -1, 3 will yield -2 and 4 will yield -3. so it's not a 100%
Candidate: i guess we could use <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> : <UNK> <UNK> -> <UNK> });
Reference: consider using the positive checking, which should mean you have 5 positive branchstate checks since 6 negative checks are done now.
Candidate: i am not sure how about the sure about this is a bit that is is a to the the error.
Reference: you should test hasnext each time (before calling the 1st next until after calling the last next.
Candidate: please use <UNK>
Reference: please make this more readable... sure its compact but its really hard to read.
Candidate: we could use <UNK>
Reference: use %s placeholder instead of {}
Candidate: you could use <UNK>
Reference: just pointing this out in case you dont want it commit this app id
Candidate: mag <UNK>
Reference: maybe "configure 'verified' label"?
Candidate: i think this should be <UNK>
Reference: use getconstantsconfig().getgroupscope().equalsignorecase(scope) to avoid npe's
Candidate: could you use only: <UNK> instead of <UNK>
Reference: sorry just one more minor thing. do you think it makes sense to have the exception plus stack trace here as well? otherwise it might be hard to debug if
Candidate: please remove system.out.println
Reference: please favor immutable collections. val response = immutablelist.<multipartupload>builder() here.
Candidate: how about this is a
Reference: v4.0.0.equals( nodeversion ) would suffice without diff verbosity. it seems there are some spacing changes here.
Candidate: suggestion if <UNK> == 0) { ... }
Reference: @mdinino could you use more descriptive variable names?
Candidate: you could use <UNK> instead of <UNK>
Reference: when the default value for the timeout is being used, instead of hard-coding the value like here, it would be better to use a reference to the default_server_connection_timeout defined in
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: same here, just for clarifying: build.version_codes.jelly_bean_mr2
Candidate: 'null !=' is preferably
Reference: needs to be replaced by interface
Candidate: use <UNK> instead of <UNK>
Reference: minor: is it possible to have this try-catch wrap just whatever line is potentially throwing it?
Candidate: i think it'd be better to use a little confusing :)
Reference: there is also a constructor that explicitly disables stracktraces, and given we are dealing with licensing code, i would suggest using that one.
Candidate: this is a <UNK>
Reference: something seems wrong with the name mapping. when i select a file (executable or text file), the whole trace entry gets duplicated.
Candidate: i think a little simpler to reduce you.
Reference: modelprovider.getmodel() could be inlined here.
Candidate: suggestion <UNK> <UNK>
Reference: please bring the braces back.
Candidate: this should be <UNK>
Reference: end variable is used only once, hence, it is better to inline it: qualifyingset.setend(qualifyingset.getend()); however, inlining shows that the variable and the statement that's using it are not necessary. let's
Candidate: you could use <UNK>
Reference: no need for the wait, defaultshell already has the wait inside
Candidate: i think that this assertion. [![rule](<link_2>](<link_0>
Reference: can we check this is in an assert?
Candidate: you should use <UNK>
Reference: consider using string.format() here
Candidate: is there a reason that happens if we are going to happen?
Reference: you can you atstartofday() or something like that.
Candidate: java <UNK> -> <UNK>
Reference: another place where we could note that the boolean is unused.
Candidate: please replace this with <UNK> with <UNK>
Reference: remove the extra newline.
Candidate: you could use a constant instead of <UNK>
Reference: this is the unexpected result, will have a look.
Candidate: is there a reason for this change?
Reference: we should combine the list with the deferred adapters. maybe give a deferred adapter a name?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: second parameter of status is the pluginid. why to pass path here?
Candidate: this is is not <UNK>
Reference: do we need return or print logs here
Candidate: we could use only: <UNK> multimap instead of <UNK>
Reference: this condition could be put in a new method to factorize code and improve readability.
Candidate: i'm not sure that this is that this is is is prone to the <UNK>
Reference: i guess you don't want to show the internal fields (e.g all) in the dialog
Candidate: suggestion <UNK> = new clazz, <UNK> clazz, <UNK> <UNK> <UNK> <UNK> <UNK>
Reference: this change seems to be incorrect. the original code was supposed to calculate the size needed for all the volumes (when performing collapse), while this one seems to take into
Candidate: rename <UNK>
Reference: the apply method should only return false if a not expected situation happens. so if the player guesses the card name wrong, it should return true and not false, because
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: nit: it's a bummer that checkstyle doesn't run for tests, but (regardless) you will need a space before { as in:  exception {
Candidate: you could use <UNK>
Reference: challenge service returns a challengetemplate
Candidate: this is be <UNK>
Reference: and this should go away i.e the if clause
Candidate: i think name!
Reference: why this method is called scheduleall ?
Candidate: you could use this feature here instead of nesting.
Reference: why checking only the expression of the memberselectexpression ?
Candidate: you could use a multimap here
Reference: i'm wondering if we want to add any more logging here. it'd be great to try and get as much detail as possible when this happens.
Candidate: you could use <UNK> here instead of <UNK>
Reference: unnecessary parentheses.
Candidate: <UNK> is not huge - how about making sure this is is invalid?
Reference: == and != in scala is .equals (with proper null handling), have we made sure that we haven't switched from .equals to reference equality?
Candidate: why did you compute this initialization here?
Reference: @cfieber i'm thinking maybe pass a property from build.gradle in and use maven local resolver here?
Candidate: this should be a bind <UNK>
Reference: checkedcast()
Candidate: you could use <UNK>
Reference: ultimately, the whole section here is to find the set&lt;string&gt; processornames. i would suggest to fold all this into a single method getprocessornames() and pass that to the grouper's constructor.
Candidate: minor nit: we could use a constant instead of creating a constant for each time, but it would be nice
Reference: no sure, but isn't it possible to use a "try with resources" here?
Candidate: you could use a try-with-resource here instead of <UNK>
Reference: :ant: also deserves a test.
Candidate: this aforementioned "never return null"
Reference: we're on java 8, so now you can do string solved = data?.getstatus();
Candidate: i think that this is not efficient, we could use <UNK>
Reference: i.e., java if (boolean.true.equals(request.getattribute(basicheaderapitokenauthenticator.class.getname())) {
Candidate: this should be a bit misleading. (my newvalue understand, newvalue is be a bottleneck. consequently, in the <UNK>
Reference: i know it was like that in dimensionpredicatefilter but should 'no predicate' mean 'matches all'?
Candidate: <UNK> -> <UNK>
Reference: if ( jsonld.contains("\"_:foo\"") )
Candidate: is there a reason for this test is not <UNK>
Reference: why not just use domaindatadir.topath()?
Candidate: you could use a <UNK> here instead of creating a new instance.
Reference: please check the messages for validation errors (post validations). since we add errors on the agent config object and throw the goconfiginvalidexception, we must show 422 (unprocessable entity) instead of
Candidate: you could use <UNK> run()
Reference: i know it's been around forever, but does this make you nervous? our intent is for it to return "zh" but i don't think that's guaranteed. it's implemented as a
Candidate: please use <UNK>
Reference: if the dedicated java.time methods from timestamputils are used this should no longer be necessary.
Candidate: i think that this is is not
Reference: let's give that variable a better name, what about config?
Candidate: i think this should be a <UNK> <UNK>
Reference: feature check would be enough
Candidate: this is not a question, why not just call that callers is not null?
Reference: this should use the testsuiteenvironment.getserverport() instead of the hard-coded port.
Candidate: you could use a constant here instead of <UNK>
Reference: should use create.getdisplayname() here i guess.
Candidate: we could use <UNK>
Reference: use stringutils.isblank
Candidate: this is tear down deep.
Reference: i think there's a newline missing here. it fails this test:  @test public void shouldcheckoutifsvnrepositorychangestoaparentrepo() throws ioexception { string initialrepo = testrepo.projectrepositoryurl(); runbuild(buildcommand("3", initialrepo), jobresult.passed); assertthat(console.output(), containsstring("checked out revision
Candidate: this is not needed
Reference: i still think starting with a lowercase looks better in the status report that git prints.
Candidate: is there a icon, about the icon, in the icon, in the icon, could be a icon, about the icon, instead of removing the icon, in the icon,
Reference: in [this check](<link_0>, we did something similar and we used expressionshelper.getconstantvalueasstring. we may want to use it to be consistent. it would also avoid to trim the quotes at line
Candidate: this is be inlined
Reference: do we need the check block on line 219 if this validation code runs over things first?
Candidate: you could use <UNK>
Reference: formatting
Candidate: this is not be risky.
Reference: duplicate
Candidate: this is designed to be drain
Reference: obviously this text needs to be externalized.
Candidate: wdyt about 'final' 'final' 'final' block
Reference: do we really need to synchronize here? i tend to think no, but yet again, here is where the race condition was.
Candidate: i think that this is not efficient, we could use system.currenttimemillis() instead of storagetype <UNK>
Reference: this should go inside of synchronized block. since metrics may be added to _metrics after you've instantiated sizejvmmetrics.
Candidate: this is not a bit strange to "return <UNK>
Reference: you may also return early here to avoid one level of nesting.  if (!doi.ispresent()) { entrieswithincompletemetadata.add(entry); logger.info("skipping reference with citation key \"" + citationkey + "\", since it does
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why don't you have different playsound effect functions in your adio controller wich in turn fetch from the options menu? this structure is the beginning of god behaviour.
Candidate: wait.forelementclickable() should be <UNK>
Reference: i wonder if a helper method would be better here? something like isclientcredentialsgranttype(authorizedclient)
Candidate: i think this should be <UNK>
Reference: the common refrain, why not use a try-with-resources to autoclose this thing?
Candidate: you could use a try-with-resources here instead of <UNK>
Reference: @bertram25 we're only using this variable once, better to inline it.
Candidate: inline
Reference: is this. required?
Candidate: use string.valueof names instead of <UNK>
Reference: why is object returned instead of a specific type?
Candidate: nit: you could use foreach loop instead of <UNK>
Reference: remove 'assert.' ?
Candidate: this is a checkargument for <UNK>
Reference: chain?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: typo: require_s_ a_n_. same below.
Candidate: warn error.
Reference: nit: prefer static import. also normally it's useful to include a hasmessagecontaining to make sure it's the exception you expect
Candidate: wait.forelementclickable() should be <UNK>
Reference: it should be future.channel().close()
Candidate: is there a reason for the <UNK>
Reference: it looks like this will update its presence with every new transcription result. or am i missing something? i would expect it to update its presence when the status changes
Candidate: rename to
Reference: nit: you can merge both lines above as checknotnull will return the given argument
Candidate: this is be simplified to java return <UNK> { return <UNK> }
Reference: afaik you should not use string concatenation in debug traces.
Candidate: nit: use <UNK>
Reference: should this be completionfuture.completeexceptionally(t) ?
Candidate: you could move this to <UNK>
Reference: using optional.of() here will fail since it throws an exception when meta is null. can you make sure there is a test that checks this?
Candidate: if this is is null, but it would be to be a globally defined in <UNK>
Reference: i think this would be more readable when you merge the if branches of both ifs and maybe extract them into a private method.
Candidate: you "_" "_" could be a string instead of string concatenation
Reference: i would only use the try-catch block for beanmanager.resolve() to make it clearer.
Candidate: this is designed to be a <UNK>
Reference: the formatting is a bit broken here
Candidate: let's use <UNK>
Reference: i think this should return whatever the channel this service represents (so pass in the channel name as a constructor argument). that way subscribechannel will work normally.
Candidate: @gunnarmorling the exception is not good idea to throw an iae
Reference: 'pd' no longer makes sense as a variable name, here and many other places
Candidate: you can use a <UNK> <UNK>
Reference: i think that this logic would be a bit easier to follow if we combined these two checks and used !==. that way it's clear that pack types can only
Candidate: if you could use <UNK> <UNK>
Reference: the standard one here is "attr"
Candidate: this is not convenient for narrowing <UNK> union part, but it seems like a little more convenient to appropriate. [![rule](<link_2>](<link_0>
Reference: no need to use preconditions.checknotnull() here, .withparam("token", token, true) will throw a exception if token is null or empty.
Candidate: uid is causing a uid configuration.
Reference: perhaps this should be false, so you can selectively enable it - at least initially?
Candidate: i think that this is simpler.
Reference: wrap with a meaningful message or just let it bubble up.
Candidate: this should be (throwable datanodeid
Reference: !objects.equals(
Candidate: is this a bit that this is not equals?
Reference: for null values, we just do not supply those properties in the autogenerationoption
Candidate: if you are going to be false, so that this will be false, that will be false, so that this will be false, that will be
Reference: this variable could use better english :wink:
Candidate: add a union
Reference: i think we should update getfirstannotation() as well, for this scenario java @exclude class foo { } @include class bar extends foo {} class baz extends bar {}  i
Candidate: minor typo: <UNK>
Reference: @suseika please remove assert, we don't use them
Candidate: i think we should throw an exception here instead of relying on the
Reference: we still need to check isdebug enabled as this does not use marker
Candidate: this is designed to be a to the the state of the
Reference: i don't think it improves performance that much, but you could stream the result from allitems() and collect it into a list, avoiding the for loop.
Candidate: _cough_
Reference: could we move this to a util class that's clearly marked as non-public api?
Candidate: this could be simplified to <UNK>
Reference: add missing braces here
Candidate: rename to
Reference: think i'd invert this:  if (a && b) { return positive; } else { return negative; }
Candidate: @vilchik-elena you could be simplified to java <UNK> <UNK> = "\"" == null) { return <UNK> }
Reference: suggestion: there seems to be a potentially surprising different in behavior between setsteps and withsteps if you call them when there are already some steps in the builder. the former
Candidate: use checkargument
Reference: maybe we could change them to ved here and throw the error early if it's not a valid ve?
Candidate: i think this should be a <UNK> <UNK>
Reference: could we use objects.equals in whole class please?
Candidate: you could use <UNK>
Reference: static import
Candidate: i think this should be a <UNK>
Reference: likewise this. using the immutabledatacachingutil please.
Candidate: suggestion <UNK> = <UNK>
Reference: we may want to consider crashing the app in debug to follow the fail fast principle and showing a snackbar so the users know something went wrong, wdyt?
Candidate: if oldvalue is oldvalue reconnect oldvalue is turned oldvalue should be possible?
Reference: how about setting a kubernetesproperty namespace instead of using powermockito here? and the same for the other test.
Candidate: you could use <UNK>
Reference: when touching the line above i would have done an s/hudson/jenkins/
Candidate: i'm not sure how about the sure about eating the
Reference: could you help to rename logger to logger ? it is our convention for naming static variables.
Candidate: you could use "return <UNK>
Reference: why is this variable mutable? another way is to extract it to a separate method (e.g., getnumrunningworkers()). wdyt?
Candidate: we could use <UNK>
Reference: i had trouble understanding createkey and createlimiter because they return respectively a value and a function that returns a value: suggestion string limiterkey = getipaddress(jp); ratelimiter limiter = limiters.computeifabsent(limiterkey, getlimiterfactory(limit));
Candidate: this should be updated.
Reference: if it's a time-consuming operation, there may be a benefit to run them in parallel ?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: looks to me like the only way creationorder.sublist(0,1) would fail is if their creation times are identical (ie to nearest millisecond). i don't think there are issues with "older" one
Candidate: i think that annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, no?
Reference: use list in place of newarraylist, it does the same thing but is a bit lighter to read.
Candidate: @gunnarmorling this a bit strange to <UNK>
Reference: hm. i think we should actually be concerned if we ever get to here -- i'm not sure the taskmigratedexception made sense either. trying to add records to a closed
Candidate: we could use <UNK> instead of <UNK>
Reference: i think you can use the interface here -- "cell" instead of "abstractcell". it's a little more proper to do that in java. other than that, looks good.
Candidate: why use computeifabsent
Reference: can you use busy waiting, event or latch here? in the current implementation, this test lasts for six seconds, even if it is not necessary. unfortunately, the tests are already
Candidate: you could use <UNK>
Reference: is the synchronization around trying to prevent people from simultaneously using the database connection? if so, i think there's a case where you call get() on two persistences simultaneously and
Candidate: this is not synchronize on the transactional
Reference: i think we should use a larger number for the maximum batch size, e.g. 2 * deletebatchsize as we discussed before. the partitioning code will return batches that have at
Candidate: nit: could be simplified to <UNK>
Reference: don't use hard-coded 92
Candidate: if you could use a <UNK> <UNK>
Reference: static import?
Candidate: you could use <UNK>
Reference: why call copy 2nd time?
Candidate: could you please use the whole codebase
Reference: suggestion
Candidate: typo
Reference: we can omit check on perunadmin role here, since any of the check will be true for such user. check on perunobserver stays of course.
Candidate: this is not role role role role role role is not impl/dao role role role role role of role role role and role role role will be role role role
Reference: should we consider giving it empty list instead of null?
Candidate: we should use <UNK>
Reference: put in two lines.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: currently this will fail because the operators throw an exception. so for now we may have to simply return an empty list and open another jira as a reminder, to
Candidate: this is not to be a <UNK>
Reference: as a safeguard regarding null, i suggest to replace the condition by if (objects.equals(l.getcomponentid(), component.getuuid())).
Candidate: you could use <UNK>
Reference: code is inconsistent in spacing/braces. to make it consistent i would add { } here and remove the extra spaces, on this line and the other lines that duplicate this,
Candidate: this is designed to be a <UNK> correctness id).
Reference: as we discussed elsewhere, maybe the strategy should be: * if the regex does not match => optional.empty() * if the regex matches, but some extracted field on wrong format
Candidate: could we use foreach here instead of <UNK>
Reference: why isn't this oncompletion(null, gse)?
Candidate: use <UNK> instead of objects.isnull
Reference: why did we make this change?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: it would be simpler if malformedurlexception would be converted to a runtimeexception in getjob method so that no throws is required.
Candidate: this tear combined: = <UNK>
Reference: view isn't being used here.
Candidate: you could use <UNK>
Reference: whynot just this.ssl = sslcontext != null
Candidate: nit: ordering from <UNK> v. <UNK>
Reference: i think it should be the original one or "is not _a_ primitive type".
Candidate: we should use <UNK> to <UNK>
Reference: you can do it in a single line new arraylist<>(types.getmixins().keyset()) which also improves memory usage.
Candidate: if you catching the exception
Reference: please don't abbreviate variable names. it might make the code shorter, but also harder to understand. especially this method would benefit from much more descriptive variable names.
Candidate: you can use <UNK>
Reference: no need for this, you've already checked that it's null. direct == should be fine.
Candidate: if this is is not <UNK>
Reference: looks like the opposite?
Candidate: this is be <UNK>
Reference: what should happen if d == -1? (e.g. if the suffix should be the entire basename in that case then this should set 'd = s'.)
Candidate: you could use <UNK>
Reference: i believe the algorithm here is "findmarker" or "findmarkerbytitle". consider methodizing this so it's perfectly clear.
Candidate: should we be a <UNK> <UNK>
Reference: do you mean - (1 + meanbiasincr)?
Candidate: nit: <UNK> stream()
Reference: this is ok, for example group is superuser, so user can login even if not in database, the id should be random uuid or something similar, you already took care
Candidate: if we is not <UNK>
Reference: category
Candidate: you could be simplified to java return <UNK> != null) { return null; }
Reference: it looks like glueclientfactory is only used here, and is effectively a static method. let's move it to be a static helper method in this class.
Candidate: we could use <UNK>
Reference: i don't think that it is safe to use ordinal() for encoding and decoding. as it means that two implicit decision (the order of the enum definition, and the way
Candidate: use <UNK> instead of <UNK>
Reference: i meant a . after " but the field is of type %s " since the next statement is a new sentence and starts with a capital letter. lgtm otherwise.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why container.isencrypted() is not passed in as last arg for constructing the blobproperties.
Candidate: is there is an issue that this wasn't null?
Reference: cosmetic: could you please rename this to futurenumericdate?
Candidate: could you please use a constant instead of <UNK>
Reference: doing it in the constructor is fine
Candidate: nit --> <UNK>
Reference: logging using standard output
Candidate: minor: this is not unused
Reference: why not just 'return !isaninprogresssubmission(context, item);'?
Candidate: please use <UNK>
Reference: why not include the malformedurlexception as cause?
Candidate: throw an exception instead of <UNK>
Reference: why do we have a keystoreresource and a keystorepath?
Candidate: this is designed to be a <UNK>
Reference: not yet committed
Candidate: suggestion <UNK> -> <UNK>
Reference: this check seems to be important to be backward compatible, i guess. any chance for calling connectionwrapper.wrapconnection() (as you do in production code) and checking the instanceof on returned object?
Candidate: you could use <UNK>
Reference: won't this go into an infinite loop? presumably we want to only retry some sane amount of times.
Candidate: use collectionutils instead of <UNK>
Reference: why can't we use id.equalignorecase check instead of the other way around? this option is more flexible than hard code english locale
Candidate: if you could move this to <UNK>
Reference: [nit] this looks like a restatement (or slightly stronger version of) the previous line?
Candidate: you could use the foreach here instead of <UNK>
Reference: return itemclass.isassignablefrom(mavenmodule.class) || itemclass.isassignablefrom(mavenmoduleset.class).
Candidate: you could use <UNK>
Reference: please add a space after the ,
Candidate: use <UNK> instead of <UNK>
Reference: maybe we should works this method for using of multiple arguments:  codenvyeditor#waittextintoautocompletecontainer(string ... expectedtext);  it helps to reach more compact syntax:  editor.waittextintoautocompletecontainer("print", "println", "printf");  what do
Candidate: suggestion <UNK> = <UNK> + "_" + <UNK>
Reference: i would only execute this try if overflow is not already set. given the way this code is currently written, i'm concerned about repeated throws in a tight loop.
Candidate: <UNK> --> <UNK>
Reference: use assertnotnull
Candidate: please use <UNK>
Reference: i believe the content of the httpmockrule should be tested here as well, not only the existence.
Candidate: you could use <UNK>
Reference: we should be careful about the meaning of this method. before it meant that a user had a confirmed booking. are we defining reserved as definitely confirmed now?
Candidate: is there any particular reason why we catching this exception?
Reference: bashcommands.ifexecutableelse0("apt-get", bashcommands.chaingroup(...))
Candidate: we could use a string concatenation instead of <UNK>
Reference: this can throw ioexception if i recall correctly, and should be handled properly so that deletedirectory is cleaned up regardless.
Candidate: this is designed to move this logic into a mapboxwebviewmapfragment
Reference: this seems too fragile. it wouldn't be an odd thing if this took > 1 second. i think it's valid to loop for quite a long time (say 20 secs)
Candidate: is there a reason for this?
Reference: is it ok to return null if the property does not exists or should it throw an exception? pls check spec
Candidate: please use <UNK>
Reference: nit: could name this variable binder
Candidate: this is not <UNK>
Reference: add the thread group name
Candidate: you could use the logger instead of <UNK>
Reference: if the config format is busted, i wonder if we should throw an illegalstateexception here.
Candidate: this is not use a string instead of <UNK>
Reference: you likely need to rebase to add truntime exception
Candidate: we should use <UNK>
Reference: why's stripe count is saved as string?
Candidate: finals
Reference: maybe write a mock rule (similar to mockjoin) to simulate the project + aggregate split that you want to test? i had a hard time to understand why aggregatereducefunctionsrule will
Candidate: this is is confusing.
Reference: notebookservice is usually for external call (such as websocket or rest api). because only websocket & rest api needs callback. here we can directly call notebook() to get note and
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: as the data will be accessed through memorystore, we don't need to have data be a class variable; instead, let's change it to local variable, and also the data loaded
Candidate: nit: @nullable.
Reference: the follow menu item should be disabled in this case since you won't know whether running it will follow or unfollow.
Candidate: this is designed to be a <UNK>
Reference: -1 can be used to represent no_offset, will that cause a problem here?
Candidate: why is a <UNK>
Reference: it isn't type safe. are you sure that all objects are _metadatatype_?
Candidate: you could use <UNK> instead of creating a foreach coupling between using foreach instead of coupling between the highest coupling between the <UNK>
Reference: static import
Candidate: suggestion <UNK> -> <UNK>
Reference: can simply use isempty.
Candidate: i think this should be a
Reference: log.debug ?
Candidate: you can use <UNK>
Reference: call setsecretwithresponse(name, value, context.none).value()
Candidate: use readasstring(...) instead of <UNK>
Reference: hostmessenger has a helper function gethostgroupsfromzk(), maybe you can get it from there.
Candidate: is there a reason for clicking on the view?
Reference: can we send null instead?
Candidate: you could use <UNK>
Reference: static import
Candidate: we should use <UNK> enum instead of this(name, <UNK>
Reference: just change "" to null
Candidate: is there a reason for avro separator ?
Reference: how would this affect the memory footprint of each event? also, is a soft copy okay here? i guess if soft copy is okay, then it won't be too much
Candidate: you could use <UNK>
Reference: you might replace this for user.isadmin
Candidate: log.debug
Reference: getdate is deprecated. is there a non-deprecated method you can call with the same result?
Candidate: you could use a constant instead of <UNK>
Reference: typo is here as well, iteration
Candidate: is there a reason for this?
Reference: try to avoid one level of indentation using (!mood_node .
Candidate: you could use stream() here
Reference: to make this more bulletproof, can we wait for the file to exist and be not empty in a loop? if the file never gets created, the test would eventually
Candidate: this is brittle.
Reference: can multiplying by -1 ever cause an issue?
Candidate: i liked to use the <UNK>
Reference: list#isempty()
Candidate: if you could use <UNK> <UNK>
Reference: curious about why you needed to add this here and above?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: could this be a log warning? the metadata is still malformed.
Candidate: this error message is not
Reference: would probably be simpler to just to string.format(upstream_format, entry.getkey(), upstream)
Candidate: is there a reason for this method to paths?
Reference: do we need this variable, given the member variable you added?
Candidate: this is a mock <UNK>
Reference: should we just wrap all the code below(until updating fileoffsets) inside this if block? it gets rid of the scenario where changelogssp can be null but still we try fetching
Candidate: this is a bit strange to me that we decided to to have a <UNK>
Reference: this is out of the scope of this pull request, but i don't see why we're using this custom widget instead of the standard spinner implementation provided by the framework?
Candidate: is there a reason for this?
Reference: the new one is not more readable than the original. see if there is a better alternative.
Candidate: use <UNK>
Reference: hi @handreyrc can you appply kie style formatting?
Candidate: you could use a constant for s?
Reference: why use qualified name?
Candidate: no need to call <UNK>
Reference: here you have a mismatch with names given in the annotations - here is upper case
Candidate: why not leverage to <UNK>
Reference: you could have used arrays.equals()
Candidate: if you could use objects.equals() instead of objects.isnull
Reference: why are you printing the frame layout? btw, it looks like this: android.widget.framelayout{b3fe67c v.e...... ......i. 0,0-0,0}
Candidate: i wording. we wording. wording. wording. wording. wording. wording. neo4j wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording.
Reference: empty collection should be returned instead of null
Candidate: please use narrowing narrowing narrowing to narrowing narrowing narrowing narrowing narrowing narrowing to narrowing narrowing narrowing narrowing narrowing narrowing narrowing debugging easier.
Reference: given that there is always a resistancecalculator, this shouldn't be optional.
Candidate: this is a <UNK>
Reference: will this always override the database value? even if it is another date? remove this and make sure the defaults from the database are used.
Candidate: please use <UNK>
Reference: a couple of questions regarding this method: - i guess it can be called concurrently (otherwise there would not be any need for this cas loop. is this right? -
Candidate: if we is a <UNK> that is is a <UNK> we could use a <UNK> <UNK>
Reference: can be this(new arraylist<integer>(other.pattern));
Candidate: is there a reason for element?
Reference: does it make sense? wouldn't it be enough to use atomicreference ?
Candidate: i'm not sure that we talked about the <UNK>
Reference: i thought we were going to place it in the sdk folder? $sdks/gradle/m2repository ? if it's there we can find it without the installer's help, right?
Candidate: this is not ides
Reference: using the thread(string name) constructor should be the safest, least confusing option here.
Candidate: i'm not sure how about the sure about the sure that this is is the the <UNK> is missed. but still, i'm not sure that we ended up happening.
Reference: 1- i said before that getstatetable() didn't need to be cached before it was called once or twice, now it's called for every event... 2- the status is not the
Candidate: i'm assuming that this is not have to set the default, we have to set events.
Reference: shouldn't we be coalescing the left.getdoc() with right.getdoc()?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: shouldn't be called left anymore
Candidate: you could use computeifabsent
Reference: i would avoid the negation here. i understand that cond?null:something is a pattern but that's usually used to avoid the negation in "x != null ? ..."
Candidate: i think this should be a
Reference: don't concat strings in log statements, use the param support  logger.info ("i have a {} to eat.", object);
Candidate: we should throw an exception?
Reference: i think we must give user ability to use intention if goinspectionutil.getexpressionresultcount(e) != 1 it does't broke code and we just move error to another place @zolotov what do you
Candidate: <UNK> -> <UNK>
Reference: you're adding a risky semantic check here for no reason.. just do what the previous version was doing please?
Candidate: <UNK> >= <UNK>
Reference: again, findbugs doesn't like it. see above.
Candidate: you could use a try-with-resources here
Reference: is there any strong reason we must deprecate this interface ? if we add an interface sqlfunction#getstrongpolicy, the only exception is the sqlkind.other_function, when we encounter that, a sqlfunction instance
Candidate: unsupportedoperationexception
Reference: please also verify succeeded message
Candidate: i liked that this purpose, is going to hang on the purpose, is going to hang the missed.
Reference: it's one-time. then you handle only one response. you can detect only one server.
Candidate: is there a reason to throw an exception instead of returning null?
Reference: i think this could be a race condition between tableexists and gettableinfo. maybe we could remove tableexists and wrap gettableinfo into a try/catch block?
Candidate: consider using a enum names instead of <UNK> types?
Reference: can we please mock the future?
Candidate: why not mock
Reference: just for consistency, please use final boolean actual
Candidate: you could use <UNK>
Reference: we put try into try so you can try and catch everything
Candidate: could be simplified to <UNK>
Reference: i don't think the intention was to change the isjavafxinclasspath in classpath. in my world it would e kept as is. then, if it returns true, use the loadclass privileged
Candidate: if we is not null, we should throw an npe here instead of null.
Reference: not sure i follow the logic of this test... we want to show that it doesn't block, but then we just assert that the call doesn't take longer than 30
Candidate: you could use <UNK>
Reference: this is problematic. imagine that i create a canvas using this builder, then build it. you return the backing canvas here. now i change something using this builder - that's
Candidate: is there a reason for avro to be null?
Reference: maybe this can be moved to the declaration?
Candidate: i'm understanding that this v. strange, that queries to the queries to finish queries in v. the queries to finish queries in the queries to finish queries to finish queries
Reference: topicfilter initialization can be done in the constructor of the class.
Candidate: this is designed to be a <UNK> <UNK>
Reference: set the table size to 5. we expect ~4 entries. 5 is a good default size.
Candidate: use <UNK>
Reference: erm. padding ; are we?
Candidate: we could factor this out into a offset and held offset held offset held offset held offset held offset held offset held offset held offset held offset held offset held
Reference: should null be handled here ?
Candidate: is there a reason to assert here?
Reference: this can be private i guess
Candidate: this could be simplified to <UNK>
Reference: this is a buggy as flags can include final modifier for instance. please fix it.
Candidate: you could use static import <UNK>
Reference: should the context also be cleaned up or doesn't it matter because it's failing anyways?
Candidate: we could increment the buffer is often often often often often often often often often often often often often often often often often often be
Reference: should check if value>0 before incrementing to avoid negative values for counters.
Candidate: use readasstring(...) instead of <UNK>
Reference: can we not verify that the text boundaries are correct? verifying that we simply set the boundaries on the text decorator is better than nothing but can we not ascertain
Candidate: wait.forelementclickable() should be <UNK>
Reference: what about covering this use-case?
Candidate: is there any reason why not we is a default?
Reference: can you get rid of this if? otherwise the field ops are not in the same basic block and you cannot use check.
Candidate: we should throw an exception here instead of <UNK>
Reference: this can be avoided as it is a number input already.
Candidate: this should be <UNK>
Reference: suggestion writtenandunread.computeifabsent(variablename, k -> new hashmap<>()).put(key, statementtree); namestosymbols.put(variablename, variablesymbol);
Candidate: you could use <UNK> instead of creating clear() for (string pair : <UNK> { <UNK> = new <UNK> }
Reference: can you set 2 and 3 to constants so that they're not magic numbers?
Candidate: is there a reason for this logic?
Reference: why the valueof? id is already a string
Candidate: please use <UNK>
Reference: the constant should be moved to tmffiltertreenode. the others should be removed/deprecated.
Candidate: you could use a constant here instead of <UNK>
Reference: please implement tostring() to provide debugging state information for debugging purposes.
Candidate: i objects.hash()
Reference: could we get a correct pythonjarfile for yarn perjob/application mode here? it seems that we do not ship the $flink_home/opt directory and set the flink_opt_dir environment. maybe it is out
Candidate: we should throw an exception instead of <UNK>
Reference: why is this not symmetric with getsslconfiguration?
Candidate: this should be <UNK>
Reference: can we have global constant for '*' ?
Candidate: if we is a <UNK> to the server-side.
Reference: i'd just use a lambda here: (rowexpression, level, session) -> rowexpression
Candidate: this is not to
Reference: this doesn't feel right to me -- don't people tend to handle the way test results map to build results in vastly different ways, generally?
Candidate: i doubt that this is is not equals?
Reference: use of this.getclass().getname
Candidate: suggestion if (throwable { <UNK> = <UNK> }
Reference: adcolonyappoptions options = adcolonymediationadapter.getappoptions(); if (options == null) { optiions = new adcolonyappoptions(); }
Candidate: minor formatting -->
Reference: please do not use java **assert** keyword. java assertions are disabled by default in maven-surefire. i am pretty sure that your test will pass even with assert(false). use junit method
Candidate: use <UNK>
Reference: i'd either make this more symmetrical to the entry == null branch, or check for cache_mode_local first.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: don't need to escape '\' in the string, though it might add readability?
Candidate: this should be <UNK>
Reference: suggestion assertsignaleventexecutionset(emptytopevent.getexecutionset(), empty_value, cancelling, empty_value);
Candidate: suggestion assertmessageeventexecutionset(emptytopevent.getexecutionset(), empty_value, cancelling, empty_value);
Reference: for reference, string(text.of(longflag)).parse(source, args, context); became args.next();
Candidate: this should be <UNK>
Reference: nit: can replace (builder, input) -> builder.append(input) with expressionbuilder::append.
Candidate: i think this should be a <UNK>
Reference: traditionally we use unfillfilledrequrements as a signal for a configuration resource which is currently invalid but the user could make valid through some action (ie: "you need to update commcare
Candidate: you could use a try-with-resource here instead of <UNK>
Reference: consider adding a separate timeout value here.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: hi @boaks , low: it would be nice to separate serializeheader to a new method :) rather than duplicating it in both cases
Candidate: this should be <UNK>
Reference: nit: consider testing empty shape
Candidate: is there a reason to combine this line?
Reference: @lorobode in this scenario there are two options: 1) use primative boolean type. -> have only getter and setter 2) if using boolean type: -> getter (#getnewuser) returns boolean... and
Candidate: <UNK>
Reference: formatting.
Candidate: this should be <UNK>
Reference: can you replace this check with event-loop thread instead of not being the junit thread ?
Candidate: is there any particular reason reason to combine these two lines depending on the job thread.
Reference: confusing variable names of target and targetname. i'd prefer webserver and webservers or some such to avoid confusion.
Candidate: why not mock expectations
Reference: does this lose the parent config?
Candidate: this is throw an exception
Reference: '() ->' won't work when backporting to 3.6
Candidate: how about moving this method to <UNK>
Reference: we shouldn't do both log and throw.. let's remove logging here.
Candidate: we should throw an unsupportedoperationexception
Reference: can baseurl be the empty string?
Candidate: this is delegate to delegate to delegate to delegate to <UNK>
Reference: for this test, you don't need to set the activation key anyways, because if the user has no activation key set then whatever value is provided is definitely incorrect
Candidate: this should be <UNK>
Reference: maybe switch the condition to <pre>intervals == null || (r.getreadunmappedflag() && r.getalignmentstart() == samrecord.no_alignment_start)</pre>? then the check below could be slightly simplified but the benefit would be to completely skip
Candidate: is there a reason to check that is empty?
Reference: changing the value of the setting seems like an unexpected side effect of repeatuntil. please ensure the toggle is set back to its previous setting after the 'repeat' i actually
Candidate: you should fully use fully enough.
Reference: put this declaration 8 lines lower
Candidate: this should be a <UNK> <UNK>
Reference: this potentially breaking change will have no impact on the plugins from the ecosystem. you can find the analysis report in <link_0>, done with two different tools (github search and
Candidate: is there a reason for avro here?
Reference: ![minor](<link_2> 'severity: minor') remove the redundant '!unknownsymbol!' thrown exception declaration(s). [![rule](<link_1>](<link_0>
Candidate: please use <UNK>
Reference: log
Candidate: wait.forelementclickable() could be <UNK>
Reference: hm.. this is strange. why not new rtcontent(this.request, "readme.md")?
Candidate: <UNK>
Reference: can we use guava style map creation?
Candidate: finals
Reference: put this in else clause
Candidate: you could use <UNK>
Reference: new arraylist<string>(parents.size())
Candidate: this is right...
Reference: it looks like a collection of two ogcmultipoints will incorrectly return true.
Candidate: could be simplified to: return <UNK> && <UNK> { ... }
Reference: i18n
Candidate: please use <UNK>
Reference: all comparisons involving nan (except !=) return false, so even float.nan == float.nan returns false. this should be float.isnan(num) instead. there's also a float.isinfinite(num) method which might be better to
Candidate: minor: this is is not thrown by <UNK>
Reference: if association is using default version, ver=null. so, this comparison is wrong. if(ver==null), then add this to deferred loads, so you can load it later.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i don't think that this will make a difference, but maybe we should use an instance of shogun2jsonobjectmapper here? <link_0>
Candidate: throw an exception exception?
Reference: maybe extract questionmetadata.getvalue() into a variable as it is used thrice in this method
Candidate: i don't think that this is not efficient, but this is is be to the the <UNK>
Reference: the class is generic, would be there a way to have the contract more abstract. somehow to remove any "github" specific stuff
Candidate: you could use draw a <UNK> instead of creating a new instance everytime instead of creating a new object everytime instead of creating a new object.
Reference: continuing the argumentsandresult discussion, i think here we should be robust and even don't expose arguments until the invocation.proceed() returns. anyway there should be some hook to expect an exception\-
Candidate: we should have to call the dialog on the fragment
Reference: would it be possible to avoid this state management by just deferring whatever code needs to be run until the next event loop (e.g. scheduler.get().scheduledeferred())? (only suggesting this if it
Candidate: wait.forelementclickable() could be <UNK>
Reference: the original behaviour would skip writing to the memory cache as well, this one should probably be kept the same.  java return memorypolicy(no_cache, no_store);
Candidate: is this intended to manually display that elements that elements are going to be a separate method?
Reference: please verify afterwards that the attribute foo = bar has not been set and please delete the business service afterwards.
Candidate: no need to use <UNK>
Reference: better moved to the if block that returns a value.
Candidate: if this is is is not optional.
Reference: i'd add .notconvertingparticipant() here so that no update strategy text -> model is being attached.
Candidate: is there a reason for the baseurl baseurl
Reference: let's just go ahead and pass unknown to the four args method, i think it will be a tad simpler.
Candidate: you can move this initialization to the constructor?
Reference: <link_0> just got merged, rebase using this syntax for domainlist
Candidate: you could use <UNK>
Reference: what is this doing? i do not understand it.
Candidate: how about this is a bit simpler.  if <UNK> == 0) { ... }?
Reference: what about using type file instead of object you then dont need to cast multiple times later on. or maybe use a list: list<file> fileslist = (list<file>) fileutils.listfiles(destinationfolder, null, true);
Candidate: you could use <UNK>
Reference: this is not needed, you already set everything in the constructor above
Candidate: the absence guidelines](<link_0> we can't require the <UNK>
Reference: why?
Candidate: same here:
Reference: is delim needed here?
Candidate: this is designed to be 'final'
Reference: the initial size of list is _2_..?
Candidate: please use <UNK>
Reference: you do not need bindannotated, since there's only one implementation of rpcdispatchhooks. bindannotated was used to bind an interface for the rpc and rest dispatchers to different implementations
Candidate: @gunnarmorling you could use only: <UNK>
Reference: seems like if check has been made twice by mistake
Candidate: this is a bit strange to <UNK>
Reference: why not using here stringbuilder as well ???
Candidate: please use <UNK>
Reference: another one! any reason you're using these over the lighter-weight arraylist?
Candidate: data. data. data. data. data. data. data. data. data. data. data. data. data. data. data. data. data. data. data. data. data. data. data. data. data. data. data. data. data. data.
Reference: throw exception from here as well.
Candidate: typo: <UNK>
Reference: spelling, one l: trailing
Candidate: please use <UNK>
Reference: here too for message - remove if we can get away with it.
Candidate: we should use <UNK>
Reference: you forgot a parameter in the logging here: "setting name by namestring {}"
Candidate: log
Reference: you may want to fix the typo while you are around... :)
Candidate: suggestion <UNK> = <UNK>
Reference: this will result in a classcastexception when e.g. a querymessage is delivered. if a certain message type not supported, we should throw an explicit exception stating that.
Candidate: is there a reason why we catching exception here?
Reference: but why not check explicitly for zero? this is opaque, it seems like you're trying to optimize away a division.
Candidate: if <UNK> == 0 || <UNK> == 0 || <UNK> == <UNK> || <UNK> == <UNK> || <UNK> == <UNK> || <UNK> == <UNK> || <UNK> == <UNK> || <UNK>
Reference: same cleanup issue here i think
Candidate: you could use <UNK>
Reference: what's a deep stub and why do i need one?
Candidate: please use meaningful hook
Reference: why does element and type have references to the chelper?
Candidate: stream() is not used?
Reference: can you add apublic void error (string msg, throwable e) and change the public void warn(string s, exception e) to public void warn(string s, throwable e)
Candidate: wait.forelementclickable() could be <UNK>
Reference: including the !eos() in this check seems like a very odd way to write this code. why not simply:  java if eos() { return; } if (isprofilingmode()) { ...
Candidate: multimap multimap multimap multimap is not optional?
Reference: rename to p or prop
Candidate: you could use <UNK> instead of creating 'final'
Reference: hm... two thoughts here: (a) reshape isn't always a no-copy op. not sure, but we might end up returning a copy in some cases with this approach? (b) if we
Candidate: this is be encapsulated depending on the depending on the depending depending depending depending on the depending depending depending depending depending depending depending depending depending depending depending depending depending depending
Reference: correlation id cannot be parsed or "wrong format of the correlation id". you should also log the actual value that the server returned, so that we can see it in
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: isn't it better to "capture" lh.getledgermetadata() once ? maybe it is guaranteed somewhere else that calling getledgermetadata twice will return exactly the same object because we are using safeorderedexecutor, but
Candidate: you could use <UNK>
Reference: i don't think i like a branch here. this is too into the weeds for a configuration item. if you're going to log something, pick the one that works and
Candidate: this supplier is be tied to the callers of creating a method.
Reference: i would add an emptyspace after file: ".. migrate file "
Candidate: i'm not sure how about this down down down down down down down down down down down down down down down down down down down down down down down down
Reference: inline targe: partitiondata[i].flush(outputbuffer);
Candidate: isempty() -> <UNK>
Reference: why do we need this? can't we support specifying an implementation as the type and then detect whether it is a concrete class and construct the instance and proxy appropriately
Candidate: we should throw an npe here instead of null.
Reference: why final variable? :-)
Candidate: this --> <UNK> --> --> --> --> --> --> --> --> <UNK> --> <UNK> --> --> --> --> --> --> <UNK> --> <UNK> --> --> --> --> --> <UNK> -->
Reference: hardcoding "/" may not work in windows environment. shall we use file.seperator ?
Candidate: this is designed to use a formatter
Reference: why on <strike>earth</strike> any planet! we will gonna have a method on neo4jmatchers! that does index creation!
Candidate: you could use <UNK>
Reference: integer.highestonebit(value) << 1 ? but it could be overflowed.
Candidate: <UNK>
Reference: declare throws please
Candidate: could you use <UNK>
Reference: nit: unsupportedoperationexception, since notimplementedexception is reflection-specific
Candidate: we should throw an exception instead of eating the
Reference: minor, but we can break the loop as soon as we found first renting partition, no need to keep iteration.
Candidate: scm
Reference: it looks like instead of using pair it's better to create specific scoreentity pojo with two primitive fields: entity/value and score; so uses can understand directly understand what first and
Candidate: is there a reason for element?
Reference: nit: gettypename is a new one, should be fine though e.getclass().getname() or e.getclass().getcanonicalname() might be simpler
Candidate: we could use fake fail() here
Reference: break if we found it?
Candidate: space after if ( <UNK> == null) ) { ( <UNK> ) = false; } ) {
Reference: i'm worried this will get noisy in production, as if you have 100k items to index, you are going to see this message 100k times.
Candidate: you could factor this out of the
Reference: what exactly indexnotapplicablekernelexception mean here? shouldn't we report that something went wrong instead of assuming that we do not have matches?
Candidate: we could use a resources here instead of <UNK>
Reference: no need to change at here, because it is only for date type
Candidate: <UNK> -> <UNK>
Reference: try/catch this so logging doesn't affect normal operations
Candidate: try/catch
Reference: why not just make this the next statement after the for loop?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: @nullable annotation implies that the argument could be null. correct fix is to keep the @nullable annotation and do the following: return arg0 != null ? arg0.getsqlname() : null;
Candidate: you could use <UNK>
Reference: we should log this properly too, i think. errors in this class don't always bubble up where they can be inspected easily.
Candidate: this utf-8 is never thrown.
Reference: i wonder if instead of updating runleaf() we should update methodblock() to return a statement that calls thread.interrupted() at the end of the statement chain.
Candidate: you could use the multimap here instead of <UNK>
Reference: this doesn't need to be public right?
Candidate: could we use a constant instead of <UNK>
Reference: don't you need to specify the enum class instead of null?
Candidate: you could use a string instead of <UNK>
Reference: why * 100? wouldn't simply projects.size() and then newchild(1) below be clearer?
Candidate: static?
Reference: i see this here and on line 631. should this be pulled into a common routine? perhaps a name like loadneededtestlibraries() how many places do we have the library name.
Candidate: you could use reflectiveoperationexception here instead.
Reference: likewise doesn't need the else clause.
Candidate: you could use objects.equals() instead of ==.
Reference: nit: we don't use '!' anywhere else, lets replace with a '.'
Candidate: maybe we could be foreach deserve a discoveryresult deserve a var that the discoveryresult deserve a
Reference: remove magic number - should not have impact for performance as big as it was worth to provide specified number
Candidate: how about making a feature feature feature feature feature names.
Reference: save the log level by calling realmlog.getlevel() and restore to that.
Candidate: is there any reason why we are going to throw an exception?
Reference: you can remove the null check java if (application_json.equals(response.getheader(content_type))) ...
Candidate: why not catching this exception?
Reference: is there a special reason why you use string.format and not simply use parameterized logging?
Candidate: this is not be included in the service {}", <UNK>
Reference: @cvrebert rename this to branch
Candidate: you could use a classic ethernet memory.
Reference: ternary operator if you're feeling fancy.
Candidate: return false; } }));
Reference: why get it again? you already have a reference to it.
Candidate: please use <UNK>
Reference: @manuelplazaspalacio unit test should execute in miliseconds, we have find a way for not wait 20 or 30 seconds for test. for example, can we pass interval as parameter?
Candidate: suggestion return <UNK> ? false)
Reference: i think it might be better to use trace for such messages?
Candidate: style-nit: you intend to check for the
Reference: when partition is negative, it also encodes the number of total partitions. can we just pass the number of total partitions in constructor so it doesn't have to be encoded
Candidate: use <UNK>
Reference: it would be even better to just return here, wouldn't it? then you don't need the if statement on line 99 and can define the consoleappender variable on the same
Candidate: we could use only: <UNK> multimap here instead of <UNK>
Reference: <string, string> is redundant
Candidate: this is not <UNK>
Reference: return getcodeca() != null && ("dts".contains(getcodeca()) || "dca".contains(getcodeca()));
Candidate: this is not efficient, we should use objects.isnull
Reference: i thought this method was only java 9?
Candidate: could we propagate the exception here instead of printing the exception
Reference: can be inlined
Candidate: is there a reason for the sake of <UNK>
Reference: can be return csv.headers().stream().anymatch(header -> knownreference(header));
Candidate: minor nit : <UNK>
Reference: this should be a label, not part of a metric name.
Candidate: this is a bit strange to computeifabsent
Reference: combine this with the variable declaration above. suggestion cacheentry cb = cache.getblocknostats(_lookup);
Candidate: i think this is a warn and persist druid away from druid a merge.
Reference: also, the message was probably intended to say "this websocket uses ws instead of wss. no sslsession available."
Candidate: is there a a log.debug of log.debug
Reference: shouldn't this be moved into the if() clause for maximal memory savings?
Candidate: you could use <UNK>
Reference: servlet path tests are fragile: - the service could be a workspace specific one, not 100% sure to do the various wrappers, but at this point you might see "workspace/ogc"
Candidate: use <UNK> instead of <UNK>
Reference: as above; consider using getclass().getsimplename() instead of this
Candidate: consider using <UNK> instead of <UNK>
Reference: add log statement to else block debug level
Candidate: i think that this is is not <UNK>
Reference: the materializedviewsubstitutionvisitor seems should not be used directly.
Candidate: is this possible?
Reference: shouldn't this be doseunits? :)
Candidate: this is designed to be a lists, but this is not <UNK>
Reference: do the same check that you did for account_id below since user_id will eventually be phased out.
Candidate: please use <UNK>
Reference: invert it
Candidate: suggestion if <UNK> != <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK>
Reference: i think we should disable cache for the poller. if you look at privous corfustore stream or our dcn, they both disabled cache to avoid polluting addressspaceview cache, which could
Candidate: use <UNK> false)
Reference: thinking about this some more, rather than propagate the nocurrentcaseexception from the constructors, lets catch and log it and cal setenabled(false) on the action so it would be grayed out,
Candidate: this is not convenient for <UNK>
Reference: returning null causes entry removal from datasources map, it didn't happen before
Candidate: you could use expectedexception whose <UNK>
Reference: shouldn't you pass the called url as a parameter, so that the form can actually redirect back once the user authenticated successfully?
Candidate: weights tracking the plural required?
Reference: tritto
Candidate: could we use <UNK> annotation, instead of creating a new object instead of creating collectionutils initialized internally as collections.singletonmap() instead object?
Reference: we have full control of the expected data, right? does that not mean that we can self-sanitize (i wonder if such term exists?) the data in expected?
Candidate: is there a reason for this?
Reference: few questions about this change: 1. what happens if the value is null? you probably need a null check here. 2. what happens if you get a list of features
Candidate: nit: we use <UNK>
Reference: do we want this to equals or just match?
Candidate: suggestion if <UNK> == null) {
Reference: where is this used?
Candidate: this should be null
Reference: @randgalt can we move this to a constant now that we're no longer supporting 3.4?
Candidate: i think this consequence of non-zero >= <UNK>
Reference: looks like you forgot a !. should be (path -> !path.isempty()
Candidate: you could use a <UNK> <UNK>
Reference: please, unify the naming format of the classes: configurationsyspropresolver classpathconfigurationplaceholderresolver
Candidate: wait.forelementclickable() should be <UNK>
Reference: immutablelist -> list
Candidate: you could use <UNK>
Reference: ibm-specific without that dash?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i find it better to: * keep check in the while condition * remove if above * remove the null check on line 300 (which is already covered by the
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: so why do we register in updatescores? a bit weird no? also maybe messagingservice should store a list of weakreferences so we don't need to unregister? or we should unregister.
Candidate: cool, we could use <UNK> instead of removing the property?
Reference: checknotnull
Candidate: please revert the tear <UNK>
Reference: i wouldn't print anything like this in a unit test.
Candidate: you could use a constant instead of <UNK>
Reference: we could have a method to return bloop directory and then this and bloopjarspath could just resolve single child. or even better, to resolve the bsp path, so it can
Candidate: we could use <UNK>
Reference: style-nit: you can chain this call: repository git = new filerepositorybuilder() .setmustexist(true) .setfs(getfs()) .setgitdir(submodulegitdir) .build(); try { head = git.resolve(constants.head); } finally { git.close(); }
Candidate: you could use <UNK>
Reference: reduce noise with !hastrackedstartup.
Candidate: is there a reason for this logic?
Reference: it might be worth considering ellipisizing this? i'm not sure what behavior is consistent among the other sdks ?
Candidate: please use <UNK>
Reference: use the commandwitharg<boolean> variant here so that the output repopulation happens even if the package versions aren't sufficient.
Candidate: could be simplified to pretty-print
Reference: minor typo in variable name here
Candidate: if you could use <UNK>
Reference: what is the reasoning for disallowing a zero tenor? given period doesn't disallow, we may have code (possibly tests) that make use of it
Candidate: this should be a checkargument for <UNK>
Reference: what about something like this ? logstocompact.sort(comparator.comparing(entrylogmetadata::getusage)
Candidate: if we origin is not needed
Reference: better to return null here and let callers deal with null however they want. this will default to string in _all_ cases of deserializing valuetype, even unforeseen ones where that
Candidate: nit: not throw an exception
Reference: formatting, please adhere to our code style guidelines, there should be a space after the if and before the curly bracket {
Candidate: if you could use <UNK>
Reference: we'll need to redesign the toggle actions not to use the status text, since the new grid items only support a single line of text due to their reduced size.
Candidate: no, this is not belong to the icon differs in the pr, but still, i don't think that differs in the
Reference: this need to be error message. but don't log and throw. either log or throw.
Candidate: maybe we could use a constant instead of <UNK>
Reference: i don't think we should try to dispose this image. just caching them would would probably be sufficient and would provide better performances for people often dealing with colors.
Candidate: i'm not sure if this is not committed above).
Reference: because then we need to fetch the user twice here and in candoaction. this is not user visible command anyway, it is only used by batch, engine.log is the interface.
Candidate: @ivange94 about this return null" is null.
Reference: how about having methods for creating these lambdas? the nodeimporter one is not so bad, but the relationshipimporter involves a lot of fields.
Candidate: why not use <UNK>
Reference: this method means that whole oxauth can process only one single ciba request per given period of time. imagine we code authorization code flow in this way. we will get
Candidate: is there a reason for this logic?
Reference: remove from here an update of db, the following method should only convert info retrieved from host
Candidate: please use <UNK>
Reference: typo "exisist"
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: it's a good consideration to check presence of the field, but actually it's not needed. getpropertynode() in the node builder api doesn't mandate that the given property actually exists, it's
Candidate: please use <UNK>
Reference: resourceutils.closeorlog(istream) ?
Candidate: nit: you could use a <UNK> <UNK>
Reference: inconsistent log level. use only one. stick to trace level for now in this method.
Candidate: same as above.
Reference: i know you love streams and lambdas very much :) but... we are trying to avoid them when there is no clear benefit as there is a cost to it.
Candidate: you could use a constant instead of <UNK>
Reference: suggestion - could rename this to mergedservicestatusmap and the pairresult in the loop below to servicestatusmap to follow this code better.
Candidate: you could use <UNK> here instead of <UNK>
Reference: for consistency across the project, please remove the final keyword here.
Candidate: this is not unsupportedoperationexception
Reference: suggestion .until(() -> j.jenkins.getqueue().isblockedbyshutdown(task));
Candidate: stream() args?
Reference: we need to check the level here don't we? kotlin if (level == componentcallbacks2.trim_memory_ui_hidden) { lifecyclelistener.onappgoestobackground() }
Candidate: is there a reason for this logic?
Reference: this can be private, right?
Candidate: i think this is never be used.
Reference: this is a leftover i assume?
Candidate: this is a <UNK>
Reference: ditto (compare size)
Candidate: you could use a local variable?
Reference: i would actually suggest making another method named "createexclusiverelationship", since other methods may need to support repeating relationships, and the other createrelationship method does not replace existing relations.
Candidate: suggestion <UNK> = new <UNK>
Reference: brrr... maybe a current time would be better?
Candidate: you could use <UNK>
Reference: validatedate also check if date is not null and if it is not in the past and it should be done before checknumberofpatients
Candidate: is there any particular reason reason why not we are going to be a <UNK>
Reference: this function is no longer useful, use send_resourcepack(). this is send_resourcepack().
Candidate: i think we should be a here instead (instead of removing the <UNK>
Reference: you need to get the folder from jenkins again. otherwise this always pass.
Candidate: use <UNK> instead.
Reference: is this equivalent and a bit clearer: java if (anno1 != null && anno2 != null) { annotationmirror glb = qualifierhierarchy.greatestlowerbound(anno1, anno2); lublowerbound.replaceannotation(glb); }  as anno1 and anno2 are
Candidate: you could use <UNK>
Reference: do init tokenizer in japanese2romaji
Candidate: you could use a <UNK>
Reference: what's the reasoning behind overriding the storable variable retrieved from the db with the value in cache?
Candidate: is there any reason to mock here?
Reference: nit: can we call this variable detectedprimarylanguage
Candidate: you could use a constant names instead of string = new <UNK>
Reference: thats no storedobject, right?
Candidate: suggestion <UNK> = <UNK>
Reference: this seems like the correct case. do we not have any code that actually sets an offset so we never noticed the bug? it seems like there needs to be
Candidate: 32
Reference: i'd leave this as calling the deprecated method on getportforwarderasync(), rather than doing the optional.absent() here. otherwise we're duplicating the handling of the deprecated case both here and in the
Candidate: use <UNK>
Reference: hierarchy is misspelled.
Candidate: this should be a <UNK> <UNK>
Reference: if printing the stacktraces is not very useful and annoying, adding e.getmessage() just to tell us what type of exception has happened is better?
Candidate: this is designed to be a local vars of mutating a local variable?
Reference: add "0x"?
Candidate: is there a reason to use avro here?
Reference: why not in the try block?
Candidate: this is be unchecked unchecked unchecked unchecked unchecked
Reference: i believed codacy flagged this. i think this could be replaced with this.successfullyparsed &&= toadd.issuccessfullyparsed().
Candidate: suggestion throw (throwable == null) { return <UNK> } }));
Reference: for reasons discussed in #661 this number of iterations might be wrong if we specify half-headway.
Candidate: suggestion if <UNK> == null) { throw new <UNK>
Reference: i think the sharedpreferences will be shared across tokens, so if someone is using multiple tokens, this will overwrite the first token. and then you'll be writing device ids to
Candidate: if this is is not efficient, but i think, this is is a efficient, but i think, that is a
Reference: no space betweeen } and finally
Candidate: you could use a here instead of <UNK>
Reference: there should also be a method called arrays.stream(array...)
Candidate: this is not a <UNK>
Reference: you can make and use a putint function in firebaseevent class instead of using the putlong.
Candidate: why not -1l
Reference: valueprovider interface has an isaccessible method. you should implement that interface & in isaccessible return logical and of all the components' isaccessible
Candidate: this breaks this change.
Reference: removed
Candidate: should we add a message to <UNK>
Reference: this is not correct (and also not the one above) as you will cause a classcastexception later on if the channelhandlercontext does not wrap an channeloutboundhandler.
Candidate: i think we should be <UNK> to <UNK>
Reference: here also, a traditonal for loop is better
Candidate: you could use <UNK> instead of <UNK>
Reference: please try to avoid using horizontal/vertical panels if it is at least a bit possible. they are rendered as tables and unless it is really hard to style the content
Candidate: whitespace understood whitespace understood whitespace understood whitespace understood whitespace understood whitespace understood whitespace understood whitespace understood whitespace understood whitespace understood whitespace understood whitespace understood whitespace understood whitespace understood whitespace understood
Reference: despite the looks k9.debug is not constant and tied to the "debug logging" setting. please use buildconfig.debug.
Candidate: should we print the warn as well.
Reference: shouldn't the store be invoked when add() is successful?
Candidate: i think this is not <UNK>
Reference: i think this should be !usehyphens
Candidate: you could use a constant instead of <UNK>
Reference: can the resulting message end up having a -1,-1 location if currenttoken result in a null value?
Candidate: you could use <UNK>
Reference: should we make "pig.dump.hadoopcounter" a const ?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: in general, when adding to a map, please ensure that the key is not an empty string by using stringutils.isnotblank(...) to avoid stuff like this: json "servers" : [ {
Candidate: suggestion if <UNK> == null) { return <UNK> }
Reference: as far as i can tell, iso-14882 allows both cv-qualifiers to be on the right side. this check would also mark int const volatile foo{}; for rewriting. should we catch
Candidate: you could be simplified to java <UNK> <UNK> != null) { return <UNK> }
Reference: to prevent reallocation of the underlaying array, we should give a size hint if possible (principals.size()).
Candidate: you could use <UNK> here instead of <UNK>
Reference: looks, like we need the same test for ccsmatrix.
Candidate: i think this thrown exception thrown thrown thrown thrown thrown thrown thrown thrown thrown thrown thrown thrown thrown thrown thrown thrown thrown thrown thrown thrown thrown thrown thrown thrown thrown
Reference: or can you change the test to be more patient to see an expected value? do you know how often these values are currently being updated?
Candidate: is there a reason why we decided to throw an exception instead of calling <UNK>
Reference: please use "something <operator> null" convention
Candidate: should we use stringutils instead of events.
Reference: this is not a nice way of having it fail. if the data dir is not set it throws a nullpointerexception. i propose we catch that case and throw an
Candidate: i doubt that this is is a <UNK> but i guess that this is a relied from the caller.
Reference: no need for the brackets here, if you want to keep them then put the close bracket after the 0.
Candidate: minor: <UNK>
Reference: please remove or decrease log level to trace
Candidate: suggestion if (throwable == null) { return; }
Reference: this is a lot of chaining...
Candidate: you could use <UNK>
Reference: how is this related to the subject of this pr and/or overuseestimator? @champtar, could i please ask you to keep prs to a single, standalone subject? if you need to
Candidate: <UNK> whitespace
Reference: i know you've just used the same pattern as used before but could you please remove system.out and use log.warn instead? it would be great if you could also enhance
Candidate: could we add a sentence here instead of <UNK>
Reference: queryset is null
Candidate: use <UNK>
Reference: does that mean all javafile.writeto methods would now throw assertionerrors instead of ioexceptions? sounds bad.
Candidate: is there a reason that is not throw a exception
Reference: that condition seems redundant.
Candidate: this should be <UNK>
Reference: why don't you use the java 8 java.time.* apis here?
Candidate: @manuelplazaspalacio is finishing this
Reference: agreed on this statement. the catch could still result in an exception being thrown and unsubscribe having happened because it is a race. so we likely need a check inside
Candidate: we should throw an exception instead of wrapping an exception
Reference: this entire method is redundant. what you should do is implement updarteallinbatch(collection<t>) in massoperationgenericdao in a similar fashion to updateall(collection<t>) and then call it from there. there's no point in
Candidate: suggestion <UNK> = new <UNK> clazz, <UNK> <UNK>
Reference: if we are on time i18n is usually required from qe
Candidate: please use the enum?
Reference: stopped
Candidate: is there a reason for this logic?
Reference: please follow existing code style regarding spaces.
Candidate: you could use <UNK>
Reference: what is this semicolon doing?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i feel like a string.format would be better used in situations like this.
Candidate: should we throw an exception instead of checkargument
Reference: just curious, why does this method change to initial range first then full range?
Candidate: you could use a <UNK>
Reference: @ljacomet : i forgot to update this part in my previous pr. now, since calls to register() can be delayed we need to use completable futures to delegate the refreshing
Candidate: if you could move this braces around
Reference: no check needed since we throw an illegalargumentexception()
Candidate: why not we need to copy here?
Reference: probably should be on the data center level, same as we do for importstoragedomain
Candidate: please add a <UNK>
Reference: don't want to define a constant for this? ^
Candidate: you should use <UNK>
Reference: the lockclient can be in any state when calling deregisterinterest() and lease_expired event can only be received in has_lease state. i see we set the state correctly in discoveryservice but
Candidate: we remind me why we expecting referring to _after_ the
Reference: should this ever happen or is this an invalid state?
Candidate: nit: checkstate (throwable
Reference: i think "resolve" fits better with the other strategy names we have.
Candidate: use a constant for s?
Reference: since you have threadname same for both config classes, consider to change this name to exchangethreadpooltaskscheduler so that we can debug in server log if needed.
Candidate: this multimap is not needed
Reference: pull this out into common method.
Candidate: i we combine the tracking the tracking the middle of tracking the middle of tracking the middle of the middle of the middle of the middle of the middle of
Reference: i _think_ this is equivalent to writing one line at the beginning when(clientsupplier.get()).thenreturn(client).thenthrow(new ise("bad"));. this could help us avoid having to do numberofexecutions - 1 calls in line 98, which
Candidate: you could use <UNK> <UNK>
Reference: classname vs. classname is tricky. i would prefer a more distinct naming, e.g. rename member classname to injectedclassname.
Candidate: maybe use system.lineseparator() instead of <UNK>
Reference: hello @mcimbora , not sure if this code here is trying to "limit" the "delete field operation" only to fields that are generated by the data modeler? but this is
Candidate: @vilchik-elena you could use <UNK> here instead of <UNK>
Reference: is escape still needed here?
Candidate: you could move this to a local variable?
Reference: nit: consider simplify this: java for (boolean firsttry = true, int rawcnt = nonvolatilerawcnt();; firsttry = false, rawcnt = refcntupdater.get(this)) { if ((rawcnt & 1) != 0) { throw new
Candidate: i think we should be positive to positive positive positive positive <UNK>
Reference: these all use credit, perhaps you could use a mix of values for a little greater coverage?
Candidate: use <UNK>
Reference: can you add context here?
Candidate: you could use a string objects.tostringhelper() instead of <UNK>
Reference: i don't see why you can't have an overall precision/scale, calculated using the same logic you've already written, but just as a loop instead of just with the lhs and
Candidate: this getchildren is not efficient, you could use <?> instead of <UNK>
Reference: this does not throw
Candidate: if you could use <UNK>
Reference: instead of a list should this be a pair (keypair) of string, and rename the method as getuserkeypair() ?
Candidate: this to use <UNK>
Reference: i think that you should pass result._source as the new role content. or better yet, the content argument of this method, since updaterole really performs a replace.
Candidate: i think this should be a here instead of <UNK>
Reference: should we save the configuration without the repository before disposing of that repository?
Candidate: i think that the is right...
Reference: i would have this function just return an array of column indexes - rather than the specifiers. later on when we add more support we can do it there, rather
Candidate: this is not to be used?
Reference: cant you change this to null as well?
Candidate: again, <UNK> is not
Reference: if the description is sanitized on the constructor, i don't think this is needed anymore. just a simple return questiondescription will do.
Candidate: is there a reason for element?
Reference: as far as i remember there path separator used to be defined in reg constants .
Candidate: you can use a child arguments.
Reference: i don't know if you are aware, but assertions are only "turned on" for testing. in production this will be a no-op. if you consider this check to be mucho
Candidate: you could use assert that <UNK> suppresses tests.
Reference: is there more clean way to do it?
Candidate: <UNK> -> <UNK>
Reference: isn't there a test case missing? the original issue is about the case where the embedded list is empty? why is it "2" btw.? seems some parts of the original
Candidate: i think think we could use <UNK> instead of {}
Reference: you don't need to allocate a new set here: bookmarksinsertionmanager copies the contents.
Candidate: thanks.
Reference: indentation (consider using the eclipse ide to auto-format code). also, please import java.sql.timestamp and use here without package qualifier.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: suggestion: ((basecommand) mcommandlist.remove(indexofcommand)).freeresources();
Candidate: if you could use <UNK> <UNK>
Reference: division by zero if mass is zero. might want to put a constraint + log in the component
Candidate: please use <UNK>
Reference: would expect 200000 - possibly source data needs converting to microseconds?
Candidate: this should be a error.
Reference: or math.max
Candidate: is there a reason for this logic?
Reference: any reason not to do getblobinfo(blobid, null) directly? completeoperation() handles null callbacks anyway. similar question for similar functions.
Candidate: you could replace this with <UNK>
Reference: removing all blocks associated with this pack isn't a bad idea. when the system calls remove(dsfpackfile) we have a pretty good notion the pack file is no longer part of
Candidate: please use readasstring(...) instead of <UNK>
Reference: could you make this log message specific to glue? error messages are ideally unique in each class
Candidate: i think this should be a <UNK> <UNK>
Reference: double code, you should make index + height, segment.getunifiedend() a variable outside the condition scope.
Candidate: you could use a constant instead of <UNK>
Reference: if siteoid is null, you should not set any values at all. leave them as nulls
Candidate: is there a reason odd...
Reference: don't allocate a new byfebuffer like that. let's just use clonebufferarray() here as well for consistency.
Candidate: i doubt that this doubt that this is override the field names is selected.
Reference: might want to be smarter about this list of fields to return. we could look at the fetch hints and choose only the fields we need. bringing back in, out,
Candidate: is this correct?
Reference: i'm surprised that getrequestheader does not return an optional :)
Candidate: we should throw an exception instead of <UNK>
Reference: you can probably make this shorter - it's effectively string concat, right? it could probably be pulled out into a variable and reused, too.
Candidate: this readasstring(...) instead of <UNK>
Reference: don't you think messages would help here? "total connections don't match", "total available connections don't match"?
Candidate: you could use <UNK>
Reference: please use assertthat from hamcrest instead
Candidate: if you could use a <UNK>
Reference: you can probably check what is executed in the callback as well.
Candidate: you could use <UNK>
Reference: don't you need to check whether priority-1 is between 0 and nice_values.length - 1?
Candidate: this is a <UNK>
Reference: is this method just public for internal testing, or what?
Candidate: is there a reason for this change?
Reference: consider responding to the event with this error message as well so the user knows why they're not receiving headlines
Candidate: is there a a basic <UNK>
Reference: please precise permission required : "delete a non-main branch of a project.<br/>" + "requires the project administration permission"
Candidate: the error message message should be switched.
Reference: this test should also check that the commit revision mentioned in the message is as expected.
Candidate: you could use <UNK>
Reference: why not support string "true" and "false" conversion?
Candidate: is there a reason for this logic?
Reference: can you please explain this null? it looks very strange to put value under null key in map and i'm afraid it would bite us later.
Candidate: why not use <UNK>
Reference: here you are taking default visualizer. technically it's not good: you should first use visualizer defined on the property and if it's returning null for filter - get filter from
Candidate: you could use <UNK> instead of <UNK>
Reference: it's a good point. we realize that context is very overloaded right now and we're planning on refactoring in the future.
Candidate: we could use <UNK> to <UNK>
Reference: variants of this uri building are repeated in this class. could you centralize this logic into a shared method or member? during initialization of this class it seems we could
Candidate: i am not sure how about replacing the old versions of received, i am not sure how about pulling this way? is off.
Reference: if you invert this if and throw, you can save one indentation level for the rest of the method
Candidate: is this possible? we could use baseurl baseurl baseurl baseurl instead of >= <UNK> >= <UNK>
Reference: please use username as the object for the method invocation.
Candidate: this is not log the log.
Reference: i'm not getting this bit, unless getstate somehow causes the instance to change its launch time. this should not affect anything. the change is still harmless though.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: so in case of error: * we're returning to the workspace list anyways * the error message appears there? however in case of workspace save error or service panel save
Candidate: is there a reason for this test is not <UNK>
Reference: assign values to constant variable
Candidate: use <UNK> instead of <UNK>
Reference: remove this?
Candidate: please use <UNK>
Reference: here is an alternative: commonmetrics constructor takes an instance of metricregistry. in the production code, it is constructed using guice. in test code, simply new the instances you need without
Candidate: rename to
Reference: using a for does not make any sense to me. with that code it's impossible to have several parameters, like map<string, integer> for example.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: please use stringutils.isblank here to avoid npe
Candidate: you could use a string instead of <UNK>
Reference: either use assert ctx.isoriginlocal() : "there's ..." or throw new illegalstateexception(...)
Candidate: can we use a constant?
Reference: why not? i did it.
Candidate: this could be simplified to (string (string % (string (string <UNK> = (string <UNK> (string <UNK> (string <UNK> (string : (string (string (string (string <UNK> (string (string <UNK> (string (string
Reference: what would happen if some of the ids are found and others are not, would it still work and returns the ones that were actually found or throw an exception?
Candidate: i'm not sure how about the sure that this is is not but i guess that this is is the <UNK> completes the
Reference: why not suggestion for (allele : alleles) {
Candidate: you could use <UNK>
Reference: check formatting couldn't you use attributeutil for this?
Candidate: this is is designed to be a <UNK> <UNK>
Reference: can be written as drepresentationdescriptor.class::cast.
Candidate: this should be a <UNK> baseurl
Reference: do we need to worry about the in clause limit here?
Candidate: use utf-8 instead of <UNK>
Reference: unchecked cast
Candidate: is there a reason for this class level instead of <UNK>
Reference: i've noticed a lot of small formatting errors like this. instead of nitpicking over each one, i think letting your ide auto-format the classes you've created should cover most of
Candidate: i think this is duplicated pr, but i guess.
Reference: this method is used from the udpinboundchanneladapterparser as well. therefore outbound word here isn't correct. the change should be reverted.
Candidate: please use a string concatenation instead of <UNK>
Reference: the test should check for existence of a metadata-related user-friendly message.
Candidate: please use readasstring(...) instead of <UNK>
Reference: this test doesn't pass. maybe with just don't have any partition to migrate? sorry, i'm not familiar with the subject...
Candidate: wait.forelementclickable() should be <UNK>
Reference: hello, this will restrict only enums to be appended from a collection, a list of other types (e.g. collection of integers or strings) will be ignored. this filter should be
Candidate: this is not be referring to the <UNK>
Reference: same here, why do we need this?
Candidate: is there a (can be a mock that the <UNK> is be encapsulated in the <UNK>
Reference: why don't you push this down to logdata::getpayload ? (since that's when deserialize is actually invoked)
Candidate: why not use a config, instead of validating statements.
Reference: please reverse contract change.
Candidate: this should be <UNK>
Reference: minor: not sure if this needs to be a function of its own
Candidate: can you use <UNK>
Reference: s/repo/repo.getdirectory()/
Candidate: this is not efficient, we could be a here as well.
Reference: not sure, should we try to emit onfetchresponsereceived before those return statements?
Candidate: is there a reason for this is not <UNK>
Reference: obtain through object graph, which would eliminate the need for a null check.
Candidate: you could use <UNK>
Reference: i think more checks are needed indeed, because rb.iscompatiblewith0() uses this check as a short cut to determine compatibility. alternatively, interface checks would need to be added to rb.iscompatiblewith0() just
Candidate: please use <UNK>
Reference: this should equal the subcommand used to normally invoke this program, e.g. label create.
Candidate: this is right...
Reference: root could be handled the same way as any other graphqlcontainer - then you wouldn't need instanceof here - and you could commonize the logic to determine if pagetotals was
Candidate: should be be null?
Reference: how about making the interval configurable via a system property?
Candidate: if we is gone calculator to drain if drain calculator but drain i am not sure that we want to drain
Reference: don't we need to destroy connectionfactory and template in the end of the test as well?
Candidate: you could use a assert that <UNK>
Reference: use a static precompiled pattern here.
Candidate: suggestion if <UNK> == null) { return; }
Reference: ah... we should not add suffix to static library. but i looked at the code and found no good way to only apply linkedartifactnamesuffix to dynamic library in cclinkinghelper. looks
Candidate: why not use <UNK>
Reference: if the attributes types are null for both, i would compare other fields of the attribute then
Candidate: use <UNK> instead of <UNK>
Reference: unsubscribe should be realized only from ondestroy on fragment
Candidate: this should be to be <UNK>
Reference: is there a risk of there being more than one source with the requestedsourceid? should this case be handled (e.g. log something)?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this shouldn't throw an exception - that will completely interrupt the kickall. instead, onlineplayer.kickplayer(kickreason) should only be called if the player does *not* have the essentials.kickall.exempt permission.
Candidate: this is not <UNK>
Reference: formatting. and what is wrong with using getloadedcube? it's shorter, and more readable.
Candidate: this should be named <UNK>
Reference: you might also want to look at wenhung's recent changes that were merged for chaining futures. it could make this code a little easier to read.
Candidate: this is designed to be <UNK>
Reference: must write "length" bytes, like this.buffer.writeto(this.outputstream, 0, length); packet max size is set in variable maxpacketsize (server option max_allowed_packet). if sending more than this size, database will close socket.
Candidate: we could use a constant instead of <UNK>
Reference: calls to restartcommcare shouldn't be delegated through an instance (like _()) because it is a static method.
Candidate: please use <UNK>
Reference: runtimeexception?
Candidate: this is not to be a <UNK>
Reference: this should have a check that there does not exist a pin reset request yet (see remark about test). otherwise it is stil possible to bruteforce the code the other
Candidate: wait.forelementclickable() should be <UNK>
Reference: i agree.
Candidate: if you should use <UNK> annotation, annotation, but the is not set in the
Reference: customfiledownloader
Candidate: ![critical](<link_1> 'severity: major') invoke method(s) not throw an exception exception. [![rule](<link_2>](<link_0>
Reference: i think teamcity is complaining about the exception which is never thrown.
Candidate: could you please use <UNK>
Reference: instead of setting mprivatednsrouteset even if the operation failed, you should probably do: try { inetaddress inetaddress = inetaddress.getbyname(addrstring); if (dbg) log.d(tag, " adding " + addrstring); if (networkutils.addhostroute(minterfacename, inetaddress)
Candidate: i think that this is is not efficient, we should have to to the <UNK>
Reference: you're using .json all over the place can you pull it out into a constant
Candidate: i pagelogging
Reference: this is already done by super. afaik you then also don't need the change in streamsink.
Candidate: you could use <UNK>
Reference: if by 'res' you mean 'result', why don't you just put this name directly?
Candidate: you could rename this to <UNK>
Reference: while i realize this code isn't new in this pr, can we take this opportunity to improve the log statement here? i think this should say something like: log.error("error looking
Candidate: log the exception
Reference: this doesn't check any invariants.
Candidate: minor: this method arguments.
Reference: nit: this is always true.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: can we delegate the check to the recenthistory class instead? i mean the history can answer on the question: "did we have events that were originated with this command?" if
Candidate: is there a reason for this logic?
Reference: is it normal to ask for an auditlogger and cast it to an auditbackend?
Candidate: should we use <UNK> here thanks!
Reference: isn't there a static final variable somewhere that corresponds to that tolerance?
Candidate: this args?
Reference: why do we need to make this method final but not the rest?
Candidate: this is not efficient, we could use <UNK>
Reference: could you not write over method params and create separate variables instead?
Candidate: you could use <UNK>
Reference: how/when is refresh handled?
Candidate: can we use a way?
Reference: max 2 returns in a method
Candidate: is there a reason for this method is not <UNK>
Reference: can we use logger ?
Candidate: i think that the "?" description is not <UNK>
Reference: i know sonar will flag this for not having the {} around the block. this can be tricky to read the logic coming back at a later date.
Candidate: this should be <UNK> to <UNK>
Reference: s.o.
Candidate: <UNK>
Reference: i've always been a fan of if (o == null || getclass() != o.getclass()) for this. every equals implementation is ugly, but at least mine bails early if the subtypes
Candidate: use objects.equals
Reference: do not use printstacktrace() - use logger mechanism.
Candidate: you should use a string instead of <UNK>
Reference: <link_3> will work as well
Candidate: this is a bit more than <UNK>
Reference: this can be done once, before calling dowith() rather than for each method.
Candidate: use <UNK>
Reference: @neykov tests pass for me too. is your stack trace from the client or server side?
Candidate: could we print the stack trace
Reference: the || !storeexists part is covered by the needsrebuild = !storeexists; further up, is it not?
Candidate: is there a reason for element?
Reference: why not just return false here?
Candidate: this is is designed to be 'final'
Reference: what does languagebatchinput.tostring() look like?
Candidate: log.debug maybe?
Reference: final (or maybe consider dumping the variable completely)
Candidate: why not use <UNK>
Reference: these values are always tough to predict, why not make it configurable? also, is 10 secs meant to ensure we don't time out? if so, how close do we usually
Candidate: this readasstring(...) instead of <UNK>
Reference: what is the difference if othersecret is null ?
Candidate: minor nit : <UNK>
Reference: final
Candidate: fyi, you could use a constant instead of <UNK>
Reference: return new formulashifter(... is fine. no need to store the returned value in instance.
Candidate: is there a reason for this logic?
Reference: rpc/core api is not consistent with opposite method sponsormember().  sponsormember(userid,userid) removesponsor(memberid,userid)  @licehammer do we really want it that way ? when params are named the same (sponsored/sponsor) ?
Candidate: you could use <UNK> here instead of: '+'
Reference: is there a reason you changed the units? the values are the same so not sure if there is a reason.
Candidate: you could use <UNK>
Reference: suggestion return "<link_1>";
Candidate: you could use a constant here instead of <UNK>
Reference: @thejanw what if users want to point to api hosted elsewhere than http://localhost:8764 ?
Candidate: is there a reason why not required?
Reference: can be static
Candidate: this is not return <UNK>
Reference: < -> <=
Candidate: nit: we could increment checkargument here too?
Reference: no need to check evidence type any more
Candidate: this is designed is designed to be a <UNK>
Reference: is this even possible? if it is not set we will use the default, right? or maybe don't touch defaults here, just set the value in the optionsbuilder if it
Candidate: suggestion <UNK> = <UNK>
Reference: lets avoid the context switch and locking. either we 1. totally remove the synchronized - and go to vdsm if don't have the answer, taking into account that a mass
Candidate: you could use a constant here instead of creating a new <UNK>
Reference: again rename variables & error logs here. "owningcommunity" should be "parentcommunity"
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: like above, line too long
Candidate: nit: spelling
Reference: this synchronization seems unnecessary?
Candidate: is there a reason for this method is not
Reference: why call getendpointsuffix again?
Candidate: is there a slight reason to check that the fragment is null?
Reference: update logging format.
Candidate: i think we should be a warning instead of e.getmessage() instead of the error.
Reference: are you sure that the ordering will be correct? i think it will order wrongly for the following schemas: "1.0.2" "2.10.3" "10.0.0"
Candidate: if you could use <UNK> here instead of <UNK>
Reference: equalsignorecase
Candidate: use stringutils
Reference: ok, i got it. yes, it look like it's obsolete in the meantime.
Candidate: no, static?
Reference: i know we have been inconsistent, but usually use illegalargumentexception on parsing as state is something that could resolve, and this won't.
Candidate: minor nit: could be replaced with <UNK>
Reference: can you keep this method and also create a method "active" as alias which uses this method?
Candidate: i think that this is is not to log the
Reference: suggestion bean.setsourceset(new hashset<>());
Candidate: stream()
Reference: looks like mutabletuplebuffer needs replaceint() etc., analogous to putint() etc.
Candidate: nextvalueindex should not be a <UNK>
Reference: there seems to be a bunch of unneccessary manual work (decoding the wkt, creating the projection file, etc.) going on here. can't you just copy all the test data to
Candidate: it's going to to reduce logic.
Reference: i don't see this brickid getting used below. can "hashset<georepsessionstatus> statusvalues" be formed here itself?
Candidate: should we use a constant?
Reference: if i'm not wrong there is a race condition here, where multiple concurrently committing threads can hit this at the same time. if so, we can underestimate the last written
Candidate: this is be <UNK>
Reference: class doesn't exist
Candidate: this should be <UNK>
Reference: double ;;
Candidate: suggestion <UNK> <UNK>
Reference: can we put this in a place where we have defines?
Candidate: please use <UNK>
Reference: this.
Candidate: wait.forelementclickable() should be <UNK>
Reference: static import
Candidate: you could use a constant here instead of <UNK>
Reference: error->not_found.
Candidate: use <UNK>
Reference: so , here it is expected that limits are pushed only when pushdownsort is explicitly set by the user in the request.. while in rowbasedgrouperhelper it will happen automatically if
Candidate: same here:
Reference: you have issetx() on all jaxb generated properties (which is equal to action.isforce() != null )
Candidate: is there a reason for element?
Reference: nit: this.cachevalidationenabled = requirenonnull(cacheconfig, "cacheconfig is null").isvalidationenabled();
Candidate: why not we use <UNK>
Reference: isn't it text/plain?
Candidate: you could use repelaced by a userreportingsettingshelper call.
Reference: can't we just do a "break" here instead of using the label?
Candidate: is there a reason for this method is empty?
Reference: check if null if not raising exception?
Candidate: please use <UNK>
Reference: nit: enumset.of
Candidate: this is designed to be a
Reference: it might be good to have a small delay in here, i've had similar assertions fail in ci because of timing issues (see 82d0d280078cb10ec043c544c9cd7e3d8dea6b02).
Candidate: log.debug -> <UNK>
Reference: instead of using a separate e.printstacktrace(), i would add the exception to the logging statement, so it all comes together as one: suggestion log.warn("exception in finally block - this may
Candidate: suggestion <UNK> = <UNK>
Reference: i really don't like this. there has got to be a better way to resolve this issue.
Candidate: explained explained explained explained explained explained explained explained explained explained explained explained explained explained explained explained explained maybe?
Reference: what about the case when there is a single call that is active and this hangup method is called? in this case, we will call hangupforegroundresumebackground instead of hangupforegroundresumebackground. in
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: you should create engineerror (and use high value > 5000) for each exception you want to throw in a command, and throw engineexception with this key this way it would
Candidate: pls replace "if" with <UNK>
Reference: at the beginning of the class: string tabselector = "a[rel=%tabname%tab']"; in the selecttab method: webelement tab = waitforelementbycss(tabselector.replace("%tabname%", tabname.tostring()));
Candidate: nit, we could use only: <UNK> <UNK>
Reference: it seems like this method never returns false.
Candidate: use <UNK> sizes
Reference: extract variables for targets.target(targetrange.from) and targets.target(targetrange.to - 1). you could name them firsttarget and lasttarget, for example.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: same here. you get the idea! there are a couple more occurrences after that.
Candidate: you could use a multimap
Reference: - why postsetup isn't called from applyinlinedeployments - should we use pushinlinedeployments here ? - use of deploycontrib with a test bundle
Candidate: why postsetup isn't called from applyinlinedeployments - should we use pushinlinedeployments here ?
Reference: nit: this could be also event()
Candidate: please use <UNK>
Reference: this is just crazy :-d i thought that ++i is used only on tech interviews to confuse candidates
Candidate: is there any reason to throw an exception?
Reference: as you've mentioned, this changes the default behavior for all images >= 26 to force srgb instead of leaving inpreferredcolorspace at the default null value. however, this change also means
Candidate: should we use <UNK>
Reference: ozone_scm_datanode_id_path_default is now a constant as it is not configurable. we should move it to ozoneconsts.
Candidate: i think this is be optional?
Reference: what's happening here? weren't all the dependencies already copied to hdfs?
Candidate: you could use a try-with-resource here instead of creating a new object
Reference: you should be able to move ipart and jpart up in to their respective loops and avoid a bunch of extra calls.
Candidate: could be simplified here instead of objects.isnull
Reference: i don't think you need to declare the variable here. either move it to be a class variable or move it inside the if statement.
Candidate: this is a bit strange, if (trace) { ... }
Reference: it is preferable to use doi.parse(value) since it adds a bit of cleanup and you don't need to catch the ilegalargumentexception. <link_0>
Candidate: please use uri.create
Reference: i think we should sort outside the loop since then we only have to do it once
Candidate: you could use braces around nesting.
Reference: shall we just remove this line-218 ? since mongorules.isitem indicates that it only works for item
Candidate: '+'
Reference: it's recommended to use builder pattern for the sake of readability. i.e.  new alertdialog.builder(...) .settitle(...) .setmessage(...) ... ;
Candidate: you could use <UNK>
Reference: do you mean !misroaming && !mforcelowbandwidthifroaming here instead? since mforcelowbandwidthifroaming will always start out as false, right?
Candidate: is there a reason for this logic?
Reference: it might make sense to modify the usage of this cache. transactors that have timed out should only "not exist" for all transactions before the starttime of the timeout. for
Candidate: this is not efficient, we should use objects.isnull
Reference: i guess that instead of null == deletedonsecondary && deletedonsecondary the it should be null == deletedonprimary && deletedonsecondary, right? or deletedonsecondary != null && deletedonsecondary.
Candidate: minor nit, but we shouldnt this be <UNK>
Reference: there's a lot of logic in this method which will make it hard to debug in the future... why wouldn't the following below work? and have any management of currentwork,
Candidate: i think this should be a firing the <UNK>
Reference: would the error be easier to understand if it said something like "can only call set and get methods for call state when using a single callcontext" at present, it
Candidate: this should be a <UNK> <UNK>
Reference: i don't think we should send a message here, if the foodlevelchangeevent was cancelled, then we should simply not consume any hunger points. the wind staff itself did not fail,
Candidate: please rename <UNK>
Reference: oops, i meant only the accessors in the abstract chat message class to indicate that they should not be overridden. could you undo all of these except for the ones
Candidate: unsupportedoperationexception aforementioned annotation, please.
Reference: can't we do something a bit better here?
Candidate: you could use a <UNK>
Reference: not necessary.
Candidate: i'm not sure how about the sure about the sure that this is is the <UNK> completes the <UNK> completes the <UNK>
Reference: if it shouldn't be possible to store an application without a slug then this abstract implementation should have control over it and not rely on an implementation calling this method.
Candidate: @gunnarmorling you could use only: <UNK> instead of <UNK>
Reference: do we need logging in tests if we don't actually check the values?
Candidate: this should be <UNK>
Reference: i'd collapse this logic into the span namer.. ex.  java if (this.name != null) return this.name; return spannamer.name(this.delegate, "async"); // last param is the fallback on default;
Candidate: you encoder's "_" is a <UNK>
Reference: externalize string
Candidate: why not use <UNK>
Reference: i think it's slightly clearer to use utils.containsnonull here
Candidate: <UNK> -> <UNK>
Reference: i'd reconsider the withresponse calls. i thought we added this to encompass all use-cases, but i don't expect usual devs to care about the http response.
Candidate: i collectionutils typed collectionutils collectionutils collectionutils collectionutils collectionutils collectionutils collectionutils collectionutils collectionutils collectionutils collectionutils collectionutils
Reference: please use usertrade.builder here
Candidate: <UNK> -> <UNK>
Reference: this should be computed outside of for loop just once.
Candidate: use stream()
Reference: we may need to remove ozonebucket#addacls api as it is the legacy impl based on bucketmanager#setproperty. when we switch it to use setacls(), the existing acls are not preserved correctly.
Candidate: nit: use assertions here instead of:  this(name, <UNK>
Reference: pass the access token, and the use the id in the callee.
Candidate: rename to <UNK>
Reference: isn't this test supposed to test the behavior of the shardconsumer on failures when executorservice is not able to handle the submissions of runnables? testing multithreaded behavior in unit tests
Candidate: is there a way to be corrected here instead of <UNK> corrected ?
Reference: optional: remove "debug" in print statement.
Candidate: you could use a constant instead of <UNK>
Reference: nit: can we add the mount id, and maybe the mount path in this message?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: probably should have renamed the variable to "idoruuid" to make the code more readable
Candidate: minor nit: we could use a constant instead of <UNK>
Reference: i think we want to make sure that the line numbers are copied over correctly.
Candidate: you could use <UNK>
Reference: java8-isation [foreach][optional][flatmap]
Candidate: you should use <UNK>
Reference: change to false? (or not set it?)
Candidate: use <UNK>
Reference: @dankraw i remember that you wondered about concurrency of this task. imo we should try to parallel this stream because when we have 500 topics and each metadata download takes
Candidate: i'm not sure that this warn is not correct.
Reference: please turn these into constants and reuse these constants in the rest of the test.
Candidate: this is not belong to the
Reference: you can just put getabridgedconfigpath here, and then call the field "title" in createconfiggui. same thing with modid really. example: <link_0>
Candidate: this is a <UNK>
Reference: i would prefer this to become scriptconsole.getactive().addactiveconsoleobserver(). this would allow observers to be per console and not some shared data.
Candidate: rename finishing to
Reference: should this be done partition-wise?
Candidate: you could use use objects.isnull
Reference: ![blocker](<link_0> 'severity: blocker') close this "bufferedreader" in a "finally" clause. [![rule](<link_1>](<link_2>
Candidate: use <UNK>
Reference: can this be false? if so, should we retry this check for it to be started
Candidate: this close() is non-trivial
Reference: this class is public, you need to make the change backwards-compatible.
Candidate: this should be set?
Reference: we should probably make the "3" into a constant, since we are using it in multiple places.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: nit: missing space between if and (
Candidate: this is be explained to <UNK>
Reference: does this delete necessary?
Candidate: i understood that the future: we could use <UNK>
Reference: this can be reverted back to being private
Candidate: please remove the
Reference: good candidates to use builders?
Candidate: rename to
Reference: what is the problem that your addressing here? should this instead check for null _theaction, since the below _theaction.equals(txcontrol) check already handles the null txcontrol case: else if (_theaction ==
Candidate: you could replace this by: by: <UNK> by: <UNK> <UNK> { ... }
Reference: then consider to leave old constructor and add new one below
Candidate: i think move this label?
Reference: duplicate load of the file?
Candidate: is there any reason to catch non-null?
Reference: shouldn't we also be doing executorservice.shutdown() here as well?
Candidate: is there any reason to be implemented in the <UNK>
Reference: why it was not needed and now you copy it over and over again?
Candidate: you could use <UNK>
Reference: maybe a linkedhashset to preserve order.
Candidate: you could use <UNK>
Reference: this formula assumes no correlation between partitioned-by columns, right?
Candidate: why not be public?
Reference: bad variable name getvdscertificatesubjectresult
Candidate: i think that this itunes 'if' clause. readable: the clause. readable:  if <UNK> {
Reference: maybe there are other tests in that vein? the basic idea is to try to trick the planner into producing an invalid plan. i'm also curious about several levels of
Candidate: you could replace this with <UNK> with <UNK>
Reference: this stub will be called multiple times per table as it is invoked by several methods in injectablebehaviourobjectstore. need to increment the count only if encounter a new table.
Candidate: this is >= <UNK> >= <UNK> >= <UNK>
Reference: is there a better method to get the header without leaving an open file handle?
Candidate: you could use a pair instead of replacing a hard-coded with <UNK>
Reference: can use objectdoublepair here and similar methods for better performance (one less object boxing).
Candidate: i rebuilding this qualifier rebuilding qualifier types? qualifier
Reference: use log.error or warn
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: getrefs skips dangling symrefs, so r.getobjectid() should never be null. this could error out: objectid id = r.getobjectid(); if (id == null) { throw new assertionerror( string.format("getrefs returned unresolved ref
Candidate: nit: <UNK> == null) { <UNK> = <UNK> }
Reference: maybe you like this code better to create config instance:  import static io.digdag.client.digdagclient.objectmapper; config static newconfig() { return new configfactory(objectmapper()).create() } ... import static xyzutils.newconfig; return newconfig() .set("host", "foobar1.org").
Candidate: you should use <UNK>
Reference: isn't it exactly the same as #836?
Candidate: this is be repelaced by <UNK>
Reference: @qqmyers i don't think we talked about this updateidentifierstatus method. was it simply unused?
Candidate: this is eating the exception is not thrown by <UNK>
Reference: add a partition with a later time, that doesn't get deleted.
Candidate: you could use <UNK>
Reference: suggestion for (final infoitem item : relateditems) {
Candidate: this is not <UNK>
Reference: essagequeue.registerbankaccount_pushmessage
Candidate: this is a <UNK>
Reference: @vmaletta replace 8264 by termid.seed_amount_g in all tests
Candidate: please use camelcase
Reference: how about logging a warning to use the new name instead of the old one?
Candidate: you can use a constant here instead of creating a new <UNK>
Reference: looking at the original implementation, it appears like operatorcontext may be null (if (operatorcontext != null) below). i assume this code will crash with npe in such a case. if
Candidate: this is designed to be a <UNK>
Reference: couldn't we just get the prototype directly from this? javascript () => object.getprototypeof(this).m;
Candidate: you could use <UNK> instead of <UNK>
Reference: should this go into the "mutliaspect" ? aspects that resolve to null will string to "null", is that the expected behavior?
Candidate: <UNK> multimap
Reference: i looked up many web pages/blogs which discuss "removing an element from hashmap while iterating over it". all of them suggest one common method i.e. using an iterator. i saw
Candidate: please remove this
Reference: do we need to throw and log? can we have this message include the message above?
Candidate: is there a reason that is is not to be a
Reference: @jdotcms please instead of a debug let's change it to error, if we are trying to register something with osgi and we can not do it we want to be
Candidate: this is deserve a <UNK>
Reference: successfully wrote header
Candidate: use <UNK>
Reference: just put all this part in if (action.issetregistrationconfiguration()) block and save repeating this condition in each method again
Candidate: no need for the sake of the sake of the sake of the sake of the sake of the sake of the sake of the sake of the sake of
Reference: @lautarobock let's assign new opt.empty statement into an else block instead of initializing the variable here. that way we can a) declare valid as final, and b) avoid instantiating opt.empty
Candidate: @antonini please use <UNK>
Reference: final
Candidate: you could use only: <UNK> multimap
Reference: i would prefer doing all the onpollready() on operation arrival in operationcontroller and passing in the readyforpollcallback only when required (i.e. getbloboperation and chunkfiller).
Candidate: is there any way to be used?
Reference: this uses the platform default character encoding. it's good to be explicit, so please use publiccertificate.getbytes(standardcharsets.utf_8) instead.
Candidate: <UNK>
Reference: why do we need to apply transactions for select statements?
Candidate: could you use system.lineseparator() instead of <UNK>
Reference: use joinurl instead of confirmationurl ?
Candidate: should be simplified to <UNK>
Reference: we should probably only catch the thrown exceptions and not all throwables here.
Candidate: maybe move this to <UNK>
Reference: should the default value of timestamp be -1, to be consistent with the keyvalue class?
Candidate: is there a reason for the sake of these two kinds of these kinds of 4 lines of 4 lines depending on the
Reference: @carlspring would say indentation :p
Candidate: this is a <UNK>
Reference: i normally static import the assert classes for improved readability, is there a reason you didn't do this here?
Candidate: i'm not sure how about this issue?
Reference: same here with the tz check
Candidate: how about using <UNK> properties?
Reference: this can return null
Candidate: use stream() here instead of "\"" + joiner.on("\", <UNK> -> <UNK>
Reference: block1.getsize() < status.getcurrentsize()  if the blocksize is changed only at the begin, i guess, these checks will have the same result as the above test. if the blocksize should
Candidate: why not discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded
Reference: assertequals(excpected, actual)
Candidate: assertequals(excpected, actual)
Reference: ditto about exception or letting checkpoint coordinator know, that this checkpoint was declined. otherwise, aren't we risking a situation where this checkpoint will complete, despite this operator not participating in
Candidate: you could use a <UNK> ![image](<link_0>
Reference: nit: move the left brace to the next line, otherwise the check style will complain :)
Candidate: i think that this is not efficient, but i guess we should highlight the highlight highlight highlight highlight highlight highlight highlight highlight highlight highlight highlight highlight highlight highlight highlight highlight
Reference: can we flatten this into an &&
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: any reason you want to traverse thru the actions here rather than thru the map's entryset. that way you can also just traverse thru the actions just once, lookup the
Candidate: should we print the stack trace instead of printing the
Reference: when converting cursors one should be able to convert any timeline, not just active ones
Candidate: i catches the exception causes catches the exception condition?
Reference: suggestion private void persistandrunjob(jobgraph jobgraph) throws exception {
Candidate: is there a reason for this method is not
Reference: what if throwable or exception are catch. java try { connection conn = drivermanager.getconnection("jdbc:mysql://prod.company.com/production"); } catch(exception e) { e.printstacktrace(out); }  i would added parent exception classes. this will introduce
Candidate: is there a reason to check that the is not empty?
Reference: when we have a .get with no ispresent check, i think that's a good idea to explain why the value will always be present and do something like this: java
Candidate: @manuelplazaspalacio i think that clear() is submits the tracking the presenter.
Reference: could you use failed() here?
Candidate: throws exception exception
Reference: shall we print something such as "default close method is invoked! no operation is executed." that can give user some hints.
Candidate: this should be a <UNK>
Reference: switches?
Candidate: is there a reason for this logic?
Reference: wrap this with try-catch and return mono.error() if there are any exceptions. for reference, see other async clients.
Candidate: you could use <UNK>
Reference: i think you meant shouldshowwidgetpromo()?
Candidate: i think this is not <UNK>
Reference: i agree, looks like it is meant to be the child.
Candidate: you could use <UNK> to <UNK>
Reference: nitpick: you don't need the profilestr.length() here. to take substring from given index till the end, just use [string#substring(int)](<link_0>
Candidate: throw an exception instead of <UNK>
Reference: check for non-null?
Candidate: @vilchik-elena we could use <UNK> instead of catching the exception
Reference: generally the logic looks ok, but it's a bit complicated. if i were you, i would: 1. use collectors.partitioningby to create two lists out of alldiskandsnapshots - one with diskimage
Candidate: you can use <UNK>
Reference: why do we need this part?
Candidate: you could use <UNK>
Reference: are we sure about this? what if termination is triggered during backup?
Candidate: we should throw an exception here instead of wrapping an exception
Reference: what about reading in parallel? i don't know if that would optimise things since kafka consumer already pre-fetches data, so that when calling poll the data is already available. what
Candidate: minor cr
Reference: probalby objects.equals can be more safe to apply in case reassingmentsinfo is null at some point
Candidate: this is be simplified to objects.equals()
Reference: this should only be set up once, in the activity. (both lines)
Candidate: suggestion <UNK> = <UNK>
Reference: suggestion: maybe add a stored procedure or change the getallforvm to also filter disks by storagetype
Candidate: is there a reason why not assigning this method to <UNK>
Reference: ...**if** one or more...
Candidate: is there any reason for this change?
Reference: checknotnull should be the first line of the method
Candidate: you could use a checkargument here instead of <UNK>
Reference: why don't you check this in the setteststate method, so that is done only in one place? anyway this should not be possible, because once you get a timeout, you
Candidate: this should be to be a trace, since the is not the trace, that will be printed at the time.
Reference: i think this method would be more readable if it checked for instanceof lockrequestfornewsegment first and then !datasource.equals(request.getdatasource() as separate checks that return false (i.e., the cases that will never
Candidate: you could use the exception instead of <UNK>
Reference: is object needed here? seems like its using a long everywhere (and could presumably be converted if not)
Candidate: this is not <UNK>
Reference: enclose if-else blocks within { } even for single statements
Candidate: you could use braces around
Reference: date now = new date() might be better name for it.
Candidate: this is designed to be a here instead of creating a new <UNK>
Reference: i am not so happy for opening this class so much.
Candidate: i think this should be a firing <UNK> to the discoveryresult future.
Reference: merge if statement: if (path != null && !xmlutils.exportxmlfile(selectionxml, path).isok())
Candidate: you could use a constant here instead of <UNK>
Reference: mention the reason here, why catching inflation exception is necessary here.
Candidate: you could use the guid instead of <UNK>
Reference: should we be logging here?
Candidate: you could use a local var instead of <UNK>
Reference: this should escape the column names if they contain illegal sql identifier characters.
Candidate: nit: you could use foreach loop here instead of <UNK>
Reference: not the most informative debug message.
Candidate: you could use <UNK> here instead of '+'
Reference: please keep as field, easier to find there (maybe just for me :wink: )
Candidate: how about marking this is used?
Reference: (nit) trailing whitespace [and likewise below]
Candidate: you could use a constant instead of the prefix?
Reference: i noticed that there are some-times non-ascii characters embedded into the docs, could you look for these at this point and fail if this happens so that we do not
Candidate: is there a reason for this logic?
Reference: why do we throw ioexception here?
Candidate: i think we could be a lock here instead of creating a new connection, since it will be a performance bottleneck. consequently, in the
Reference: nit: same here suggestion log.error("user [%s] had role [%s], but role object was not found.", user.getname(), rolename);
Candidate: let's use a constant here instead of <UNK>
Reference: the check is correct- but i think that the error message is too specific (covers just the case of templates)
Candidate: if you could be simplified to <UNK> view?
Reference: you don't have to throw internalerrorexception in any of these methods :)
Candidate: please add a enum please.
Reference: this is strange imho because it forces the caller to keep track of who might have called this method before it. kubernetesdeployments is used in quite a couple of places.
Candidate: no need to log here
Reference: same as above about the unnecessary storing of the local variable convertedstreamrecord
Candidate: this is not to be called in <UNK>
Reference: the checkout already nulls the inode
Candidate: please use <UNK>
Reference: not before i exhaust my command of soql. :)
Candidate: no, we don't have to separation of <UNK>
Reference: suggestion logger.error("updating remote repository failed",e);
Candidate: can we use <UNK>
Reference: 0?
Candidate: log.debug
Reference: wrap whole method to mono.defer?
Candidate: suggestion if <UNK> == null) { <UNK> = new <UNK> }
Reference: i would inline count
Candidate: is there a reason for this?
Reference: case 409: exception = new illegalstateexception(exception.getmessage(), exception); break;
Candidate: you should throw an exception exception
Reference: should we really use such a high number? if i understand correctly, hbase's own system tables use 200, so i don't think we should go above that.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why are we throwing an unsupportedoperationexception if the hashtag is not set and not another type of exception?
Candidate: is there a reason to be represented instead of <UNK>
Reference: we should used: stringutils.containsignorecase(url, "_format=json")
Candidate: is this a bit strange to <UNK> this is a <UNK> that is not set?
Reference: i don't think we need this here, only in urlparambuilder.
Candidate: you could use a constant here instead of <UNK>
Reference: is the first part of the test required? "if (!olf.rafclosed" it sits below an assert that in order to pass must be true.
Candidate: no, we can just "return true"
Reference: does assume work here, so it is not duplicated across all the tests?
Candidate: this is a
Reference: could be discover a better word but not sure.. apart from that, why are we trying to query 10 times if we are able to get an answer from k8s
Candidate: i'm pretty sure about retrying that we could have to retry be?
Reference: why is this second condition necessary?
Candidate: nitpicking: we use braces around single line blocks
Reference: throw new illegalargumentexception("when filtering with regular expressions, " + "the path must be a directory and leverage glob syntax. usually " + "the folder path needs to end with '/*'.");
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this worries me. i think item 5 is a **bit** ambigious, since arraylist **is** a list, though i think your interpretation is more plausible. but, since stringparameterinjector.extractvalues() returns a hashset,
Candidate: i think this is not <UNK>
Reference: i believe this was a class-loader hack that we needed for kafka, it may not be necessary here.
Candidate: you should use a exception instead of <UNK>
Reference: should be f
Candidate: you can use <UNK> here instead of creating a new object?
Reference: is it necessary to null out dbexecutor? won't it be garbage collected when the enclosing imagegallerycontroller is garbage collected?
Candidate: i think we should have to refactor, we should have to listener.
Reference: repated, too many bases
Candidate: use
Reference: file a good first issue?
Candidate: can we use a constant instead of download <UNK>
Reference: why not just use fixture?
Candidate: is there a reason for this method to be null?
Reference: setcommit takes a capital-b boolean, so no need for this check, if it's null it'll just set to null.
Candidate: if this is is not
Reference: not only that, but i think there is something wrong further down: java subject = restrequest.getsubject(); authorization = restrequest.getauthorizationheader(); restrequest.setsubject(subject);  i think the setsubject can be removed
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: create this file in the maven build dir "target"
Candidate: you could use <UNK>
Reference: this seems to be a non-trivial wasteful computation in case node.kind is neither and nor or
Candidate: i'm not sure that this is not but i guess that we want to throw an exception
Reference: lines 124-127 seem difficult to understand, is there any way to write it to be easily understandable? and are not to standards (always use brackets in if or else, except
Candidate: you could use a constant instead of <UNK>
Reference: should be isvalidrepoid
Candidate: please use the baseurl here instead of equals?
Reference: i think you can do an "exists" call here instead. that will avoid throwing/logging an error, which will look suspicious to a new developer. i think logging at the info
Candidate: we could move this lock to the request?
Reference: you could move the if before ctx.onreturn() and avoid invoking ctx.continueinvocation()
Candidate: is there any reason why we can't be a default?
Reference: scalein a task is awkawrd. i think finding the min task should be implemented within scaleinmanager.scalein
Candidate: should we print stack trace to reduce the stack trace level to debug level
Reference: add codec to tostring()?
Candidate: please add brackets around statements.
Reference: why have you only added it to the container part of the or?
Candidate: i think this is a <UNK>
Reference: you should use entitytype instead of topicname for your comparison
Candidate: should we use a dedicated class too?
Reference: it looks like we need to remember the result in entityconstructor.
Candidate: you could use only: <UNK> multimap instead of <UNK>
Reference: you mentioned "kafkamirrormakerconnectortask.createkafkaconsumer(), the properties are copied over to yet another object, causing the defaults to no longer be accessible." guess it would be helpful to extend the test to
Candidate: is there a reason for this test is not
Reference: this layer only understands ilogdata can you move this conversion to streamviewsmradapter which actually maps ilogdata to smrentry
Candidate: why we validating validating validating the validating <UNK>
Reference: as index is guaranteed non-null, index.equals(indexinterpolated) is sufficient
Candidate: i think that this should be a <UNK> <UNK>
Reference: indent this, so that the code checks for museautoscale???restriction only if mcustomaxismin is true, that way it uses the same maxisminum variable, but it two different possible ways.
Candidate: is there any reason to assert that this is not enabled instead of hardcoded range instead of <UNK>
Reference: style-nit; we don't use braces for simple single stament constructs
Candidate: use objects.hash()
Reference: is there someone we can yank these 30 or so lines to a separate method or, even better, a separate class? ideally, we probably want it to look something like
Candidate: 2048 like "query {}: -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e
Reference: again, i don't understand why this is needed? isn't it the same thing that happens in abstractnetworkpopuppresenterwidget?
Candidate: wait.forelementclickable() should be <UNK>
Reference: if you're already using the early return pattern, might as well use it throughout the code: if (!canaddvm(...)) { return false; }
Candidate: this is be changed to the attributes attributes attributes attributes attributes attributes attributes attributes attributes
Reference: in the getservertemplateid() above you work with the possibility of servertemplate being null. here you're calling servertemplate.getid() directly without null check - possible npe here? the same for hashcode below..
Candidate: please use objects.equals
Reference: no, it should use tempidtableexporter
Candidate: suggestion <UNK> = <UNK>
Reference: did you check this prints messages with decent grammar? not sure, but did you mean "cluster name ... service name ..."
Candidate: we should use <UNK>
Reference: should this be poller = new adminpollerservicebean(null, null);?
Candidate: unused
Reference: no need to check in here since maxnumbackup value will always > 0 based on the caller logic
Candidate: why warn is not warn
Reference: minor:  if (sendzerosizedlastchunk && random.nextint(2) % 2 == 0) { sendzeroandwait(); }
Candidate: you could use <UNK>
Reference: i don't have the code now but if the contract od sselection is to return null on getfirstelement() if sselection is empty, the code can be changed to simply return
Candidate: if you could use brackets here
Reference: you could inline this
Candidate: is there a reason for none of these two lines could be implemented in the constructor?
Reference: when does this make sense ? if the repository is bare the returned path is non-existing and there are no eclipse resources mapping to the path since there's also no
Candidate: you could use a string instead of <UNK>
Reference: nit: an explicit call to super() is not needed.
Candidate: you could use a multimap here instead of creating a new object
Reference: this if can be removed. you already have it above.
Candidate: suggestion <UNK> -> <UNK>
Reference: nit, _listener = listener that is our code convention.
Candidate: why we again?
Reference: voidpromise() is not allowed for ch.close(...). just call ch.close().
Candidate: we could use <UNK> here instead of storagetype <UNK>
Reference: i'd rather see more specific error messages here, as there's a few different scenarios here we should be aware of: * a permanent group's name can *never* be patched. but,
Candidate: should we use <UNK>
Reference: follow singleton pattern. add private to prevent others to call new adapterpatientdiscoveryproxywebservicehelper()
Candidate: this should be <UNK>
Reference: final
Candidate: you could use a constant instead of <UNK>
Reference: add log level check, so tostring only gets invoked if log level is trace. (couple more times in this file)
Candidate: please remove this
Reference: calling the hook here only creates a draft-published event when the first patch-set of a change was uploaded as draft and then gets published, so that the change status switches
Candidate: is there is no need to check here?
Reference: unless the docs explicitly say a method will never return null you should check it, or be in a try/catch that's going to handle an npe.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: currently we have two widget providers (mostly for backwards compatibility). please ensure to update both.
Candidate: you could use computeifabsent
Reference: i think there's a jetty util for cleaning the exceptions floating around somewhere
Candidate: this log is not warn
Reference: @ikhvostenkov this variable can be inlined
Candidate: @xupyprmv let's use <UNK>
Reference: would it be better to sort by status (order: true > null > false), noterequired (false > true) and description (a > z)?
Candidate: this is designed to be a local var instead of creating a new array as arguments.
Reference: this change doesn't seem to reflect the description, and shouldn't be necessary, correct? only moving the inputstream initialization is necessary?
Candidate: you could be a number of these <UNK> instead of creating a bit basically bit basically bit basically bit basically bit basically bit basically bit basically bit basically bit basically
Reference: nit: expected is first
Candidate: @ivange94 not sure that this is not good idea.
Reference: nit: extra spaces
Candidate: how about this is a worker among the worker among the worker among the worker among the worker among the worker among the worker among the worker among the worker
Reference: same here, or call this(,,)
Candidate: is there a reason for element?
Reference: isanyvalueequal
Candidate: minor nit: space between ( <UNK> (string : <UNK> { return false; }  if <UNK> { return false; }
Reference: immutablemap.of(
Candidate: immutablemap.of(
Reference: would you please fix here too?
Candidate: suggestion if <UNK> == null) { <UNK> = new <UNK> }
Reference: consider declaring these variables as class-scoped constants. i see them being repeatedly declared/used on other methods.
Candidate: suggestion list<string> <UNK> = new arraylist<>()
Reference: float this up above permissions methods
Candidate: you could use a constant here instead of <UNK>
Reference: the listbuckets() operation will kill the cluster in production as it needs to go trough all the keys. maybe there is a better way to check for health?
Candidate: is there any particular reason why we catching the exception?
Reference: these logic about clear outdated state are missing in the latest pr.
Candidate: you could replace this with foreach with putifabsent with <UNK>
Reference: ![critical](<link_1> either log or rethrow this exception. [![rule](<link_2>](<link_0>
Candidate: suggestion if <UNK> == <UNK>
Reference: maybe make this bigger, just to be safe, say 25...
Candidate: minor nit, but we could use a <UNK>
Reference: flip
Candidate: you could use the mock <UNK>
Reference: one question, since we do verification in topology builder, is there any validation code in later stage that could be removed?
Candidate: this should be <UNK>
Reference: using names such as compressedbuf, compressed and uncompressed, instead of temp, temp2 and copybuf would make the more readable.
Candidate: space after the
Reference: else if? or switch?
Candidate: you should labels, cr
Reference: a check for null is required here as expression is an optional value and can be null
Candidate: @vilchik-elena @rnveach is >= 0 && <UNK> == <UNK> && <UNK>
Reference: this local is only scoped to the finally block. declare it within the finally block.
Candidate: i don't think that this resolver. is a property?
Reference: haven't we lost fail-fast abilities by moving this here?
Candidate: is there a reason for this logic?
Reference: requires a check for abslistview now. or remove the check altogether.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this could be changed to use a constant from the const class instead of keeping the old magic string.
Candidate: you could use <UNK>
Reference: this piece of code java profiler.instance.getapplicationstatemanager().getlaststate() == applicationstate.offline  is copy-pasted everywhere (sometimes in a method, sometimes not). can you factorize in a single method somewhere in profiler.instance or in
Candidate: no need to use <UNK>
Reference: can you please add classname to error message?
Candidate: please add a message
Reference: can we split this stream to multiple lambdas?
Candidate: you could use <UNK>
Reference: let's make it _protected_ to allow users to override if they want
Candidate: nit: you could simplify this by <UNK> by foreach with <UNK> by replacing with <UNK> with <UNK> with <UNK> with <UNK> with <UNK>
Reference: this call is not efficient cause you will map all n clusters in list() while only one can (potentially) answer your cluster.getid().equals(guid.tostring()) condition (or even none), instead please implement public
Candidate: this is designed to be a bit simpler.
Reference: setjournalno?
Candidate: you could use mock <UNK>
Reference: isn't this rather warning/error than info? my thoughts were all channels in kogito should have an envelope. have just some of them the envelope? or is it that small subparts/panels/components
Candidate: please use <UNK>
Reference: always use curly braces, even for one-line statements.
Candidate: i think that this discoveryresult is null?
Reference: you can optimize this so that if the first time you send size, you get back the same value for both, you never need to call the remote command again.
Candidate: could we use <UNK>
Reference: lets return an unmodifiablemap
Candidate: this is a <UNK>
Reference: this code should continue to read as one-liners. it's intended as an extensibility point and should be terse. prefer:  java modules.add(new dom(new androiddomproviderfactory()));
Candidate: i'm not sure how about this worked. i think that this is is that the is is the to hang that _in the completablefuture
Reference: try to use the better alternative assertj.
Candidate: rename to
Reference: * should relative path be resolved as well?  path absf = fixrelativepart(path); * should increment read statistics as well.  statistics.incrementreadops(1);
Candidate: why not use <UNK>
Reference: minor typo in variable name.
Candidate: you could use return <UNK> instead of <UNK>
Reference: you could perhaps use the elytron resource to be homogenous with the other testcase.
Candidate: use readasstring(...) instead of <UNK>
Reference: this already happens in the animationtimer and should be removed. <organisation
Candidate: is there a reason for this logic?
Reference: ![major](<link_0> 'severity: major') method has 7 parameters, which is greater than 6 authorized. [![rule](<link_1>](<link_2>
Candidate: extract the building of the responsemessage to it's own variable (in eclipse, select the text, right-click > refactor > extract local variable / select code + shift+alt+l). this will make
Reference: note: writes to the sweep queue are only done when comitting a transaction, so non-transactional table writes (including internal tables like sweep-progress) shouldn't ever be enqueued. agree that we should
Candidate: you could use <UNK>
Reference: there should be a dedicated test rather than replacing this one.
Candidate: this is designed to be a dedicated <UNK>
Reference: since we are using histogram everywhere, replace abstracthistogram::reset with just histogram::reset.
Candidate: i think this should be null here as well.
Reference: not strictly part of this pull request, but let's see if this can be changed to boolean.
Candidate: this is designed to be a to minimize the the the <UNK>
Reference: i would suggest to use an enum for this. you can insert the enum if the text can be parsed by the static valueof method. therefore the strings should be
Candidate: is there a reason for avro to be null?
Reference: more weird union() usage for setting the min-max values. you should use the min-max constructor. suggestion blockregion region = new blockregion(mins.get(i), max.get(i));
Candidate: i we touch the number of events each sequence number of events each sequence of each sequence number of events each sequence of each sequence of each sequence of the
Reference: maybe just give the real type be here in the exception ? and for before method too
Candidate: could use reflectiveoperationexception probably?
Reference: this will break as soon as we allow parts of subapps to be mapped. then it can be that we get wrong opposites here. that was the reason that i
Candidate: if you could use <UNK>
Reference: ![minor](<link_2> 'severity: minor') remove the redundant '!unknownsymbol!' thrown exception declaration(s). [![rule](<link_1>](<link_0>
Candidate: i we use a jdk 83 instead of <UNK>
Reference: the only one i know is cron parse from trigger.class
Candidate: you should use <UNK> annotation, instead of <UNK>
Reference: is there a more elegant way to do this? a callback and background thread seems super hacky.
Candidate: is this a multicatch here?
Reference: why are we using clone and a cast here?
Candidate: should we add a message
Reference: better message: "hashing a column of type " + column.gettype() + " is unsupported"
Candidate: this is a bit more than <UNK>
Reference: why don't we have an equivalent value generator for past?
Candidate: you could use <UNK>
Reference: rename to type
Candidate: rename to <UNK>
Reference: this can be deleted.
Candidate: you could use the <UNK> events.
Reference: have to create it each time? can we not just create once and then put it in place before evaluate?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: when logging an exception, pass also the exception as param to the method, so that the stack trace is available in the log file.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this message is a bit off since the full request is being used to pick a handler now.
Candidate: could we be null here?
Reference: this(new withtextmatcher(title) and then removing title attribute
Candidate: you could use a <UNK> instead of creating a connection,
Reference: @filfreire better use solidlist instead
Candidate: i confused about a locale confused locale but confused about a locale confused locale but confused about a locale confused locale but confused about the locale but confused about the
Reference: i would extract candidatebundle.getid() and candidatebundle.getversion() outside the cycle
Candidate: this is dangerous, is designed to be a <UNK> <UNK> <UNK>
Reference: please also pass the original exception as parameter. just in case
Candidate: i think this is not efficient, we could use a <UNK>
Reference: suggestion logger.log(level.warning, "please report to the respective component", e);
Candidate: should we use <UNK>
Reference: is there any way to check this without two loops? if each one has x memberships, then the loop want to go for x*x times to find it.
Candidate: this is be an <UNK>
Reference: why add empty string?
Candidate: @ivange94 about this factorized to the
Reference: a space is missing
Candidate: is there a reason for none of these properties?
Reference: this method could take in a boolean. this would allow the tests to be executed in any order, instead of encryption staying on once it was enabled.
Candidate: we could use <UNK>
Reference: minor: i would not call organizationflags.isenabled before checkorganizationkeyconsistency, if the check fails, we uselessly made a call to db
Candidate: is there a reason for this method is empty?
Reference: it failed due to this, syscs_perform_major_compaction_on_schema calls this function with tablename set to null. we could perform the validate here and move all the logic into a separate function that
Candidate: we should throw an exception instead of checkargument
Reference: should this be a warn instead of a debug?
Candidate: you could use offset -> <UNK>
Reference: how about using accessor methods instead of field access? that way, we can entirely omit any kind of proxy handling.
Candidate: is there a reason for this change?
Reference: -->finally
Candidate: please remove the issue?
Reference: suggestion ") returns null.");  the memberaccessor isn't null, it returns null.
Candidate: i think this should be the view? view? view? view? view?
Reference: @zeemanhe this if/else if/else is hard to read. can we do something like: if (startaction == startaction.join) { } else if (startaction.doesrejoin()) { } else { ... }
Candidate: i think we should be a <UNK> <UNK>
Reference: also not required if we use a new implementation of bulkcommand
Candidate: you could use a constant instead of <UNK>
Reference: i don't think we should filter the parameters, as capabilities are parameters, too. an we should keep the link to the rfc for further reference to there parameter types, if
Candidate: i liked that this is not efficient, we should have to plug the <UNK> the <UNK>
Reference: @odockal this could be moved also in labels class
Candidate: rename to
Reference: these will get overwritten on each iteration of the loop, so you'll need to use keys like "key_"+i and "value_"+i. also, you can use it when you create the object
Candidate: i think that this is not efficient, but i would be more efficient, that the is <UNK>
Reference: - we don't use final for local variables - constants need to be defined as private static final member variables and names should be all caps with underscore separators, e.g.
Candidate: please use <UNK>
Reference: not needed
Candidate: what's the issue with <UNK>
Reference: one last nit for you. can we change the class to assetreport?
Candidate: you could use <UNK>
Reference: eventtype that we put to publishevent method, should be constructed similar to its api counterpart: resourcetype.actiontype. example: service.update. so instead of eventtype.tostring(), we should use objectmanager.gettype(resource) + "." + eventtype.tostring()
Candidate: you could be simplified to <UNK> annotation?
Reference: we've just created this, no need to clear it (probably a leftover from a previous version).
Candidate: rename to <UNK>
Reference: should use boolean.tostring(true)
Candidate: is there a reason to check that the is not <UNK>
Reference: should be "declarative pipeline with podtemplate" ?
Candidate: please use <UNK>
Reference: why false again?
Candidate: this is a hierarchy to <UNK>
Reference: make one logger instance?
Candidate: this would be helpful if this is is a >= <UNK>
Reference: verifying that messageet is not null before attempting to clear will prevent the npe.
Candidate: is there a reason for this method is not <UNK>
Reference: shouldn't all apply*filter() methods be private?
Candidate: could you add a division for <UNK>
Reference: why putting this in the else? also, this filter can never match because a field cannot be both time and date_time
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why doesn't this also subtract the and of the inlist predicates like with or? (relevant e.g. if you specify duplicate values)
Candidate: you could use brackets around statements.
Reference: should remove, and use similar functionality in mockserviceticket
Candidate: nit: clicking stream()
Reference: thoughts on keeping the non-negative enforcement?
Candidate: is there a reason for this logic?
Reference: same here for out: use the [try-with-resources-statement](<link_0>
Candidate: this is designed to be a finally block
Reference: could i recommend extracting a view_type_message_other_users maybe? :) also a view_type_message_this_user and use it here (else if it), so you have an else that can throw
Candidate: @manuelplazaspalacio we should use the annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, but the fragment is not <UNK>
Reference: what is 2? make final
Candidate: you could use braces
Reference: can't these configuration classes be extracted and reused? they look quite similar to the existing ones.
Candidate: please use <UNK>
Reference: i get it that the jre is optimized for small short-lived allocations. but i still don't feel absolutely at piece with allocating a new rawpacket just to pass it to
Candidate: @override public static
Reference: this is throwing an exception on lowercase input such as in contentdigesthistorytest.testbasics().
Candidate: this is be to establish a <UNK>
Reference: in the current flows, a check is made to insure the model is not null. but it might be prudent to check again here, in case it's eventually called from
Candidate: please use <UNK>
Reference: rename to occurrence
Candidate: nit: -> <UNK>
Reference: why this empty line? :)
Candidate: wait.forelementclickable() should be <UNK>
Reference: suggestion for (final node node : graph.nodes()) {
Candidate: could you use <UNK>
Reference: this is really dangerous and will most likely introduce a context leak. try to avoid binding context strongly, or at least do this.context = context.getapplicationcontext()
Candidate: can you use <UNK>
Reference: (nit) outgoinggranularityspec will never be null because it will return incoming spec if outgoing is not set
Candidate: you could replace this with <UNK>
Reference: can it be cast to list?
Candidate: please use <UNK>
Reference: well, that the exception occurred is easily visible from the delivered exception. i'm not even sure if i like the stack trace here, but i definitely would prefer a better
Candidate: we could use <UNK> instead of <UNK>
Reference: logging
Candidate: i think this should be to be called in the view?
Reference: this is redundant.
Candidate: you could use <UNK>
Reference: add a log message to help debug issues.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: it won't be closed on exceptional paths. please also use util.closeandlogfailures() instead, because we want to report the issue in logs at least
Candidate: you could use try-with-resources try-with-resources
Reference: this file reader gets never closed. also no enclude gets specified which is bad as it is then platform specific. should be utf-8
Candidate: if you could throw a exception instead of <UNK>
Reference: the path is linux specific?
Candidate: if this is is not efficient, that this is is not efficient, if the is interfere in the <UNK>
Reference: can you please replace ==> with something unobstrusive like a colon :. thanks.
Candidate: this is designed designed to be null
Reference: this logic resides in the diskmapper, you should be mapping new diskimage from the disk and using unregistereddisk as a template. by using mapper you make sure that all properties
Candidate: this should be updated.
Reference: i think we should remove this shuffling at all. cc: @sopel39
Candidate: inline this args?
Reference: i think we are hitting the limits of genericity. please consider extracting a class that will replace pair<list<statement>, list<statement>>. this should 1) help with reading the code, maybe move a
Candidate: you could use a constant here instead of creating a new <UNK>
Reference: for the above, use context.getservice(identifiersourceservice.class).getproviderbyuuid(getuuidproperty());
Candidate: is there a reason for avro ?
Reference: unfortunately this won't quite work - fasttesr is fast because forge has a global vertexbuffer (in tileentityrenderbuffer). this method is only called by non-fast tesr stuffs.
Candidate: i think that this is be passed to <UNK>
Reference: delete blank line
Candidate: i think the dynamic <UNK> edges, dynamic dynamic dynamic page. iirc dynamic dynamic dynamic dynamic dynamic dynamic dynamic dynamic dynamic dynamic dynamic dynamic dynamic dynamic dynamic dynamic dynamic dynamic dynamic
Reference: rename aadjwtbearertokenauthenticationconverter to converter.
Candidate: use a constant for s?
Reference: are you gonna allow null for messages or not? in [l56](<link_1>, it assumes that messages can be null. but [l69 in computationcallable.java](<link_0>, you handle it not to pass null value.
Candidate: please use <UNK>
Reference: fix this and all other places
Candidate: we should use the <UNK> expiration e.g.: <UNK>  <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK>
Reference: minor-xxs: maybe rename "someblobs" to "batchofblobs"
Candidate: let's use a schema for the schema timestamp types?
Reference: please use one line per declaration as we do normally in netty
Candidate: i think checkargument here please.
Reference: is this necessary?
Candidate: no need to call super() here?
Reference: isn't that if reset is called we know we reached end of the probe?
Candidate: i think this should be a <UNK> isdone() is not null in the <UNK>
Reference: maybe rewrite to java project.getgroups().stream().map(group::getname).foreach(tags::add);  ? hopefully i wrote it correctly (no ide suggestions :d ).
Candidate: you could use foreach loop instead of creating a foreach instead of creating a map?
Reference: would it be better to set it to const.actionuris.instructor_course_join_authenticated + "?key=" + regkey first and then append the rest if institute != null?
Candidate: this is not a tear down to the
Reference: this should still be a binary, just a reused one backed by a byte array.
Candidate: use <UNK>
Reference: any reason not to compare the cigars directly? or the cigar-strings if that doesn't work?
Candidate: you could use <UNK>
Reference: could be if (mergeddictionary.add(key))
Candidate: you could use <UNK>
Reference: this::performloadbalancing?
Candidate: i think this should be a slight pool for the
Reference: i don't think this check was there before, was it intentional? if so then the this.link = link; below could be moved inside the if block?
Candidate: this readasstring(...) instead of <UNK>
Reference: please change the method name to 'initialisecache'
Candidate: suggestion <UNK> = new <UNK> <UNK>
Reference: typo excpeted
Candidate: i think this is not efficient, we could use servercontext.
Reference: ![major](<link_1> refactor this method to throw at most one checked exception instead of: java.io.ioexception, java.util.concurrent.timeoutexception [![rule](<link_2>](<link_0>
Candidate: this is be expecting the variants
Reference: don't we at least need to call replay on the mocks? and, since we're not actually expecting any behaviour, create nice mocks instead?
Candidate: is there a reason for element?
Reference: these two for loops look like they can be condensed into one.
Candidate: why not -1l
Reference: use import static method for remove assert.
Candidate: this is not
Reference: just remove the log altogether, as this was clearly added for debugging purposes. i think it is just bad practice to use log for debugging instead of android studio's debugger.
Candidate: i think this should be <UNK> to the <UNK>
Reference: //todo? can we do this now by seeing if it's of type item and if not throwing? or is it more complex than that?
Candidate: could be replaced by the ethernet <UNK>
Reference: the column should be homepage_parameter
Candidate: could we use a constant?
Reference: operatorid.getandincrement() is called twice producing different values for operatorid and sourceid; is this intentional?
Candidate: you could use a constant instead of using "\"" + <UNK> + <UNK> + <UNK>
Reference: would you mind naming the variable aggregatedfieldsquerybuilder instead of builder?
Candidate: use <UNK>
Reference: typo...
Candidate: why not use <UNK>
Reference: can you make 383 a constant ?
Candidate: you could use <UNK> int division = <UNK> <UNK> <UNK> <UNK> = <UNK>
Reference: need a comma before partitionid
Candidate: appending to append a string ", <UNK>
Reference: why is this the initialdispute? shouldn't we be checking the updateddispute?
Candidate: is there a reason for element?
Reference: not a fan of this
Candidate: why not convinced about the
Reference: add message
Candidate: is there a reason to be null?
Reference: add explicit condition, and throw exception if not matching the current options
Candidate: this is a to be a <UNK> that is is a efficient, we could use only:  java throw new <UNK> <UNK> <UNK> == null) { throw new <UNK> }
Reference: i would rather have separate method in partitionedlookupsourcefactory which would return future denoting that set lookupsource is no longer needed. maybe getsuppliedlookupsourcenolongerneededfuture?
Candidate: you could use <UNK>
Reference: suggestion creategrantauthorization(process_definition, one_incident_process_key, userid, processdefinitionpermissions.read_history);
Candidate: suggestion <UNK> = <UNK>
Reference: could just use indexof() and check if it returns != -1
Candidate: suggestion if (throwable == null) { return <UNK> } }));
Reference: alternatively, assertj has that method right now. junit 5 is not out yet.
Candidate: this should be changed to <UNK>
Reference: remove sout
Candidate: i think we should be a <UNK> <UNK>
Reference: you could also use influxdb.ping() to make sure a connection is established
Candidate: if this is succeeded
Reference: shouldn't this be: hasmutable |= once we hit a row that has mutable conditions the decision cannot be cached even if that row decided to abstain for this particular permission
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: we need to add to this message that we reached the max number of retries
Candidate: we could use a warn instead of '+'
Reference: nit: use type inference suggestion map<string, string> challengemap = new hashmap<>();
Candidate: this is not a bit more than <UNK>
Reference: isn't this assertion redundant with the 2 previous ones?
Candidate: <UNK> is designed to be <UNK>
Reference: it looks like you're overriding this just below with newdiskcacheexecutor() always? same for newsourceexecutor above.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: don't log anything at info level during query execution, there will be too many logs. debug or trace is preferred.
Candidate: i think we can move this state to a state in the
Reference: @puneethps can you try to move this before if (!files.exists(path)) check?
Candidate: i think that this is is permission?
Reference: you can use: new hashset<string>(arrays.aslist("eth4",  ));
Candidate: why 10?
Reference: use p.lazy(f<unit, a>) to construct the p1.
Candidate: <UNK> -> <UNK>
Reference: atomicboolean.get() returns a boolean, you don't have to compare against false. or was this done to improve readability? suggestion while (!islifecyclestopped.get() && !istimeout.get()) {
Candidate: should be able to use <UNK>
Reference: isn't it more common to put the != null condition first?
Candidate: you could use <UNK>
Reference: this is a mapping operation, so you can .stream().map() over collaborators to get the new list.
Candidate: is there a reason that expectedexception
Reference: see the aqute.libg.cryptography package for classes to compute md5, sha1, sha256. they provide a nice ashex method to return the digest value as a hex string.
Candidate: please use a static import
Reference: could you use extract constant here? why it is 64 seconds?
Candidate: this should be a <UNK> <UNK>
Reference: it's unlikely you want the tostring method here, since tostring is volatile and not suitable for outputting on the api. what value are you after?
Candidate: i think this should be a <UNK> <UNK>
Reference: get rid of this variable and use getcallback.subresource?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why not just calling this method from subscribe in presenter ?
Candidate: you could use a <UNK>
Reference: we probably want to check if there is a timed event for the given name and return 0 in that case
Candidate: we could factor this out into a local variable.
Reference: for existing users already implementing this method, this exception doesn't matter. for new users, this will only happen if they don't override either create. if the idea is to prevent
Candidate: this is a classcastexception in the
Reference: the same thing would happen with this empty catch block as well. since the outer try/catch block already catches exception, this inner try/catch block could just be removed.
Candidate: this is non-trivial (can be be non-trivial
Reference: remove all the \n please and maybe also add the source: <link_0>
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this here is wrong. what it's really doing is checking whether the given string exists as a gestalt asset. when it's anything but a ship it causes issues down the
Candidate: no need to remove the
Reference: we should only log this if runnables is not empty.
Candidate: is there a reason for this change?
Reference: can we reconcile the 2 contexts used in these lines? i mean, there is one passed as a parameter and one got via getcontext() so, can we instead use only
Candidate: you could use <UNK>
Reference: we should either use setreinit or remove it
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: we can use strigutils.isempty()
Candidate: use collectionutils
Reference: why do you throw out exception handling here (datetimeparseexception will be thrown)? the gcviewer.imp.parseexception contains the whole text line, where the problem occurs and usually helps much in understanding, why
Candidate: this should be a
Reference: you can use maptolong here and then sum()
Candidate: <UNK>
Reference: when possible this should narrow to the most specific exception type. this goes for all caught exceptions listed in this pr.
Candidate: you can use <UNK>
Reference: magic
Candidate: you could use <UNK>
Reference: i assume that this should be printed with a logger not just to stdout
Candidate: i think that this hides the
Reference: i don't think this getter is needed.
Candidate: this is not be a
Reference: remove this
Candidate: wait.forelementclickable() should be <UNK>
Reference: another instance of the same hard-coded strings... they are repeated throughout this class :)
Candidate: use <UNK>
Reference: > map [](start = 4, length = 3) can you give the type here? #closed
Candidate: why problematic. this problematic. why not problematic. this call.
Reference: please add a defensive != null check (ideally inside a else if). indeed, if binding == null, tostring() will result in a npe
Candidate: use <UNK>
Reference: debug leftover?
Candidate: typo: <UNK>
Reference: move after line 51.
Candidate: use <UNK> instead of <UNK>
Reference: suggestion assertfalse(c.namespaceoperations().exists(namespace));
Candidate: minor nit: space between "if" ( { ( <UNK> ) : <UNK> ) {
Reference: please, take care about smartlifecycle here too:  integrationnamespaceutils.setvalueifattributedefined(builder, element, integrationnamespaceutils.auto_startup); integrationnamespaceutils.setvalueifattributedefined(builder, element, integrationnamespaceutils.phase);
Candidate: unused
Reference: hmmm...in hind sight we probably should move this to debug to be sure that sensitive data isn't automatically logged.
Candidate: i think that this log is throw.
Reference: functionality question: is this allowed to be none? after ear is implemented, there will still be a situation where something is not encrypted?
Candidate: i think we should be simplified to <UNK> stuff? ie. args?
Reference: to be on the safe side use guid.isnullorempty()
Candidate: wouldn't this be replaced with <UNK>
Reference: did you intend to leave this in?
Candidate: you could use a constant names instead of <UNK>
Reference: comparerpmparts .. the s is missing
Candidate: you could use <UNK> instead of <UNK>
Reference: public
Candidate: why not use a property?
Reference: minor: may want to rename emphasizing these records for an outputstream, like recordsforeachstream or some other better name.
Candidate: you could use <UNK>
Reference: no need for the intermediate string object. use sb.append(buffer, offset, curindex - offset)
Candidate: this description is not efficient, this should be a download in the error message.
Reference: we might want to ask github support about this. can you provide some details about the exact issue?
Candidate: no need to mock for the
Reference: why did you remove this?
Candidate: is there a reason to check that the is empty?
Reference: might want to use a linkedlist here, i think the arraylist constructor allocates an array with initial size 10.
Candidate: this is designed to be a <UNK> correctness of <UNK>
Reference: log.debug?
Candidate: you could use try-with-resource try-with-resource try-with-resource try-with-resource here instead
Reference: extra space
Candidate: you could use <UNK> here instead of <UNK>
Reference: sssspppaaaacccciiiing :/
Candidate: suggestion <UNK> = new <UNK>
Reference: rename this to endpointstates
Candidate: this is a <UNK>
Reference: can you describe this usecase?
Candidate: you could use a multimap here instead of <UNK>
Reference: calling tostring and throwing away the result looks odd. presumably this is to consume the errorstream. out of interest does findbugs warn about discarding return values?
Candidate: we could use isempty() instead of <UNK>
Reference: the base class has a "guid" field that contains the "id" converted to "guid", so here you can use just "guid".
Candidate: can we use the hash <UNK>
Reference: do we have any tests for this method?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: empty debug message
Candidate: you could just call <UNK>
Reference: change this to a warning instead of error since we just log the exception.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: shouldn't this filter go in the constructor?
Candidate: no, this right, but this could be return true (the tid = <UNK> return null;
Reference: i'd be all for it if it were as simple as seq(urlvalidator, usernamevalidator, passwordvalidator, usernameandpasswordvalidator).forall(_.isvalid)
Candidate: you could use <UNK>
Reference: person.getdeathdateestimated()
Candidate: stringutils.isnotblank()
Reference: this should only add a membership if no active one exists for the same patient and if the patient is not voided
Candidate: wait.forelementclickable() should be <UNK>
Reference: i'm not sure i can allow a break for sugaring in this case.
Candidate: you could use <UNK> string()
Reference: let's fix typo: caschedparams -> cachedparams
Candidate: i think this should be <UNK>
Reference: don't use explicit this if unnecessary.
Candidate: i think this is not efficient, but i would be more efficient, that this is is not <UNK>
Reference: we should still return the extension point marker sets if the editable marker config file does not exist.
Candidate: suggestion <UNK> = new <UNK>
Reference: better to remove this override since onclicklistener is an interface.
Candidate: you could optionally use <UNK> instead of <UNK>
Reference: i think we should get rid of this generic catch block. the only method that might throw an unchecked exception here is extractpayload(), but it already has a generic catch
Candidate: this is not to bail at the request.
Reference: just for readability replace with else if(intent.action_media_scanner_started)
Candidate: @manuelplazaspalacio this is is designed to be a <UNK>
Reference: i18n; string to messages
Candidate: you could use a string instead of <UNK>
Reference: this is an odd way to pass data for initialization, cc @major-, we need to look at setting up player "pre-init" code.
Candidate: you could use <UNK> instead of <UNK>
Reference: you have to check that getparameters().getinterface() and getvm() are not null, because this method is called before candoaction
Candidate: this is is not child view?
Reference: why lists.<object> ?
Candidate: you could use a string instead of <UNK>
Reference: why not unconditionally use checksumpolicy.ignore? not a big deal, but extra remote request for sha1/md5 files that almost certainly will not be there and do not add much even if
Candidate: i not sure that this matters, but how about making sure about the <UNK>
Reference: the priorities should be reversed: get the creds from the properties first and fall back to the env.
Candidate: suggestion <UNK> = <UNK>
Reference: misc.free() does null check already
Candidate: i think that marking the consequence of the <UNK>
Reference: my ide is warning me about a bunch of exceptions that are declared but never thrown in these methods.
Candidate: this completablefuture is be completablefuture completablefuture completablefuture
Reference: move this line one up and we do not need to change to the main thread in case the filter does apply.
Candidate: could you move this to <UNK>
Reference: could you reverse the ordering of this expression? most of the time, fenablewhendebugging should be true.
Candidate: i guess we could use a convenience method for the sake of <UNK>
Reference: please catch more specific/explicit exceptions. in this case the original exception is not passed through or embedded so it is totally lost.
Candidate: log.debug
Reference: it could use a lambda, less code and indentation.
Candidate: please use readasstring(...) instead of <UNK>
Reference: why trim()? if we use <p> hello\nthere </p>, wouldn't i want everything inside <p> that is not an html node?
Candidate: you could use a constant instead of <UNK>
Reference: i think here you can use a method based filter, for example: .filter(jbpmkieserverextension::isvalidpersistencekey) so it can be reused other places if needed
Candidate: unused
Reference: add command?
Candidate: you could use <UNK>
Reference: what about treating this use-case?
Candidate: is there any reason why not we is a default?
Reference: should we trim these values?
Candidate: if you == null || <UNK> != null && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK>
Reference: this skips the last line of the method that seems unrelated to the drawer. my suggestion is to extract the drawer-related code to a separate method and do the null
Candidate: is there a reason that wire is empty?
Reference: any reason why you've changed this to long? now it won't match the starter implementation
Candidate: objects.isnull
Reference: this could be null
Candidate: is there a good behaviour?
Reference: this could probably be an assert since it is invalid and shouldn't get passed. the encapsulate field dialog doesn't allow an empty string and shows an error (though the message
Candidate: wait.forelementclickable() should be <UNK>
Reference: not to be too picky, but this is unsafe cast. consider adding assertion to ensure that ac is an instance of configurableapplicationcontext. it may be safe within our whole bootstrap
Candidate: we could use <UNK>
Reference: maybe write it into some log?
Candidate: you could use <UNK>
Reference: there is no need for the super
Candidate: wait.forelementclickable() should be <UNK>
Reference: log an error possibly? thoughts?
Candidate: i think this should be a <UNK>
Reference: how about moving this into the constructor?
Candidate: i think this should be a no-op
Reference: should this use the java-7 typed collection syntax: > new arraylist<>() instead of the earlier syntax: > new arraylist()?
Candidate: this is right...
Reference: similarly.
Candidate: is there a reason for this change?
Reference: unnecessary empty line
Candidate: if you could use <UNK> <UNK>
Reference: i suppose you meant, different in the message ?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: anymatch might be more suitable than filter+findfirst
Candidate: this is be simplified (up to "return true"
Reference: perhaps we should seize the opportunity to rename this method. it is confusing as it is the same name as the current method but its purpose is really to provide
Candidate: you could use <UNK>
Reference: variable names should start in lower case.
Candidate: this is not to be managed to the future.
Reference: how can null ever be a useful value here? if the ad allows undefined, since no one ever populates runtimecap's dynamic optional requirements, this will just result in registering a
Candidate: can we use <UNK> annotation, no?
Reference: this can be replaced by method reference, i.e. pipelinefactory = channels::pipeline
Candidate: this is designed to be a <UNK> <UNK>
Reference: this will prolong the time the test takes in normal execution, because we rely on heartbeat timeout to detect missing member (see the assertclustersizeeventually in line 873 below). the test
Candidate: this concern concern that concern is a concern that was expecting in the <UNK>
Reference: do we really need session variable anymore?
Candidate: this is designed to be held by clicking on every time and clicking on every time.
Reference: after you regenerate the codec with correct since version. you will see an extra field parameters.istriggermaploaderexists this should if the client is aware of the new field or not. if
Candidate: @gunnarmorling you could use only: <UNK>
Reference: you don't need call to super method
Candidate: i think getparameters().getstoragedomainid()
Reference: i think it might be preferable to randomly drop some requests instead of all them. e.g. find a formula that would translate the load into a % of requests to
Candidate: this is not belong to the
Reference: 'bootable' would be nicer, imo
Candidate: typo: <UNK>
Reference: the msg string above here should say string.format("%s. only one array field per index allowed", msg)
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: collections.emptymap() could be used here
Candidate: could you use logger instead of <UNK>
Reference: log full exception
Candidate: rename to
Reference: create an issue to fix this hack
Candidate: minor typo space between logging
Reference: is it really isplugged? does parameter action mean, that something is plugged or rather that something should be plugged? seems the latter to me ...
Candidate: is there a reason for the log.
Reference: let's throw an exception
Candidate: suggestion if <UNK> == null) { above).
Reference: you're not making a defensive copy of the set.
Candidate: this is a <UNK>
Reference: nit: for (int i = offset; i < offset + length; ++i)
Candidate: nit: you could use <UNK>
Reference: perhaps viewbot.show() before selecting the tree item would be enough? at this point it is possible that the view is not created yet (it could be a view reference for
Candidate: you could use <UNK>
Reference: just a _style_ change. this could be rewritten as:  java for (string displayname: displaynamequestionids) { // do something }  so you don't need to keep track of indices
Candidate: you could use a constant instead of <UNK>
Reference: can we refactor this to avoid so much code duplication in these two, very similar, conditions?
Candidate: please use <UNK>
Reference: looks like this should be col_summary.
Candidate: is this a property?
Reference: do we need this anymore ? and the method gethttpstatuscodefamily ?
Candidate: could you use try-with-resources
Reference: is this going to affect all the other tests that are run from the same jvm?
Candidate: please use finishing <UNK>
Reference: use "%s" substitution
Candidate: you could use a constant instead of <UNK>
Reference: @riyafa can you also call channel.finish() and assert the return value ?
Candidate: i think assert that the value is submitted
Reference: no, this method should not throw interrupted exceptions.
Candidate: no, this method should not throw interrupted exceptions.
Reference: it looks like we will have to add this kind of logic for every resource type. maybe this is something that we can ask from jason.
Candidate: use <UNK> instead of <UNK>
Reference: i must be missing something. is that whole try/catch block even useful?
Candidate: is there is a corrected for 3 cases 3 cases 3 cases 3 cases 3 cases 3 cases 3 cases 3 cases 3 cases 3 cases 3 cases 3 cases
Reference: should this be any_entity_token?
Candidate: is there a reason to check that is empty?
Reference: i think using string concatenation is faster and cheaper here than using the string format.
Candidate: formatting
Reference: since this method is good only under certain assumptions (that is: that tostring() produces good sql literal), it should be private
Candidate: why not use <UNK>
Reference: this is a remote method call, i don't think the exception is actually fired. i expect it will be wrapped and just invoked geterrorcallback in case of error
Candidate: this is not eating that is not a good idea.
Reference: method name should be something like getresourceresult.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this is possible because danalysissessionimpl extends danalysissessioneobjectimpl, but that is actually an internal implementation detail, and it should not really be considered as a proper part of the session.
Candidate: i liked that this is not efficient, we could use the <UNK> <UNK>
Reference: misses the separator use elsewhere
Candidate: you could use a static import
Reference: maybe use the prefix announcement from config.yml
Candidate: is there a reason for element?
Reference: maybe you can rename period to periodinminutes
Candidate: is there a particular reason for this?
Reference: maybe your test can't trigger the issue because of this (which was causing the leak). why was it dropped?
Candidate: i think that the message is not error.
Reference: ![major](<link_0> 'severity: major') define and throw a dedicated exception instead of using a generic one. [![rule](<link_1>](<link_2>
Candidate: is there a reason for this nodes is connected inside the run()
Reference: final
Candidate: this is not prefix?
Reference: i would convert this to a warning, i.e. logger.warn("creating a track without sample entry");
Candidate: could we use the string concatenation instead of <UNK>
Reference: typo: "will not able" -> "will not be able"
Candidate: log.debug -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e ->
Reference: i suppose this will not be needed when <link_0> is resolved.
Candidate: this should be e1
Reference: remove finally {
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: how come there needs to be a substring for this?
Candidate: i think this should be an illegalstateexception instead of <UNK>
Reference: rename starttime to starttimens
Candidate: is there a reason for this logic?
Reference: better to add a function to return properties of a cluster, as what you did for location and interface.
Candidate: @vilchik-elena you could be simplified to <UNK>
Reference: missing braces {}.
Candidate: i think, if we could use a proxy proxy proxy instead of proxy input.
Reference: is this in meters/feet? hmm... i'm not sure what to do suggest regarding the change in precision.
Candidate: please use <UNK>
Reference: we can initialize filecontents with default_file_contents, and use if (configfilehelper.exists()) instead for the else case.
Candidate: no, this is ignored.
Reference: throwing an illegalargumentexception here is not really an improvement over a nullpointerexception i think.
Candidate: you can use a conf object instead of creating a new object
Reference: technically the method doesn't return a 'range', which should have an upper and lower boundary. does this method return the startting sequence number of the block covering the gap? and
Candidate: you could use <UNK>
Reference: this is confusing. the users will think it has to do with rabbitmq channels. please use "connection has reached eof" or simply "i/o thread: reached eof".
Candidate: why 5?
Reference: nit: can probably be condensed to one line.
Candidate: suggestion <UNK> -> entry.getkey(), <UNK> -> <UNK>
Reference: rename to isostats - will not have to change again
Candidate: is there any reason why we can't be null?
Reference: arg may not always have a shape. we might have some place holder logic we want to put in here. at least checking for null shapes before you do this
Candidate: if we should use a <UNK> <UNK>
Reference: step verifier should be used... i'm not sure why you don't use mockito to mock an httpresponse and instead.
Candidate: this is not used?
Reference: may be we can change text "add" to "add".
Candidate: suggestion <UNK> <UNK>
Reference: what about making getmapper generic and move the cast into it ?
Candidate: <UNK>
Reference: i think we could modify the code a little to call one time imageutil.getinstance().getdimension(getfileasset()) and store the dimension in a private variable, so that way you don't load the file
Candidate: suggestion <UNK> = <UNK>
Reference: you could skip all the lines up till setlabelstyle() if fill is null here? that way it would be more clear that setfillpattern() is not called. though didn't check if
Candidate: this is not depend on the region is not suitable
Reference: is this required? when will this be true?
Candidate: you could be simplified to <UNK>
Reference: why aren't you adding all planks directly instead of this weird placeholder?
Candidate: we could use a baseurl baseurl here instead of creating a new input.
Reference: consider using assertj assertthat(list.get(0)).isequalto(2)
Candidate: you could use <UNK>
Reference: please avoid breaking changes on public apis
Candidate: this is a <UNK>
Reference: you can use immutablelist.builder().
Candidate: unused
Reference: this should still be done at the top of visualizenetworks (where it was before). if there is not network, the rest of the code does not have to be executed.
Candidate: please use <UNK>
Reference: let's use  cacheconfiguration<?, ?> oldcfg = cachecfg; if (oldcfg != null) { cacheconfiguration<?, ?> newcfg = new cacheconfiguration<>(oldcfg);  to remove compiler warnings.
Candidate: if this is not needed.
Reference: the var name could be changed.
Candidate: is there a reason to be null?
Reference: you don't need that line, verifytitleurl is already checking that. see point1
Candidate: you could use a constant instead of <UNK>
Reference: can you please have a look how the other geturl*** methods handle the exception handling. i think they are allowed to simply throw them and the performsearch method then converts
Candidate: i think we could be a <UNK> to <UNK>
Reference: nit-pick: an empty line would be nice here or break out the "else" into a method too
Candidate: looking at the
Reference: i am not quite clear what is this test motivation for. when the dispatcher throws exception, it would terminate the internal thread inside channelstatewriterequestexecutorimpl. and when the worker#close, it should
Candidate: you could use <UNK>
Reference: this usually shouldn't happen, but should we be silently swallowing the exception here if it does?
Candidate: you could use a local variable?
Reference: per offline discussion, just delete it would still be dangerous since some worker (after failure) might still try to write to the old directory. we should just fail for now
Candidate: use supplier
Reference: i think that this is a change of behavior. to keep backward-compatibility what about referencing system tags in both tags and systemtags ?
Candidate: if you could use a <UNK>
Reference: why was this removed ?
Candidate: you could call <UNK>
Reference: why is it nullable? you only call it to obtain a not-null value. move your assertion here, make the method not null. also, make use of objectutils.trycast - it will
Candidate: you could use a try-with-resource here instead of <UNK>
Reference: since quarks in the state system are used as "int" directly, shouldn't this class take care of the boxing/unboxing? ie, return a int here, and taking a int parameter in
Candidate: this could be synchronized probably?
Reference: i would recommend exposing 10000 as a configuration, i.e max result queue size
Candidate: please use isempty()
Reference: remove static so that we can access non-static variables
Candidate: @vilchik-elena we could use <UNK> <UNK>
Reference: probably best to move this to an instance or even static member than method-local.
Candidate: this could be simplified (up to <UNK>
Reference: in this case let's be specific and let's check that it is due in 1 day instead of just using > 0.
Candidate: you could use a '+'
Reference: possible npe if default cluster is not set
Candidate: is there a reason for the properties?
Reference: add an assertion to check the hardwre id.
Candidate: use <UNK>
Reference: i would add braces around the first else block to improve readability
Candidate: i think this should be a efficient, that the "return" to the <UNK>
Reference: drop logging line
Candidate: you could use the error message
Reference: i thought we will compare the vm.runonvds with getvdsid() this way you take into consideration all cases and not only the specific migration flow
Candidate: please add a <UNK>
Reference: recommend using a new error message instead of borrowing from sync menu.
Candidate: rename to
Reference: can we create a static constant (even in this class to start with) for this - "rsa-oaep-256" - so that it is easier to change or track it in future
Candidate: this is a <UNK>
Reference: nit: standard practice is static import
Candidate: is there a reason for this method is not <UNK>
Reference: add codec != newcodec assertion and checks for defaultstatefulstreamcodec?
Candidate: is there a reason for this method to be called in the <UNK>
Reference: i tried verifying this patch. but vdsupevent was not at all called. looks like it will be called only when the host status is up. but host status will not
Candidate: i think that this is be thrown by the status by default.
Reference: literal initializers, not types. we emit types but when we collect them they are just initializers.
Candidate: is there a reason for this method is empty?
Reference: you most probably will have to create a method to get the inputstream so this method can be testable as such by creating an object instance and calling this method
Candidate: if you can feed the resource level to the
Reference: pass the exception as the second parameter to logger.warn rather than printing
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: is the new method needed to get default-to-false? couldn't you just use isenabled and change the default on the property?
Candidate: we should have a warn for the
Reference: .first(audience.class) -> .getaudience()
Candidate: use <UNK>
Reference: or classcastexception i suppose, theoretically. maybe just catch exception already.
Candidate: why is this change?
Reference: use asserttrue instead?
Candidate: this is not sure that this test is not <UNK>
Reference: why convulotions between list and array ?
Candidate: minor nit
Reference: we disable healthindicator by default. please set false the default value.
Candidate: this is not a bit dangerous, for this use-case.
Reference: do you really intend to warn on each and every sampler execution? this looks awfully broken.
Candidate: use string.format instead of <UNK>
Reference: @nielscharlier is this a resource leak? could it be fixed by a try-with-resources block?
Candidate: if you could use a try-with-resource here instead of printing the
Reference: replace by map<integer, string> sectiondescriptions = new hashmap<>(jsonsectiondescriptions.size());
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: pls do this in an npe safe way
Candidate: this is not a shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard
Reference: maybe we should have a static set of invalid error codes and make this line if (invalid_codes.conatins(errorcodename)) {
Candidate: i think that this explained in apply, you could use the <UNK> <UNK> <UNK>
Reference: should be initializationtype.cloudinit no?
Candidate: how about using a feature names.
Reference: should be math.min
Candidate: nit: <UNK>
Reference: nit: use vararg constructor. a couple below as well
Candidate: suggestion <UNK> = <UNK>
Reference: this adds a discouraged access warning. maybe use public api?
Candidate: use <UNK>
Reference: extract this timeout into a constant to be shared among the verify calls and initialization.
Candidate: if you could use <UNK> <UNK>
Reference: you set the edge quark with the given edge, then the line after, you sort of close that edge with a null value 1ns after? most definitely not how this
Candidate: this is not be used?
Reference: you can use arrays.fill() if each element is the same and doesn't depend on the index. also, why is the colour set first, then retrieved using getsymbolcolor() ? i think
Candidate: @vilchik-elena you could use <UNK>
Reference: when you call register() from both these place, whats happen differently between the calls. inside the method, both these calls seem to be doing the same thing. if there is
Candidate: router is designed to be a <UNK> <UNK> <UNK>
Reference: we can't change options that we've published, it could break something downstream.
Candidate: minor: <UNK> -> <UNK>
Reference: if you're not familiar with travis-ci.org, i'd be happy to help work out the build issues for you.
Candidate: maybe we could be a <UNK> <UNK>
Reference: as we are removing map support, shall we also remove complextypes?
Candidate: you could use a constant here instead of <UNK>
Reference: use long.valueof() instead of new long() - always for performance reasons
Candidate: long() long.valueof() instead of performance performance performance performance performance performance performance performance performance performance performance performance performance performance performance performance performance performance performance performance performance performance performance performance performance performance
Reference: could you please create truly random uuids e.g. using <link_0> they differ only a few chars from listofdiagnosis and listofproviders...
Candidate: <UNK>
Reference: not sure about this being so tied to authorisation (baseauthoriseresponse, authoriseclient etc.). in theory this could be used for querying a payment in any status.
Candidate: you can be replaced by <UNK>
Reference: maybe we can have the getstring() contains the logic of checking invokesource to reduce the repeated app.language().getapplanguagelocalizedname(app.language().getapplanguagecodes().get(1)
Candidate: this is be done in the
Reference: maybe clear the other system property as well that is set in setup method
Candidate: is there a reason to check that is empty?
Reference: i think this code can be simplified by getting sslhandler.handshakefuture() and adding a listener to it, instead of registering an action with the connectionlifecyclehandler
Candidate: i think 100% sure that future: we should have to have a feature for consistency with the rest of the logic.
Reference: posargs.addall(items)
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: should this be final cbcldata ...?
Candidate: is there a a constant?
Reference: why a long timeout on this one but not on pingwithargumentwhilesubscribed?
Candidate: suggestion <UNK> = <UNK>
Reference: please give a better name.
Candidate: you could use <UNK> to <UNK>
Reference: just return false here.
Candidate: this is not return true if <UNK> == null || <UNK> == null) { return false; }
Reference: can we have the header check?
Candidate: should we add a error message
Reference: clear properties in teardown method @after public void teardown() throws exception { }
Candidate: use <UNK>
Reference: can this npe if groupid does not exist?
Candidate: why we eating the exception is not thrown by <UNK>
Reference: can stringtoencode.getbytes(standardcharsets.utf_8) be used here? what is the point of .name()?
Candidate: use <UNK> instead of <UNK>
Reference: should read 'stream' here
Candidate: you could use a constant?
Reference: nit: 2 spaces needed here.
Candidate: if we is atomicinteger == null) && <UNK> { ... }
Reference: why don't we wait on jobmasterleaderelectionservice.getstartfuture instead of doing busy polling?
Candidate: same as above.
Reference: could we change to list<propertyparameter> or is this api fixed?
Candidate: use collectionutils
Reference: immutablemap.of()
Candidate: static import
Reference: exists
Candidate: the multimap is invalid?
Reference: why catch all exception?
Candidate: this is strange,
Reference: it's not a problem if it configured not to manage, so message is not need here
Candidate: is there a reason for this statement?
Reference: for the case we set system preference to disable the autobuild on .settings change, we should have second test that verifies the opposite (no changes at all if property is
Candidate: this should be a mock
Reference: can you explain this? it always has been strange for me to synchronize on the local variable. but here it is more suspicious because the whole method is synchronized. as
Candidate: we could use a local var instead of creating a new connection,
Reference: add .disableautocomplete() by default autocomplete is enabled, this means this sdk will internally complete the message for you and user do not need to call messagecontext.complete() . but since we
Candidate: why we need to call <UNK> here?
Reference: use java.util.objects
Candidate: please use <UNK>
Reference: this is hard to read over and over. can we add static methods on memorypolicy with nice semantic names? i want memorypolicy.shouldreadfromcache and memorypolicy.shouldwritetocache (or whatever names you think fit).
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: do you still need these (here and below) throws changes?
Candidate: this is not be evil
Reference: i'm actually not sure why it wasn't doing getnotebook().getnote(note id) before @jongyoul @zjffdu ?
Candidate: if we is not touching the <UNK>
Reference: trying to understand this test case: so it tests if value is coerced and the way to check it is doing not in. for example. 4 not in ('1', '2',
Candidate: nit: use <UNK>
Reference: can't we just change the catch clause to catch ttransportexception? then we don't need to rethrow other exceptions ourselves.
Candidate: suggestion <UNK> <UNK>
Reference: we have to trigger some logs, in a case when app receiving invalid/not implemented screen_name (e.g app receive pro screen name instated of profile)
Candidate: could we use a string instead of <UNK>
Reference: add this into connectionpoolconfig constructor (line 82). connectionpoolsocketresetonerror = verifiableproperties.getboolean("connectionpool.socket.reset.on.error", true);
Candidate: is there a constant for these.
Reference: i think you meant getfilename(), this doesn't compile.
Candidate: you could use <UNK>
Reference: this can also be nested. no need to check debug if info isn't enabled.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why did you change the order of super.close() vs cache.close() ?
Candidate: this should be a consequence of the <UNK>
Reference: why does this test remove the first container? is it because container 1 has the 4 spouts being removed and if so, how did we make that the case? we
Candidate: use readasstring(...) instead of <UNK>
Reference: sourceurl -> invalidsourceurl
Candidate: same as above.
Reference: look at this variable name: 1) "erlangbuilder" is the name of your class - no value 2) "dirtyfiles" - yes, these indeed are dirty files, but these are not just
Candidate: this should be <UNK>
Reference: in case of a deleted file, getnewpath returns /dev/null, which causes a garbage path. could you add a check with getchange(), and disable it in case of delete?
Candidate: i clear() could be simplified to "return true" true"
Reference: try not to use failed in error messages as it makes failed tests harder to find in the ci build logs.
Candidate: is there a reason for this test is not
Reference: suggestion logger.write(instant.now().tostring().getbytes(standardcharsets.us_ascii));
Candidate: use utf-8 instead of <UNK>
Reference: please make sure we don't run into an npe here
Candidate: is there a label?
Reference: couldn't you change this to something like: this.queryablegriddialect = as(queryablegriddialect.class, griddialect); this way we don't need to create a new method every time we add a new interface. this reminds
Candidate: you could use a multimap
Reference: i don't think this is the right place to call child interceptors. this would mean child interceptors are invoked, even when the command handler is declared on the parent entity
Candidate: is there a reason for element?
Reference: have made the close method and called it in the finally block of write method. as once that is executed or even there if there is an exception, finally block
Candidate: nit: -> <UNK>
Reference: is this generating a warning? there are a number of renderers in terasology and unless strictly necessary i'd like to keep this variable as worldrenderer, for the time being.
Candidate: this is not to be a connection, this will be propagated to persist the framework wants to persist to persist that persist the framework wants to persist the persist
Reference: querytypedescriptorimpl -> gridquerytypedescriptor?
Candidate: i'm not sure that this method is implemented by the <UNK>
Reference: this is already set below and should probably be final
Candidate: use <UNK> instead of <UNK>
Reference: in utils.preallocatefileifneeded(), the following code is used  if (system.getproperty("os.name").tolowercase().startswith("linux")) { ... }  do you know if one is better than the other?
Candidate: depending on the error depending on the error depending on the depending depending depending depending on the depending depending depending on the depending depending depending depending depending depending depending depending
Reference: usage of ? : is confusing in logging statements. this problem also occurs many times.
Candidate: is there a reason for this logic?
Reference: this cause potential npe when handlerenamedfiles is null, doesn't it?
Candidate: <UNK>
Reference: do we need an unmodifiableset here? the return result doesn't belong to the state of this object.
Candidate: you could use computeifabsent
Reference: is there a unit test we could write to reproduce the npe?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: autoboxing? long == long in java
Candidate: you could replace this with <UNK> with <UNK>
Reference: why collections.unmodifiablelist would not work like in pystatementlisttreeimpl ?
Candidate: @vilchik-elena @vilchik-elena @vilchik-elena @vilchik-elena @vilchik-elena @vilchik-elena @vilchik-elena @vilchik-elena @vilchik-elena @vilchik-elena @vilchik-elena @vilchik-elena @vilchik-elena @vilchik-elena @vilchik-elena @vilchik-elena @vilchik-elena @vilchik-elena @vilchik-elena @vilchik-elena @vilchik-elena @vilchik-elena @vilchik-elena @vilchik-elena @vilchik-elena @vilchik-elena @vilchik-elena @vilchik-elena @vilchik-elena @vilchik-elena
Reference: change inboundrequest to qpi and make it constant.
Candidate: i writevalueasbytes throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable throwable is
Reference: nit: we can inline the threadid in the suppressionemitsensor call.
Candidate: is there a reason to re-throw the exceptions?
Reference: ret name doesn't make sense to me, can you set something meaningful?
Candidate: you could use <UNK>
Reference: i think you mean "liquid glass"
Candidate: this should be replaced by <UNK>
Reference: we should also consider the fact that there could me more than 1 colon in the tags. to do so, let's simply do split(":", 2)
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: typo?
Candidate: @orhan89 @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio
Reference: try to move these as close to where they're used. so first check if the job id exists. if so handle one way. otherwise send the error response. it's confusing
Candidate: this is not good idea. dialog,
Reference: why logger debug here ?
Candidate: this is not to rely on the middle in the middle of the middle block.
Reference: i expect that in 99% of the cases, a vm will be defined with spice once and restarted many times. so please move #899 into the 'if' block to reduce
Candidate: this is designed to be a <UNK>
Reference: does it mean we need this property (credentials_type) from selfservice ?
Candidate: is playing with <UNK>
Reference: > use this.removecallbacksandmessages(null) instead. done in patch set 2
Candidate: > 0 > > > > > > > > > > > > > > > > > > > > > > > > > > > >
Reference: should be replaced with '==' since this field is of type 'int'
Candidate: you could use <UNK> instead of return?
Reference: definitely sdk-internal. package access please.
Candidate: @manuelplazaspalacio args?
Reference: this method allocates a new empty array on each invocation if types are not enumerations. it's cheap enough, but actually it's not designed to be used if higher order is
Candidate: is there a reason for (string operand ?
Reference: i have not studied the issue in any detail but just looking at the code changes i don't think you need to synchronize on the whole method, maybe just on
Candidate: please use 'throws these.
Reference: hmm, not sure, but it might be good to call finish() here, otherwise i suspect it just hang with a blank screen.
Candidate: string format string
Reference: similarly, this makes me nervous (and its impact does not seem to be limited to z/os): we expect the status file to be in ebcdic if on z/os, and in
Candidate: you could use a constant instead of <UNK>
Reference: hi @rezita, islightmodecahnged should be renamed to islightmodechanged
Candidate: this fragment is be called in the fragment annotation?
Reference: looks like a candidate to be factored out. should have some tests
Candidate: i liked the log the the test, but it would be good idea.
Reference: please add exception message.
Candidate: is there a reason for element?
Reference: variable name should be similar to its type.
Candidate: this is right...
Reference: should be internalerrorexception
Candidate: is there any particular reason why not we mapping casts?
Reference: why are you removing this? does the test fail if you don't?
Candidate: you could use <UNK>
Reference: there are two code smells regarding errorelements and parseas not being static
Candidate: this is a <UNK>
Reference: can do.
Candidate: you could use <UNK>
Reference: unnecessary parentheses around value
Candidate: this is be a efficient, but i would be more efficient, that this is is a <UNK>
Reference: you can use unsetobject.instance (from oep.infra.widgets). using a singleton instance makes it easier to test the nature of the object: if (value == unsetobject.instance){ //nothing selected }
Candidate: copy/paste this sort.
Reference: would not it better to bind tracerprovider here as well?
Candidate: this should be <UNK>
Reference: seems like we could avoid extra nesting (and make the diff smaller) by making the bailout condition return early.
Candidate: you could iterate through the <UNK>
Reference: you should prepend the path to the file name. now i get a nosuchfileexception with a file containing only the file name.
Candidate: plugin_id
Reference: should be statisticsoverwritevalue
Candidate: please use <UNK>
Reference: getter/setters should be plain, not these tricks. instead when creating the endpoint in the component, then set the security provider on the endpoint correctly
Candidate: i think this is not efficient, we could use <UNK>
Reference: i'd prefer something like "context: " + getid()
Candidate: is there a reason for the sake of <UNK>
Reference: java pager.builder().withpagesize(1).orderby(order.unspecified)).build()  can be replaced by:  java pager.single()
Candidate: this is not <UNK>
Reference: job.getname() can be extracted as variable for more readability
Candidate: this is designed to be a <UNK> that the is not <UNK> to the the <UNK>
Reference: this seems not needed.
Candidate: is there a reason for avro to be null?
Reference: these changes are fine, but, since there is an api exposed for the feedsla, we'll need to extend that api and add/modify corresponding methods to return process sla misses.
Candidate: if you could use computeifabsent to system.currenttimemillis() instead of <UNK>
Reference: this isn't entirely true. they need to run an earlier version of gerrit to init forward to this schema version.
Candidate: is there a reason for the property?
Reference: let's actually remove this part and instead come up with a proper solution to deal with the staging and cache.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i would change this slightly to, "hawkular metrics schema is up to date at version %s"
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: although it is a patch, this could be true/false which avoids deriving forcepatchbackfill
Candidate: you could use a logger instead of printing stack trace
Reference: should this get logged here?
Candidate: this think this should be done in the own line.
Reference: use extracted method createlegacyfile from above
Candidate: use <UNK> contentlet = new <UNK>
Reference: can these be set to a constant somewhere to limit the capacity for typos?
Candidate: spelling
Reference: shouldn't the publication state be updated?
Candidate: i think we should download the <UNK> <UNK>
Reference: please either remove this or write something user -friendly. no one user will understand current message.
Candidate: you could use a <UNK> to master.
Reference: can you merge these two if's?
Candidate: is there a space between a violation between the false;
Reference: actually should be getname(), because getcanonicalname() can return null for an anonymous class.
Candidate: this is a <UNK>
Reference: let's do a try-catch here, catching containerexception.
Candidate: i think that this is not efficient, we could use the <UNK> the view?
Reference: since we do not need to keep track of the count, this should be foreach.
Candidate: you could use a constant instead of using "\"" = <UNK> <UNK> -> <UNK>
Reference: not needed to make the test pass.
Candidate: <UNK> maybe?
Reference: ok good for me.
Candidate: minor nit : <UNK>
Reference: why to compute dpi & imageselectorindex in this method?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: - name the thread with zap- prefix to be easier to know that's a zap thread (e.g. zap-graphql-parser). - the thread was not started in the importurl, better extract a
Candidate: this is a <UNK>
Reference: small note: user quux is not used in this test and can be removed.
Candidate: i think that the expectations
Reference: i think that works. if the only difference between two of these is that one code is no_code but the other isn't, equals() says false but hashcode() is the same.
Candidate: you could use <UNK>
Reference: is it intentional to deal with remoteopmsg same as removeopresultmsg? if then, shouldn't we rename the method onremoteopresultmsg?
Candidate: i think that the "return" to <UNK>
Reference: have you considered writing a simple filefilter implementation, passing it into listfiles() here and below? that would give us one copy of the test, instead of two that must be
Candidate: is there a reason for this change?
Reference: again, @nullable
Candidate: please use <UNK>
Reference: i think you wanted stringbuilder here.
Candidate: this is a little bit simpler.
Reference: you can put runtimeexception.class.getname(), "vsm" directly here, no need for an intermediate variable.
Candidate: is there a reason for this test is that the is not <UNK>
Reference: replace this with a constant
Candidate: why move this to <UNK>
Reference: fixturestool.gluster_cluster_id
Candidate: please add a guid instead of <UNK>
Reference: @nullable public
Candidate: we could use a <UNK>
Reference: i would invert this condition to say there is a metric whose aggregator list is empty i.e. java metricsquery.getmetrics().stream().anymatch(metric -> metric.getaggregators().isempty())  i think it makes intent clearer by removing
Candidate: is there a reason for this method is not
Reference: computeifabsent?
Candidate: minor nit: you could replace with <UNK>
Reference: 1. better to replace hard-coded string(cleanup.policy) with topicconfig.retention_ms_config . 2. better to replace hard-coded string: compact with topicconfig.cleanup_policy_compact . 3. better to replace segment.policy with topicconfig. segment_bytes_config
Candidate: is there a reason for this method is not <UNK>
Reference: wouldn't getminimum() be more appropriate here than 0.
Candidate: you could use <UNK> here instead of <UNK>
Reference: might be better to validate against a regex.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: maybe we can phrase this a bit more user-friendly "updates are only allowed on individual records, identified by gr_id" or something like that. referring to a select item is at
Candidate: please use <UNK>
Reference: let's use endpointstats?
Candidate: is there a reason to choose a logging here?
Reference: would be better to move this logic to the strategy to avoid splitting it between components.
Candidate: this mock to mock to mock that the mock expectations
Reference: instead of doing this you could pass filefilterutils.suffixfilefilter(".jar") at line 86
Candidate: you could replace this with <UNK> with <UNK>
Reference: we're likely to never supporting something else here. i'd suggest to create and register 2 dedicated inner classes instead which are just implementing the required concrete code.
Candidate: please use <UNK>
Reference: i would imagine that maxstringtruncateatfirstreplacementcharacter and minstringtruncateatfirstreplacementcharacter should also apply to original.
Candidate: should we add a error message
Reference: might want to combine these statements and add more context to the message
Candidate: you could use <UNK>
Reference: it might be useful to include the db name in the metric, not just the table name
Candidate: this should be <UNK>
Reference: use pojomatics
Candidate: you could use a guid instead of <UNK>
Reference: i probably am not understanding this -- is the configurable property name really getmaximumerrorreportingretries, or is it actually something like maximumerrorreportingretries?
Candidate: if you could use <UNK>
Reference: i would add a commonhelper.assertnotnull for the customparams.
Candidate: is there a reason for this method to be called in the <UNK>
Reference: output should say "intype"
Candidate: use <UNK>
Reference: shouldn't address.length() > 108 be good enough ?
Candidate: we should use a <UNK> <UNK>
Reference: let's remove this behavior. setdebugging will only affect the indicators.
Candidate: this should be <UNK>
Reference: suggeset to use assertequals()
Candidate: typo: <UNK> -> <UNK>
Reference: this will not support all formats like jgit's config class does. for example 2gib, 3kib, etc... same applies for other methods that perform conversion from string. why not wrap a
Candidate: you could use <UNK>
Reference: it'll always succeed (we bail out if the hashmap doesn't contain the chunk id a few lines above).
Candidate: if you could use <UNK> <UNK>
Reference: why do we want system default charset and not utf-8 for example always?
Candidate: is there a reason why not use <UNK> here?
Reference: isn't it easier to have the serializationservice as a field on this test? are there any serializationservices created with different settings? having it as field instead of local variable, will
Candidate: you could use a short chunks
Reference: is this method still used in this class? it is now duplicated.
Candidate: you could move this line
Reference: putting super.open() at the end of this method? although it doesn't affect the correctness, it makes the code more readable.
Candidate: this should be a prefix?
Reference: add message
Candidate: minor exception if we is a safe, throw an illegalstateexception instead of <UNK>
Reference: splitaggregations? createintermediateaggregations?
Candidate: this is not json, but this is not safe. json, <UNK> json, json, json, <UNK> json, json, json, json, to json, <UNK> is json, json, json, json, json, to json,
Reference: please use our map util function.
Candidate: why not leverage <UNK>
Reference: doesn't okhttpclient.newbuilder inherit parent's hostnameverifier?
Candidate: this is not needed
Reference: suggestion smartquery<sqlblob> query = oma.select(sqlblob.class)
Candidate: you could use <UNK>
Reference: does this work nicely. i tried this but had no significant project to really see if it works.
Candidate: you could use a constant here instead of <UNK>
Reference: unused?
Candidate: why not use reflectiveoperationexception
Reference: should we abort the server?
Candidate: please print stack trace please.
Reference: system.setproperty(firefoxdriver.systemproperty.browser_logfile, system.getproperty(firefoxdriver.systemproperty.browser_logfile, "/dev/null"))  maybe ?
Candidate: couldn't couldn't lead lead lead lead lead lead lead lead lead lead lead lead lead lead lead lead lead lead lead lead lead lead lead lead lead lead lead lead
Reference: can you please change the log level to debug?
Candidate: why not use <UNK>
Reference: seems odd to even have a public constructor, but no other way to access it. maybe access through getters instead of access private fields?
Candidate: we should use <UNK> to <UNK>
Reference: i don't think having a class for this buys you anything. i'd make them all (possibly static) methods of the enclosing class.
Candidate: this stream() is be ignored.
Reference: its better to return a new list instead of modifying the passed values directly.
Candidate: please use <UNK>
Reference: you don't need to preserve all this info. these were only around because before the health checks mixed and health and metric responsibilities which we shouldn't be doing anyway
Candidate: is there a reason for this logic?
Reference: this does not handle properly the case where you have a return in finally (and where you have not a return in the finally in fact)
Candidate: i guess we should download a <UNK>
Reference: simply awesome, alex!
Candidate: this is not a bit confused about the <UNK>
Reference: you do not need to call integer.parseint(getuuid()) more than once in a method
Candidate: this is not sure that this will be false, that will be false, so that this will be false, that will be false,
Reference: ![major](<link_1> replace this usage of system.out or system.err by a logger. [![rule](<link_2>](<link_0>
Candidate: i explained explained explained explained you could use <UNK> instead of '+'
Reference: this code block is duplicated within the test, it can be extracted to a separate method.
Candidate: you could use a constant instead of <UNK>
Reference: same here. jsonreader is closeable so using a try-with-resources statement for closing the object is maybe a good idea.
Candidate: this is not catching exceptions?
Reference: use applyto() rather than create()
Candidate: this is a bit misleading.
Reference: in trace compass we haven't implemented the context-sensitive help. so remove this line. once we implement it then we can bring it back.
Candidate: this is right...
Reference: no need for 'formitems' variable - simply call 'formbuilder.addformitem' on each new formitem.
Candidate: i'd prefer to use iterators instead of >= true" true"
Reference: we shouldn't embed headers if encoding natively.
Candidate: i think we should use a <UNK> <UNK>
Reference: this needs to use the merged new value, not the new value from the manipulator.
Candidate: this is unnecessary.
Reference: i would prefer we ensure that on entry we're not already jited or so (main.isinterpreted should be an invariant in the beginning). nicolas, do we have any good infrastructure to
Candidate: we could use system.currenttimemillis() instead of <UNK>
Reference: getlength()
Candidate: you could use <UNK>
Reference: can you also check that logunitserver trim_mark_request gives you correct/expected trim mark address
Candidate: we should have to mock here too?
Reference: consider using assertj for these kinds of asserts, and all other asserts (but we can do that later.)
Candidate: use <UNK>
Reference: sorry, i meant: key: username@sftp://sftphostname:sftpport
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: cleanup: remove all **throws middlewarequeryexception** clauses
Candidate: appending to
Reference: i'd suggest to change this to  logger.debug("unregistering service {} at {}:{} ({})", description.servicetype, instance.getinetaddress().gethostaddress(), description.serviceport, instance.getname());
Candidate: @vilchik-elena is there is a to assert that this is not <UNK>
Reference: i'm not sure if this is a valid case. actually, i think request should not be called before subscribe.
Candidate: you could use system.currenttimemillis() instead of <UNK>
Reference: suggestion string key = map.get("binarytext"); if (fulltextdescriptor.getfulltextstoredinblob() && key != null) {
Candidate: you could use a string colon = <UNK> <UNK>
Reference: can visibility remain package-private ?
Candidate: <UNK>
Reference: extract method
Candidate: you could use <UNK>
Reference: we do not need to print out the stack trace here because the exception was expected?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: found -> find
Candidate: i'm not sure how about the sure about the sure that this is is changed.
Reference: @fabriciofx cactoo's lengthof(input) makes these calculations for us
Candidate: log.debug
Reference: i'm confused about a couple things. first, if a subscription changes while we are in the middle of a rebalance, do we need to call onjoinprepare again? with the old
Candidate: i think this should be a firing <UNK> to the discoveryresult dialog wants to be locked log.
Reference: actually i wonder why this method is needed at all. why not just call asyncexec when we don't want to block and syncexec when we do?
Candidate: should we remove this log the
Reference: i think here you can avoid the persistenceentry variable declaration, just adding the instance on result.add since the reference is not being used on any other places.
Candidate: you could use <UNK>
Reference: minor formatting, no spaces between the parens and spaces between the conditional. if (fdomain == null && fworkstation == null)
Candidate: you could use a constant instead of <UNK>
Reference: so, if this is not set, the value should be -1? if there is a constant to compare with would be nice.
Candidate: this is a bit more than <UNK>
Reference: remove getdefaultmongocollection from the nsprefs interface. it is an implementation detail.
Candidate: please use <UNK>
Reference: nit: maps.immutableentry()?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why not represent as an actual list and use joiner to render it to a string?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why did you make this package-private?
Candidate: npe npe npe npe " " " " " volume " " " " " " " " " " " " " " " " " " " "
Reference: when you're here, if address is null, you already know this.address is not null (it will always equate to true), due to the preceding check.
Candidate: this is nullable, auto-boxing
Reference: hmm, explanation is optional in the protobuf. this means the better way would be to not set the explanation at all rather than set it to the empty string.
Candidate: use collectionutils instead of <UNK>
Reference: pls remove whitespaces after opening and before closing parenthesis. we mostly follow regular [java coding conventions](<link_0> (with just a few changes)
Candidate: is there a reason for this logic?
Reference: we should use a logging framework here
Candidate: nit: <UNK>
Reference: the exception should be handled better than that. program should inform that the wanted image wasn't found.
Candidate: you could use use <UNK> instead of objects.isnull
Reference: should be i==0 not i==2
Candidate: please use <UNK>
Reference: spacing is a little off here. two spaces after the return and extra space in front of the immutableset.copyof
Candidate: i think this is be called here instead of creating a new object.
Reference: can't we have something like talendstudioversion.compareto("7.3.1") < 0 so that this is compatible with future versions also ?
Candidate: suggestion <UNK> = <UNK>
Reference: can we correct the hashcode method in slice instead?
Candidate: use <UNK>
Reference: message should be corrected as "batch window should have.. not length batch....
Candidate: @gunnarmorling this a bit strange to me.
Reference: wasn't this renamed to validatingoutputformat?
Candidate: we could use a warn instead of download the enum?
Reference: let's get rid of these "anonymous assert" strings
Candidate: please use <UNK>
Reference: there's a risk here that whether or not the exemption engine is enabled may change between when we record in the database and when we build the request. can we
Candidate: i think this charge is prone to be <UNK>
Reference: still this asserts can use assertequals method? please use them all places.
Candidate: please use <UNK>
Reference: is the hiddenpowertype check necessary?
Candidate: nit: boolean[] datanodeid ?
Reference: (glustervolumeentity)getselecteditem() can be assigned to a local fields, so that avoid casting it again and again
Candidate: this is not needed
Reference: the interpolated/monthly flag should be added in the convention fields. not hard-coded here.
Candidate: please use <UNK>
Reference: i think usage of string concatenation here is an issue. could you fix it?
Candidate: use <UNK>
Reference: should this method return an error if the worker is configured to not enable the active topic feature?
Candidate: suggestion return <UNK> -> entry.getkey(), <UNK>
Reference: why duplicate this line?
Candidate: is there a reason to use expectedexception here?
Reference: btw even if we keep the try catch, this is dead code, because fail internally throw an exception
Candidate: you could use use <UNK> instead of printing the
Reference: this is fixed in #2300. since it's just tests, we probably shouldn't fix it here.
Candidate: i think this is a <UNK>
Reference: does this work if you create a session outside of the control view (command-line)?
Candidate: if you could use <UNK> <UNK>
Reference: is it the case where we start a fresh new block2 transfer ? if yes i think we face the same kind of question than with block1, what should we
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: you can probably just do filelistview.getitems().addall(file) rather than loop over the list. also, since you have a list of files, you probably want to rename the list to files rather
Candidate: you could use the <UNK>
Reference: if you're going to go to the trouble of extracting and extension, i think it makes more sense to use a switch block. that, or don't bother and just do
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: that should be: java logger.error("cannot publish topic: {}", topic, e);
Candidate: i think this decided to increment the <UNK>
Reference: what is the purpose of s_count > 3 condition? lets not use [magic numbers](<link_0> in code.
Candidate: this is not <UNK>
Reference: warn?
Candidate: this is not a
Reference: can we do this in the operatorimpl#init?
Candidate: this is a bit sketchy
Reference: this function always returns true?
Candidate: i think that this loop is unnecessary.
Reference: were we always throwing in this condition?
Candidate: is there a reason for element?
Reference: please switch this to new runnable(... and revert the compile source change
Candidate: this is designed to be defined in <UNK>
Reference: that;s just a lambda expression, you should be able to go es.submit(() -> { touch(filename); return null; }
Candidate: this is designed to be held by calling the lock on every call.
Reference: for fieldutils there is this jira issue: <link_0> "fieldutils methods leak accessible flags" with requests that the visibility of a field should be restored after the field is written. maybe
Candidate: you could use a @visiblefortesting construct, instead of <UNK>
Reference: <code>password.isempty()</code> is an excessive check. ## why? if password is not <code>null</code> then client have already sent it so "password required" is not correct message, but <i>"password should contain at
Candidate: could we add a log.
Reference: could we remove this duplication, please? <img width="2476" alt="screen shot 2019-06-30 at 11 02 01 am" src="<link_1>">  /** * returns a synthetic cursor instance with the provided values. */
Candidate: we could use <UNK> instead of <UNK>
Reference: you might want to have some buffer time in here, maybe up to a minute. if the token is one second away from expiring here, it's possible that it might
Candidate: this is not empty?
Reference: please refactor "f" string literal to a constant. could you please do it with other string literals in this test class?
Candidate: suggestion <UNK> = <UNK>
Reference: in the clean-codian spirit, a couple of convenience methods for isrestbaseenabled() and (especially) getpagelanguage() might improve readability here.
Candidate: this is a label.
Reference: what if we want to add new patient identifier ?
Candidate: i think that this is is not <UNK>
Reference: consider using i18n for "export wizard".
Candidate: suggestion <UNK> = <UNK>
Reference: extreme nit: move this after the below check.
Candidate: you could use <UNK>
Reference: i don't think it's necessary to log this, maybe at a debug or trace level but definitely not info
Candidate: you could use a logger instead of creating a connection,
Reference: can you make this method private and the others that are only used in this file as well
Candidate: suggestion throw new <UNK>
Reference: nit: nullpointerexception?
Candidate: we should throw an exception instead of wrapping the exceptions?
Reference: let's rename dirfrac to dirfrac, shall we? (i realize you did not introduce this variable in the first place, but it never hurts to sprinkle some code-quality-dust over areas that
Candidate: suggestion <UNK> -> <UNK>
Reference: suggestion int errorid = exception instanceof youtubestreamextractor.decryptexception ? r.string.youtube_signature_decryption_error : exception instanceof parsingexception ? r.string.parsing_error : r.string.general_error; onunrecoverableerror(exception, useraction.requested_stream, newpipe.getnameofservice(serviceid), url, errorid);
Candidate: should be replaced by <UNK>
Reference: can you extract this value into static variable to visually understand with what we try to compare?
Candidate: we should use a constant for <UNK>
Reference: iterable is not a list, the cast is unsafe
Candidate: you could use a classcastexception here instead of <UNK>
Reference: could this be fromstring?
Candidate: you could use <UNK>
Reference: can remove this from the above two lines.
Candidate: you could use <UNK> instead of repeating the
Reference: it can be changed to "{}: {}" instead of wrapping to string.format(). and \n may not be needed.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i would suggest not to use conditional binding. we are usually complaining such solutions. instead of that you can use technique that was used in che 5 <link_0>
Candidate: you could use only: <UNK> instead of <UNK>
Reference: no. the name looks like it measure calc offsets + send time. now i understand intent of "messagesend" in metric name though. "caculateoffsetstimems" seems clear enough since calc offset only
Candidate: we can use <UNK>
Reference: this should be the last missing piece of the puzzle to connect it all the way through. the singularitypendingrequest is the object that will carry the envoverrides from the runnowrequest
Candidate: you could use <UNK>
Reference: i don't quite understand this. i thought hypercubeshuffle was supposed to send a tuple to all cells with coordinates equal to hashes of mapped attributes in the tuple, duplicated across
Candidate: we could be reduced to <UNK>
Reference: nit: i find assertequals clearer for basic equality assertions like this
Candidate: <UNK>
Reference: you can probably do a similar simplification to the one i suggested above here.
Candidate: i think that this is not <UNK>
Reference: why do you pass the invocation and not the invocation.getinstance() here?
Candidate: i pagelogging
Reference: i would return super.isdirty() || (fdirty.get() != 0); but that's me.
Candidate: this is not correct.
Reference: how about just typing yourself into the add user box?
Candidate: this is designed to be a <UNK> that the is not <UNK>
Reference: since getview() can be null, it's possible that getview().findviewbyid can throw a nullpointerexception. should we add a if (getview() != null) check?
Candidate: we could use <UNK> <UNK>
Reference: conversionutils :)
Candidate: please use <UNK>
Reference: you really want to return here? i think you mean continue.
Candidate: this is not <UNK>
Reference: should we call updateselected(rows) here as well? according to getmaxsize() method, selected array should be able to hold the max number of rows.
Candidate: you could use <UNK>
Reference: we should not modify the unparse logic of sqlrowoperator, instead in sqldialect, match the row call and unparse it specifically.
Candidate: is this required?
Reference: maybe not now, but i think in the future we should consider a 'receiver quality policy' to handle this: basically we'd have a policy to prefer quality or number of
Candidate: we could be modified by <UNK>
Reference: you could put this line between 98 and 99
Candidate: if <UNK> == null
Reference: computeifabsent is apparently not as performant as it could be in java 7. could be worth manually checking if present first since we potentially do this on every request.
Candidate: is there a reason for this method is not <UNK>
Reference: ![minor](<link_2> 'severity: minor') reorder the modifiers to comply with the java language specification. [![rule](<link_1>](<link_0>
Candidate: this is be <UNK>
Reference: i'd extract these two lines into a method, since it's duplicated on the tests: createjsonserialization(jsonserializer...adapters)
Candidate: we should use isempty() instead of <UNK>
Reference: in order to make this cleaner and more robust, i would suggest to put the try/catch statement outside the if(logger.isinfoenabled()). you can do it this way: scriptresult res; try {
Candidate: maybe we could use a constants for the
Reference: can please you get rid of this init() method? add 'open()' method to specialthemedesignerpageobject and rename it to specialthemedesignerpage. use lombok getters for infobox and builder
Candidate: you could use <UNK>
Reference: please use double, not double. it adds overhead (boxing/unboxing). also, no cast would be needed.
Candidate: this is this(name, <UNK>
Reference: the assertequals param order is expected, actual, so this (and all other assertions) should be written as  java assertequals("max mustermann", info.name);
Candidate: use utf-8 instead of a constant?
Reference: this might be an issue in eventcreationdialog, but when the dialog pops up its not confined to the bounds of the main window. in the particular case of my setup
Candidate: this args?
Reference: update the beanvalidationprovider according to cdi20 requirments, please.
Candidate: wait.forelementclickable() should be <UNK>
Reference: we may have some cases where the resource exist but is not loaded
Candidate: is there any particular reason why not catching a exception?
Reference: inline requirenonnull with this.
Candidate: nit: use <UNK>
Reference: return visitor.checkiftype(descriptortype.numerical);
Candidate: this args?
Reference: throw assertionerror if checkboxvisibility is false
Candidate: this is a <UNK>
Reference: you shouldn't _need_ to check for null here, since the merge function will only be called if there is an existing value (which should always be non-null).
Candidate: is there a reason to check that the operand is empty?
Reference: if you fight for performance, maybe you want to replace this call by the string formatting
Candidate: can you bail try-with-resource block
Reference: same here. no such method defined in interface node
Candidate: this is a lot of these.
Reference: i think we should strictly reject null-names right away as they will cause a rather cryptic exception message further down (i am not even sure the string expansion will work
Candidate: suggestion throw new <UNK>
Reference: formatting change? i'd rather keep this.
Candidate: is there a reason for this method is not <UNK>
Reference: i love to use static imports, but it is up to u
Candidate: this is not webapplicationexception to propagate the <UNK>
Reference: hashmap --> linkedhashmap. always.
Candidate: suggestion return <UNK>
Reference: do you think it's safe to instantiate the class? in kafka i compared the packages as string.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: parsing previous files from < wf 10 isn't allowed? i'm referring here to that fact that parsingoptions are not passed through.
Candidate: is there a reason that affects the attributes object?
Reference: adapter.
Candidate: i don't think the clear() is required?
Reference: this is a protocol mandated string, it should be a string constant in code.
Candidate: is there a reason for this logic?
Reference: use "ketch stage"
Candidate: nit: <UNK> = <UNK> <UNK> <UNK>
Reference: i guess this is the wip part...
Candidate: if you could use <UNK> <UNK>
Reference: variable allocation not needed.
Candidate: i guess we should use <UNK> <UNK>
Reference: suggestion: another way of handling the last gpw is with the scanner close method as well or when trying to commit the gpw. with that approach, you won't need to
Candidate: nope, fyi, this is is not
Reference: use assertequals(collections.emptylist(), feedbackeditpage.gettextsforallstatusmessagestouser());
Candidate: i think that this is not <UNK>
Reference: why is this part needed? there will be no additional cycle of vmsmonitoring until the 'perform' method of the previous cycle ends, no?
Candidate: i think that clear() is submits clicking on every time?
Reference: i think that the log message should be "because it hasn't been signed by" rather than "since it's not approved by". @mattihjelm, any thoughts?
Candidate: this is not closed (can remove.
Reference: private static void warningmessage(string message, string[] args, boolean strict) {
Candidate: we could use a <UNK> <UNK>
Reference: we need to test this code with a large survey (200+) questions... i would guess that this process of deleting related data will take more than 60 secs, and therefore,
Candidate: you should throw an exception instead of <UNK>
Reference: please add getmessage. : {}:\n{}
Candidate: rename to var
Reference: n < 0 if you got an integer overflow or what? etoomanyrows =)
Candidate: nit: readasstring(...) instead of <UNK>
Reference: please log also the command id (of the removesnapshotsingledisklivecommand command)
Candidate: if (throwable is not
Reference: the switch could be substituted via a static final hashmap that has been statically prefilled during classloadinig (basically implementing a lookup table) but i leave this idea up for @davivel's
Candidate: we could use <UNK>
Reference: if this is performance-sensitive, could try getitem(branchname) first optimistically.
Candidate: is there a reason for element?
Reference: enclose in if (log.isdebugenabled())
Candidate: you could use <UNK>
Reference: is there any chance at all this could be expensive? (wondering if we should avoid calling it if the device pixel ratio hasn't changed in the last 1s)
Candidate: stringutils.isnotblank should be stringutils.isnotblank
Reference: with the snapshotmanager there are now 3 entities that need their data persisted (config, uninstaller, snapshot). the only thing that differs is the persisted data type. all 3 use roughly
Candidate: this is not be encapsulated in a conditional.
Reference: should we move this to a config action as well?
Candidate: you could use <UNK> annotation, no?
Reference: i suggest to use monotonic time which is exposed by <link_0> it would make the code resilient to system clock changes.
Candidate: how about catching the exception
Reference: should be final.
Candidate: @gunnarmorling this a bit strange to <UNK>
Reference: all other methods use trace(), this one debug(). is that done on purpose?
Candidate: i is expecting to warning mapping?
Reference: typo in maxrety
Candidate: please use <UNK> division
Reference: very minor, but i am missing some spaces after the commas :-)
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: suggestion this.currentbranch.getname());
Candidate: is there a reason for this logic?
Reference: so basically, requestid is the current count of already masked expired rows? can you please rename the variable to indicate that and the log line as well?
Candidate: marking this is marking "query from "query from <UNK>
Reference: i can't see where is the index added.
Candidate: please move this to <UNK>
Reference: please extract to imageshandler -> e.g. getleafimages
Candidate: please remove the
Reference: this is a race.. what is the status immediately changes?
Candidate: you can move this lock to succeeded
Reference: make it evident that the count is number of repos
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: space required
Candidate: you could use <UNK> instead of storagetype <UNK>
Reference: i wonder if this is the right place for the fix. shouldn't we make sure that red/green/blue is not negative and not above 1? at least the later is already
Candidate: hours hours hours hours hours hours hours hours hours hours hours hours hours hours hours hours hours hours hours hours hours hours hours hours hours hours hours hours hours hours
Reference: interesting, this setting will enforce checking all the entries, no? @govind-menon can you confirm what is the purpose of this?
Candidate: use <UNK>
Reference: if band is null the constructor will throw an illegalargumentexceptionwhich just as well could be a nullpointerexception. in other words, i think just band.defaultsystem without the null check is okay.
Candidate: if you could use <UNK> <UNK>
Reference: define a constant instead of duplicating this literal "favourites" 4 times.
Candidate: is there a reason to re-throw the exception?
Reference: instead of using an anonymous class, can we define this as a separate thread and name it for easier debugging?
Candidate: no, this is eating that this is not that is is we should throw an exception for the
Reference: appended ? you might want to rephrase this.
Candidate: i think we could be a here instead of nesting.
Reference: this variable is unnecessary now.
Candidate: you could use <UNK> instead of <UNK>
Reference: try to use currentselectedelement.isequalnode(elementtoselect)
Candidate: if you could use <UNK>
Reference: methodname is not used or?
Candidate: i we need to use narrowing to narrowing mapping?
Reference: what is the point in storing the previous solution recorder ?
Candidate: i think that this is is misleading.
Reference: why does it need to be sorted two times? please also remove the space between order and (
Candidate: could be careful with <UNK>
Reference: use explicit blocks even for one-liners. i was also wondering why this behavior is preferable to returning an empty list. at least for me it breaks the [principle of least
Candidate: you could use <UNK>
Reference: would it be possible to verify the order of calls too? like that onclose() was really executed before destroy was called? not a hard req, just thinking that it could
Candidate: wait.forelementclickable() should be <UNK>
Reference: i'm confused - i see that you didn't change the 'ibm power 8e' and that you don't convert 'ibm power v1.0' that was changed.. don't we need to convert the
Candidate: you could use a constant here instead of <UNK>
Reference: nit: perhaps extract a method "replayterm(tocyrillic)" that does all this? it could be reused in the tolatin case
Candidate: if this is not efficient, we could be a bottleneck. bottleneck. is a bottleneck. bottleneck. is a bottleneck. bottleneck. is a efficient, bottleneck. is a efficient, bottleneck. is a efficient,
Reference: why public?
Candidate: i think this should be <UNK>
Reference: i think removeall will return an empty list rather than null. let's add a size check here as well
Candidate: you could use a <UNK> here instead of creating a new object and then the clear() is unnecessary.
Reference: this can potentially crash the app on startup, since it can fire a network call (refreshstreamconfigs) before everything else is initialized. this should probably be the last thing to be
Candidate: i think that this is not efficient, we should have to to the <UNK>
Reference: @erenavsarogullari - instead of forward slash - can you use java path class - to keep it more generic?
Candidate: i think that this fail, is a design that the is not <UNK>
Reference: whitespace
Candidate: you could use a try-with-resources here instead of printing the
Reference: this may be cleaner. it also doesn't allocate a new object for each iteration of the loop:  java iterator<?> myiter = value.iterator(); for (int index=0; myiter.hasnext(); ++index) { flatnestedmap.put(string.format("%s[%s],
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: would it be better/easier to just have the text be created/added in the constructor then just set/get from there? could you try that?
Candidate: if this is right...
Reference: same here, frommessage->principal would make more sense maybe
Candidate: is there a reason for this logic?
Reference: useless because containsexactly will check it too and has probably a better error message when it fails.
Candidate: this is designed to be a <UNK>
Reference: if file not found exception is thrown (when file not exists, correct status), internal error exception is thrown and everything fail. in this case we need to set perunnamespaces map
Candidate: we could use reflectiveoperationexception
Reference: you can use lambda here
Candidate: you could use a constant instead of <UNK>
Reference: there is a mess here.. honestly, without deeper investigation i'm not able to come with a convincing explanation for why, but i think the same treatment you added in removevmsfromcache
Candidate: i think that this is not <UNK>
Reference: here we are expecting a header schema, however i couldn't find some information how do we set it up, do we expect the user to add it?
Candidate: we should use the exception here
Reference: if the code is not necessary, let's remove it.
Candidate: is there a reason for this is not a property?
Reference: new append
Candidate: you could be simplified simplified to "return statements.
Reference: assert return value
Candidate: you could call <UNK>
Reference: you should stay away from java 1.4 ideoms and use java 1.5 for each loop instead, imho.
Candidate: nit: we use offset = <UNK> offset offset size offset offset offset offset offset offset offset offset offset offset offset offset size offset offset offset offset offset offset size offset
Reference: this could be useful for other httpstatus' too. would it be possible to extract the withheader().withbody() out into another method to allow for fluent composition with other error codes? for
Candidate: this is a <UNK>
Reference: please simply use the argument name like "map" or whatever the faulty argument name is.
Candidate: let's remove this log,
Reference: if the newdefaultversion is null, do we really want to return true?
Candidate: this is a bit strange, but it would be a bit more readable.
Reference: @lautarobock let's declare throws exception, as per the [recommendations here](<link_0>
Candidate: @exper0 let's use 'throws <UNK>
Reference: do you think there would be an opportunity here to avoid the removeall and to create only menus for new entries/remove too old entries? maybe instead of a queue of
Candidate: you could annotate the custom variable name <UNK>
Reference: if the connection is already made at this point, the log line should really be "_connected_ to helios-solo watchdog at ..."
Candidate: i'm not sure how about sure about sure about sure about sure about sure about sure about sure about sure about sure about this is expecting to have a expecting
Reference: i thought we weren't going to do this
Candidate: this is designed to be held by clicking on every time.
Reference: why not:  for (string [] line: lines.sublist(1, lines.size() -1)) { ... }
Candidate: you could use <UNK>
Reference: there are a ton of calls (and casts) to getactivity(). probably better to just save a reference onattach so you only have to cast once.
Candidate: @manuelplazaspalacio this is not touching the multimap
Reference: wrong class name in the error message.
Candidate: this is not be <UNK>
Reference: if its from active, we can choose to not even create this object
Candidate: wait.forelementclickable() should be <UNK>
Reference: this needs to be conditional. this should only be enabled on devices with both nv and ruim. otherwise the system should just default to the appropriate type.
Candidate: you could bail here instead of <UNK>
Reference: it would be a tiiny bit safer/nicer if you put the config -> servers conversion inside the load method.
Candidate: no, this is not eating the <UNK>
Reference: double semi-colon
Candidate: we could use the exception here instead of printing the exception
Reference: perhaps change the condition to: java return cigar.getcigarelement(0).getoperator() == cigaroperator.s && (cigar.getcigarelement(0).getlength() == readlength || readlength == 0) && cigar.getcigarelement(1).getoperator() == cigaroperator.n;
Candidate: <UNK> --> <UNK>
Reference: it will be nice to have this method and the supercategory values accessible to reuse this map. for example, if i create a new program group for a tool i
Candidate: you could use <UNK>
Reference: please always use braces around code blocks even in this case not needed. also, the variable is not madapter but eventlistadapter
Candidate: is there a reason to assert that this is is not implemented in the pr?
Reference: fwiw, we typically do these using tostringbuilder. intellij will actually do all the work for you if you want. [here's a random example](<link_0>
Candidate: we should print the string to <UNK>
Reference: what if there are multiple such related nodes at same level? wouldn't they get same variable name (e.g. x1 at first level)? thinking about same might actually happen when labels
Candidate: this is explained in regards to streaming <UNK>
Reference: couldn't this be put inside the if (!wasadapternull), too?
Candidate: if you could use <UNK> <UNK>
Reference: interesting, what's the rationale for not using array.length?
Candidate: please use <UNK>
Reference: space after decl
Candidate: i liked that this method is be named <UNK> whose sizes is a pr?
Reference: similar thought here about merging the catches
Candidate: i think (throwable
Reference: i've noticed that you seem to have a strange habit of explicitly doing error checks and then not handling the error properly. here, obviously you need to return false if
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: there's a method already for this on abstractinfinispantest#eventually, could it be used here?
Candidate: we could use a multimap here instead of creating a new object instead of creating a is)
Reference: can we put this check in the outer loop (i.e. between line 66 and 67) and only log once for each plugin that has an invalid name? for (string pluginname
Candidate: use utf-8 instead of mkdirs()
Reference: can be boolean here too.
Candidate: <UNK>
Reference: i think it would be good here to check that the clabels are there. i.e: fbot.clabel("message matches \"f\""); fbot.clabel("timestamp matches \"2\"");
Candidate: please use <UNK>
Reference: why not orelse(duration.seconds(5))?
Candidate: this is not a bit confused about this this is a <UNK> i wonder if this is is not <UNK>
Reference: could you add an assertion that the contents of file0 are "modified file0" (for working directory)?
Candidate: use <UNK>
Reference: can we iterate over the keyset() here instead? the naming helps it tend to be more descriptive than using entry.getkey() and entry.getvalue(). same for below.
Candidate: use collectionutils instead of <UNK>
Reference: can replace this with return arrayutils.contains(parts, "multipart/form-data");
Candidate: if this is is null, then you can throw an npe.
Reference: can you please log this exception.
Candidate: could we remove this pretty-print
Reference: why tolowercase? can you make changes to bean to handle for the same so that all consumers are not worried about the same?
Candidate: i think we should have a <UNK> to <UNK>
Reference: please remove every redundant line from this test
Candidate: please use <UNK>
Reference: why 1? can't it be on a different position?
Candidate: you could use <UNK>
Reference: 'true' is the default value, no need to set it explicitly
Candidate: you could use <UNK>
Reference: the infinite loop that @danielb987 saw in ci goes through here. line 1909 of tracksegment view in getcentreseg does a setcoordscenter call, which goes through getbounds, which in line 574
Candidate: you could use <UNK>
Reference: in the junit integration we actually only check if testresult.hasexception() {throw exception}.. if the test is skipped the junit specific exception assumptionviolatedexception is caught from junit and rethrown.. we would
Candidate: if you could use <UNK> <UNK>
Reference: rly?
Candidate: <UNK> -> <UNK>
Reference: @ascend1 can you check further why we pick cross join over broadcast join? with equality join condition, we should pick pick broadcast join instead of cross join. thanks!
Candidate: use uppercase annotation, instead of <UNK>
Reference: something to keep in mind: we encourage users to turn on "trace" logging to see the actual moves that optaplanner is taking. therefore, even the trace log must be _readable_
Candidate: please remove this assertion.
Reference: is there any rational on why 2000 as the sleep time? i was thinking if it would be interesting to have a "retry strategy" for async assertions. so we could
Candidate: <UNK> --> <UNK> --> <UNK> --> <UNK>
Reference: now that this is a standalone function. you can just do return inetadress.get... here, and remove the temporary variable.
Candidate: if we could use a '+' instead of '+'
Reference: check this right after lookupsourceproviderfuture.isdone()... or better yet, don't check it here at all, check in tryfetchlookupsourceprovider
Candidate: if <UNK> == null || <UNK> == <UNK> || <UNK> || <UNK> || <UNK> || <UNK> || <UNK> || <UNK> || <UNK> || <UNK> || <UNK> || <UNK> || <UNK>
Reference: i think there should be a more explicit check for the exact path to the meta-inf/maven/plungin.xml, because... what will happen, if, say, there is coincidentally some other plugin.xml file...?
Candidate: could we add a here instead of <UNK>
Reference: please add 2-length names like "fo" to original and expected arrays.
Candidate: you could use a static import <UNK>
Reference: should this print to the user or throw an exception. i am concerned we are printing to the user while it should be logged or throw an exception.
Candidate: suggestion <UNK> = <UNK>
Reference: rename gone wild? this isn't a supplier.
Candidate: let's use reflectiveoperationexception
Reference: since there are no compareandset(), do you think it is better to use a volatile exception (since there is no atomicexception)? also, is this function required? looks to me like
Candidate: this is not to be <UNK>
Reference: could use writelong(double.doubletolongbits(v)) to avoid code duplication
Candidate: i am not sure how about this pr, but i am not sure how about this pr, but i am looking at this pr, but i'm not sure how about
Reference: this protocol works only if cluster is in-memory and baseline-autoadjust is enabled. how it works when persistence is enabled and with/without baseline autoadjust is enabled?
Candidate: i think this is not efficient, we could use the <UNK>
Reference: i think this is not needed...
Candidate: is there a reason for avro ?
Reference: this doesn't actually work in all cases. since the processing of the stream occurs later, the connection backing the cpq can close and it'll trigger an exception instead of returning
Candidate: if we is not null
Reference: i think this should be setselected not setenabled
Candidate: this is not needed
Reference: see if you can exceptions instead of booleans to indicate exceptional situations.
Candidate: if you could use a string instead of return?
Reference: this line could be moved inside the upper if block to save an additional log level check in the non logging case.
Candidate: you could use a log.
Reference: i'm consistently getting this failure at the logout step of this test (running the tests on a pixel, api 26): android.support.test.espresso.nomatchingviewexception: no views in hierarchy found matching: with id: android:id/button1
Candidate: wait.forelementclickable() should be <UNK>
Reference: get out the .count() call out in a variable so that it's clearer
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i think in this else case we need to fail the promise, so that we can notify that the write completed badly.
Candidate: this exception is never thrown.
Reference: size -> count
Candidate: use a constant instead of <UNK>
Reference: i think there is an equals test helper, something similar might be nice for compareto.
Candidate: is there a reason for element?
Reference: now that we no longer leak usage count on purpose and the usage count is now ignored anyway, i think we can get rid of this.
Candidate: nit: we don't have to lock here also?
Reference: the following check may not needed, since this is done in the constructor. if (instance == null) {
Candidate: we could use use <UNK> instead of creating a new object instead of is)
Reference: @vbradnitski you can use the projectpermissions variable instead of recall the getpermissionsfromform( form ) method.
Candidate: why not use <UNK>
Reference: at first, i didn't like that this because it replaced the whole set - if you'd called get() first then this the set would get re-initialized when it already had
Candidate: you could be simplified to java return <UNK> -> <UNK>
Reference: i would imagine that removeaddress and the call to personaddress.setperson are technically mutually exclusive, so this should probably be an if-else clause or you should call continue after removing it.
Candidate: this should be a <UNK>
Reference: can't we mention the actual type where the no-arg constructor couldn't be found? that would help the developer.
Candidate: i'm not sure how about this is a <UNK> we should have to <UNK> the <UNK>
Reference: do you know the scenario where the connection is null? are you sure it's impossible in the first branch?
Candidate: use isempty() instead of objects.isnull
Reference: you should return here, and remove the unneeded boolean
Candidate: please add
Reference: i don't really understand why the context was used actually, does not make much sense. all you have to do to know the extending macro name is to call macrodescriptor#getname().
Candidate: this "_" is not <UNK>
Reference: i prefer to not have this here and instead let the inboundbuffer code handle logging like you did for netsocket
Candidate: is there any particular reason why is changed?
Reference: let's use java8 lambda here.
Candidate: how about using <UNK>
Reference: should be based on guid only
Candidate: please use objects.hash()
Reference: use name() instead. tostring() can be overridden
Candidate: please use stream()
Reference: an assertion message for the fail()'s would be nice.
Candidate: this is not to be a
Reference: may be move this to a private method called setuptest()
Candidate: minor: the sake maybe?
Reference: dont catch generic exceptions. narrow it down to something specific.
Candidate: i think this is a good idea.
Reference: rename stopat to stopatns
Candidate: i think that this is is hang that the hang is hang that hang the hang is hang that hang the hang is hang that hang the hang is hang
Reference: line 147 and 148 are redundant.
Candidate: this is be <UNK>
Reference: because there's nothing else in this method other than the synchronized block, we don't really need the local variable, you can just replace the assignments of listeners with return statements.
Candidate: you could bail here instead of <UNK>
Reference: i'd put this if outside the other. but :+1: anyway... no need for locks, since the temp dir won't change (or shouldn't, anyway)
Candidate: please ides ides ides ides ides ides ides ides ides ides ides ides ides could be reduced to the caller.
Reference: if you get line 145 to return then you won't need this line.
Candidate: please use [our guidelines](<link_0>
Reference: you can not be sure that the value is present in the local storage (see the storevncdata). please wrap the ...valueof(...) by try-catch
Candidate: this is not to be <UNK>
Reference: o(n) for changing the type (which should be static in a statically typed language) is evil.
Candidate: this should be <UNK>
Reference: i'd prefer the condition to check lookup.getcount() but that's not a big deal.
Candidate: i think that this is is rejected but no need to call <UNK>
Reference: the same here. i think this line is not needed.
Candidate: we should use a enum annotation, instead of <UNK>
Reference: would be clearer if this said storagedomainfunction (it serves as a data domain, it is of type fcp)
Candidate: you can use this piece of the
Reference: why these verifications have been removed ?
Candidate: i think this is not <UNK>
Reference: since we decided to remove lostapiclient#numberoflisteners() can this also be removed? i see its currently used in tests only. can we switch back to using the shadowlocationmanager in those tests?
Candidate: you could use a local var instead of mutating a element?
Reference: latch
Candidate: typo: <UNK> -> <UNK>
Reference: safer to check if the statetype exists or not.
Candidate: you could use a lock here instead of <UNK>
Reference: it's a personal taste, but i prefer:  java if (m_count >= m_objects.length) { throw new nosuchelementexception(); } return m_objects[m_count++];
Candidate: this is a duplicate, we don't need to throw new exception?
Reference: nit: we should use consumerconfig.default_api_timeout_ms_config instead of a hard-coded string -- in case we ever deprecate the config we would figure out that we might want to update this log
Candidate: stream() is not stream()
Reference: the member variables in this class are scoped to this unnecessarily. not sure if that is a style preference, just pointing it out. looks like the same is true for
Candidate: we could use <UNK> to <UNK>
Reference: you can just use bitwise operators (bitwise and) to check for flags.
Candidate: use <UNK>
Reference: please follow parameters order in ctor and assignments order inside ctor -> move below yaxismaximum.
Candidate: why is this is not integer to be stuff?
Reference: add a liquid_break or keep the previous liquid_flow? nothing is mixing here
Candidate: why do we need to streaming careful here?
Reference: this is nice, but running init to upgrade only helps if the expected schema version (ever) is higher than the current schema version (sver.versionnbr). if somebody runs an old gerrit
Candidate: we could move this to <UNK>
Reference: you need to terminate the recursion on isspecialwildproject(), and handle projects that have no parent (as their parent is all projects). i would replace the method with: if (!localowners.isempty() ||
Candidate: i think this is be a <UNK> <UNK> #resolved
Reference: since you already checked the sequence number prior to this line this check may not be correct and may cause statesequenceexception. should it be replaced by this: if (sequence !=
Candidate: i am concerned about this concerned about this, but i am concerned that this is is a bit strange, but it would be easier to
Reference: these saved state keys should be defined as constants.
Candidate: @chaviw is a fragment is already used in the <UNK>
Reference: static import of reflection2.getinvokableparameters?
Candidate: use <UNK>
Reference: please use constants in airlift sizeof.
Candidate: this is be <UNK>
Reference: is there any risk of this being called where checkboxes_ is empty, so checkboxes_.size() - 1 would be negative and (i think) end up throwing an exception? might be worth
Candidate: this is a bit more than personal preference but i am not sure how about the <UNK>
Reference: what do you think about keeping the naming of connect instead of adding connection? besides just consistency, i think that the former is more accurate given that it's a verb
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: you should not need to instantiate your own executor here. executescript is available for all subclasses of apppage.
Candidate: you could use <UNK>
Reference: constants.connector
Candidate: this is designed to log the
Reference: the not-ok and the ok sysout have been interchanged it seems
Candidate: please use <UNK>
Reference: this.query = requirenonnull(query);
Candidate: you could use <UNK> instead of <UNK>
Reference: so real-only fragments are still being replicated?
Candidate: this boolean[] is not worrying that is is not efficient, but i guess that this is is not efficient, but i guess that is is not efficient,
Reference: can we test the task definitions repo to see if the task definition was created?
Candidate: you could use <UNK>
Reference: i think we need an attribute here. otherwise there will be no differences anyway?
Candidate: you could use <UNK>
Reference: zlog.logexception(e) can be used here.
Candidate: should we print {}: <UNK>
Reference: yeah no uniqueness constraint?
Candidate: this exception is be thrown by <UNK>
Reference: this could be metadataschema.deletessection.decodedeleterow(entry.getkey().getrow()) or similar.
Candidate: suggestion <UNK> = new <UNK>
Reference: nit: keep args on line? also valid for various methods in this package.
Candidate: this args?
Reference: you're inconsistent here. i think it would be most readable if you keep currentguid as first argument i.e. !currentguid.equals(imagetemplate) &&
Candidate: why not sure that this is is not <UNK>
Reference: the bit is either set or not, so != 0 is a faster test here.
Candidate: <UNK>
Reference: i would rather check for a null treewithcondition here and return false rather than passing it into the condition method as a nullable.
Candidate: this should be a <UNK> <UNK>
Reference: iterables.transform ?
Candidate: could you use <UNK>
Reference: this is something that maybe doesn't make sense anymore. here we can see that event type is coupled to the kafka topic name. but since this relation is made through
Candidate: is there a reason for avro ?
Reference: you should also support visitmethoddeclaration
Candidate: you could use <UNK>
Reference: why, btw orienteer_app_home, but not just orienteer_home?
Candidate: suggestion if <UNK> == null) {
Reference: should we check if default path is not encrypted ..then only store it against no_encryption?
Candidate: is there a reason for example that this is is not <UNK>
Reference: should state and country also be logged?
Candidate: you could use <UNK> instead of <UNK>
Reference: not completely sure, but i think this could also be written as java states.merge(statename, 1l, long::sum);
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: method alljobswitheveryannotation has 29 lines of code (exceeds 25 allowed). consider refactoring.
Candidate: this is union is not union
Reference: invert this so it returns early
Candidate: you could use <UNK>
Reference: i don't think you need to return newsession each time you call a set* method.
Candidate: please add a message for the
Reference: remotegetall() could return a completablefutures.completednull(), and then you wouldn't need the if.
Candidate: this multimap should be replaced by "this". if <UNK> == null) { return <UNK> } }));
Reference: unnecessary line, drop this
Candidate: you could use a constant instead of <UNK>
Reference: again, use ioutils.
Candidate: @ivange94 not sure that this is is not
Reference: in theory getvisiblefor could return a splitpackagebinding, so this would break the invariant that declaredpackages doesn't contain them. but the surrounding packagebinding.isdeclaredin(this) ensures that this doesn't happen (assuming the bug
Candidate: maybe we could be better to use <UNK>
Reference: let's just drop to debug
Candidate: i explained explained explained explained explained explained explained explained explained explained explained explained explained explained explained explained we could use a <UNK>
Reference: logger::info would also work here
Candidate: this should be a <UNK>
Reference: what case does this cover that wasn't covered previously?
Candidate: this is designed to be a <UNK> <UNK>
Reference: better use list<object> and arraylist<>
Candidate: suggestion @override public static final int string <UNK> = <UNK>
Reference: add rights checks at this point and only call savexwikidoccollection on docformcommand if the rights are given. we need the rights-checks here because it is a call comming from scripts.
Candidate: if you should use <UNK>
Reference: this can be replaced with assertthatthrownby(() -> message.dolocalputall(partitionedregion, mock(internaldistributedmember.class), 1)).isinstanceof(primarybucketexception.class); to make things a bit neater.
Candidate: please use 'throws <UNK>
Reference: isnullorempty
Candidate: ![major](<link_1> 'severity: major') remove this method. [![rule](<link_2>](<link_0>
Reference: all these flags can be combined with firstbytes since we have enough room there.
Candidate: rename to
Reference: nit: stream.of(spilt)
Candidate: could you use <UNK>
Reference: i don't understand the purpose of this. why would we need to create a dedicated reportable for unmapped request ? i would prefer to make use of the metrics object
Candidate: please use camelcase
Reference: the exception is never thrown.
Candidate: use <UNK>
Reference: don't need to cast to a float here or below
Candidate: i understood the encapsulated in the statements.
Reference: since all exceptions are handled the same way, you can use only one clause: } catch (urisyntaxexception | ioexception | tmftraceexception e) { throw new illegalstateexception(e); } (don't use runtimeexception
Candidate: should we use e.getmessage() instead of <UNK>
Reference: if disabledmetrictypes is an enumset, we could use enumset.noneof.
Candidate: you could use a <UNK>
Reference: use computeifabsent instead.
Candidate: this is is not <UNK>
Reference: let me note a pattern here, personally i do not like cases that fall through to the default case.
Candidate: nit: space between <UNK>
Reference: why we need to change this class at all ? i can not find a reason.
Candidate: you could use <UNK>
Reference: i don't see getduerequesters doing anything about the order of the requesters it receives, and i think here we want to min across all requesters. i would also add a
Candidate: could you please use this piece of the piece of <UNK>
Reference: to make swt.no_move + swt.title style combination work on windows as well, please add below line @2099 if((style & swt.no_move) != 0 && msg == os.wm_nclbuttondown && wparam == os.htcaption)
Candidate: use <UNK>
Reference: lowerversionhosts , lowcpuhosts and incompatibleemulatedmachinehosts is going to have an extra "," at the end, it should be removed.
Candidate: you can replace this by: <UNK> <UNK> <UNK>
Reference: lets just initialize new installations with the default abbreviation of cr.
Candidate: i am not sure how about sure about sure about sure about sure about sure about sure about that we have a to discover that is a
Reference: this honestly feels like we can static builder the individualized texts like all other builders instead of using a factory
Candidate: i think this should be to be a <UNK> <UNK>
Reference: why are there 2 errorreportrequest classes?
Candidate: use <UNK>
Reference: i got a bit confused trying to work out exactly what sar was :). in any case, looking at what this does, it feels like it would be simpler if
Candidate: this is explained in apply, assertion. [![rule](<link_2>](<link_0>
Reference: ![major](<link_0> 'severity: major') invoke method(s) only conditionally. [![rule](<link_1>](<link_2>
Candidate: you should use constants for these.
Reference: you removed the domain requirement type. why?
Candidate: i'm not sure how about using <UNK>
Reference: hmm, can you call this ctor with null flags at all (besides using reflection)? if you don't specify any, it gets new flag[0], if you set null as last param,
Candidate: you can use <UNK>
Reference: i might be wrong, but it seems that mdeviceonly is missing here. minor: wondering why there is this method to refresh/set fragment parameters. is there a way to switch the
Candidate: this is not to be <UNK>
Reference: this should be handled in item.getlabel()
Candidate: suggestion if <UNK> != null) {
Reference: nit: this adds manimatorlistener once per registered callback? we probably shouldn't assume that animatorset will check for duplicated listeners. i'd move this 2 lines up, inside the null check.
Candidate: nextvalueindex could be replaced by <UNK>
Reference: let's rename it to blobuploadconflictcount because there is a same name metric in vcrmetrics.blobuploadskippedcount. they indicate different things.
Candidate: minor: you could be simplified to <UNK>
Reference: instead of using selectionlistener and have an empty defaultselected method, you can use a selectionadapter. fimportbutton.addselectionlistener(new selectionadapter() { @override public void widgetselected(selectionevent e) { importanalysis(); } });
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: scheduleresolverbackedschedulequeryexecutor means nothing to 99% of people who will read that error message
Candidate: i think (filter.getrelationshipdirection() plural
Reference: there is some point showing some inconsistency in this testequals():  lock1 = registry1.obtain("foo"); lock2 = registry2.obtain("foo"); assertnotequals(lock1, lock2); lock1.lock(); assertfalse(lock2.trylock());  since we can't lock lock2, they must be
Candidate: you could use <UNK>
Reference: hmm, but this parse will work only for version-zero cursors. for version one that will fail as offset is not a number.
Candidate: use <UNK>
Reference: you don't want to do get return checksymtype.nametotype(conf.get(hconstants.checksum_type_name, default_whatever_it_is)); is this a candidate for storecontext? (perhaps if called frequently). perhaps storecontext is not available where this is used?
Candidate: we should use the <UNK> <UNK>
Reference: before creating the guid we should check that the operation succeded
Candidate: please move this method to <UNK>
Reference: please check code formatting for all classes
Candidate: add log. error.
Reference: ok good, butr if at some point the org.uberfire.java.nio.file.filealreadyexistsexception gets refactored, this code will be broken.. so probably results more safe for future updates just using the instanceof operator or
Candidate: we should log the exception here too?
Reference: can this be taken from atsapi.getqueryservice().getartifactorsentinel(), then checked for validity instead of null?
Candidate: you could use <UNK>
Reference: simplify the method
Candidate: this should be simplified to <UNK>
Reference: showaction? not simply config or even hideaction?
Candidate: please use <UNK>
Reference: so if this **is** a single provider flow then we'll have both the big text and the footer? if that's not the case (maybe the previous method has some internal
Candidate: you could use this check here instead of <UNK>
Reference: imo there's no need to check all filters, one is enough to filter a message. that is more useful in the ui/api to show the user which filters would apply
Candidate: could we use a <UNK> here instead of creating a new <UNK>
Reference: is it possible that the interrupt status of the thread is not cleared by this task if it wasn't blocked waiting on something. in that case same thread with interrupt
Candidate: is there a reason why not catching exception?
Reference: replacing using regular expressions is a pretty heavy operation. i think we should have some global flag to tell server to consider environment variables. otherwise just use config. also, it
Candidate: unsigned <UNK>
Reference: do we want to return a mutable version of the list here?
Candidate: this is a <UNK>
Reference: why not support add and offer?
Candidate: we should throw an exception instead of <UNK>
Reference: compiler.getcodingconvention()? in multiple places.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i would also check if the file is readable as well as existing.
Candidate: you could use <UNK> annotation, instead of sharing
Reference: you could use the try-with-resources syntax here.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: major == 5 && minor >= 4?
Candidate: this is be <UNK>
Reference: we should catch the exception and return a runtimeexception instead, this shouldn't really happen anyways since we checked the url is valid when building the client
Candidate: is there a reason for avro ?
Reference: why is this split into two lines?
Candidate: this is not a hack to use <UNK>
Reference: is there a reason the try-with-resources was replaced a finally? not a big deal, just seems unnecessary.
Candidate: this is required?
Reference: why is this not using hdsfilereader seek/next instead?
Candidate: i think this clear() is not necessary, but i think.
Reference: use loghelper
Candidate: should be be
Reference: can this be parameterized?
Candidate: this is not to print the stack to stdout
Reference: i think it is better to exclude "from" and "to" objects from resulting list
Candidate: is there a reason for this property?
Reference: shouldn't this check and throw an error if the value is larger than [float.max_value](<link_0> or smaller than float.min_value?
Candidate: could we use a string instead of <UNK>
Reference: get /wiki/ from urlscontent class (wiki_dir) or it would be better to put a const to urlbuilder
Candidate: appending to
Reference: do we need a boxed primitive here?
Candidate: this is dangerous, could be dangerous, dangerous, to "return <UNK> && <UNK> || <UNK> && <UNK> || <UNK> && <UNK> || <UNK> && <UNK> || <UNK> && <UNK> || <UNK>
Reference: double negation is hard. and i wonder about what test means in this context (if you are talking about the equality test, then it is rather confusing). moreover, declairation of
Candidate: i think this is not <UNK>
Reference: similar approach should be taken here, but the condition is simpler: try { endwithfailure(); } finally { if (getcommandcompensationphase() == commandcompensationphase.end_command) { compensate(); } }
Candidate: if you can download the download is attached from the db?
Reference: let's add the type to the error message.
Candidate: shall we throw an exception
Reference: sometimes reusing pagebuilder is valuable (because it can predict allocations' size better?) can we safely assume this isn't a case here?
Candidate: you should use stream() here
Reference: condinvert is missing
Candidate: you could use <UNK> instead of objects.isnull
Reference: my latest commit has changed the way compareto is implemented for datanode. you can use replicaid.getdatanodeid().compareto(datanodeid.gethostname()) == 0
Candidate: we could use "return <UNK>
Reference: i guess this is to avoid a spurious empty cell at the beginning of the row, but it prevents to have empty cells in the table e.g.: |=== |one|two|three |lorem||ipsum
Candidate: you could use <UNK> here instead of <UNK>
Reference: this three lines seem to be useless. it will be added at line 230 anyway.
Candidate: do. do. do. do. do. do. do. do. do. do. do. do. do. do. do. do. do. do. do. do. do. do. do. do. do. do. do. do. do. do.
Reference: a constant for this would be good also
Candidate: i nesting.
Reference: some nullchecks and asserts maybe?
Candidate: nit: you discarded discarded use discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded
Reference: you can use local-variable type inference here (var)
Candidate: why we expecting to here?
Reference: this isn't really a json parse exception, is it? it sounds like the json is valid, just that we can't actually do anything with null.
Candidate: if you could use a string instead of <UNK>
Reference: also, you should catch illegalargumentexception which can be thrown by enum.valueof, no? since the xml could be corrupt and we should not explode.
Candidate: if this is designed to be a <UNK> <UNK>
Reference: avoid using execute() directly
Candidate: if this is is not quickly but not sure that this will be quickly to quickly if the is quickly to quickly if the
Reference: is a plain "else" block needed here to at least log the cases where no paymentworks processing is needed?
Candidate: please move this braces
Reference: this seems too broad to me. i don't think that a spring.xml.ignore property should have an effect on whether or not .groovy bean definitions can be loaded.
Candidate: i think finals be replaced by the view?
Reference: this pattern can actually generate a _lot_ of garbage. the add() to the list will result in binary growth of the underlying array and then in the end **_another**_ array
Candidate: this could be replaced by <UNK>
Reference: it's using constants from auth instead of session.
Candidate: use <UNK>
Reference: i would extract a method gettranslator() since you only use context to initialize it.
Candidate: nit : <UNK>
Reference: this is not a particular good criterion to decide for/against cursors. views can have very fast cursors, for example if you do a few transformations on an arrayimg that concatenate
Candidate: suggestion <UNK> = new <UNK> clazz, <UNK> <UNK>
Reference: i'm probably wrong but i thought since we don't sample client spans, calls from the span reporter thread wouldn't be sampled anyways, they originate from the flush thread not server
Candidate: why not -1l ?
Reference: string
Candidate: please use stringutils
Reference: should be .debug().
Candidate: please add a string null"
Reference: check .isempty() as well?
Candidate: this is be stream()
Reference: seems well suited to factor into a map
Candidate: is there a reason to use <UNK> here?
Reference: seriously, we don't need to warn on every write. the data loss happens when you're yanking storage/os out from under the software -- most applications aren't expected to behave in
Candidate: can we use <UNK>
Reference: please use null instead of guid.empty, as would happen if using adddiskcommand with vmid=null.
Candidate: i don't think that the vdsid is be updated.
Reference: i don't think that helixclustermanager needs to be passed in a helixpropertystore instance. also, the property store path in helixpropertystoreconfig on the frontend will refer to the wrong path since
Candidate: could we move this to <UNK>
Reference: can we add some log message, in case we got classname with null value?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: please add a separator.
Candidate: @gunnarmorling mind this test, but you could use only: <UNK> <UNK> <UNK>
Reference: hmm, if you make viewholder a non-static class, then it could have access to all these fields directly (and shouldn't need to be passed this click handling runnable).
Candidate: you could use a property?
Reference: this could be created once before the for loop (or moved to a constant, or just compare the types).
Candidate: could we use <UNK>
Reference: also ignore margin col
Candidate: this rebuilding this be a to a a <UNK> that is a <UNK> to <UNK> a <UNK> <UNK> <UNK> <UNK> <UNK>
Reference: this looks strange: we already registered export of registry in the init and here again during reporting we can potentially register some other set of events? how is that possible?
Candidate: @vilchik-elena you could use <UNK> instead of <UNK>
Reference: it could be more readable to use assertequals instead
Candidate: is there a reason why not default?
Reference: this doesn't check if the event is cancelled. the flying field should only be updated after the event is fired, and only if the event wasn't cancelled.
Candidate: is there a reason for element?
Reference: fancy, but we should test that we are not going to sync with ourselves here.. o/w we would end up with some nasty infinite loops.
Candidate: is there a reason for this logic?
Reference: ![codacy](<link_0> issue found: [method names should not contain underscores](<link_1>
Candidate: i criteria criteria criteria criteria criteria criteria criteria criteria criteria criteria criteria criteria criteria criteria criteria criteria criteria criteria criteria criteria criteria criteria criteria criteria criteria criteria criteria criteria is
Reference: you could use find here too
Candidate: this multimap could be replaced by "this". true"
Reference: okay, i misread that. i see it's a parameter now. in that case, throwing an exception about an invalid timeout value seems more reasonable to me than silently ignoring it
Candidate: is this a bit strange to use <UNK>
Reference: use dateutil.now()
Candidate: nope, this is not
Reference: i'm not sure about this assert here. do we want asserts in the code?
Candidate: i liked that this is is not <UNK>
Reference: i think you should catch interruptedexception and shouldn't schedule any more tasks on it.
Candidate: why is this eating this exception is not
Reference: this field could be retrieved from results.size() rather than stored in private field.
Candidate: this is a duplicate, we could use only:  java return <UNK> == null) { return <UNK> } }));
Reference: prefer to use the constant time_between_retries_ms
Candidate: this is be annotated with a array.
Reference: i would imagine that you have a new contains method that takes in patient object that internally delegates to the old one so you wouldn't need these changes
Candidate: the error message should be be
Reference: from line 228 to line 237, you removed the conditional debug logs and add info log, not very sure this is better and necessary.
Candidate: can we move this logic to the encapsulated in the method to the listener.
Reference: it does not look right as we do only "return acceptbit" at the end.
Candidate: this is right...
Reference: insert exists for such an operation.
Candidate: this can be replaced by: <UNK> <UNK> (string call.
Reference: these lines seem duplicated this.connectfuture = null; this.handshakefuture = null;
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why don't you use while(true)?
Candidate: i think this should be the child operations.
Reference: use the {} placeholders
Candidate: you could use <UNK>
Reference: could we change the header name to "x-client-id" instead?
Candidate: you could use <UNK> instead.
Reference: can be rewritten as return (databytes == null || databytes.length == 0) ? null : new string(databytes, charset);
Candidate: is there any reason why we catching exception here?
Reference: shouldn't we use the display.getdefault() only if we cannot obtain it from platformui.getworkbench()?
Candidate: can we use this payload?
Reference: please add a message instead of empty string
Candidate: please use <UNK>
Reference: the test checks nothing, because iterate() method always return nonnull object. it's worth to use forks.iterate("newest").next() and check for some attribute
Candidate: let's remove this assertion.
Reference: use datetimeutils.datetolong
Candidate: i'm not taking a change. i think turn them into a change.
Reference: this equals implementation should include attributes from the command super class.
Candidate: this is be simplified to objects.equals()
Reference: static
Candidate: this is not be <UNK>
Reference: does it matter if you rotate the screen? would this trigger update checks more than wanted?
Candidate: you could bail again?
Reference: i think this test is always green, because the assertion has no _check_ called. let's check the concrete value, i.e. java assertthat(onetoone).isequalto(option.some("one"));
Candidate: could you please use <UNK>
Reference: fix
Candidate: you can be simplified to <UNK>
Reference: syntax is off here
Candidate: suggestion <UNK> <UNK>
Reference: confused here, why can't we use new sortbyimple(property.getname()) directly?
Candidate: please remove draw draw the draw <UNK>
Reference: isn't this.readonly = "on".equals(transaction_read_only); enough?
Candidate: you could use <UNK> here instead of <UNK>
Reference: this line should be moved out of the assertthrows as only the provider.getservice() call should throw.
Candidate: you could use the guid as well.
Reference: null != containereditpart is already checked in the outer if
Candidate: is there a reason to check that the property?
Reference: need to add mtu to parcel/unparcel
Candidate: you could use <UNK> instead of <UNK>
Reference: why don't you simply refer to "command" in your sendcommand method? like "sendcommand(itemname, command)?
Candidate: log.debug
Reference: kill the third parameter to closeconnection(), we cannot skip calling close(). the "penalty" in the rare case where an exception _is_ thrown by close() is merely an additional log (at
Candidate: this is not <UNK>
Reference: spelling
Candidate: this is not <UNK>
Reference: i think there is no need to fire this event. there is only one listener to this event which is this projectlistpopup class itself. so instead of firing and catching
Candidate: this is not a strange, but we don't have to to the <UNK>
Reference: the comparator here is invalid due to the 1.... maybe replace with one that throws unsupportedoperationexception
Candidate: you could use <UNK>
Reference: there's no need to download this to an outputstream then convert to an inputstream. instead you can just call executemediaasinputstream() to directly generate in inputstream and return that.
Candidate: you can use <UNK>
Reference: @inverno we can return true
Candidate: you could use <UNK>
Reference: this is a breaking change. should we consider adding another one and keeping this one for use object implementations?
Candidate: rename to
Reference: should we add getchroot here as the value for zkpath field for kafka component ?
Candidate: please use foreach instead of a constant?
Reference: this has confusing output when running a single test method and is not required anyhow. ides and maven show which classes and methods are tested, no need to duplicate that
Candidate: rename to <UNK>
Reference: move the null check as first action in the method to ensure we also throw if watcherthread == null and unit is null
Candidate: this is be <UNK> to <UNK>
Reference: please move this line to the end of this method.
Candidate: you could use <UNK>
Reference: this id will be the one of the vnmapper resource, instead of the id of a network resource the capability is expecting. if i am right, then the resource that
Candidate: why not use <UNK> here?
Reference: isn't it better if you also merge the the old newconfigurationmap.get(stringmapentry.getkey()) with stringmapentry.getvalue()
Candidate: this is not a <UNK>
Reference: this should _describe_ the credential. if no credential is needed, just say something like "not used" or so, but don't leave this null.
Candidate: maybe we could be <UNK> to the future.
Reference: rename to simple
Candidate: consider making a warn instead of <UNK>
Reference: why peer class loading?
Candidate: suggestion <UNK> = <UNK>
Reference: needs same min_receive_thread_keep_alive_time guard as in the constructor
Candidate: this is be <UNK>
Reference: this dateformat object never changes. maybe make it static final in the class scope and save a bit of performance?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: checkstyle conflict. need braces.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: prefer:  java int n = mhighlightdrawables.length; for (int i = 0; i < n; i++) { ... }  it performs better on android (_sigh_)
Candidate: is there a reason for this logic?
Reference: redundant
Candidate: nit: use computeifabsent
Reference: minor: don't use acronym for nfc? e.g. "the path %s is still cached as not found for repository %s."
Candidate: i think that this is not efficient, we should have to log the <UNK>
Reference: use a schedule executor. instead of sleeping threads blocking and using up a thread
Candidate: if you could be a <UNK> <UNK>
Reference: could be generic and do the cast as well with:  @suppresswarning("unchecked") <t> t borrow(genericobjectpool pool) { ... return (t) ... ... }
Candidate: is there a reason for this is not <UNK>
Reference: either one should be enough. actually could you change revertrpcmanager() to call stopblocking() first, and then stopblocking() to call assertequals(emptylist(), queuedrequests) instead of logging an error message (which doesn't even
Candidate: you could use <UNK> <UNK>
Reference: please add this to lundiskrowmapper
Candidate: you could use use stringutils.isnotblank()
Reference: you don't need metricnamedto.origin.session_scope_tg here
Candidate: no, we could return <UNK> here instead of creating an instance object object object object object object object object object object object object object object object object object object object
Reference: for these timeouts, can you make it be 60 minutes instead of 1 hour and make the timeout configurable with a setter (with 60 mins being the default). i'm thinking
Candidate: please use <UNK>
Reference: you might want to use the guava lib for this
Candidate: could you move this check inside the conditional clause.
Reference: please factor out this hardcoded path segment
Candidate: you could use <UNK>
Reference: initial commit was already created in setup() method
Candidate: maybe we should to stop making a commit something.
Reference: cool :)
Candidate: we could use <UNK> to propagate them from the <UNK>
Reference: i think is is a rename refactoring that went a bit wrong :)
Candidate: you could use <UNK>
Reference: shouldn't there be 'hosts.stream().collect(collectors.joining(","))' instead of just 'hosts'?
Candidate: this is not needed
Reference: i wouldn't implement this (just return null). a long has a fixed size, and we can use putlong() in htinterval to write them to the file. this method was more
Candidate: <UNK>
Reference: splited is not a word.
Candidate: suggestion <UNK> = new <UNK>
Reference: @zumbrunnen you can merge getstring(int) and string.format(string, object...) by using [getstring(int, object...)](<link_0>, java.lang.object...%29).
Candidate: is there a reason for this logic?
Reference: bytearrayinputstream certificate is accessed after it is closed. better to use try whit resources to ensure that this is not required.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: unsupportedoperationexception seems reasonable here.
Candidate: nit: you could be simplified to <UNK> multimap
Reference: on the value that equals the current *default* we can (and i think should) remove the repo specific key/value completely from the prefs via unsetprojectspecificfirstparentpreference
Candidate: is there a reason for this logic?
Reference: update log to mention ${project.artifactid}-${project.version} or just "tokens are not replaced".
Candidate: is there a reason that we baseurl baseurl is not encapsulated in the constructor?
Reference: tolowercase(locale.english)
Candidate: if you could use <UNK>
Reference: style: no brackets around single lines
Candidate: you could use <UNK>
Reference: maybe use lists2.map() instead?
Candidate: suggestion return <UNK>
Reference: i think we should use binarymessageconstructioninterceptor.supportsmessagetype() here to have one source of truth for the decision, whether the interceptor could handle the message type.
Candidate: this detail: should be to describe the <UNK>
Reference: initialization with an empty string is not necessary. the consuming code should gracefully handle the unset preference.
Candidate: suggestion <UNK> = <UNK>
Reference: can't you do this in the constructor, and make the field ftopnode final?
Candidate: if you could use <UNK> <UNK>
Reference: one other thing i thought of: we should factor these strings out into variables like cquery_id and clangd_id, and reuse them in cpplanguageserverpreferencepage
Candidate: if (logger.isdebugenabled()) getcredentials applies getcredentials for github getcredentials
Reference: @iliketonguyen why the change to finest here?
Candidate: how about eating the
Reference: when running it from eclipse i noticed that job.getthread() can return null. you should a null check for that.
Candidate: you could use <UNK>
Reference: better to have this baked instead of doing it each tick...
Candidate: i think that this is not efficient, we could be a <UNK> <UNK>
Reference: why are you removing this check? this can cause issues with how we read packet id's.
Candidate: we could use a multimap here too?
Reference: why is this error? should we make this an info log? and "updating {} {}" is not detailed enough. say something like "successfully added metadata store realm {} to namespace
Candidate: @manuelplazaspalacio string() is not be done in the
Reference: please move this piece of code before switch-case block, you can refer to the style in oraclesqldialect.
Candidate: <UNK>
Reference: suggestion throw new illegalargumentexception("jar does not look like a plugin, there is no short-name manifest attribute");
Candidate: use <UNK>
Reference: why not return here?
Candidate: is there a reason for this class instead of a constant?
Reference: i suggest using internationalizationkt.getrootlocalizer().formattext(key) instead. it returns the key if there's no translation.
Candidate: you could use <UNK> here instead of <UNK>
Reference: this is a recursive call .. which is a little scary in a constructor. if somebody tries to copy a node which is a descendent of itself in any way,
Candidate: i'm not sure that this is not efficient, but i think that this is) is a set in the <UNK>
Reference: change location to version
Candidate: use <UNK> string()
Reference: can we catch something a little more descriptive like illegalargumentexception
Candidate: it is be possible to return an iterator object object object object object object object object object object object object object object object object object object object object object object
Reference: we can remove the print() to clean up our logs during testing.
Candidate: i think that this is is not efficient, we could use the <UNK>
Reference: i think no need to add filter here, since the tredshiftconnection component handle the db connection, rather than the tredshiftinput component.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: okay what is this logic trying to do? is there a bug report? there is a bunch of color converters that cover these cases, would be good to avoid duplication.
Candidate: is there a reason for this? fyi, any reason to be public?
Reference: since this json string is copyrighted, should we use it in a public test case in our code? it might be better to avoid copyright issues and mock up a
Candidate: you could use <UNK>
Reference: this is wrong. it's always returning an empty target.
Candidate: this is not to be <UNK>
Reference: minor but the array is not necessary here.
Candidate: this is expensive.
Reference: do you want all throwables or this is wide enough.
Candidate: please use <UNK>
Reference: so i just did a little bit of hunting around on stack overflow because i was surprised at how much work it took just to customize the icon, and found
Candidate: you should print stack trace to
Reference: i think you do not need to explicitly call the tostring method.
Candidate: same as above.
Reference: the task cannot be created in a 'done' state.
Candidate: please use <UNK>
Reference: should this be containsexactly(1, 1)?
Candidate: please use <UNK>
Reference: it looks like resultbatch is reused here. i don't think it's causing any problem for now, but i'm wondering if it could be better to create a new instance instead
Candidate: if you could use <UNK> <UNK>
Reference: what about experiment names, override names, etc. as well?
Candidate: this should be null
Reference: why hashtable over hashmap?
Candidate: this would be nice to use <UNK>
Reference: it should be child.add(...).
Candidate: you could use a local variable?
Reference: ![major](<link_1> make this line start at column 7. [![rule](<link_2>](<link_0>
Candidate: you could use computeifabsent clear()
Reference: does carrier want to hide *all* apn fields, or just user and password? if it's just user and password, then make a change in dataprofile to just obscure those fields.
Candidate: this is a good idea.
Reference: 0, looks like magic number. any possibility to give a non-zero value, matching closer to the expected value ? also, please add error message - assertthat("error message", stats.getlast(), greaterthan(0));
Candidate: why not use <UNK>
Reference: for your information,  if (!blocktosubkeyrangesmap.containskey(blockid)) { blocktosubkeyrangesmap.put(blockid, new linkedlist<>()); }  can be written equivalently as:  blocktosubkeyrangesmap.putifabsent(blockid, new linkedlist<>());  but either way is okay to me.
Candidate: the router
Reference: this class is actually where this constant should be and instead the test class should refer to it. or maybe not in the state provider, but in the analysis itself
Candidate: please use <UNK> instead.
Reference: suggestion log.error("public key is not rsa");
Candidate: shall we use <UNK>
Reference: why timestamp is not taken from the row instead. above is only meaningful for message-time rejection policy in this case.
Candidate: is there a reason for this statement?
Reference: i expected this code to be moved to start(). now it is in duplicate
Candidate: you could use <UNK>
Reference: in intellij i usually just write fail( and hit alt + enter to apply static import, intellij applies it for whole file then
Candidate: is there a reason why not sleep here?
Reference: catch should be on previous line. also, is there a more specific exception type that can be used here, e.g. ioexception?
Candidate: we could throw an exception instead of <UNK> above?
Reference: i'd prefer we stored actual uuid objects, not strings representing them
Candidate: suggestion <UNK> = new <UNK> clazz, <UNK> <UNK> clazz, <UNK> <UNK> <UNK> clazz, <UNK> <UNK> <UNK> clazz, <UNK> <UNK>
Reference: should this test also confirm that the exception message contains something about the value being out of range?
Candidate: you could use <UNK>
Reference: are you guys really using inheritance everywhere? you *really* want to subclass all of these? why not just pass in functionals that can create the plan? then your sessionfactory (i
Candidate: how about creating a typed memory. expensive performance limit, performance expensive limit, expensive performance expensive limit, expensive expensive expensive expensive expensive expensive expensive expensive expensive expensive expensive expensive expensive expensive
Reference: this message looks misleading. will tags be considered at this point as well?
Candidate: cards, cards, cards, cards, cards, cards, cards, cards, cards, cards, cards, cards, cards, cards, cards, cards, cards, cards, cards, cards, cards, cards, cards, cards, cards, cards, cards, cards, cards, cards,
Reference: does this also swallow interruptedexception?
Candidate: this is not throw an exception here instead of constructing an illegalstateexception
Reference: shouldn't this be key?
Candidate: suggestion if <UNK> != null && <UNK>
Reference: should we only add filters which are defaultselected? then you may have to build a temporary list with the filters to be added...
Candidate: you could use a constant instead of <UNK>
Reference: extract this check to the storagedomainvalidator and replace the call here and in updatestoragedomaincommand with it
Candidate: this detail: should be a bit strange, but we could use only: return false; return false; return false; }
Reference: are spaces ok in namespace strings?
Candidate: please use underscores
Reference: maybe we should hold a reference to the listener and limit the requests to one at a time. pressing it twice in succession can lead to contradictory toast messages. i'm
Candidate: if this is is designed to be a <UNK> that is a <UNK> that the is not <UNK> to persist the <UNK>
Reference: can you call ts "taskstatedata" ?
Candidate: suggestion if <UNK> {
Reference: this seems like a bad idea. better list exceptions explicitly
Candidate: you could use the string instead of <UNK>
Reference: - it should be initialised with the value from the scannerparam. - the undoable edits should be discarded after setting the value.
Candidate: this could be simplified to <UNK>
Reference: i think this needs to be a getlongvolatile.
Candidate: i'm not sure that this is a bit nervous that we could use a <UNK> <UNK>
Reference: do not remove curly braces around the else
Candidate: i liked that this is not to be an extra exception
Reference: is this not the same as to say: if (!user.isidentifieduser()) { throw new authexception("authentication required"); } ? and else branch is never hit?
Candidate: is there a reason for this logic?
Reference: rename 'selection'
Candidate: please use <UNK> instead of objects.isnull : <UNK>
Reference: naming: consider renaming this and line 849 to elapsedmillis? up to you.
Candidate: 32 chars
Reference: suggestion utils.closequietly(retrywithtoleranceoperator, "retry operator");
Candidate: could you call <UNK> here instead of unnecessary.
Reference: what will happen here if the string cannot be converted? looks like some error handling and protective code is missing
Candidate: you could use checkargument instead of <UNK>
Reference: use apputils <link_0>
Candidate: remove nesting.
Reference: why here an explicit typecasting is required ?
Candidate: you could use <UNK>
Reference: this looks like a copy of setincludedpaths, just with different types. change the argument type of setincludedpaths to set<? extends iresource> and remove this.
Candidate: nit: you could use this instead:  <UNK> <UNK> <UNK> = <UNK> <UNK> <UNK> <UNK> = <UNK> <UNK> <UNK> <UNK> <UNK> = <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK>
Reference: does this need an instanceof check or assert.isinstanceof?
Candidate: 2048 would be a bit more efficient, that we could use the <UNK> <UNK>
Reference: ah, i see. edit: actually, upon closer inspection, it appears that i had got the order mixed up. looks like all things are accounted for. that was my mistake.
Candidate: this is not a bit strange to be a bottleneck. bottleneck. would be a bottleneck. bottleneck. would be a bottleneck. bottleneck. would be a bottleneck. bottleneck. is a bottleneck. bottleneck.
Reference: inline this variable.
Candidate: is there a reason for the sake of <UNK>
Reference: what's the unit for these numbers?
Candidate: is there any reason to export baseurl baseurl baseurl baseurl
Reference: i think it may be worth factoring parts of this out. the 403 credentials_expired checks are very specific to cloudant i think and it is probably not worth doing all
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: please use description() instead of descricao() on the method name.
Candidate: @ivange94 about the aforementioned "never null"
Reference: if sourceprocessingdetails is initialized to new hashset<>() instead of null then we don't have to check here.
Candidate: we could use <UNK>
Reference: better to use list instead of arraylist  java public list<remotexbeedevice> getdevices() {
Candidate: suggestion if <UNK> == null) {
Reference: no need to cast here.
Candidate: you could use a <UNK>
Reference: should be a mojofailureexception because this is a configuration error. mojoexecutionexception should only be used for internal errors.
Candidate: you could use <UNK>
Reference: do these calls want to go away? (i.e. you're not drawing the box anymore?)
Candidate: is there a reason for these properties? thanks.
Reference: not_found again.
Candidate: please add a meaningful name.
Reference: spell out eocd
Candidate: nit: you clear() could use <UNK>
Reference: i assume the whole formula can be extracted into a separate method, for example: java private static long getperformancediff(long expectedms, runnable m) { return abs(expectedms - getbenchmark(m)); }
Candidate: suggestion <UNK> -> <UNK>
Reference: shouldn't this line be in styledtext.isvariableheight() instead of current impl ?
Candidate: nitpicking: if this >= true" || true" true"
Reference: this throws an exception in case the queue is full. we maybe don't want to cause change of control flow for the operation that logs the event. isn't is better
Candidate: i think this should be a <UNK> <UNK>
Reference: we probably should change "ace" to something else, since acefuture is not the only thing using this.
Candidate: is there a reason to sleep here?
Reference: same as above (indicate trying different node)
Candidate: i think that this is union is not <UNK>
Reference: remove final. we dont' usually use final in a body.
Candidate: this allocation is invalid?
Reference: explicit real ref?
Candidate: no need to throw an exception
Reference: is there any reason to wait until the whole source will be prefetched before we start emitting rows?
Candidate: please use log.d
Reference: spelling
Candidate: could you rename this to <UNK>
Reference: why do we call this variable request? we can also create commands as a reaction on other commands (e.g. in commandrouter), can't we? in this case, this may not be
Candidate: i think, that hierarchy is not supported by <UNK>
Reference: these can be changed to regionversionvector<?> to prevent "rawtypes" warnings.
Candidate: you can use camelcase
Reference: currently, only testparquetfilewriter uses this method. if it is not really required to be public i would suggest having it package protected.
Candidate: wait.forelementclickable() should be <UNK>
Reference: this is dangerous  given the example: java public class outer { private static final int foo = inner.bar; public static class inner { private static final int bar =
Candidate: is there a reason for element?
Reference: consider a helper method that replaces objects.equals().
Candidate: if you could use simplified to <UNK>
Reference: this equals implementation should include attributes from the command super class.
Candidate: please use objects.equals for (string operand
Reference: i'd extract this code into a separate method: private void syncrefreshrate() { configurator conf = (configurator) typeresolver.getinstance().resolve(configurator.class); conf.updaterefreshrate(); int interval = conf.getpollingtimerinterval(); if (interval != normalinterval) { setrefreshrate(interval); } }
Candidate: nit: illegalstateexception is not efficient, we don't have to <UNK>
Reference: is 5000ms as headroom for job scheduling enough? should we make this configurable somehow?
Candidate: suggestion <UNK> -> <UNK>
Reference: just for clarity, i'd make this a method (geturlforbase)
Candidate: you could use a <UNK> property?
Reference: @bhhari what was the problem? was it that getreadpositions returned junk? if so, shouldn't if branch also populate outputpositions? also, outputpositions = positions needs to be followed by outputpositionsreadonly =
Candidate: this is not imply that this is not imply that the imply that the imply that the imply that imply that imply that way. [![rule](<link_2>](<link_0>
Reference: why is this line still necessary?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i don't think we need to initialize this here right? we can do that in the only method that uses it.
Candidate: you could replace this with putifabsent with <UNK>
Reference: this can be changed now with the activemqheaders settters.
Candidate: you could use <UNK> here instead of <UNK>
Reference: this line isn't necessary.
Candidate: <UNK>
Reference: random aside.. shouldn't this sample be in.. samples? i'm a bit confused.
Candidate: i is warn log, print the warn log, print the log level to the log, print the log level to the log,
Reference: we also need to synchronise the system.currenttimemillis()
Candidate: is there a reason for this change?
Reference: don't you want to test that predefinedscopeconfigurationimpl#initializelocales() works correctly?
Candidate: use <UNK>
Reference: is this correct? shouldn't this be "%s/plugins/%s"
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: can simply check that the normal interface to implementation class is registered already.
Candidate: this should be <UNK>
Reference: this will evaluate incorrectly
Candidate: this is be repelaced by <UNK>
Reference: not convinced we should just synchronize on this map, without knowing anything about it. that feels dangerous and ad hoc. we can presumably rely on the map's put method to
Candidate: i don't think you want to bail here anyway?
Reference: partially correct. also move the instantiation of the array outside the evaluate. you can used pointables.clear() inside evaluate.
Candidate: again, again, again, i would be preferable to compare the <UNK>
Reference: why aren't we checking for msyncthingservice being null here?
Candidate: if you bail again?
Reference: i don't think that we need offline access (calendar export is a quick one-off operation) and thus don't need to store credentials. i think you can just remove these two
Candidate: please use <UNK>
Reference: - no need to force user pass "origin" (unless i'm missing something), we can define it here as only custom events are being added. - really? 'description' is mandatory?
Candidate: @manuelplazaspalacio is not a bit that we should have to to log the the <UNK> is a bottleneck. consequently, in the
Reference: why pass in the executor as a parameter when we have access to the field?
Candidate: this is not belong to the
Reference: @custombrutauthrules({moderatoronlyrule.class})
Candidate: is there a reason that this is is not to be a
Reference: that is the easy fix, the better fix would be to check if carried by raildroid or by player..
Candidate: how about using <UNK>
Reference: invert
Candidate: nit suggestion <UNK> = true) <UNK> true)
Reference: style nit: we don't use braces around single line blocks
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this is duplicate code and should be extracted into a method.
Candidate: you could use <UNK>
Reference: asserting default values does not make sense. if eclipse decide to change it later, it will fail on this place but it is not a bug in our code, only
Candidate: please use <UNK>
Reference: why do you use deprecated constructor here?
Candidate: this would be stream()
Reference: perhaps bit nicer with assertthatthrownby
Candidate: you could use <UNK>
Reference: does 'schema' need to put back to cachedbyid cache?
Candidate: this is is designed to be an itemstack.
Reference: i dont know about this but we use i'd say in all of the tests the assert.assert ... so you better change your idea settings or redo the whole test
Candidate: please use <UNK>
Reference: translateable stings should be externalized
Candidate: suggestion <UNK> = new <UNK>
Reference: missing @ since.
Candidate: should we use <UNK>
Reference: you may want to add spaces around "=="
Candidate: you can use reflectiveoperationexception here instead of <UNK>
Reference: is this operation being removed the correct thing to do?
Candidate: this is reduced to a list?
Reference: i think it is better to return an empty collection with collections.emptylist() to be more null-safe.
Candidate: i'm not sure how about the sure about the sure that the is a <UNK> <UNK>
Reference: you can drop the ***.
Candidate: we should throw an exception instead of constructing an exception
Reference: perhaps add a "bytes/second" metric here indicating how fast we work through the file. that also gives us an idea of how much slower than the raw "read a file"
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: probably a npe exception is thrown here.
Candidate: please move this to the reconnect for the
Reference: i don't think this check is needed.
Candidate: is there a reason for this method to be null?
Reference: maybe have the variable renamed to isfrozen as well? it's more grammatically correct anyway :wink:
Candidate: <UNK>
Reference: minor: seems like we can return right away when pools/poolids is empty
Candidate: you could replace this by: <UNK> <UNK> run() { ...
Reference: how did you pick which of these parameters are passed to the constructor, and which to the method? stuff like helper, downloader and controller seem more like constructor injected parameters,
Candidate: is there a reason for this change?
Reference: can do touch %s %s %s %s as a single command.
Candidate: you should use <UNK> here instead of <UNK>
Reference: this needs to be improved. if somebody has this and then opens the workspace with an eclipse that has an older egit version, he'll get an invalidobjectidexception. add the new
Candidate: you could use the foreach paths?
Reference: let's change to !isanalyticsactive()
Candidate: if you could be a <UNK> <UNK>
Reference: nit: it would make sense to check that queries.size() == classes.size()
Candidate: could you use <UNK>
Reference: just make the test throws exception
Candidate: use readasstring(...) instead
Reference: we should add support (and have it on by default) for ensuring the value is not null. for example, right now if the clientregistration is not found it returns null.
Candidate: this is not be a <UNK>
Reference: might as well do %s and column.time_column_name here since you went to the trouble of doing it in the if check.
Candidate: how about "error metrics "error metrics - "error <UNK> is prone to sort of metrics is not sort of failure: <UNK> { }
Reference: negative logic
Candidate: should we use a enum instead of <UNK>
Reference: shouldn't the blocks move into the parent container (or the wrapper's parent)?
Candidate: wait.forelementclickable() should be <UNK>
Reference: fragment.getcontext()
Candidate: is there a reason for this logic?
Reference: since the logic switch, this should be true (former behavior).
Candidate: we could use <UNK>
Reference: i think the null check that was at l1015 before may be necessary. unlike the resource tree, we don't do a copy-on-write/publish-on-commit deal when an op changes the mrr tree
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: curious what does 9_000l mean? it doesn't look like a number.
Candidate: rename to
Reference: do we need this anylonger?
Candidate: this is be <UNK>
Reference: not sure reusing timestepactiontypeswitch here is very clear? i can live with it if you defend it but i was expecting these type switch classes to only be implemented inline.
Candidate: you could use <UNK>
Reference: the called method initializemetricstore declaration proceeds the calling method
Candidate: you could use <UNK>
Reference: i'd just move this to before the for-loop begins.
Candidate: tiny thing, but tiny tiny tiny tiny but tiny tiny tiny tiny tiny tiny tiny tiny state is leaves the issue on the thread. i thought that we decided to
Reference: maybe i'm missing something, but i'm not fully sure we need this here since we unregister the dispatcher in onpause, does it make sense? wdyt?
Candidate: i think this should be a <UNK> <UNK>
Reference: boundedelastic
Candidate: i think this is not efficient, we could use a <UNK>
Reference: copyonwritearraylist list may offer a better performance for read operations, which are dominant here
Candidate: you could use <UNK>
Reference: objectutils.tostring() will return an empty string if obj is null. is this really what you want to do?
Candidate: use collectionutils instead of creating a object instead of is)
Reference: do we know since when openstack metadata is supported? i'm concerned of a scenario where customers have old templates installed with version of cloud init that doesn't support it
Candidate: use readasstring(...) instead of <UNK>
Reference: b == null
Candidate: i think this <- why is this <- why?
Reference: why was this necessary? the only thing that changed is the addition of the label image, does that screw up the layout?
Candidate: _cough_
Reference: will it be better to cache yarnclient on the yarnapphandleimpl instead of creating it every time? in apexcli the yarnclient is cached.
Candidate: i think that this became strange, ample catches became ample catches became ample catches became ample exception ample == 0)"
Reference: i think, we should use the "cycloversion" here, too.
Candidate: is there a reason for element?
Reference: return cardtypes.stream().anymatch(cardtypeentity::isrequires3ds);
Candidate: please use <UNK>
Reference: we might want to prefix the message with something like this, incase you're catching an error that doesn't have a nice message.  "topology {0} submitted successfully", topology.getname()
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: also this consumer could be simplified by lambda but leaving decision to you. selectedkiesession -> onselectionchange()
Candidate: if you could use <UNK>
Reference: are these changes to typeinference part of the fix for default methods? if not, can we pull all changes to typeinference into a separate pr, to keep things clean?
Candidate: nextvalueindex could be simplified to java return <UNK> == null) { return false; } }));
Reference: you don't need .tomap() here. keyset() is a method on dbobject
Candidate: you could use checkargument here too?
Reference: some of engine-config values are quite large, wouldn't it be better to show difference on multiple lines? something like: option name: some_option current value: 'a value set by user' default
Candidate: you should use yourself here instead of <UNK>
Reference: likewise..
Candidate: likewise..
Reference: can we check whether prevstatus!=unassigned here and declare the dynamicfromdb field inside the else block instead?
Candidate: minor nit, but you could combine these lines.
Reference: it is usually better to pass the exception as an argument to the logger so the stack trace gets logged too
Candidate: is there a reason to assert here?
Reference: does doing synchronized (this) in inner class will not stop its outer class. so i think this is wrong.
Candidate: i pagelogging
Reference: i think you can use reddeer implementation of this dialog: <link_0> wdyt?
Candidate: rename to <UNK>
Reference: please statically import assertthat and hasitems
Candidate: use <UNK>
Reference: this isn't a complete fix as the binary value may contain a subsequence of some other array value possibly a slice from another buffer owned by someone else so you
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: extract a constant out of the string literal?
Candidate: <UNK>
Reference: style-nit: remove the added final keyword.
Candidate: we could leverage atomic.
Reference: extractdata()
Candidate: use <UNK> instead of creating a new arguments.
Reference: any reason why not to put the authz name in separate field instead of parsing and re-parsing?
Candidate: you should use <UNK>
Reference: just curious on this change. is it necessary?
Candidate: if you could use <UNK>
Reference: should remove system.outs...
Candidate: you could use <UNK>
Reference: if you select the options "gear" icon on a menu the audio upload widget should be right there: ![screen shot 2017-09-06 at 3 13 35 pm](<link_0>
Candidate: hmm, could we add a string concatenation here
Reference: change this to info
Candidate: is this exception ? detail
Reference: i didn't understand why this is required. let's discuss tomorrow.
Candidate: you could use <UNK>
Reference: i am not sure if we need the isnotereadytobesaved logic here. since we are in the createreasonnote function, and it looks like populateidentifieronnoteandextension takes care of the condition that caused
Candidate: i think (throwable should be reduced down to the log statement.
Reference: consider having the formatting parameter on a new line, which would allow to keep the string one piece.
Candidate: is there a reason to print this?
Reference: i'd just do if (tasksqueued.add(localpath))
Candidate: is there a reason to pass the here?
Reference: could you please extract these capabilities change (except rewind and ff) into a separate commit? or even remove from this pr.
Candidate: you could use <UNK> here instead of <UNK>
Reference: @original-brownbear can't we use pure java 7 feature java.nio.file.files.write()?
Candidate: let's use system.currenttimemillis()
Reference: i guess that is supposed to compensate the removal of the code that resided in validatebootsequence? that is not equal, if the user set the boot sequence as dc (disk
Candidate: i understood that this condition: if <UNK> != <UNK> && <UNK> && <UNK>
Reference: is there a need to shutdown the existing client, if present?
Candidate: this should be <UNK>
Reference: handlers shouldn't know about specific writers - we shouldn't blind cast here.
Candidate: rename to <UNK>
Reference: no point using a streamrawdata and writing to a temporary file as well. perhaps leave it as filerawdata for the moment.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: nit why clog.e?
Candidate: you could move this to <UNK>
Reference: do we want to keep this log?
Candidate: you could use a logger instead of system.out
Reference: minor: "client termination"? ("terminate" sounds a bit odd as a noun).
Candidate: this is designed to be a to download the <UNK>
Reference: i guess keeping this line same as the previous one if (settings.getrequestedcameraid() == camera.camerainfo.camera_facing_back)  would be more appropriate although it would be functionally the same thing.
Candidate: suggestion return <UNK> clazz, <UNK>
Reference: you have to start a new server if this test has @gerritconfig or @gerritconfigs.
Candidate: this is dangerous, if <UNK> is not null
Reference: agentbuidler -> agentbuilder
Candidate: i think this is not <UNK>
Reference: are you sure that error message should contain \n?
Candidate: you could use a gson method here instead of <UNK>
Reference: @inverno how about extracting the body of this lambda into a separate method? this method findrootbranchingblocks would be more readable and more homogeneous.
Candidate: maybe we could be a <UNK> <UNK>
Reference: needs defaults
Candidate: is there a reason for this properties?
Reference: maybe throwable?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: most (if not all) enumerable operators include a static factory method which takes into account deducing collation and distribution. shouldn't we include one?
Candidate: is this possible?
Reference: can you use return permits.computeifabsent(name, n -> new membercapacitypermit(n, config.getcapacity())); instead?
Candidate: i think this should be a <UNK>
Reference: use a stringbuffer, guava or write a custom utility method that does string join
Candidate: you could use a string concatenation instead of system.out
Reference: use the aggregatefactory.getaggregatetype()'s class loader instead
Candidate: we could use a multimap here instead of <UNK>
Reference: i'd also rename the variable to linesoftext.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: use nullstatslogger.instance rather than plain null also i think this constructor use this other constructor  this(conf, nullstatslogger.instance, registrationmanager, new ledgerdirsmanager(...));
Candidate: why not we need to extend the constructor?
Reference: is the getfilesystem call thread safe ? previously this was in a synchronized block, now it is out of the synchronization block
Candidate: if we is going to be a a hack to a messages.properties plug <UNK> <UNK> we could want to have a plug <UNK>
Reference: you can static import these functions.
Candidate: could we use <UNK>
Reference: can we get this map from options object using getimpersonationserviceaccounts() method instead?
Candidate: <UNK> maybe?
Reference: indexartifact and blackboardexception are depreicated
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why are you saving existing classloader? i think you can remove it
Candidate: you could use a constant instead of <UNK>
Reference: need outcome.untap like code below?
Candidate: discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded
Reference: how do you now in doasserthasmethods that the error message is about declared methods and not methods ?
Candidate: please export this commit to the commit
Reference: !isempty if list
Candidate: i guess that this is submits oldvalue is false (my newvalue has been started, but i'm not sure how about the difference between the <UNK>
Reference: please use a constant (static final)
Candidate: remove newing a local variable?
Reference: looks like this run on an already altered db. we could put it in the previous state and run the upgrade task to actually test it did the modification.
Candidate: please use <UNK>
Reference: the same as above conf.containsall(keys) seems more robust.
Candidate: this is not efficient, we could use <UNK>
Reference: is this used in some other class? can't be private?
Candidate: why is a <UNK>
Reference: i think these check is good candidate for candoaction error message
Candidate: image?
Reference: this is playing dirty. we shouldn't dig around in the dom looking for the first child of anything. please rework this using gwt widgets or more direct references to elements
Candidate: why is this change?
Reference: should we describe that these messages are also autocompleted?
Candidate: move this inside the method?
Reference: is it really the delete method you want to invoke here?
Candidate: you could iterate through the foreach loop?
Reference: i think having a single code path might be better here, i.e. have only the fallback? otherwise could be surprised by different behaviour in some edge cases.
Candidate: you could use <UNK> instead of <UNK>
Reference: java itemstack s = itemhandlerhelper.copystackwithsize(stack, maxstacksize);
Candidate: protected final
Reference: the exception is never thrown.
Candidate: could we use a constant instead of <UNK>
Reference: suggestion static boolean sanitycheckarenablocksize( long writebuffersize, long arenablocksizeconfigured, long writebuffermanagercapacity) throws illegalstateexception {  line wrapping improvement
Candidate: please use <UNK> instead of <UNK>
Reference: we don't need to explicitly create the system here. just do it behind the scene if needed.
Candidate: log.debug probably?
Reference: would observable.empty() instead and removing the filter part work as well?
Candidate: you could use <UNK>
Reference: throw new illegalstateexception(e)? instead ?
Candidate: you could use a logger instead of printing stack trace
Reference: suggestion fields.add(new field(this, path, outputsiterator.next()));  the relation of a field must point to the relation who owns the field, which in this case here is the analyzedinsertstatement.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: no clue why
Candidate: @vilchik-elena could be reduced to <UNK>
Reference: since foreach doesn't use these values, maybe we can avoid sending them back to the caller by simply returning null.
Candidate: this is be <UNK>
Reference: it would be good to have another test with isheader()=false, which checks that static_id does not trigger in a non-header file.
Candidate: <UNK>
Reference: for loop?
Candidate: this is a multimap here
Reference: instead, start with bot.checkbox("swt.read_only").select();
Candidate: we should use <UNK>
Reference: keep in mind that the transaction is doing closeandcommit but it must be just commit, you might be closing twice
Candidate: you could use <UNK>
Reference: bit of a nitpick, but could we also log an error so that the exception is not completely silent when jmxfetch's stderr is not redirected to a log? something like
Candidate: use readasstring(...) instead of printing the
Reference: same issue as above.
Candidate: suggestion <UNK> = new <UNK> clazz, <UNK> clazz, <UNK> <UNK> clazz, <UNK> <UNK> clazz, <UNK> <UNK> clazz, <UNK> <UNK> clazz, <UNK> <UNK> <UNK> <UNK>
Reference: i don't think that this loop is doing anything, you're just starting the producertemplate over and over without sending any messages. change this test to use a timer or something
Candidate: this doubt this is a but i doubt that this have a globally defined in <UNK>
Reference: this means that the callback is now a dynamic reference for the service, i.e. it can (or cannot) come at any time during runtime, while before it was guaranteed to
Candidate: this is not be risky.
Reference: does this exclude duplicates?
Candidate: this is unused
Reference: this is awkward, can't we avoid it by having the proper method in testabletimelockcluster? if it's too much changing around, i guess it's fine, but we are reimplementing the functionality
Candidate: please use <UNK>
Reference: you can use following instead: list<attribute> attrs = this.getattributes(sess, resource, group); you don't need to addall to existing collection and clear it up right away - it's confusing.
Candidate: this is not convenient to dynamic attributes attributes to. thanks!
Reference: maybe we should create a common utility function to build eventloopgroups and do not duplicate this kind of code
Candidate: we should use foreach here
Reference: please, make this as diamond and there are a couple patterns.toarray(new string[patterns.size()]) in this class. i guess they are smells on sonar, so would be great to fix them as
Candidate: i explained explained explained explained here you could use a static import <UNK>
Reference: instead of having multiple exit points from this method (the two returns), create an empty 'results' before the if, set it in the if, and then return it after.
Candidate: can we use a <UNK> <UNK>
Reference: this seems incorrect. imagine a fault detector from one cluster trying to seal a node from another cluster. since a seal message is marked as ignore epoch, the second check
Candidate: suggestion return false; if <UNK> { return false; }
Reference: how do we know which classloader to use? i noticed sometimes the classloader of the this object is used, sometimes the classloader of another class is used (like in samzasqlapplicationconfig)
Candidate: suggestion if <UNK> > 0) { ...
Reference: do we need deletesmsonruim and deletesmsonsim maybe we could pass a parameter instead.
Candidate: formatting: '+'
Reference: sounds to me that if the anchor parameter is null you keep returning false here.
Candidate: i is a bit confused about a bit idea, but i would suggest to use ==.
Reference: we are usually using stringutils from apache.commons, this class is already imported here so i think you should use this
Candidate: _cough_
Reference: this availablelocation should be refactored to its own method, as the same lines are used in several places.
Candidate: use <UNK>
Reference: please move this clearproperty call to @after to guarantee cleanup even if the test fails.
Candidate: this tear down to tear tear tear down down down down down down down down down down down down down down down down down down down down down down down
Reference: should be illegalargumentexception too
Candidate: no need to pull the provider noise?
Reference: should we check for endpoint could be null and throw npe ?
Candidate: we should use annotation, annotation, annotation, annotation, annotation, that annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation,
Reference: i would log this one since it means we have corrupted data in our db.
Candidate: gson message is not gson gson gson gson gson gson gson gson gson gson
Reference: please no :-)
Candidate: this is not
Reference: as i know there is no need to escape single quote inside double quotes
Candidate: you could use <UNK> instead of <UNK>
Reference: so we are trying ten time and logging an error for each time. than when done we return null if we failed! i think we should improve this.
Candidate: i think that this is is not <UNK>
Reference: public static localdate deserializelocaldate(string datetimestring) throws ioexception { return date_formatter.parse(datetimestring, localdate::from); }
Candidate: this import?
Reference: redundant string.format()
Candidate: i would be more precise than '+'
Reference: as mentioned before, we could also have in general a handler function that takes the action to perform and that always logs at the end, instead of having to call
Candidate: you could use a logger instead of <UNK>
Reference: not a good idea -- this sets a thread local so could interfere with other tests. also i suspect dynamictasks.queue(anothertask) won't run anothertask because the taskqueueingcontext t here is never
Candidate: use <UNK> instead of <UNK>
Reference: how about this.systemuserlist = arrays.aslist(accesscontrolsecurityconfiguration.getsystemuserattributevalue().split(",")); and not initializing it at the top instead of creating a temporary list just to add it to another
Candidate: you could use constants instead of these constants
Reference: probably uneeded but i remember and old issue with counted loop causing long time to safe point pauses: maybe would be nice to check if the range is too big
Candidate: if this is correct.
Reference: i'm not convinced this is really needed to free file descriptors... you don't close bytebuffers, they're only something in memory. anyway, to be safe, we could keep it as it
Candidate: you could call <UNK> foreach constructor: instead of close()
Reference: not synchronized
Candidate: this could be replaced by objects.isnull
Reference: this is perfect to me
Candidate: you could use <UNK>
Reference: what's the point of this change?
Candidate: is there a reason for this class is be null?
Reference: the .bagit folder does not have to be hidden. .bagit is our incubating next version of the bagit spec; it solves a lot of problems from the originial spec.
Candidate: this is eating the
Reference: !isempty
Candidate: is there a problem with a <UNK> that was implemented in the constructor?
Reference: if you are going to use message with pattern and {} placeholder and parameters after comma, let's use it for each logging
Candidate: shouldnt this be <UNK> ?
Reference: i would use "get" directly without checking with "containskey", there is no reason generate hashcode twice and search in the map. then you can check "if null" and return empty
Candidate: please use <UNK>
Reference: if this event is fired after a delete operation what is the **isinodeindexed** method validating?
Candidate: you could use <UNK>
Reference: localize please :)
Candidate: use <UNK>
Reference: all is_null_overhead multiplications seems to deserve a separate commit
Candidate: cr
Reference: outputdirectorypath is already a string
Candidate: please miss?
Reference: allocatewriteidevent should take writeids as well to ensure idempotent behaviour in target when apply. better to pass txntowriteid list. also, shouldn't use the regular allocate writeid flow in target. for
Candidate: you could use <UNK> annotation, instead of objects.isnull
Reference: why not directly int i = 0?
Candidate: can we use <UNK>
Reference: can you also change the other getsystemadmins() to use this new one with the label = ""
Candidate: suggestion <UNK> = new <UNK>
Reference: how about to combine the two methods above (pass null device from the second method and then change the db query according to this field)?
Candidate: this is designed is designed to be a boolean <UNK> id).
Reference: should we also allow overriding to false? making this:  java if (enablestacktrace != null)  the same thing applies to enabletrace, but that one seems less straightforward. does it
Candidate: nit: you could use <UNK> instead of <UNK>
Reference: for instance.. there' s nothing the client cli can do with a invm acceptor. that's only valid for embedded cases, which is definitely not the case for the cli.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: duplicate code, could use a method
Candidate: you could use a constant instead of <UNK>
Reference: asserttrue(queues.isempty(), "expecting empty queues but was %s", queues)?
Candidate: i don't think this correct?
Reference: looks like a great way to validate the onremove event (tricky to do otherwise).
Candidate: this is not taste but i'm confused about taste but i'm confused about taste but i'm confused about taste but i'm confused about taste but i'm confused about taste but
Reference: remove useless code
Candidate: remove the put: <UNK>
Reference: assigning actualarray to expected as well
Candidate: you could replace this by: <UNK> <UNK> <UNK> <UNK>
Reference: this works much better :  java string templatename = service.getlabels().getordefault("template", ""); return templatename.startswith("eap");
Candidate: you could use only: <UNK> multimap
Reference: with any messages going to the logger where you need to drop a variable, use the replacement syntax. this will save us some unnecessary string concatenation in the cases where
Candidate: maybe we could use a error message
Reference: how about txbegin() calling txbegin(transactiontype.optimistic)? maybe it is more intuitive that way to implement default parameters.
Candidate: wait.forelementclickable() could be <UNK>
Reference: why don't we keep termination here? since we wait for the safe state, the cluster should have already been balanced before the next instance's termination.
Candidate: nit: <UNK>
Reference: create a constant.
Candidate: you could use <UNK> instead of <UNK>
Reference: ewald @ewaldgrusk, update is a better way to update one cell of a matrix. and now it should work fine. could you please change all the get/set pairw with update
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: the change here causes a regression in legacy switch type clusters. i those clusters the default profile should be one of the management network profiles.
Candidate: rename to
Reference: obviously an extreme edge case, but randomarticle will be null if there are 0 articles in the db, right? i guess a 404 is appropriate then?
Candidate: could we use <UNK> <UNK> <UNK> methods?
Reference: if you're supplying a filename then the disposition should be attachment i think.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why cast twice to jsonarray?
Candidate: please assert please.
Reference: what happens in this scenario, where maxlength = 100 but strlen is set to 110? my question is are these two mutually exclusive? also what happens if equals is set
Candidate: @vilchik-elena you could be simplified (up to <UNK>
Reference: i think append("/") has no effect here. project.getlocation().append(selectedrepo) should work.
Candidate: you could use a constant instead of joining
Reference: did you forget to use interactive param? otherwise it seems like yagni.
Candidate: wdyt about removing this args?
Reference: change
Candidate: you could replace this by: <UNK>
Reference: this seems to be a step backwards, actually. why wrap it as a streamsexception only just to immediately unwrap it again?
Candidate: this is designed to have a <UNK> interval (the size is not a bottleneck. bottleneck. is a bottleneck. bottleneck. is a bottleneck. bottleneck. is a bottleneck. bottleneck. is a bottleneck.
Reference: nit: unnecessary optimization, else's code would cover that
Candidate: nit: foreach loop
Reference: did you mean for this method to be static?
Candidate: <UNK>
Reference: if the descriptor is null, i think you should just return this (ie keep the property so that it is not lost)
Candidate: you could use a string instead of <UNK>
Reference: just noticed this one. please unwrap it.
Candidate: this should be a broad as a broad broad broad broad broad
Reference: any reason why you changed this from the default? if no, please revert.
Candidate: you could use <UNK>
Reference: nit: perhaps, inline this variable
Candidate: use <UNK>
Reference: please use a proper formatting for this if condition.
Candidate: if you could use a <UNK>
Reference: any reason for this integer extraction from score? you can compare scores directly, i couldn't think of a need for this.
Candidate: <UNK>
Reference: with only one argument, collections.singletonlist(entity) is more efficient.
Candidate: if finishing <UNK>
Reference: please also check the exception message!
Candidate: please add
Reference: why customer? consider com.google.common.io.resources#getresource(java.lang.string) instead.
Candidate: we could use a logging instead of string concatenation instead of string concatenation
Reference: please avoid the usage of raw types. from the looks of this code it seems that 'provider' will always be of type provider<vmwarevmproviderproperties> (maybe also the 'providers' field?) in case
Candidate: if you could use <UNK> <UNK>
Reference: this should probably be in a different pr unless required for this one.
Candidate: is there a reasonable to state type?
Reference: i think it is better for performance to get the member first, check if it is not null and perform deserialization. also safer.
Candidate: you could use <UNK>
Reference: try/catch
Candidate: try/catch
Reference: in light of the following policy, please revert this change. ---- please refrain from modifying classes under org.springframework.asm, org.springframework.cglib, and org.springframework.objenesis. those include repackaged forks of the third-party libraries asm,
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: in this and the disable section, you need to add the second half of the text (jlabel1)
Candidate: you could use <UNK>
Reference: @vojtech, would doing an @uihandler make sense here??
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: shouldn't we pass false if no protobuf entity is indexed? i believe there is support for queries even in that case, throught "brute-force" scanning?
Candidate: this 100% sure that there is a 100% that we could have a 100% sure that 100% 100% 100% 100% 100% 100% 100% 100% 100% 100% 100% 100% 100% 100%
Reference: you don't need to mock this anymore you can set the string and return it.
Candidate: please use <UNK>
Reference: add a log when there's a malformed url. it helps in debugging issues.
Candidate: nit: use <UNK>
Reference: why we are retrieving jobs from db here ? why not same transaction ?
Candidate: this should be a <UNK>
Reference: the view should know nothing about the data
Candidate: i think this is not <UNK>
Reference: at this point, it's not clear if all bytes from src have been read. so, it might be useful to loop through the writes to sslengine until flush() can't write
Candidate: you could use a guava instead of <UNK>
Reference: might want to rename this to "getcrsextent()"
Candidate: is there a a description in the description of the <UNK>
Reference: should you also call addtobackstack() here?
Candidate: you can replace this with <UNK> with <UNK>
Reference: nit: can we use cachekeybuilder here?
Candidate: <UNK> intervals
Reference: add  @suppresswarnings("unused") // used by jelly @restricted(donotuse.class) // used by jelly
Candidate: is there a reason for this change?
Reference: nit, i believe the latest style file has changed exception throws to non-wrapping. please update your local style configuration.
Candidate: why is this tracking is not needed here?
Reference: put it on a separate line with a message like "getpartitionstatistics() returned null".
Candidate: throw an error
Reference: i don't think it's a good idea to change this behavior. instead, for the use case where you consider a non-existent requestid to be equivalent to a completed one, you
Candidate: you could move this to <UNK>
Reference: it's not default in syncthing, 60s is default in syncthing. the suggested value when folder watcher is enabled is one hour, yet in our case it's always one hour regardless
Candidate: you could use <UNK>
Reference: looking at the code below line 289, i think this should be if (!textutils.isempty(customotpapiurl))?
Candidate: is there a reason for this logic?
Reference: does waiting 1 millisecond to call setpublications() really help?
Candidate: is there a reason to assert that this is is not
Reference: null check.
Candidate: consider using a rowmutation <UNK>
Reference: please move this to the isloginvalid method instead of removing it
Candidate: suggestion if <UNK> {
Reference: unused parameter - maybe consistent but confusing.
Candidate: you could use computeifabsent clear()
Reference: not sure i'm following what you're doing here. can you elaborate?
Candidate: this is be entry.getvalue().executiondelay to a default?
Reference: why are changes in this class included in this pr? they seem unrelated.
Candidate: is there any reason why not constructor?
Reference: create an intent to move on course dates.
Candidate: you could use <UNK>
Reference: could this cause a performance issue with misbehaved code that calls begintask frequently? to be safe, you could check if the current progressbar has the correct style and omit the
Candidate: please use <UNK>
Reference: use fileutils.mkdirs
Candidate: no need to check here
Reference: i guess you should update this field always (even if secure is false)
Candidate: if you could use <UNK> <UNK>
Reference: this is not the same semantics as the original handling of null pathparametervalues with provided a default path if one wasn't specified. as a matter of style, i don't like
Candidate: is there a reason for this class that is not encapsulated anywhere that we don't have to one?
Reference: why not use assertnull and assertnotnull?
Candidate: please use <UNK> instead.
Reference: empty string is better, if that works.
Candidate: unsupportedoperationexception
Reference: while i appreciate the explicit-ness, i'd rather this value just be inlined into the method call. if you want to be specific you can do:  java addpathparam(name, value, false
Candidate: is there a reason for this change?
Reference: prefix should be forgeimpl$, not sponge$
Candidate: you could use <UNK>
Reference: give a duration timeout argument to blockuntilended just in case something goes wrong.
Candidate: wait.forelementclickable() should be <UNK>
Reference: good catchm this is not a "path". i wonder if we can somehow preserve the "message" i see that keeperexception has a bad way of dealing with the "exception message".
Candidate: this error message should be be
Reference: i'd suggest to make this line shorter, even if it requires many ugly line breaks and string concatenations: checkxmlrequest( "hosts/123/setupnetwors", 200, "<action>" + "<modified_bonds>" + ... );
Candidate: wait.forelementclickable() is deserve a
Reference: i think the else block needs to be one level out.
Candidate: this is not nervous that this is not updated.
Reference: fyi, there is a convenience constructor for volttable that takes a variable number (one or more) columninfo arguments instead of an explicit array. it makes these kinds of changes a
Candidate: you should use <UNK> <UNK>
Reference: did you consider using paging for that?
Candidate: this is a bit nervous that we could use a <UNK>
Reference: this should probably be info at this point?
Candidate: you could use a foreach connection, instead of repeating the
Reference: would you please factor the common logic to assertbigdecimalliteral(string inputtext, string expectedoutputtext)? that would make test much more readable (it won't include repeated builder.makeexactliteral...), and the failure message would be
Candidate: use <UNK>
Reference: why the change? standard syntax would be <player> for required values. typically [player] indicates optional values.
Candidate: you could use <UNK>
Reference: instead of testing assertthat(d.tojavalist(), is(d.run().tojavalist())); (that only check that tojavalist() is an alias of run().tojavalist()) i think we better test something like assertthat(d.tojavalist(), is(list.range(0, 1000).tojavalist())); (same for below methods)
Candidate: _cough_
Reference: and again.
Candidate: is there a reason for this change?
Reference: @daisuke-yoshimoto you can use @before and @after annotations on setup() and teardown() public method to reduce boilerplate code in tests for cleanup. it should be enough to rename cleanup() with
Candidate: is there a reason to check that is empty?
Reference: remove "this."
Candidate: i explained operands
Reference: would be more readable to call the variable readypingmsec too
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: boolean isthefirstpage = startpage * pagelimit == 0
Candidate: i enables router should be appropriate.
Reference: can't getselectablemilestones(allmilestones) be done once at the top?
Candidate: is there a reason for this method is not <UNK>
Reference: why don't we just pass in filesystemcontext, transactionid, etc into deltashardrewriter? having these two functions is really hard to understand from the interface.
Candidate: suggestion final <UNK> = <UNK>
Reference: consider injecting the discoverclient into the method
Candidate: is there a constants for hardcoded constants somewhere? to be hardcoded constants instead of hardcoded hardcoded hardcoded hardcoded hardcoded hardcoded hardcoded hardcoded hardcoded hardcoded <UNK> instead of hardcoded hardcoded hardcoded
Reference: m -> messagemonitor? u -> unitofwork?
Candidate: i'm not sure how about this is <UNK>
Reference: for quay.io and dockerhub i'd like to see a test where 1) a tool has tags with existing records for checksums 2) we do a refresh, but quay.io/dockerhub are slow
Candidate: rename to <UNK>
Reference: this is 'quark', then you don't need the try-catch.
Candidate: why not sure that this is succeeded
Reference: there is a typo here: threashold should be threshold (and at other places)
Candidate: if this is not null?
Reference: getlocalservice -> getservice
Candidate: this message should be null"
Reference: 'null' must be first operande
Candidate: no need to compute the rhs
Reference: since we don't use the subs return value here, i would suggest to just call client.executeblocking without storing the return value.
Candidate: nit: space after <UNK>
Reference: suggestion throw new tableexception("pandas udaf and non-pandas udaf cannot be used together.");
Candidate: @vilchik-elena nit: could be simplified (up to "return true"
Reference: why not do adbhostvalue.len() > 0?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: seems to be this whole for is equivalent to footnotemacro.getchildren().clear();
Candidate: you could use <UNK>
Reference: two ';'
Candidate: _cough_
Reference: imagine we catched an interruptedexception and reached this line. the we still would return true. is that correct? shouldn't we return false here?
Candidate: this is designed to wait for <UNK>
Reference: nit: remove debug logging
Candidate: if you could use <UNK> <UNK>
Reference: actually, the last else is unnecessary, and the last condition i == 100 can be the else clause, because if i < 100 and i > 100 are both violated,
Candidate: use a constant instead of <UNK>
Reference: should we not call completionstages.join once for a combined completionstage of the delete and notify operations.
Candidate: you could use <UNK> here instead of <UNK>
Reference: should this say "refer to" or possibly ", using hadoop config fs"?
Candidate: <UNK>
Reference: small typo in variable name
Candidate: is there a reason for "tables" ?
Reference: nit map<string,string> params = new hashmap<>();
Candidate: you could use a multimap here instead of <UNK>
Reference: should this be logged at an info level as this isn't performing the operation as expected?
Candidate: i'm not sure that this should be the pretty-print
Reference: you could make this a simple create table (...)
Candidate: you could use a string instead of <UNK>
Reference: please remove system.out
Candidate: this is not a nervous that this is is not a good idea.
Reference: since len isn't used outside of this for loop, you can put it in the initialization. for (int i = 0, len = params.length; i < len; i++) {}
Candidate: this is going to be printed from the enum?
Reference: in case of holes, tx stream's tail will not be above the stream tail, right? it will be the other way round
Candidate: i is a bit confused clearer, but i would be a bit clearer, but i would be a bit more readable if you could use <UNK>
Reference: you could replace this line with hassenderannotation=false. then you can extract line 90 to 102 to a method hassenderannotation inside this method the hassenderannotation can be replaced with return statements.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: what happens, if the enddate is null?
Candidate: _cough_
Reference: this should be environment_uuid, not id. id and uuid are different values
Candidate: you could use <UNK> instead of <UNK>
Reference: we can always use createsnapshot, just change it to accept the initialsize.
Candidate: you can move this to <UNK>
Reference: the old code also opens websites, which leads to problems with this new code. i think a islink check at the appropiate place suffices.
Candidate: is there a reason for worker worker worker worker worker worker that worker is that the worker is not encapsulated in the <UNK>
Reference: unneeded tern (it's always a creeper if it's reading this line)
Candidate: suggestion if <UNK> == null) {
Reference: s/sharable/shareable
Candidate: please move this to <UNK>
Reference: java if (!keytype.isinstance(requirenonnull(keyobject))) { ... }
Candidate: let's use <UNK>
Reference: should be: java helper.waitforregistrationatserverside(1);
Candidate: wait.forelementclickable() should be <UNK>
Reference: this seems to be redundant - if we reach this point, the lease has been created already, right? so we should not issue another call to add the lease
Candidate: this is misleading.
Reference: not sure how i feel about having this as a system property. on one hand, it does make some sense semantically, on the other those are typically "broker owned" properties
Candidate: this is a duplicate, we could use only:  java return <UNK> == null) { return <UNK> } }));
Reference: rather than doing a substring here would it make more sense to use matcher.region() instead?
Candidate: please remove this line
Reference: it could be list.of (master only).
Candidate: you could use <UNK> instead of creating a connection,
Reference: error
Candidate: is there a possibility that that is not empty?
Reference: core.metacard_tags. could also do filters.allof(filterbuilder.attribute(metacard.tags).is().text(workspace_tag), filters.add(filterbuilder.attribute(queries_attribute).like().text(queryid))); filterbuilder.attribute(queries_attribute).is().text(queryid))
Candidate: use <UNK>
Reference: getparamnames and getargs is only called once. maybe we can refactor this to a getparamarguments method
Candidate: you could use a @test(expected = <UNK>
Reference: shall we make '_' a constant? i suppose 'hyphen' can be used for that? that way, if we change the replacement character one day, we'll just need to change it
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i wonder if this should be ~~ or contains ignore case etc
Candidate: i think (filter.getrelationshipdirection() == direction.incoming) {
Reference: suggestion if ((qualitymod > 0) && (null != tech) && tech.getoptions().booleanoption(personneloptions.tech_fixer)) {
Candidate: is there a reason for this is not empty?
Reference: consider breaking the lambda into a helper function.
Candidate: this should be container name container container from container container container container container container
Reference: we don't need the 2nd param(name.length()) in substring.
Candidate: this is be <UNK>
Reference: updating physics flows water. so this would be a duplicate action.
Candidate: i think that this is not efficient, we should have to to the <UNK>
Reference: random could be a member variable of this class instead of constructed in various methods
Candidate: use <UNK> % <UNK> % <UNK>
Reference: wouldn't return null instead of this exception enough for the method contract? as you see in the niofilelocker, you just suppress such an exception any way. so, let's make a
Candidate: remove the
Reference: jobname is required and should never be null. would prefer to throw (option.get()) instead.
Candidate: this "config job.name is missing" ?
Reference: accessing preferences directly from the parser code is not allowed since ibm uses this code in a headless environment that doesn't support eclipse preferences. you can propagate additional preferences by
Candidate: this should be getparameters().getstoragedomainid()
Reference: please use parenthesis for for statements.
Candidate: use <UNK>
Reference: whitespace
Candidate: suggestion <UNK> <UNK>
Reference: could add a check here that imagename.getregistry() returns indeed docker.jolokia.org ? (i doubt that)
Candidate: you could use <UNK>
Reference: extracting this new action1<networkstatus.state> as a collaborating class will clearly highlight it's dependencies and improve the readability.  static class networkaction implements action1<networkstatus.state> { private final networkstatusdisplayer networkstatusdisplayer; networkaction(networkstatusdisplayer networkstatusdisplayer)
Candidate: we could draw a lock to firing <UNK> and then we don't need only:  if <UNK> == null) { <UNK> = <UNK> }
Reference: please review after our conversation
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: should this return an unmodifiable copy?
Candidate: you could use <UNK>
Reference: no null check for zone here?
Candidate: rename to <UNK>
Reference: this could be assertfalse(sharedpreferences.getstring(crashreporter.exception_for_report, "").isempty()); for better readability. this is valid for all further occurrences.
Candidate: assertfalse(...);
Reference: final boolean disallowdoctypedecl = jsfresourcedefinition.disallow_doctype_decl.resolvemodelattribute(context, model).asbooleanornull();
Candidate: this is strange, if we can.
Reference: these are default for bool and int so no need to clarify. suggestion
Candidate: you could use a constant instead of <UNK>
Reference: why not leverage stop(samzaappstatus.failed) up top? i like some additional logs. so maybe modify the stop(...) to include this logs for better debuggability.
Candidate: should we add a log the info.
Reference: log?
Candidate: i think this is not <UNK>
Reference: would it make sense to call flush() here to force the updates to the persistent store?
Candidate: please use <UNK>
Reference: this types is used only to count them ? and then writeobject + converttolegacy again? surely a mistake
Candidate: this is right...
Reference: instead of shellisactive, use shellisavailable - its safer.
Candidate: i think webfaultexception should be ignored.
Reference: please chain the expression. we don't need to create a variable here.
Candidate: please use <UNK>
Reference: this variable looks like a copy/paste thing leftover from the split developer job.
Candidate: is there a reason for this method is not <UNK>
Reference: see above - refactor!
Candidate: this is designed to be a <UNK>
Reference: expected value comes first so assertequals(4096, connection.getchunklength());
Candidate: could you use assertthat
Reference: hi @fernandacg did you check the length of the edittext so that the warning doesn't get shown when the activity is loaded? i tested this and that is the behavior
Candidate: is there a reason for this method is not <UNK>
Reference: what if groups is empty at this point ?
Candidate: is there a reason for this method to be called in the <UNK>
Reference: whitespace formatting - could you please remove this extra line?
Candidate: i think we should have to plug that the is not to have a plug the table, so that we don't know that we have a
Reference: for consistency, we have never declared to throw illegalstateexception for null checking. i think we should remove it for consistency.
Candidate: if this is submits finishing the <UNK>
Reference: properties seems to store data in memory in its own map, is there a benefit to the unitcolors cache?
Candidate: use <UNK>
Reference: this should be a log entry.
Candidate: is there a a warning?
Reference: @fanifieiev it's more it to check if two requests are equals, right?
Candidate: please use <UNK>
Reference: add "creator" and "lastmodifier" to the standard_aliases list at the top of this class. these get added to all the criteria used in paginateddatasource
Candidate: this is not be tied to typos, please revert.
Reference: problematic... should first check if the service is a wfs or a features api, that the request is a getfeature or its equivalent in features api, and that the chosen
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: return !disks.stream().anymatch(d -> d.getimagestatus() == imagestatus.locked)
Candidate: please use <UNK>
Reference: unused arg
Candidate: why not use <UNK>
Reference: can remove this line.
Candidate: throw an illegalstateexception instead of <UNK>
Reference: ditto & throughout code
Candidate: <UNK> -> <UNK>
Reference: include trace changes from 1.2 branch
Candidate: this should be <UNK>
Reference: why not use die() ?
Candidate: this is not be a positive statement, but it would be more readable: java if (parent == 0) { ...
Reference: not sure we should use any public ip even for mock data. replace with private network ip please
Candidate: this import?
Reference: please have test for null value of targetid.
Candidate: you could use a player player player = <UNK> player player = <UNK> player = <UNK> player player = <UNK> player player = <UNK> player player = <UNK> player player
Reference: we still need to call to activateparticipants()
Candidate: i think that this is not efficient, we could move this to to the the block
Reference: this need to be fixed, i'll get to today. githubevent.repoidentifier should really have a builder. there will be a new release today.
Candidate: could you explain why is not implemented in <UNK>
Reference: is there an enum of the existing valid disk types?
Candidate: verify that the generated is a request.
Reference: you can just return builder.build(). we have an opportunity to debug/inspect already.
Candidate: why not -1l ?
Reference: maybe have a for() loop that iterates over a number of iterations and waits e.g. 10ms per loop so that the total time bounded by this test is say, 1s?
Candidate: use <UNK> instead.
Reference: how does all replicas being local mean it's a dummy list? only the 2nd half of this predicate is dummy list related.
Candidate: <UNK>
Reference: define as a constant even if it's used once.
Candidate: please use <UNK>
Reference: according the method name, shouldn't be the error message more like: "no path of modelname with modelnamespace found" maybe also it is more about illegal argument or illegal state than
Candidate: this args?
Reference: @pynicolas why there is no test for truthiness?
Candidate: this is not
Reference: maybe an off-topic, but using longer self-describing file names could be helpful
Candidate: you could use a constant instead of <UNK>
Reference: offer may fail. use componentutils.offeruntilsuccess the locking has been removed in that method <link_0>
Candidate: is there a reason that is is not to be defined anywhere else.
Reference: @hustodemon : please update. here is still the '+' sign missing. correct would be:  kopts = kopts + " self_update=0 pt.options=+self_update";
Candidate: this multimap is not be locked
Reference: the key is offlinetablename instead of rawtablename. also, no need to do check and remove here, directly remove should be good enough suggestion _tableupdaterlockmap.remove(offlinetablename);
Candidate: i think that this callback is be to the callback
Reference: i think you should do the same thing as hivetableproperties:  hivestorageformat.valueof(((string) value).touppercase(english)
Candidate: suggestion <UNK> <UNK>
Reference: try to keep the case consistent with every other endpoint, let's use camelcase suggestion species, assembly, response)).touri().tostring(), "corevariant");
Candidate: is there a reason why not we are going to use a instead of the
Reference: i don't really understand your calculation here, can you elaborate? btw, i think some simple function like  long rtt = 1000 / request.get() - hostsleeptime; hostsleeptime -= rrt 
Candidate: i think we should wait here instead of <UNK>
Reference: does getjenkinshome() always return a valid jenkinshome here? just asking, to make sure it does; you know best.
Candidate: you could use use <UNK> instead of creating a new <UNK>
Reference: this method could instead return class mobileelement. return new mobileelement(element, driver); then all the elements returned by complexfind can be easily cast to mobileelement. additionally, can we have all the
Candidate: you could use <UNK>
Reference: shouldn't it be "decryption of security keys..."?
Candidate: we could use a instead of <UNK>
Reference: hmmm wonder if there is a better way to do this.
Candidate: we could use the exception here instead of <UNK>
Reference: deprecated, use this itmftreedatamodel model = ((timegraphentry) entry).getentrymodel();
Candidate: if you could be null here instead of <UNK>
Reference: need to verify that 'getsanstoragemodelbase' is not null, as we set it only for block domains
Candidate: you could use <UNK> instead of <UNK>
Reference: this logic appears to be duplicated three times, any chance this could be abstracted? possibly a method that takes flux<bytebuffer> and returns mono<tuple2<contenttype, flux<bytebuffer>>.
Candidate: nit: <UNK>
Reference: is riding?
Candidate: i think that nesting.
Reference: for undeploy, do we need to retrieve any info
Candidate: this is not to be a wire to the wire depending on the
Reference: we should use the string variant of function for simplicity: suggestion .value("user", function("fromjson", literal(alice, user_codec)))  the examples already do for everything else (table name, bind marker, etc).
Candidate: nit: parens around parens
Reference: logger will never be null. don't need the null check here.
Candidate: isempty()
Reference: shouldn't log and skip. just let the exception propagate, it should be handled by mapreduce.
Candidate: same as above.
Reference: can this log statement contain a message, changed to debug level, or be removed?
Candidate: this could be replaced by <UNK>
Reference: i think i agree with you do not shift the this.sendtopipe(rawbuffer); to new thread, because we block the current thread with latch.await(this.pipetimeout , timeunit.milliseconds) just after submition anyway.
Candidate: i am assuming that we want to wait for the state of the <UNK>
Reference: instead of keeping track of readbytes you can use bytestreams#limit
Candidate: i is a bit nervous that <UNK> is submits the <UNK>
Reference: same as above, an explanation for some exception will be useful
Candidate: ![critical](<link_1> 'severity: major') remove this unused method. [![rule](<link_2>](<link_0>
Reference: spacing
Candidate: you could use <UNK> instead of <UNK>
Reference: add message "renewer in " + ids
Candidate: i think that this is not efficient, but i would be a good idea to the <UNK>
Reference: you don't need 'this' in waitforelementbyelement method. we are not using it so please remove it to have consistency inside the repo if there is no specific reason for adding
Candidate: please use <UNK>
Reference: there isn't really a need for any unset as each check against the clockbit (observed) should reset the clock bit.
Candidate: if this is not efficient, we could be a bottleneck. bottleneck. is a bottleneck. bottleneck. is a bottleneck. bottleneck. would be a bottleneck. bottleneck. would be a bottleneck. bottleneck. bottleneck.
Reference: @raphaelln minor: usually we use matchers.is
Candidate: @exper0 please use <UNK>
Reference: why are we throwing generic exceptions, shall we only throw relevant exceptions
Candidate: use readasstring(...) instead of <UNK>
Reference: errors should be properly logged, and not just printed to the system error.
Candidate: throw (throwable exception?
Reference: this is totally out of topic because you just move this if block from coapendpoint to basecoapstack but i can not get the point of it.
Candidate: please use <UNK>
Reference: why "next"?
Candidate: use <UNK> instead of ==.
Reference: hi @sureshanaparti, could you please use collectionutils.isempty? it checks if the list is empty, returning true in case of null. (<link_0> thanks.
Candidate: is there a reason for this logic?
Reference: also reject query for field name **id** which is a reserved keyword for all id fields.
Candidate: is there a reason for this method is not <UNK>
Reference: indices, not indeces
Candidate: i explained explained explained that explained to a activation. activation.
Reference: nitpick: this class should have only one public method: upgradestorageconfig
Candidate: if we is not the to the <UNK>
Reference: please change the code to match how it is now replaced. i just wanted to be sure that there was no exception thrown here.
Candidate: @vilchik-elena you could be simplified to <UNK>
Reference: please implement tostring() to provide debugging state information for debugging purposes.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: can be removed as expectassertionerror already checks that
Candidate: you could use the m
Reference: methinks this should be false not true
Candidate: is there a reason for this logic?
Reference: empty lines...
Candidate: you could use <UNK>
Reference: we miss an assertion that the retrieved node name is "replacement"
Candidate: you could use <UNK>
Reference: make this synchronized, just in case
Candidate: this is a <UNK> suppresses tests.
Reference: you can remove the leavingservers variable and pass null here. same in the other test
Candidate: you could use <UNK>
Reference: why change the default sql type for datetime items in this pr?
Candidate: you could use <UNK>
Reference: ohh interesting. is it not mandatory in the swagger? or what changed? a regression?
Candidate: please use <UNK>
Reference: optional: replace these system out with log statements
Candidate: please use <UNK>
Reference: whats the urlclasspath definition for file archive? in the past we had .zip accepted. years ago but would check against the urlclassloader.
Candidate: you could use a try-with-resources here instead of return?
Reference: it looks like this is impossible, based on the implementation. if so, this should be assertionerror, which represents the programmer's assertion of it not being possible, on the assumption that
Candidate: if we is a <UNK> that is is not <UNK>
Reference: this line should not contain any whitespace symbols.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: 'needs 2 _arguments_', plural
Candidate: this is be simplified to <UNK>
Reference: as the next line is finputhandler.save(...) and text and model are synchronized, is there really a need to save the textual editor as well?
Candidate: we could use the <UNK> <UNK>
Reference: still using assert here
Candidate: use <UNK> instead of <UNK>
Reference: you can put shutdownnow() to the finally block.
Candidate: i think that this is not efficient, we could use system.currenttimemillis() instead of the println.
Reference: what are some examples of these task names that should be ignored? contains "idea" (any capitalization) seems like it could match unintended stuff, like "semidead" or "mideast" :-)
Candidate: @vilchik-elena use <UNK>
Reference: use a logger or remove this.
Candidate: you could move this to the 'final' block
Reference: euh ... do you test if "harmonization study id cannot be null or empty" is null or empty ? did you test your code ? ...
Candidate: we could use a multimap here instead of creating a new object as well.
Reference: add @override. same with afterexecute.
Candidate: why not @visiblefortesting
Reference: this line/var is unused.
Candidate: suggestion throw new <UNK>
Reference: you're using this pattern a lot. versioning.getversionordinal() is going to possibly create an unknown version object and then getknownversion() is going to throw it away. is there a way to
Candidate: i am not sure that this might be a bit more informative error.
Reference: camel case variable names
Candidate: is there a reason for this logic?
Reference: this is incorrect place for command
Candidate: you could use a <UNK> element?
Reference: hmm, i honestly don't know if the "&" should be here or in the reviewed constant?
Candidate: you could use <UNK>
Reference: mapping could not be null at that time anyway since it is used one line above
Candidate: you could use a multimap here instead of creating a new object object object object object object object object object object object object object object object object object object object
Reference: 1. add the border size to log as above 2. also think about need of taking screenshot here and in the below methods
Candidate: i length?
Reference: something fishy here - the 'reinitialize' field is redundant?
Candidate: is there a a enum provided by image? by the image? enum
Reference: instead of using contains("account location url") here, the account constant could be used instead (i.e., contains(account)).
Candidate: is there a reason for this test is not
Reference: use checknotnull or java requirenonnull
Candidate: please use <UNK>
Reference: .map(this::splittofilenameandovf)
Candidate: i think that this is be squashed from the enum object?
Reference: could be return parents.stream() .map(doc -> doc.getadapter(bundlegroup.class)) .filter(objects::nonnull) .map(bundlegroup::getid) .collect(collectors.tolist());
Candidate: this is a bit nervous that this will be a bit easier.
Reference: is this method being called often? should we surround with if (logger.isdebugenabled())?
Candidate: i think that this is not enough: <UNK>
Reference: should probably be integer.valueof(100) purely for consistency reasons.
Candidate: this think this should be a <UNK> <UNK>
Reference: start < end is verified pre-condition already?
Candidate: you could use the division here instead of partitions?
Reference: isn't this going to be slow on low end devices?
Candidate: 'null !=' is almost 4 places.
Reference: you can use assertthat(array).hassamesizeas
Candidate: you could use <UNK>
Reference: _id could be a combination of both attributes, to ensure consistency even when not enforced by the application layer.
Candidate: please use <UNK>
Reference: seems we can specify arraylist size in constructor above to avoid performance and memory overhead, though not a big deal.
Candidate: we could use <UNK>
Reference: this could be protected or package-private.
Candidate: i liked that this is not efficient, but i guess we could use the <UNK> <UNK>
Reference: nit: as a matter of style, i think it's better to either always include braces on each branch of an if-else, or to never include them. (otherwise it's easy to
Candidate: could use a constant instead of <UNK>
Reference: i think with this you can just use new object() and synchronize on that object
Candidate: you could move this to <UNK>
Reference: hm... why two? where did you get this number?
Candidate: @xupyprmv let's use <UNK>
Reference: not good; this blocks the ui thread. no point running the operation in a background job then.
Candidate: you can use the logger instead of sending the
Reference: i think we should create a defensive copy of the map
Candidate: is there a reason for this class instead of creating a <UNK>
Reference: same here - remove the catch block.
Candidate: is there a reason to assert here?
Reference: what is the purpose of passing it as an http url here? i believe there are parsers already in geode for splitting host:port.
Candidate: this is designed is designed to the bottom of the
Reference: minterstitialcontext should probably be cleared here.  if (minterstitialcontext != null) { minterstitialcontext.clear(); minterstitialcontext = null; }
Candidate: wait.forelementclickable() should be <UNK>
Reference: could you clarify how does this change help?
Candidate: you could replace this with <UNK>
Reference: i have some doubts about variable name. checkstyle should shout about it.
Candidate: thanks.
Reference: could you replace this if by  optional.ofnullable( this.states.get( source ).meshmanagerproperty().get() ).ifpresent( meshmanager::removeallneurons );  maybe in the future we will have meshmanagers for non-label sources.
Candidate: i guess we could use the assertion, ie ie <UNK>
Reference: this (and others using scantarget) could be just package visible to not expose scantarget, the methods with the id of the scan should be enough.
Candidate: this is not be non-null?
Reference: suggestion final map<slotrequestid, slotexecutionvertexassignment> slotexecutionvertexassignments = createslotexecutionvertexassignments(executionvertexschedulingrequirements); final map<executionvertexid, slotrequestid> executionvertexslotrequestids = slotexecutionvertexassignments .entryset() .stream() .collect(collectors.tomap(e -> e.getvalue().getexecutionvertexid(), map.entry::getkey)); final list<completablefuture<physicalslotrequest>> physicalslotrequestfutures = createphysicalslotrequestfutures( executionvertexschedulingrequirements, executionvertexslotrequestids); allocateslotsforassignments( physicalslotrequestfutures, slotexecutionvertexassignments); return
Candidate: please use <UNK>
Reference: similarly to the cases above - the review and bug pattern share error reporting
Candidate: please add a <UNK>
Reference: this is the case at startup, right? maybe just == -1l instead?
Candidate: if you could use <UNK> <UNK>
Reference: add 8 bytes for the key
Candidate: i think this is a <UNK>
Reference: you should use the defined constant here.
Candidate: <UNK>
Reference: it is a bad practice to catch throwable (can cause maintenance issues if api changes to have new caught exceptions, or later you want a caught exception to bubble up).
Candidate: i think we should to the <UNK> <UNK>
Reference: no need space before new line can we avoid new line in this case?
Candidate: ![major](<link_1> 'severity: major') reduce this log method. [![rule](<link_2>](<link_0>
Reference: why not just use atomicboolean.getandset()?
Candidate: rename to ctor
Reference: i would usually discourage doing any real work in a constructor. this often can cause bugs because when the constructor throws an exception a partially initialized class often will not
Candidate: this is not be used?
Reference: can just use new runnable() {...} so don't need a return.
Candidate: this feels like a little surprised surprised that this change is related to this pr.
Reference: this can use immutabledatacachingutil
Candidate: use <UNK>
Reference: it could be more optimized to following function.  @nullable private static uri getfileurifrommediastoreuri(@nonnull context context, @nonnull uri photouri) { final cursor cursor = context.getcontentresolver().query(photouri, new string[]{mediastore.images.imagecolumns.data}, null, null, null);
Candidate: i think we should log the error.
Reference: again, might not be public
Candidate: i'm not sure that this is a bit less bit less often bit less often bit less often bit less often bit less often bit less often bit less often
Reference: no need for null check.
Candidate: is there any reason to be null?
Reference: optional.orelsethrow
Candidate: copy/paste this possible?
Reference: is there a case that the firstkey is null and the rest are not?
Candidate: you could use a multimap here instead of <UNK>
Reference: is timeoutexception possible? i noticed the pool is busy exception is a connectionexception.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: use the config from the hbtu? maybe new configuration(test_util.getconfiguration())
Candidate: this is not correct.
Reference: let's use setpositivebutton here instead. there's no special motivation for it, but i think google styles the positive one with the primary colors
Candidate: is there a reason for element?
Reference: spotbugs is flagging this line:  [error] dead store to worker in org.apache.druid.indexing.overlord.remotetaskrunner.streamtaskreports(string) [org.apache.druid.indexing.overlord.remotetaskrunner] at remotetaskrunner.java:[line 651] dls_dead_local_store
Candidate: this is not a try-with-resources property?
Reference: can we initialize the new arraylist<>() with same size as list 'metrics'. this will save on resizing cost which includes array copy operation.
Candidate: this is not to be a
Reference: why getting through a test here? owner = excludee in both cases
Candidate: if you should use a <UNK> <UNK>
Reference: can we have final variables for 80 and 443 ? the variable should have a clear name that indicates that these are the default ports.
Candidate: the error message should be be <UNK>
Reference: pretty sure this is only used during the setup wizard, so doesn't need the permission check changed.
Candidate: we should use the schema schema ![image](<link_0>
Reference: what happens if its not a configurableapplicationcontext? probably better to take a class cast exception. it should never happen, but we don't want this to silently fail.
Candidate: you could use <UNK> here instead of <UNK>
Reference: since userdirectory is known outside the for loop, you could get the canonical path and store it in variable for comparison in the if statement. also, having an empty if
Candidate: is there a a strange, strange, instead of <UNK>
Reference: again, initial capacity should be specified. or use linkedlist
Candidate: you could use a guid instead of <UNK>
Reference: we should turn the auth system back on after creating the test data.
Candidate: you could turn the auth auth auth auth auth auth auth auth auth auth auth auth auth auth system manager, the test auth test will be automatically after creating a
Reference: :+1: using coderresult looks good approach to me.
Candidate: you could use <UNK>
Reference: same here - duplicated code.
Candidate: you could move this to <UNK>
Reference: the method name is weird. this.isreadallowed might be better.
Candidate: this is right...
Reference: i think this should be something like baf.setlength(baf.getlength() - lastlen)
Candidate: this tear down to
Reference: make this if the other way round. check for the positive condition and have the negative one in the else. it makes it more readable
Candidate: wdyt about removing the
Reference: what happens to an iterator instance extant over a fail-over? i'd expect a "nice, clean" termination on the next next or hasnext call. i see that org.ehcache.clustered.iterationfailurebehaviortest has a test
Candidate: this is a <UNK>
Reference: i can see that this is taken from the way that wavelengtheditor works. in fact it pains me to admit i'm originally responsible for this suggestiblestring business and the fact
Candidate: this is designed to be a <UNK>
Reference: you can not put person via storiosqlite.put() because it will be recursive, so you need to use storiosqlite.internal(), but you can use storiosqlite.put() to put cars.
Candidate: you could use <UNK>
Reference: could we change this back to the error_not_integer constant? geode redis should return the same errors as redis.
Candidate: suggestion <UNK> = <UNK>
Reference: unnecessary throws (same for the constructor above).
Candidate: this is not to be a <UNK>
Reference: if follows the top code, we can use pageviewcallback.getonbardingpageview()
Candidate: if you could use <UNK> <UNK>
Reference: some logic is repeated in the if-elseif-else. can be simplified as  if (!isshutdown.get() && connection.isusable()) { ... } else { ... }
Candidate: this is not going to be called in the middle of the middle of the middle of the middle of the middle of the middle of the middle of the
Reference: why do you need this.?
Candidate: you could use try-with-resources commons-io
Reference: could you add something like "for patchsetid: " + psid.tostring() to this message, and any other pertinent detailed info to the other messages if appropriate?
Candidate: is there a reason for this message is be used?
Reference: value size, instead of key size in a message
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: suggestion logger.debug("connection[" + index + "] is lost. reconnecting to resume...");
Candidate: is there a reason for the sake of <UNK>
Reference: can we use default builder by default and hide this argument?
Candidate: you could use <UNK>
Reference: name of the template should be more explicit.
Candidate: nit: <UNK>
Reference: not worth using the switch
Candidate: you could use <UNK> here instead of <UNK>
Reference: you could instead use:  addenricher(enrichers.builder() .propagating(redisstore.hostname, redisstore.address, redisstore.subnet_hostname, redisstore.subnet_address, redisstore.redis_port) .from(master) .build());
Candidate: you could rename to to <UNK>
Reference: remove
Candidate: wait.forelementclickable() should be <UNK>
Reference: null check?
Candidate: throw an exception here instead of: instead of:  if (throwable == 0 ? %s", <UNK>
Reference: these two methods should be the same name with the exception of prev/next suffix.
Candidate: you could use a constant instead of repeating the
Reference: is this try necesasary to test the casting, im not sure i like the construct i would prefer to use instanceof
Candidate: this self wording thanks.
Reference: how is this happening?
Candidate: this is not a strange, but i can't we use the <UNK> <UNK>
Reference: java // todo java 7+ use chained exceptions
Candidate: throw an exception instead of null.
Reference: the value should still be read from the activeconfig instance, to allow for per-world overrides.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: shouldn't this go to the log, at debug level?
Candidate: <UNK>
Reference: @gmandnepr indentation still needs to be fixed here
Candidate: @piddubnyi full path
Reference: could task be null here?
Candidate: you could be careful here instead of <UNK>
Reference: no need to use uribuilder
Candidate: no need to use uribuilder
Reference: the default for the managed param is true, so you can just miss that out i think.
Candidate: is there a reason for avro message to be a
Reference: same as above, a bit hard to read
Candidate: please use <UNK>
Reference: we have a nullchannel implementation that does what you want here. use that instead.
Candidate: why not we need to create a object instead of creating a new object object object object object object object object object object object object object object object object object
Reference: please, fix
Candidate: this is not a bit strange, we could use the <UNK> <UNK>
Reference: i believe it would be good to return boolean to signify the success of this method invocation.
Candidate: this is a bit more clear.
Reference: return value of the method is never used.
Candidate: use <UNK>
Reference: a single variant is not enough to convince readers that the use of (  "call", args) works correctly as varargs. i would expect to see closures with zero, one,
Candidate: please use <UNK>
Reference: good it is the way
Candidate: please use <UNK>
Reference: it looks like we still need to cancel the pingtask in the receiver. add lifecycle ? what about closing the folder?
Candidate: is there any reason why not stubbing ?
Reference: i prefer:  java if (genericutils.length(owner) > 0) { continue; }  i don't think "empty" owner are expected, and even if they are imo they are the same as
Candidate: use <UNK>
Reference: why not call onbind first (i.e. in line 83)? do we conflict with something?
Candidate: you could use a property?
Reference: (first).hassize(3);
Candidate: use readasstring(...) instead of <UNK>
Reference: as the initialized list is an immutable list, this method should make save, that the provided list is made immutable too, in order to give a uniform behavior after replacing
Candidate: wait.forelementclickable() should be <UNK>
Reference: wouldn't make more sense to push this down into retryingreadrowsoperation so that we don't have to duplicate this for callback api?
Candidate: if you could use <UNK> <UNK>
Reference: shouldn't a similar check be implemented for byte, short, integer, etc? this isn't a special case, just range check.
Candidate: use mockdatanodeid instead of <UNK>
Reference: use try-with-resources so you don't need to manually close the session.
Candidate: use try-with-resources try-with-resources try-with-resources try-with-resources try-with-resources try-with-resources try-with-resources try-with-resources try-with-resources try-with-resources
Reference: pass nfe as the cause (third param) to restclientexception
Candidate: this would be nice to use servercontext.
Reference: could you please use window.getshell().getdisplay() instead of display.getcurrent()?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why do we need to interrupt the current thread? wouldn't throwing runinterruptedexception be enough?
Candidate: i think that this is is not <UNK>
Reference: this is going to break when the menu changes in future. may be write a function that can find an item and click it irrespective of menu content? e.g. clickmenu(string...
Candidate: suggestion <UNK> = <UNK>
Reference: stringutils.substringafter
Candidate: you can use try-with-resources <UNK> try-with-resources
Reference: formatting
Candidate: is there a reason for this logic?
Reference: suggestion + " characters should be renamed to conform to a "+max_namespace_len+" character limit. "
Candidate: this we wish to have a <UNK>
Reference: missing <>, this is a raw type.
Candidate: this is a <UNK>
Reference: why not use specific constructor instead of invoking setter later on existing object? getfilteredandsortedparameters params = new getfilteredandsortedparameters(max, queryhelper.parsepagenum( queryhelper.getconstraint(httpheaders, uriinfo, "", modeltype);));
Candidate: why you decided to call <UNK>
Reference: why did you remove the lambda
Candidate: this is designed to be initialized in the
Reference: let's use a proper if/else statement here please.
Candidate: is this correct?
Reference: more on code quality discussion: studentfeedbacksubmissioneditquestionswithresponses/feedbacksubmissioneditresponse  are something related to ui while the method actually should check whether the data exist or not. if u take a look at
Candidate: i think this should be <UNK>
Reference: passwords should usually better not appear in log files - and it also makes no sense to have it as a warning. i'd suggest to either remove it or reduce
Candidate: please use <UNK>
Reference: let's check that a snapshot was created with provided name.
Candidate: you could use a foreach loop here instead of '+'
Reference: the context is not closed correctly in this method (it is done in the invoked saverelations) better commit/complete here. a proper exception handling is required to avoid future connection leaks
Candidate: again, again, please remove this changes again, again, again, again, again,
Reference: .orelse("failed")
Candidate: i think this should be cached,
Reference: in that case i'm definitely need to use alluremain.class.getclassloader(). the resource that i need to unpack is located in allure-bundle.jar, and available from classloader that loaded alluremain
Candidate: unused
Reference: this assumes annotations will be the first children among modifiers, but that may be false. public @override static @postconstruct void foo() { } is completely valid java code.
Candidate: this is a bit more efficient, but i would suggest to use foreach loop instead of creating a foreach loop instead of <UNK>
Reference: getindexdiffcacheentry() can return null
Candidate: this is required, but i wonder if this is required, but i guess it'd be possible to make sense to call this v. <UNK>
Reference: tapping enter on an empty checkbox line removes the checkbox as expected and moves the cursor to the next line, which i wasn't expecting at first. i thought the cursor
Candidate: i y y y y y y y y y y y y y y is y y y y y y y y y y y y y y
Reference: extract try and catch blocks into separate methods? as a rule of thumb, try to keep constructors simple. similarly, see if this if statement can be extracted out.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: s.a.
Candidate: suggestion if (throwable == null) { throw new <UNK> }
Reference: can you use matcher.appendreplacement() to simplify this? <link_0>
Candidate: is there a reason that is an behaviour?
Reference: aren't the \n and \r supposed to be doubly escaped like the \\s below? shouldn't we be splitting based on the java platform line delimiter instead of assuming dos/windows?
Candidate: use <UNK>
Reference: assertthat(related).isempty();
Candidate: you could use the <UNK> annotation?
Reference: line 61 on line 60 and align with parentheses in arcbees's projects
Candidate: finals
Reference: throwing these two exceptions on their own line like this is a bit neater to read than wrapping like above
Candidate: is there a reason for the
Reference: some html elements with other class?
Candidate: could you move this to debug
Reference: i'm obviously missing something, but it seems to me to always be a map?
Candidate: nit: use <UNK>
Reference: any specific reason to enforce the fairness?
Candidate: this is designed to be initialized in the constructor?
Reference: why do we need compensation data here?
Candidate: i think that the command is is locked to the log.
Reference: if there's an exception being thrown, we should be at least logging information about the exception. otherwise, there's no way to troubleshoot what's happening without attaching a debugger.
Candidate: let's use <UNK>
Reference: assert that it actually contains the just created snapshot?
Candidate: you could use instead:  java <UNK> input.entryset().stream.collect(collectors.tomap(entry -> entry.getkey(), entry-> <UNK>
Reference: suggestion .stream() .map(userrole::getname) .map(simplegrantedauthority::new)
Candidate: wdyt about eating the <UNK>
Reference: possible npe ''' gerritserver server = getserver(servername); if (server != null) return server.getconfig(); else { return null; } '''
Candidate: use <UNK>
Reference: consider extracting this into its own function called addbuyordertoorderbook or perhaps just addbuyorder
Candidate: you can move this to <UNK>
Reference: here it breaks the format.
Candidate: use a string concatenation
Reference: as already noted in other commits, looks like npe?
Candidate: i would be a bit more appropriate. about the storage pool storage pool storage storage pool storage storage pool storage storage pool storage storage pool storage storage pool storage pool
Reference: more english. all three lines above.
Candidate: if we should use a <UNK> <UNK>
Reference: is there a better place to hold this code or can we introduce one, now that this code becomes much longer?
Candidate: you should use <UNK>
Reference: use simple for loop instead of foreach
Candidate: i am not tied to this method.
Reference: this could be made into an immutablelist
Candidate: static import
Reference: old code looked ok, i think druid codebase style is to keep parenthesis on the same line except for class/method opening.
Candidate: use <UNK>
Reference: build_tools_version?
Candidate: this is a <UNK>
Reference: attach the geoelement to the callout. this will allow for the callout leader position to follow the symbol offset above: java // set the leader position and show the callout
Candidate: should we move this log to a separate method.
Reference: i'm missing an else here. is there a situation where this condition is _not_ going to be true? if there is, the fl switch doesn't work? if so, maybe we
Candidate: i think we could be <UNK> to minimize run() <UNK>
Reference: add generic
Candidate: <UNK>
Reference: duringactivities()
Candidate: this should be <UNK>
Reference: you don't need to typecast if you change it to int.
Candidate: is there a reason for a <UNK>
Reference: would the following also work? java if (driverpool.isempty()) { return new driversetup().instantiatedriver(); } return driverpool.remove();  it feels safer to limit the number of interactions with driverpool.
Candidate: i think this should be a <UNK>
Reference: ? we would have gotten a classcastexception above.
Candidate: maybe we could be a <UNK> <UNK>
Reference: maybe extract thread.currentthread().getname()? then you can use a format string (and avoid string cat when debug isn't on)
Candidate: i guess we should that this is is not <UNK>
Reference: i am not sure should we care about the scenario here, where in case of exception while executing _invoker.invoke(invocation)_ , should we remove timeout_filter_start_time from attacchment ? i think this
Candidate: we should throw an illegalstateexception instead of <UNK>
Reference: this should be a method in pki. depending on the intermediate ca the chain file name "ca-chain.cert.pem" might differ
Candidate: @filfreire use <UNK>
Reference: looks like previously created internalenvironment should be used instead of the creation of the new one.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: delete
Candidate: i think this should be a <UNK> <UNK>
Reference: need to implement
Candidate: why not -1l ?
Reference: this logic should be within enginesshclient
Candidate: this is not sufficient?
Reference: there have been quite a few formatting changes where the formatting isn't necessary, when you go back to using wrappedserializabletxmanager i'd expect all of these to disappear
Candidate: why not use <UNK>
Reference: looks like wrong fix
Candidate: @vilchik-elena is this a bit confused about this <UNK> but i would be a bit more than <UNK>
Reference: lets remove these type of new lines.
Candidate: i think we should use a constant here instead of splitting the
Reference: call bytebuf.release() and also add assertfalse(ch.finish());
Candidate: assert bytebuf.release()
Reference: could the method use the countinputstream field instead of a local variable? as in:  countinputstream = new countinputstream(csvsource);
Candidate: you could use <UNK>
Reference: add pagelogging
Candidate: could you use <UNK>
Reference: we should make this immutable to allow manipulation only via the caffeinecache class.
Candidate: suggestion <UNK> = <UNK>
Reference: perhaps using getdimensionpixelsize would make it more obvious that pixels are returned. i remembered you rightfully complained about this method in slack.
Candidate: is there a reason for tracking this logic?
Reference: modelmapper and userrepository invocations are not verified
Candidate: you could use <UNK>
Reference: there won't be any remote keys in the common case; therefore this array should not be allocated ahead.
Candidate: you could be replaced by <UNK>
Reference: new missingtablayoutid**exception**()
Candidate: we should throw unsupportedoperationexception
Reference: this is the kind of _set_ that you will not see coming should this not behave as expected and you start looking. i wonder if there is a better way
Candidate: you could use brackets here
Reference: potential null pointer exception since we have remove the value != null check. we should check valid string values using stringutils.isnotblank method.
Candidate: could we use a string here instead of equals?
Reference: avoid using null as much as possible.
Candidate: you could use a constant instead of <UNK>
Reference: storing either the config or the defaulthistory period should be enough- doesn't look like there's a need to store both
Candidate: please use <UNK>
Reference: i would prefer you'd use a named constant instead of putting true in there. so what i am suggesting is adding a private static final boolean refire_immediately = true, which
Candidate: rename to <UNK>
Reference: why not return a list of strings instead of a list of single-item maps that all have the same key?
Candidate: could we simplify the by <UNK>
Reference: remove this line. changedetailfactory seems not to be needed any more and can be deleted. the only using files seems to be patchdetailserviceimpl.java, but there it is also not used
Candidate: this should be <UNK>
Reference: these method have to much arguments already: just give it an ivaluemap and write all out to the tag.
Candidate: please remove this annotation, please.
Reference: and will spare this null check.
Candidate: i think that this is is not <UNK>
Reference: please dont remove explicit initialization
Candidate: this is not set this hour to set user.
Reference: this isn't correct. if fail() throws assertionerror, you'll get a stack trace but the test will pass. it's ok to declare the test method "throws exception" - this will result
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: could we verify there are no constraints instead of removing this row?
Candidate: this is a system.currenttimemillis()
Reference: formatting
Candidate: wait.forelementclickable() could be <UNK>
Reference: ...the base choicecallback might be used by a mechanism and should be tested for; furthermore, there are other subclasses of choicecallback (like realmchoicecallback) which might interfere with correct operation of
Candidate: maybe we could be a bit more clear.
Reference: maybe we don't even need a passthrough filter, and just use null and do delegate == null ? chain.dofilter(request, response) : delegate.dofilter(request, response, chain) to avoid adding more delegation and
Candidate: you could use <UNK>
Reference: local variable should be camelcase not fcamelcase
Candidate: i think this will be closed.
Reference: i don't think this change should be made. this is the same as the host remove discussion we chatted about before i realized the host remove didn't require reload: 1)
Candidate: you can use <UNK>
Reference: instead of setting styles on the element like this i suggest you use css classes. for instance create a .css under src/main/resources/org/ovirt/engine/ui/common/css lets say 'validation.css'. in the css file do
Candidate: nit: we use computeifabsent clear()
Reference: you can express it in pattern argument of extend.
Candidate: this is designed to be a here instead of creating a new instance.
Reference: are you hiding an issue?
Candidate: use <UNK>
Reference: this construct causes "createheadtoken" to be called upon each call of "createtokenat". that may be an expensive operation. please use orelseget(this::createheadtoken) instead.
Candidate: this is not be included in the situation.
Reference: is this an outside case or are we using exceptions as control statements?
Candidate: should be be <UNK>
Reference: will existing code handle this runtimeexception properly ? what about throwing a ioexception ?
Candidate: is there a reason to re-throw here?
Reference: please test this value not by metric registry, but by jmx
Candidate: rename to <UNK>
Reference: it would be good to have an info message here that the listener is stopping.
Candidate: is there a reason to assert that this is is empty?
Reference: resetflowcountaftersave, the "s" is not needed.
Candidate: is there any reason to be implemented public?
Reference: this doesn't check accepts anywhere which could cause strange problems
Candidate: this would be a bit more than to minimize the
Reference: these methods have associated commands in datadog-agent (stuff like datadog-agent jmxfetch list-matching) that is expected to print to stdout always, as it's a debugging command. these logger.debug changes, unless i'm
Candidate: magic number
Reference: question: what scenario can lead to a null cacheattribute?
Candidate: if you could use <UNK> <UNK>
Reference: i guess pattern can be shared as public static final field with other classes/tests to prevent copy/pasting and possible issues in the future.
Candidate: i think this should be a <UNK> <UNK>
Reference: nit, pass the periodictriggerinterval to initrefreshtask() and do the branch inside. that makes this code cleaner.
Candidate: you could use <UNK>
Reference: did you need to check to make sure the invalid part didn't make it in?
Candidate: you could use <UNK>
Reference: generics: iterable<object>
Candidate: if you could be a foreach loop here instead of <UNK>
Reference: pls. use a separate method for this or rename this one to indicate that it is doing this, too
Candidate: you could use a exception instead of <UNK>
Reference: does the querying stuff generate caches which have no configuration?
Candidate: fyi, this is not necessary, we could throw an exception instead of <UNK>
Reference: why aren't we just getting this live each time? it doesn't feel like this is a super expensive call?
Candidate: you could throw an exception instead of returning null.
Reference: indices == null && indices.length != 1 is wrong, do you mean || ?
Candidate: use <UNK>
Reference: these look like testing remnants. :)
Candidate: this would be intent to be
Reference: you can avoid one lookup like this: string path = pathcache.get(key); if (path == null) { ... } return path;
Candidate: please use <UNK>
Reference: could we make this a subclass of runtimeexception so that if folks want to catch it for whatever reason they needn't parse the message. alternatively, maybe we should add an
Candidate: suggestion <UNK> = new <UNK>
Reference: logger.warn()?
Candidate: i think that this assertions is not <UNK>
Reference: just seen that this "key id formatting convention" is applied everywhere. better create a static helper randomkey() to generate the key ids?
Candidate: please use <UNK>
Reference: all the same stuff applies here. note that you could separate the loading out into its own function.
Candidate: this is not a bit risky.
Reference: probably this iterables.getonlyelement(ll) needs to be (machinelocation)machine.get()?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: another opportunity for a nice stream pipeline.
Candidate: you could use "return new <UNK> <UNK> getcontext().clone().withoutlock()); = new <UNK>
Reference: i note below that this is a hack. this is an unnecessary data conversion which will create performance issues on large files.
Candidate: we could use "something <operator> null" convention
Reference: can be simplified streamname = getphysicalname().orelse(getstreamid());
Candidate: this is not used?
Reference: the systemcommandtasklet allows the injection of a systemprocessexitcodemapper to map exit codes from system processes to an exitstatus. any reason not to allow that type of mapping here?
Candidate: i think this should be reduced to <UNK>
Reference: call super.hasmailauth()
Candidate: appending to
Reference: style-nit: spaces around operators like +.
Candidate: this is is designed to be a to log the prefix?
Reference: as @calixtus said, it would be nice if you could add a logging statement here: add private static final logger logger = loggerfactory.getlogger(linux.class); at the top of the class and
Candidate: this is not used?
Reference: yes, didn't mean to imply your implementation was wrong, i just wish to avoid potential trouble later on :p.
Candidate: this is designed to be 'final' 'final' 'final'
Reference: shouldn't jabrefpreferences be replaced by mainstage ? (as this does not print the values stored in the preferences)
Candidate: @ivange94
Reference: shouldn't there be a null check here before calling close() on the response. kind of similar to the what we do in the catch block above?
Candidate: could you move the exception to the future.
Reference: does this give a friendly error message when it fails?
Candidate: please use <UNK>
Reference: i think this method is called not only upon downstream rpc, but also on task shutdown and other cases. if so, completely skipping of super.releaseallresources can lead to resource leaks
Candidate: i think this should be <UNK>
Reference: it should be fine if this is done without checking for the dev environment too right?
Candidate: you could use <UNK>
Reference: if modelid is only used if thinguid != null && thingtypeuid != null i would move the variable definition and initialization into this branch.
Candidate: you could use <UNK> brackets
Reference: weren't you going to actually increase the size of this buffer to reduce the error rate?
Candidate: if this is not efficient, we could be a bottleneck. bottleneck. bottleneck. bottleneck. is a bottleneck. bottleneck. is a bottleneck. bottleneck. bottleneck. bottleneck. would be a bottleneck. bottleneck. bottleneck. bottleneck.
Reference: this should be illegalargumentexception since the argument is invalid. illegalstateexception means the class is in an incompatible state for the current method invocation.
Candidate: is there a reason for this method is not <UNK>
Reference: can we please out the parallelstream() call. it does not offer much benefit and causes a stream to possibly cross threads. many server environments are sensitive to arbitrary code just
Candidate: nit: <UNK> -> <UNK>
Reference: better use method reference
Candidate: i liked that this is is be to the <UNK>
Reference: here also - it should be take(length - this.length()), am i right?
Candidate: i would be good to <UNK>
Reference: just a question about ascii, is that ok?
Candidate: should we move this to the beginning of this method.
Reference: this predicate here looks copied and pasted over and over again. please split this out into a method in case we need to change this en masse (say we add
Candidate: is this optional?
Reference: 'null' must be the first operande
Candidate: i understand, this is a bit pedantic, but i would be more efficient, that the the "return" to the the view?
Reference: 1. any way around not having to execute axe for each webelement ? concerned about the perf implications here - since axe would be injected into the page for each
Candidate: rename to iu
Reference: you can probably use the same trick, if waschildchecked you don't need to call isactive() and you can't uncheck the element.
Candidate: please rename this to <UNK>
Reference: this already exists as 'astrobindingconstants.thing_type_sun'
Candidate: we could use a constant instead of hardcoding a constant?
Reference: because of the aioob exception above, this doesn't work. i wonder if we should not clear more broadly, can we tell the viewer to clear all its data without having
Candidate: you could call this method here instead of creating clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear()
Reference: nit java this.client = requirenonnull(client, "client is null");
Candidate: if you could use a objects.isnull
Reference: we should sanity check whether handle is already in a transaction here and throw an exception, before changing the state of didtxnrollback.
Candidate: this exception is never used?
Reference: @lautarobock here too, let's declare throws exception.
Candidate: @exper0 let's use 'throws exception
Reference: given these values are ignored, could we use then and thenmany?
Candidate: this is a bit sketchy
Reference: i guess this could go in a common class somewhere, so that it's also available for commercial edition and extension developers .
Candidate: minor nit: we could use <UNK> here instead of creating a temporary object instead of creating a temporary instead:  java <UNK> <UNK> <UNK> = new <UNK> {
Reference: was there a reason to change this to info instead of trace?
Candidate: i'm not sure how about the sure about the sure this is is that the is is interrupted. is a bottleneck. is that the is interrupted.
Reference: isnt this the same as couldn't figure out the idle timeout from configuration. will assume this to be the default_idle_timeout ms
Candidate: nit: <UNK>
Reference: need to handle this exception
Candidate: this is throw an exception exception?
Reference: in context and keys you use dry_run_format_type. let's change this to be consistent.
Candidate: this is a <UNK>
Reference: why not use the connection provider ?
Candidate: suggestion <UNK> <UNK>
Reference: you don't need these "//" at the end of these lines.
Candidate: this is designed to be <UNK>
Reference: check on primarypublicgithubemails.size() > 0 to avoid **nullpointerexception**.
Candidate: you could use <UNK> instead of <UNK>
Reference: just a thought about dropping this config in favor of neo4j+s scheme
Candidate: you could use <UNK>
Reference: how about raw types? will they fail later?
Candidate: scm
Reference: camel case: vlanvm - for entire patch.
Candidate: you could use <UNK> to the <UNK> below...
Reference: if flash copy widgets are disabled in the user's preferences you will show the text "copy search results" with no way for the user to do that. the flash movie
Candidate: i wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording. wording.
Reference: int channel
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: nit: can we pull the createtype call into a local. i really don't like the wrapping here.
Candidate: consider to consider consider consider consider consider consider consider consider consider consider consider consider consider consider consider consider consider consider consider consider consider consider consider consider consider consider consider consider
Reference: you probably dont even need this, just send the value of _withsla_ always?
Candidate: minor: this is be <UNK>
Reference: we should change this message to reflect the actual stored credentials (cause that link wont hold true) so assuming string cachedir = // the stuff on line 81 "couldn't refresh
Candidate: can we move this logic into a method, so ago we can't we have a property in the
Reference: shouldn't storagedomain.getdiscardafterdelete() be used?
Candidate: this should be <UNK>
Reference: log-messages-bytes-sent?
Candidate: we should use <UNK> to <UNK> <UNK>
Reference: readlock looks useless here. anyway, you'll finish the future in few lines below.
Candidate: you could move this to a try-with-resource block
Reference: if you put a name, these wrappers will start appearing in the lists iirc
Candidate: suggestion <UNK> = new <UNK>
Reference: nitpick, but this could be an immutablemap (or at least coded to interface). super nitpick, but other similar snippets should be coded to interface as well.
Candidate: why is this change?
Reference: better to move this to finally block
Candidate: you could use a try-with-resource here instead of printing the
Reference: how about to append the unit for each metric?  ps elapsed time: {0} s
Candidate: i --> <UNK> --> --> --> --> <UNK> --> --> --> --> --> --> --> --> --> --> --> --> --> --> --> --> --> --> --> --> --> -->
Reference: shouldn't an exceptiondialog be thrown when it fails loading in the newick file?
Candidate: <UNK>
Reference: httpclient to allow use of aem-configured proxy.
Candidate: use <UNK>
Reference: when ready to consider the pr final you might want to either remove or set debug logging to the debug level :-)
Candidate: please move this to a separate method.
Reference: if you move the save next to the fetch, they might be moved out together and handled together. also you might save some if condition regarding checking if it's ccmv1
Candidate: is there a reason for this? fyi, you could use string.valueof instead of <UNK>
Reference: should be int
Candidate: i think this should be a <UNK> <UNK>
Reference: can we avoid hardcoding the proposal text here? we should reference to the original wtp proposal text if possible.
Candidate: we talked about using <UNK> instead of grabbing the size.
Reference: any chance you could add a constructor which takes just metadatsource and metadatatermcode?
Candidate: is there a reason for element?
Reference: since this is a general tostring(), we probably should handle manual assignment as well.
Candidate: this is designed to be printed here
Reference: you can remove the else clause above (but keep the code block) and remove one level of nesting.
Candidate: suggestion if <UNK> == 0) {
Reference: ); should be on the next line
Candidate: we could use a guava uid instead of % <UNK>
Reference: since vmguestcontainerlistmodel is no longer generic we don't need to use typeliteral anymore. a simple bind(vmguestcontainerlistmodel.class).in(singleton.class) is sufficient.
Candidate: please use <UNK>
Reference: the list should contain right child's desired traitset.
Candidate: this will be left on the left and throw.
Reference: move this line after logging the error, so in any case the error get logged.
Candidate: mag <UNK>
Reference: @fanifieiev the same above.
Candidate: @fanifieiev the same above.
Reference: might want to put this back to something sensible.
Candidate: <UNK>
Reference: can be simplified to : java boolean failonmissingfield = tableoptions.get(fail_on_missing_field); boolean ignoreparseerrors = tableoptions.get(ignore_parse_errors);
Candidate: is this possible to be null?
Reference: should be case underscore. default should throw cucumberexception
Candidate: we should throw unsupportedoperationexception here instead of <UNK>
Reference: suggestion logger.finer(() -> "checking ec2 connection on: " + ec2_cloud.getdisplayname());  lazy logging message construction for lower log levels.
Candidate: please use <UNK>
Reference: nit: let's move iscurrentuser() check out a level so we don't have to do it twice
Candidate: if we is a semaphore state is held by "this". if there is a state that the state is a state that is is a performance bottleneck. consequently,
Reference: the error message is not correct as instructor can call the method to access moderated/preview person. actually, i think it is not the method's responsibility to verify the login privilege
Candidate: suggestion if <UNK> != null) {
Reference: just call serialize(event, getcurrenttracetoken(), jsongenerator) here to avoid duplicated code between the two flavors of serialize().
Candidate: i'm not sure how about sure about sure about sure about sure about replacing this with <UNK>
Reference: suggestion  it's unused.
Candidate: this is be to be called in the middle of <UNK>
Reference: this update should not have been done in another commit, ie "set built-in qg as default of organization, where you have set the org#default_qg column as nullable
Candidate: you could use a method here also?
Reference: looks like this is the first attempt, this should fail if you include on the first attempt
Candidate: please use <UNK>
Reference: it should be new tajoruntimeexception(new unsupporteddatatype(...).
Candidate: this kubernetes this(name, defaults to typos, kubernetes kubernetes kubernetes kubernetes kubernetes kubernetes kubernetes kubernetes kubernetes kubernetes kubernetes kubernetes kubernetes kubernetes kubernetes kubernetes kubernetes kubernetes kubernetes kubernetes kubernetes kubernetes kubernetes kubernetes
Reference: usually we will put this line before the try block.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: all the other stores have their registration done in their provider... why is this one different?
Candidate: this seems like specific, pretty-print
Reference: i think you can replace it with just mdc.put(identity_id_mdc_key, subject.getuserid());
Candidate: is there a reason why not use getters instead of null?
Reference: runtimeexception?
Candidate: throw an exception exception
Reference: perhaps we should print a warning if we disable the current?
Candidate: should we call <UNK>
Reference: not sure that catching exception is a good idea. how should a user get to know and report back? should at least log.
Candidate: suggestion return <UNK>
Reference: use the method to set the values of scheduled page
Candidate: you could use <UNK>
Reference: this should say "to an opponent"
Candidate: suggestion @override public string string string string string string string string string string string string string string string string string string string string string string string string string string string
Reference: iiuc, repo must be notebookreposync, so it would always be notebookrepowithversioncontrol
Candidate: if you could use <UNK> <UNK>
Reference: unlike in perun-core, there is no possibility to provide null for destinationgroup, since it always retrieve group by provided id. please make destinationgroup param optional (check it's presence) to allow
Candidate: should we add a <UNK> instead of <UNK>
Reference: just use undertowlogger.root_logger.debug("....");
Candidate: you could use the braces around the oldvalue and oldvalue
Reference: what is the serialversionuid for? iiuc, jenkins uses xstream to serialize/deserialize data, not java serialization. is this required?
Candidate: is there a reason for this method is empty?
Reference: i think we should add a limit(...) of say 30 items here, at least unless paged fetcher are implemented.
Candidate: we should delegate to to the constructor?
Reference: excludedcolumns.contains(integer.valueof(ind))
Candidate: rename to
Reference: this method should be protected instead of public
Candidate: you could use <UNK>
Reference: and also fix indentation in this file
Candidate: you could use the mock <UNK>
Reference: deserializing the data twice.
Candidate: please use <UNK>
Reference: can you set message id in assertion and verify the message id exists?
Candidate: you should use stream()
Reference: i think this should catch the particular type of error. i guess it's classnotfoundexception to be caught?
Candidate: you could use <UNK> here instead of <UNK>
Reference: i hope there are no sensitive environment variables or system properties
Candidate: is there a reason for this method
Reference: i think that using a concurrentmap for statbuckets (and putifabsent() here) would allow to get rid of all explicit locking (and would also most likely have better performance as locking
Candidate: you could use a 'final' here instead of <UNK>
Reference: could you explain why 5
Candidate: i think this is the intend to use the <UNK> bit?
Reference: the condition should be replaced with !textutils.isempty(assignmentid)
Candidate: you could use <UNK>
Reference: we need this check (it should arguably have been there before...) because you're casting to (byte) below, yet writing the full strarray without truncating. the check could be moved to
Candidate: this would be a breaking change, aiui this be a breaking change, but would be be a breaking breaking breaking breaking breaking breaking breaking breaking breaking breaking breaking breaking breaking
Reference: why do you need to override getcustomvalues() instead of just adding the custom values here? with the override it will affect also command inheriting from this command.
Candidate: should we getparameters().getstoragedomainid() be null?
Reference: assert that convertedoriginal.states.size == stored.states.size
Candidate: this is not a bit strange to use <UNK>
Reference: move it to new test
Candidate: please use <UNK>
Reference: i think that in this case the code would be more understandable if you replaced the condition by if (nextconfigurationchanged(vm) && !nextrunfields.contains("customcpuname") instead of creating separate method (with not so
Candidate: suggestion if (filter.getrelationshipdirection() == direction.incoming) {
Reference: outerindex
Candidate: if you could use <UNK>
Reference: maybe we could have constants for inferredtypes.runtimetype("int") and other types to avoid reinstantiating them many times.
Candidate: suggestion if (filter.getrelationshipdirection() == direction.incoming) {
Reference: please add empty line to indicate the above belongs together.
Candidate: you could use <UNK>
Reference: assertequals(2, actualscores.size())
Candidate: assertequals(1, consequencetypes.size())
Reference: remove a nesting level by inverting this if-statement.
Candidate: if you could replace this by: <UNK> != null) && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> &&
Reference: use debug rather than info for logging.
Candidate: this is designed to be a <UNK> <UNK>
Reference: the same check is done in verifyvirtioscsi, why repeat it?
Candidate: please add a feature for image?
Reference: with line break maybe?
Candidate: i think that this is not efficient, we should have to to the that the is is not efficient, that the is not
Reference: partially **built** mapping?
Candidate: i think we can't we turn the hierarchy from a hierarchy hierarchy hierarchy hierarchy hierarchy hierarchy hierarchy hierarchy
Reference: missing all() or explicit setlimit call.
Candidate: you could use <UNK>
Reference: move to setup(). you can make mcameraid a local variable again.
Candidate: you could use <UNK>
Reference: why protected? the default is package visibility which would make it accessible to the test class. protected = package + subclasses.
Candidate: @gunnarmorling mind the <UNK>
Reference: ultimately we probably want to ignore provides for files that were not explicitly passed in, e.g. stuff from the transitive closure like base.js but also other libraries. probably to early
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: cannot render interstitial ad. -> cannot render rewarded ad. also, create a single string variable to use in these 2 places.
Candidate: oops
Reference: what's the purpose of removing objectmapper == null from this if statement and instead setting it to null on line 41? what is the value of objectmapper when afterpropertiesset() is
Candidate: if you can use <UNK>
Reference: messinitrepo > initrepomessage
Candidate: this is designed to bind a <UNK> page.
Reference: i think it should be located after note.run
Candidate: please use log.d
Reference: it wasn't clear to me at first where the assertions are. consider keeping the util function just as a helper to create projects but not do assertions.
Candidate: is there any reason to export the casts?
Reference: remove double a valid from the test & original exception
Candidate: maybe rename to <UNK>
Reference: this call and the one above make a logical group, duplicated elsewhere - extract method
Candidate: interesting, is not throw an exception
Reference: why wouldn't we want to swap the cursor when the main activity is searching?
Candidate: i pagelogging
Reference: this should probably not be changed, judging from the test code here around
Candidate: you could use <UNK>
Reference: can you encapsulate this into a "simple" affinitygroup method that will just be called from here?
Candidate: rename to <UNK>
Reference: this should be the first line, well before the dotconnect
Candidate: please use <UNK>
Reference: i'm not sure this exception is related to "if (parameternames.length != totallength)". i think we can have more context somewhere.
Candidate: use <UNK>
Reference: these are all trivial lambdas, although it's not a high priority
Candidate: this is a <UNK>
Reference: is this problem appear only for our sample app? maybe we need to move it into skin
Candidate: is there a reason that styles that styles that styles that styles that styles that styles that styles that styles that styles that styles that styles that is not a
Reference: recent infinispan versions bring jcacheprovider for both embedded and remote, and since there can (and should!) be both of them on classpath, you should add property for selection of the
Candidate: you could re-throw the exception
Reference: i think assumetrue is unnecessary. such test is supposed to be performed when all dcs are specified.
Candidate: you could use a <UNK>
Reference: use .getuuid instead of getartid, which will go away
Candidate: use .getuuid instead of getartid, which will go away
Reference: so i generally think of deleting in-place like this (while still using an iterator) as being a dangerous operation, and would assume we'd need to make a "todelete" list and
Candidate: nitpicking: we could be a to the return?
Reference: no need for else at positive flow
Candidate: if you can use the string concatenation
Reference: why not use the char array approach as before?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why do you use checked exceptions here?
Candidate: hmm, should we have a role that nobody should be loaded that nobody role is be loaded from the role that nobody should be loaded that nobody is loaded role
Reference: the correct way to look up a target translation is by id. we should not be building the path manually. e.g. appcontext.gettranslator().gettargettranslation(targettranslationid).
Candidate: is this intended to <UNK>
Reference: fix variable naming and same goes here
Candidate: why not use <UNK>
Reference: remove the bracket.
Candidate: this should be a <UNK> <UNK>
Reference: might be worth making it only work if it has free space in the inv. as this will just void the items once full i think?
Candidate: could you rename this to <UNK>
Reference: code style
Candidate: you could use <UNK> here instead of equals?
Reference: the tracecontext here in currentspan should be the same as what's above set in context.setattribute right? as there's some cost to fetching it, i think we should remember or reuse
Candidate: minor: you marking this be marking of marking this class instead of <UNK>
Reference: this leads to a regression. in master the app is now showing also the files, not just the folders. the if sentence should be removed.
Candidate: is there a reason to use the url here?
Reference: nit remove on line
Candidate: this is a feature description is not loaded loaded in addition, but the addition, description should be be loaded
Reference: should put the path as well in the audit log too  logauditevent(success, "listsnapshots", snapshotroot);
Candidate: i (args.length > 0) { ... }
Reference: if there is a noexcept-expression, it needs to be evaluated. in the current ast formulation, that would be done using valuefactory.create(iastexpression), but once we start using evaluations it will be
Candidate: this is be simplified to:  java return false; return <UNK> && <UNK> != null && <UNK> {
Reference: should this be onerrormap? this logic looks to be more of an error mapping than an alternate resume from an exception given this will propagate an error.
Candidate: this is unsupportedoperationexception
Reference: can we move the "drawableid", "titleid", etc strings to private static final string...?
Candidate: you could move this method to the anyway?
Reference: naming, removefromnetworklink (and addtonetworklink)
Candidate: you could use <UNK>
Reference: no change from patch-set 3?
Candidate: you can use <UNK> here as well
Reference: shouldn't you explicitly use a charset to read from the stream (using the inputstreamreader ctor with charset) instead of using the system default charset? you might be able to determine
Candidate: if you could use a try-with-resource here instead of <UNK>
Reference: does apitoken need a null check someplace before this?
Candidate: <UNK> --> <UNK>
Reference: line count will not be incremented if exception is thrown.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: you don't need this, nobody was listening on the "role" property changed event. therefore the whole objectutils.objectsequal() check isn't necessary either, you may just set the member. (the case could
Candidate: i think this clear() should be to be called in the view?
Reference: please make it consistent with other places: <link_0> possibly updating tk103 decoder would be even better.
Candidate: is there a reason for this method to be null?
Reference: this won't work on eap6, please to use this: [wildflycompatibilityutils.parseclistyleaddress](<link_0> wildflycompatibilityutils.parseclistyleaddress("/subsystem=hawkular-wildfly-agent/")
Candidate: could you naming?
Reference: @inverno remove this check and make getparent return jstree
Candidate: this could be simplified to:  java return false; && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> { return false; }
Reference: please check that the bitstreamformat is still here
Candidate: no need to verify that content is be used?
Reference: i would prefer to keep the "old" style, since this was a long time what the clients got. honestly i would probably prefer to throw illegalargumentexception, but i fear that
Candidate: we could use <UNK>
Reference: -1 to this. but not a deal breaker. we do it in other places, just not very consistently. it stands out here since later in the file we just do
Candidate: nextvalueindex is not <UNK>
Reference: why is it saing wizardpagelist ? bad copy/paste ?
Candidate: rename to
Reference: my understanding is that these api's are java 7 apis. right now we're still supporting java 6 in the project. this isn't a hard stop, i'd like to deprecate and
Candidate: if we is going to use a string concatentation of a string concatenation
Reference: fbot =
Candidate: could you use <UNK>
Reference: what can be null here?
Candidate: could you use isempty() instead of repeating <UNK>
Reference: might make sense for helper methods like getprefix and getlocal. the local processing is a bit involved for one line.
Candidate: use brackets here
Reference: here for each project which gets selected a new row is appended to the selecteditemstable. this means that the projects in the selecteditemstable are sorted in the order in which
Candidate: if this is is not <UNK>
Reference: i think you mean firebaselistadapter.this here, (rather than firebaserecycleradapter.this)
Candidate: you could use <UNK>
Reference: please add this to the 1.7.4 block, so all updates for one version are in one location.
Candidate: if you can iterate through the <UNK>
Reference: if there aren't plans to ultimately use this check in many other places in the future, why not lose this boolean and just use site instanceof journalsite instead as you
Candidate: this is not be a decision.
Reference: once .xsd is updated, this and the below string should also be updated of course.
Candidate: use <UNK>
Reference: need to handle this exception
Candidate: @gunnarmorling this theory we "do not <UNK>
Reference: please delete this blank line. this isn't guarded by any permissions, which seems non-ideal. the only caller here should be the system process, so how about a check similar to
Candidate: i think that this should be a <UNK> <UNK>
Reference: wouldn't it be simpler to call: <code>this(thingtypexmlresult.class, "thing-type");</code> so, we do not need to add the two new lines on both constructors.
Candidate: you can use tear down to
Reference: character.totitlecase() because of [what is titlecase? how is it different from uppercase?](<link_0>
Candidate: this could be a efficient, that this is not efficient, we could use system.currenttimemillis() instead of storagetype <UNK>
Reference: simply return tid?
Candidate: i think this be priority mostly priority priority priority priority priority priority priority priority priority priority priority priority priority priority priority priority priority priority priority priority priority priority priority priority
Reference: instanceof ?
Candidate: please consider adding a user.
Reference: does this still need to be public?
Candidate: <UNK>
Reference: calls to get() may fail at runtime, getorelse is recommended or we should return option<disperser>
Candidate: suggestion if (throwable { throw new <UNK> }
Reference: i usually prefer to use formatter, as it keep the message easily readable when reviewing: java string.format("split this %d characters long line (which is greater than %d authorized).", length, maximumlinelength)
Candidate: i pagelogging
Reference: you must use players in range, not all players: game.getstate().getplayersinrange(controller.getid(), game)
Candidate: rename to <UNK>
Reference: this clock should be a constant like the other one (or the other one should be a local variable; i don't mind as long as it's consistent).
Candidate: you could use <UNK>
Reference: why does this throw an exception, and not just return false?
Candidate: this should be a <UNK>
Reference: i can see this url mangling is ugly but necessary. maybe string.format instead?
Candidate: @vzool this printstacktrace
Reference: can we use a try-with-resource pattern here?
Candidate: could we pull this into the caller.
Reference: what is the purpose of this test? it doesn't seem like a test at all. maybe if you asserted that the signatures of the provider methods are correct, that would
Candidate: you could use a multimap here instead of <UNK>
Reference: is it possible for this to happen from the main server thread in the actual tick loop, or would flushing be too expensive there? how does vanilla achieve this?
Candidate: we could use <UNK> to <UNK>
Reference: suggestion if (casttargettype.tolowercase().indexof(clobcompatiblecasttargettypes[i]) == 0 && (casttargettype.length() == clobcompatiblecasttargettypes[i].length() || casttargettype.charat(clobcompatiblecasttargettypes[i].length()) == ')')) {
Candidate: this could be simplified to "return true" <UNK> storagetype storagetype storagetype storagetype storagetype storagetype storagetype storagetype = <UNK> { ... }  if <UNK> == null) { return false; }
Reference: is there a more specific exception, i.e., quotaviolatedexception, that you can unwrap from the dnrioe? would be good to assert on its presence.
Candidate: log message
Reference: i think it's mostly fine. if you want, the message could be updated to: > queried for a buffer before requesting a subpartition
Candidate: i think this should be a lock low, but i don't think that we don't think that this will be a race condition?
Reference: do we need to reset this to false once we actually manage to trigger repartitioning on cluster state change?
Candidate: is there any reason to check state state state state state state state state state state state state state state state state state state state state state state state state
Reference: stringutils.isnotempty
Candidate: replace these two lines
Reference: a testcase for this maybe ?
Candidate: not sure why not sure why not sure why not sure why not sure why not sure why we want to call the <UNK>
Reference: an automation handler is recreated on configuration change. please extract configuration in the contructor.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: perhaps inspect the operation instead of relying on this class field
Candidate: is there a reason why is not used?
Reference: make this a constant at applicationconstants.
Candidate: this should be <UNK>
Reference: would suggest using another mapid for 006 and 007 to break dependency from 001 and 002 to be successful
Candidate: successful suggest to dependency to dependency to another dependency dependency class class class class class class class class class class class class class class dependency class class class class class
Reference: guard by isdebug
Candidate: this is a no-op but we should be a no-op here but we should have to call <UNK> here instead of calling <UNK>
Reference: i think you meant suggestion return loadspecificationfallback(swaggerparser, uriasstring, e);
Candidate: why is this tends to ensure that this is is be passed down to a local variable.
Reference: just checking...boot order _greater_ than zero means this is a boot device?
Candidate: is there a reason for this method to be a a constant?
Reference: since this is public class, i'd check for null here explicitly - just like we do in our public static methods.
Candidate: @gunnarmorling this a bit strange to <UNK>
Reference: try reusing 'initvmtemplate()' method from: <link_0>
Candidate: nit maybe? - i shard shard shard shard shard shard has shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard
Reference: we don't need this check
Candidate: this thing: we use <UNK>
Reference: with the lines above this looks like the runtimeexception is thrown on purpose here. @sobimibos can you clarify here what we can do alternatively? thanks.
Candidate: this is designed to be a <UNK>
Reference: magic
Candidate: is this a variable?
Reference: for consistency, should this also be changed to sslcontext.getinstance("tls")?
Candidate: is there a reason for this?
Reference: with this break we will just loop once, is that intended? why do you need a while loop then, you can just pick the first element.
Candidate: this could be simplified to <UNK>
Reference: please use guava preconditions to check the arguments. the class fields should be final if they are supposed to be immutable (which seems to be the case), and they should
Candidate: can you explain why not be used?
Reference: this is not accessed anywhere else. please make this private.
Candidate: please use <UNK>
Reference: the second sortchannels -> sortorders
Candidate: suggestion throw new <UNK>
Reference: this should not be removed. a negative period makes no sense.
Candidate: could we use expectedexception
Reference: import bytesvalues
Candidate: this fragment is a self <UNK> view?
Reference: should this also be moved into if (sendable && !backingoff) { ? for example, if the batch is not full, it's unnecessary to put tp to readynodes.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: 1ms=10^6ns
Candidate: you could use atomicinteger here instead of <UNK>
Reference: path -> "key"
Candidate: space after the
Reference: hlen is not a very descriptive name. could you please rename it?
Candidate: is this a bit strange to <UNK>
Reference: when queue is full exception out of this method looks unhandled
Candidate: if you could use a <UNK> <UNK>
Reference: these changes should not make it in - they were for debug purpose.
Candidate: let's remove this logging instead of {}
Reference: suggestion @override public void onsaveinstancestate(@nonnull bundle outstate) {  can we move the @override annotation to a separate line than the method declaration for code style consistency?
Candidate: this is not be <UNK>
Reference: removed condition:  if (gettestigniteinstanceindex(igniteinstancename) != 0) cfg.setclientmode(true);  means, that all nodes, except having index=0, should become client nodes, i.e. _one server and multiple clients_, but these lines: 
Candidate: finals
Reference: no need for times(1). i think it's the default behavior.
Candidate: could you use <UNK>
Reference: ah, it's just moved code. ok...
Candidate: can we use <UNK>
Reference: this function has some bugs.  default> \d test table name: default.test table uri: hdfs://localhost:7020/tajo/warehouse/default/test store type: text number of rows: 1 volume: 40 b options: 'timezone'='asia/seoul' 'text.delimiter'='|' schema: t
Candidate: is there a reason to check that the is not <UNK>
Reference: use one of the supported types.
Candidate: this is a <UNK>
Reference: can you use 4 spaces for indentation here? it is the style that we use in the rest of the project.
Candidate: suggestion return new <UNK>
Reference: question, is metriccollector designed for rebalancer metrics only? if not, here it is hardcoded.
Candidate: this is be explained to <UNK>
Reference: another fake lro?
Candidate: you could use <UNK> <UNK>
Reference: since this is debug logging provide an e.getmessage() instead and re-add the placeholder.
Candidate: how about moving this message to debug message
Reference: would it make sense to define two functions parseints and parsefloats to avoid this boilerplate?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: add braces.
Candidate: you could use a random logic?
Reference: can be refactore to a method  setvalue(getinvocationreturntype(returntypes,in)); private object getinvocationreturntype(type[] returntype,objectinput in) { if(returntype == null || returntype.length == 0) { return in.readobject(); } if( returntype.length ==1 ) {
Candidate: if we should throw an exception instead of <UNK>
Reference: i don't think it's safe to reuse nowms here since we may have blocked on free.allocate.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: abort twice?
Candidate: you could use a constant instead of <UNK>
Reference: no need of type on rhs
Candidate: minor nit but we could use a local var instead of assigning it into a local variable?
Reference: why changed from static to non-static?
Candidate: this multimap should be done in the future.
Reference: remove first element from arraylist is a bit inefficient operation. can we use linkedlist here or perhaps remove the last element?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: should return null if hastimeevents() is false
Candidate: this could be replaced by "this".
Reference: redundant?
Candidate: this is not correct.
Reference: this and previous can be a single line
Candidate: this should be <UNK>
Reference: what happens when someone visits the page this component is on with an id that is invalid?
Candidate: this should be <UNK>
Reference: you can use optional.ofnullable(...).ifpresent(...) or flatmap constructs here.
Candidate: i think this is be thrown by <UNK>
Reference: exception#printstacktrace goes to stderr by default.
Candidate: could you use streaming instead of default.
Reference: please remove unnecessary brackets: return (restartvdsreturnvalue) super.getreturnvalue();
Candidate: this is a <UNK>
Reference: ![major](<link_0> change this instance-reference to a static reference. [![rule](<link_2>](<link_1>
Candidate: @vilchik-elena you could be simplified to <UNK>
Reference: maybe this code can be extracted into a separate method, to reduce code duplication
Candidate: magic number
Reference: can jobtype be passed so that it can be logged accordingly?
Candidate: i wording. this wording.
Reference: can we let the type be inferred on these, for easier reading? on(exportprogressevent.class, event -> {
Candidate: this should be <UNK> to be <UNK>
Reference: null might be a valid value for the field but you also get null if some exception happens. i would not handle exceptions at all.
Candidate: suggestion throw new <UNK>
Reference: rename to gatewayserverfuture
Candidate: formatting
Reference: this can also be package private :)
Candidate: this args?
Reference: can this be limited to sockettimeoutexception, as in the original?
Candidate: this wording is a sleep that we is a <UNK> that is a <UNK> that will be <UNK>
Reference: this change is causing segmentmetadataquerytest.testserde() to fail: <link_0> the query variable has a legacydatasource whereas the deserialized serialized version has a tabledatasource.
Candidate: if you could use objects.equals()
Reference: not so sure about this part of the change. the ssh fencer is logging in to a unix user, so probably the unix username is more important than the kerberos
Candidate: is there a reason for the
Reference: to follow convention, formatting here should be: java private static nioclient createclient(peer peer, int port, int connectiontimeout) throws ioexception {
Candidate: you could use <UNK> here instead of <UNK>
Reference: a const please
Candidate: if you could use <UNK> <UNK>
Reference: and this one
Candidate: please use <UNK>
Reference: still mark nullable
Candidate: i think that this fragment is invoked in the icon, but i think that the fragment is is not icon, but i think that the fragment is not
Reference: please invert operande
Candidate: could you use inlined by: <UNK>
Reference: this should be checkbasicapis(strings, deserialized, true);
Candidate: add a log message info.
Reference: i think it is cleaner to make it a method: getcontext() in the builder so we do the checks there.
Candidate: this could be replaced by <UNK>
Reference: again with the platform encoding.
Candidate: this shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard
Reference: code formatting
Candidate: @orhan89 this should be <UNK>
Reference: not your change but having public constructors for test mocking seems a bit suspicious.
Candidate: please use <UNK>
Reference: @neonailol i think it's better to make this pattern private static final, because it produces immutable pattern object (like a constant) and it will degrade performance if it called too
Candidate: you could use a constant instead of <UNK>
Reference: cannot be empty but anyway: stringutil.isempty checks both conditions.
Candidate: you could use the exception instead of <UNK>
Reference: maybe split this widget creation to separate method to make this big callback more readable.. also i'd prefer functional style to foreach, but i might be fp freak :p 
Candidate: if this discoveryresult is be to be invalid?
Reference: error handling is incorrect, hiding request errors.
Candidate: please use <UNK>
Reference: this setup is a straight copy of the one in activitycategoryserviceintegrationtest. can't you put it somewhere where it can be shared? common base class?
Candidate: unused
Reference: you can discard 1 card if you only have 1 card in hand.
Candidate: is this system.out.println for these.
Reference: calling "updatecredential" during every authentication could mean lots of unecessary db writes. i wonder that update is needed just when counters are used, which is not always? not a blocker
Candidate: please use <UNK>
Reference: same here as well, null check for options
Candidate: i'm not sure how about this works but i would be a bit more efficient, but i think that this is is that the is the <UNK>
Reference: is the above any different to:  java if (env != null) { tool = tool.forenvironment(env); } else if (node != null) { tool = tool.fornode(node, listener); }  aside
Candidate: is there a reason for the error message that is not throw an exception instead of <UNK>
Reference: can this case be given? i mean having an entry for the given uuid but with no registrations?
Candidate: please use <UNK>
Reference: not -> does not .
Candidate: use <UNK>
Reference: final
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this allocation seems wasteful, couldnt we just inline the allthreads call and directly check them?
Candidate: this multimap should be done in the
Reference: s/"inventory"/nbtdatautil.inventory or something thereof.
Candidate: let's move this to ex. mapboxwebviewmapfragment ex.
Reference: i think it would be better for the client to pass in a simple callback interface. this way you can avoid a weird dependency on fragments (and their crazy lifecycle!).
Candidate: we should use expectedexception here instead of <UNK>
Reference: order of the above logic should be swapped. you need to look for the selecteddevices first. if no devices selected, then look for all the devices.
Candidate: is there a reason to check that the operand is null?
Reference: the ide warnings for these lines can be removed by using region.entry<object,object> entry1 = uncheckedcast(mock(region.entry.class)); region.entry<object,object> entry2 = uncheckedcast(mock(region.entry.class)); region.entry<object,object> entry3 = uncheckedcast(mock(region.entry.class));
Candidate: strange, if you could use the <UNK> nesting:  if <UNK> != null) {
Reference: suggestion "hadoop in your classpath. for more information refer to the " +  same as above, also mention hadoop_classpath
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: can't this be defined as a list<diskimage> ?
Candidate: ^ <UNK>
Reference: spare semicolon ;
Candidate: you could use <UNK> instead of <UNK>
Reference: we need to consider handling two exceptions that consumer.position may throw: kafkaexception -> should be a fatal one; timeoutexception -> in this case we cannot commit, probably have to treat
Candidate: i guess we could be all() method to <UNK>
Reference: can we use collectionutils.isnotempty from apache commons here?
Candidate: we should throw an exception instead of <UNK>
Reference: instead you can use something like: com.facebook.presto.sql.planner.testlogicalplanner#assertplancontainsnoapplyoranyjoin to see if there is no filter node
Candidate: could you know?
Reference: >byte[] [](start = 11, length = 6) keyunwrapresult with one property key
Candidate: i think this is not efficient, we could use <UNK>
Reference: the label "outer" is a bit confusing here since this for loop is actually itself nested in another for loop
Candidate: this should be a hierarchy overhead.
Reference: why all this info level logging? i think that can be removed or use debug.
Candidate: suggestion if (throwable == null) { return; }
Reference: this should probably be referencebinding == other.referencebinding (see objectvector.containsidentical())
Candidate: is this tear down to tear down quickly tear down down down down down down down down down down down down down down down down down quickly tear down down
Reference: what you want to use here is collections.singleton()
Candidate: you could use a multimap here instead of <UNK>
Reference: if we're going to include commons-codec as a dependency, then i think you should just replace the whole block of code above with this:  generatedpassword = digestutils.sha256hex(password);
Candidate: please use 'throws exceptions?
Reference: i'd move the fundamental type constraints into the implementation of elasticsearchpersistentproperty to fail faster.
Candidate: if you could use the baseurl here instead of <UNK>
Reference: technically speaking installationlocation can be null based on implementation, so in this case can we log error and avoid doing anything in the provision method?
Candidate: if formatting: we touching the touching this pr, but if the is not touching this pr, but i would be sure that the the <UNK>
Reference: the implementation of this callback seems correct, but feels a bit messy. that's kind of why i generally prefer separating the events if possible. a bit of a better organization
Candidate: is there a reason that kubernetes about?
Reference: if header is null, showheader must be true
Candidate: you can use stream() encoder's <UNK>
Reference: i wonder if "whitespace" handling should be incorporated to the call site of parsereturningkeyword and other parsexyzkeyword. by the way: tab, newline would trigger defeat query[offset - 1] == '
Candidate: is there a reason for this ?
Reference: add context specific message without using e.getmessage().
Candidate: remove the entire call.
Reference: here the _object reference_ to capabilities is copied. so capabilities and tempcapabilities, refer to the same object. thus, this change is not really fixing the avoid reassigning parameters such as
Candidate: is there a reason for this constructor?
Reference: i don't think we need to say anything when the index is present, and the error message isn't going to tell a user what's going on. something like "index file
Candidate: you could use <UNK>
Reference: nit: is it necessary?
Candidate: log.debug
Reference: i was wonder if you could move something like this to vecontent.java in contentpatterns package. we did something similar with palantir javascripts and put them into one palantircontent class.
Candidate: you could use a constant here instead of <UNK>
Reference: i don't think we should ever allow this condition to happen. we never returned null in 0.6, and this could be devastating for complex metrics that always assume some initial
Candidate: if we == null || <UNK> == 0 || <UNK> == null || <UNK> == null || <UNK> == null || <UNK> == null || <UNK> == null || <UNK>
Reference: these debug statements don't add much, as jarfile.tostring() is just getclass().getname() + "@" + integer.tohexstring(hashcode()) at most one per file should be sufficient.
Candidate: typo: args?
Reference: suggest:  param sensitivity = f.getannotation(param.class); skip = (sensitivity != null && sensitivity.issensitive());  extra changes are needed fro this on the response classes.
Candidate: no, you don't need 'createnic(..);
Reference: i believe stringutils.isempty returns true for null string. so the first check condition can be skipped
Candidate: suggestion if <UNK> == null) { return <UNK> }
Reference: nit: the name of the variable no longer matches the name of the config parameter, but i don't think this is a blocker.
Candidate: i think this is designed to log a pr, but it would be a good idea to
Reference: when there is no delay we won't attempt retries? would we want this instead? java return retry.max(options.getmaxretries());
Candidate: this should be <UNK>
Reference: if i understand it right, this variable should be named sortorder rather than value which is confusing,
Candidate: use <UNK>
Reference: that's a neat pattern i've never seen before :)
Candidate: you could be simplified to <UNK>
Reference: abstractrpcclient does not seem to be best place for this static method. _batchsize looks a bit strange in java. abstractrpcclient.parsebatchsize(clientprops) call in abstractrpcsink too. i would consider to move the
Candidate: please use {}
Reference: we could even make printpar final
Candidate: i think that this is not efficient, but i would be nice if the "return" to the <UNK>
Reference: can be done less expensively (and perhaps more simply) by using built-ins:  map<stackid, set<string>> mpackservices = topology.getcomponents().collect( groupingby(resolvedcomponent::stackid, mapping(comp -> comp.serviceinfo().getname(), toset())));
Candidate: if this is is not <UNK>
Reference: hey @pefernan , found several like this one... is it a typo?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i don't think we need these two ifs as we shut down the executor afterwards.
Candidate: is there a reason for element?
Reference: there is this variant to simplify the code here: queryforlist(string sql, class<t> elementtype, @nullable object... args)
Candidate: <UNK> -> <UNK>
Reference: formatting.
Candidate: i pagelogging
Reference: @panchenko looks good. would you mind using textutils#isblank here instead, please?
Candidate: use @nullable.
Reference: shouldn't we overwrite newtree only when it was checked that is was not explicitly set? if somebody sets newtree but not oldtree then we would ignore his newtree.
Candidate: can we move this initialization to constructor?
Reference: what is the purpose of this synchronization? the corresponding reads (from get methods) are not synchronized. is the concern trying to handle concurrent calls to settypemap on the same pgconnection?
Candidate: if this is right...
Reference: space after +
Candidate: '+'
Reference: push synchronization block into method.
Candidate: this is designed to be a efficient, that we is a a a <UNK> that is is inaccurate depending on the operating auto-boxing
Reference: call assertthat(request.getheaders(expect).isempty()).
Candidate: this should be corrected to <UNK>
Reference: java .subscribe(new action1<resulttype> { });
Candidate: this .subscribe(new action1<resulttype> { });
Reference: if we provide an existspredicate with a specified indexorder we need to fail if we cannot serve it?
Candidate: i wonder if it's mainly totally picky but i wonder if it's mainly worth liked to me wonder if it's mainly mainly mainly mainly mainly mainly mainly mainly mainly mainly
Reference: your questions of the prev pr: - we do not have an in-place swap. this is not possible for tuple2 because of the generic types t1 != t2 (wlog) -
Candidate: i think this should be <UNK>
Reference: can you use the static import for mockito.when here?
Candidate: use readasstring(...) instead of <UNK>
Reference: this is asuuming that both upper and lower are non-null
Candidate: if <UNK> != null && <UNK> && <UNK> && <UNK>
Reference: is returning the object type boolean necessary? i think it is just fine to use the primitive type (boolean). using the object would unnecessarily cause boxing and unboxing and sometimes
Candidate: you could use reflectiveoperationexception
Reference: i'd probably reverse the equals here to avoid a npe, just to be on the safe side. something like alatirparams.mode.lgs_p1.equals(_oe.blah blah blah).
Candidate: use <UNK>
Reference: @nimfadora , here is a nuance. all checks have to clear all internal and non-property fields in begintree method to make sure that no context is shared between two files
Candidate: is there a reason for avro properties?
Reference: if no listener, still need to watch? why?
Candidate: you could use <UNK>
Reference: i'd switch the + to a , so we get a stack trace here in the logs.
Candidate: if this is is designed to be a <UNK>
Reference: no need to wrap into codesystemuri here.
Candidate: we could use a constant instead of <UNK>
Reference: hardcoded value instead of argument? :)
Candidate: this should be <UNK>
Reference: didn't we agree to change it to something like follows? requestsent = sendconnectionrequesttosession();
Candidate: i think this should be a enum?
Reference: is.available() is not going to be reliable. you want content-length header (if present) and if it's not present you can wrap the inputstream and count the bytes.
Candidate: could you replace this with <UNK>
Reference: it seems like the ctor does not check for null value but addvalue does. we should either consistently do the null check.
Candidate: please use 'throws exception please.
Reference: suggestion return arrays.tostring(value);
Candidate: could we use a <UNK> <UNK> mean.
Reference: probably don't want to have a dependency on lambdatest here?
Candidate: you could use the multimap here instead of <UNK>
Reference: this. for all of these
Candidate: checkstate
Reference: looks like this field is added always. what happens if rhs-version is not available ?
Candidate: <UNK> shard shard 30 - <UNK> be replaced by 30 tests.
Reference: how react the notification system ? should you not compute the current list of label format, then compare to the existing one and replace it (clear and addall) at this
Candidate: you could use <UNK> here instead of <UNK>
Reference: lhs is wrong here
Candidate: please use <UNK>
Reference: (optional) likewise
Candidate: you could use a <UNK>
Reference: this is wrong, the declared_namespaces_map shoudl already contain all necessary namespaces no? so why adding all the namespaces? imho the behavior now should be, is a simple feature? business as
Candidate: you could use a try-with-resource here instead of calling <UNK>
Reference: wouldn't this cause the exportproperties array to be computed each time we send out a metrics message? that would be very inefficient, as the list doesn't change between refresh operations.
Candidate: i would be better to move this to <UNK>
Reference: in your case you should use createrepository instead of createrepositorywithartifacts because the artifact will be deployed within test.
Candidate: is there a reason for the sake of these tests here?
Reference: i think we can do the same here as just pass db in
Candidate: please use <UNK>
Reference: that second string.class should probably be bitmap.class (also, check the generic type inference missing in cloudiconmodelloader).
Candidate: you could use <UNK> here instead of <UNK>
Reference: nit-picky minor: other tests in this class use for-each loops.
Candidate: you could use <UNK>
Reference: nit: this if condition is duplicated in the else part. please refactor it by extracting common parts and executing specific array related logic when if clause passes.
Candidate: <UNK> --> <UNK>
Reference: remove system.out when debugging is done
Candidate: i'm not sure that this will be passed to the method.
Reference: will it cleaner to call lock.shutdown in the server shutdown call?
Candidate: i think this should be freed on the view?
Reference: @vilchik-elena why is nowdoc outside of string_literal()?
Candidate: @vilchik-elena minor: this is designed for (string reasons.
Reference: duplicate check. line 180 is excess. 181-182 checks are enough
Candidate: i think this should be <UNK>
Reference: very close, let's add an actual alias on workflow before waitforrefresh so it shows up here
Candidate: this is not used?
Reference: try replacing executor with a serialscheduledexecutorservice and call its elapsetime() method to advance time.
Candidate: this is variantsourceentities.size() will be called on every time bound. seconds.
Reference: log would be nice here
Candidate: use <UNK>
Reference: what if courseid does not exist?
Candidate: you can use <UNK>
Reference: since this is a noop, we can remove this and the dependency on the result storage engine. for other storage engines like s3, there will likely be another mechanism to
Candidate: this is strange,
Reference: extract infiniumvcffields.genotype_values.values().length to a static constant
Candidate: you could use <UNK>
Reference: rrbc->rrbs (x3)
Candidate: you could use a try-with-resource here instead of creating a new connection,
Reference: the parser is a throw away, but the configuration is shareable, please move it to a class field. (or at least, it should be, in geoserver most configurations are spring
Candidate: we should throw an exception instead of eating the
Reference: looks like you have changed your mind and decided to not use this setter in the ctor. i mean doesn't look like there is still a justification for a final...
Candidate: this is not efficient, we could use a <UNK> <UNK>
Reference: the category.xml file is usually not part of the output repository. trye removing this line.
Candidate: you can use <UNK>
Reference: looks like you are checking for recursion, can we have a java doc just to say what true and false mean?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: imo you don't need to append exception message to you log again. just adding the exception object would be enough
Candidate: log.debug
Reference: please use stringbuffer for better performance.
Candidate: this is a bit strange, but i don't think that it matters, but it would be easier to
Reference: even though this class is using defaultdatabuffer, which does not require releasing, i still think it would be a good idea to release them here anyway, especially if we make
Candidate: if we is a warn here, we should have to check that the is not null.
Reference: in all the guava functions like preconditions, it is more efficient to write them as follows:  java preconditions.checkstate(coltype == type.string_type, "column to split \"%s\" (%s) must have type string_type",
Candidate: stringutils
Reference: the defer isn't needed here.
Candidate: is there a reason to assert that the is empty?
Reference: now that we have the constrainttype , we need change this to something like this: suggestion if (!isempty(constraintvalue) || constrainttype != null) {  otherwise, when the user selects the
Candidate: is there a reason that is not empty?
Reference: good catch here, can we also update line 64 to reference datasets[1]?
Candidate: this readasstring(...) instead of <UNK>
Reference: minor nit, but maybe have a final local variable for getaggregatorexpression() since we call it a number of times.
Candidate: this is a bit more precise than 1 element.
Reference: why compare hashcode? why not compare storename or reference equality?
Candidate: this is not equals?
Reference: can we change v to something like exp?
Candidate: this is not assert that this is not assert that the is not assert that the is not assert that will fail if we want to throw an exception
Reference: for each ?
Candidate: nitpicking: you could be simplified to <UNK> nesting:  if <UNK> != && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK>
Reference: probably culpritids should be computed before returning, no? potentially it could change while we are iterating.
Candidate: why not be <UNK>
Reference: coundn' t we use mongo.delete().eq....eq...().executefor(...) here?
Candidate: <UNK>
Reference: this seems like something that was for testing and should be removed
Candidate: then, 1l 1l then, then, then, then, then, then, then, then, then,
Reference: can you use log4j2 ?
Candidate: should we throw an exception rather than an exception
Reference: this should simply invoke the new method.
Candidate: this is not to be <UNK>
Reference: this no longer needs an initial value.
Candidate: i'm not sure how about the sure about the sure that this is is scaled but i guess we will be propagated to scaled
Reference: this is causing gruntlaunch to always run the default task. however if there is a selection and that selection is an itask, i think it would be better to pass
Candidate: no need to call the
Reference: fix all string concatenation in this file
Candidate: ![critical](<link_1> 'severity: major') either log or rethrow this exception. [![rule](<link_2>](<link_0>
Reference: ok, value may be null!
Candidate: is there a reason for element?
Reference: rewrite scenario: feature: as a grid operator i want to be able to perform smartmeteringinstallation operations on a device background: given an organisation with organisationid "liandernetmanagement" @slim-218 scenario: add a
Candidate: is there a reason for this is not
Reference: previously, this was also done when no new job was started. was that unnecessary, or should the new code also do this in that case?
Candidate: i think this should be done at the beginning of the method.
Reference: from debug perspective it would be good to add some info about the host.
Candidate: this is reconnect pool reconnect reconnect reconnect reconnect reconnect reconnect reconnect reconnect reconnect reconnect reconnect reconnect reconnect reconnect reconnect pool is misleading. reconnect reconnect reconnect reconnect reconnect reconnect reconnect reconnect
Reference: you need to call configureconsumer
Candidate: suggestion <UNK> = <UNK>
Reference: technically speaking this service requires a key and a secret..
Candidate: this is unnecessary.
Reference: why is this done on init (called from onload()) rather than in readresolve?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: what happened to the forwarding entry?
Candidate: use <UNK>
Reference: shouldn't this be filteredoptions = listutils.filter(filteredoptions, predicate);
Candidate: <UNK> --> <UNK>
Reference: since the useragent is set here now, [line 195](<link_0> can removed. since it is never initialized, it should be null there anyway.
Candidate: i "_" should be a string instead of <UNK>
Reference: do you need the log text box to be scrollable?
Candidate: you could use <UNK>
Reference: this is probably quite useful for now, but lets make sure we remove it if we don't need it for the final sample
Candidate: unused
Reference: return the object immediately. sonar will complain. this counts for all the methods here below as well.
Candidate: this is be used?
Reference: this is wrong imo, if i create a subclass of number, this method will always return false even if my number's intvalue() returns 0.
Candidate: please add labels, log.d
Reference: if i am right, when we are here, we already logged out the exception, if we had any. but we can also get here from the shutdown() function, when we
Candidate: please use <UNK>
Reference: not really needed here (see remark in branchoperationui)
Candidate: suggestion <UNK> <UNK> = <UNK>
Reference: does this test fail with the old solution?
Candidate: if you could have a non-trivial and then you could have a non-trivial for the sake of the sake of the sake of the sake of the sake of the
Reference: if it's possible, you could use collections.singletonmap(key, value) here.
Candidate: you could use a connection, instead of null?
Reference: what if it the nested launcher is a delegating launcher as well? i would expect the method to continue the recursion then.
Candidate: fyi, use guava streams.stream(mystream) instead of <UNK>
Reference: you can merge these two if conditions into one
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i think flush is not needed here. because it will flush every byte, isn't it? try with resources will auto close your streams. which will execute flush as well
Candidate: i am not sure. i am not sure.
Reference: imho can you a no-argument c'tor.
Candidate: @gunnarmorling you should use only: <UNK>
Reference: you could make the connect method return a future, which would allow you to await it in this test, which avoids this ugly sleep. same for the other method a
Candidate: <UNK>
Reference: you get major bonus points for writing a testcase! i'm curious why store the result of getprocessid() in a variable unless you want to test against it... why not just
Candidate: should we use <UNK>
Reference: pass style as parameter to above 2 methods
Candidate: you could move this boilerplate to
Reference: i wonder if we should add a preprocessing(...) method to initialize some variables. i don't like too much that the validation method is also responsible for the initialization of the
Candidate: use <UNK>
Reference: ping ?
Candidate: you could synchronize on the
Reference: we can avoid the database lookup here and use the username cache that is within the byid cache: accountstate as = byid.getbyusername(username); return as != null ? as.getaccount() : null;
Candidate: you could use a local var instead of creating clear() for clear() entry, every time?
Reference: there are a lot of other cases that need to be covered.
Candidate: space after the
Reference: nit: make these 100_000 and 1_000_000 for readability
Candidate: minor: you could use <UNK> instead of <UNK>
Reference: missed deltauuid
Candidate: use <UNK>
Reference: is**r**hsnull
Candidate: this should be initialized by <UNK>
Reference: this implicit behavior updating global state seems a little weird but i haven't put a lot of thought into it - i'd expect it doesn't really cause any issues in
Candidate: this is strange,
Reference: remove this.
Candidate: you could use isempty() instead of <UNK>
Reference: verify that the created deployment exists.
Candidate: verify that the contents is not used?
Reference: why don't you add the extension directly?
Candidate: you could use <UNK>
Reference: you shouldn't be checking reference equality for objects. please use objects.equals instead.
Candidate: please add braces
Reference: can we use lessthan instead of compare() < 0?
Candidate: i think that this is not correct.
Reference: it looks suspicious that the method is eating the exception just so it can be called as a function. that also raises the question: what if the mysql instance is
Candidate: nit: you discarded expecting to verify that the is not discarded thanks.
Reference: is it mandatory? the names should be already cached upon calling 'addauditlogcustomvalues', which is invoked on commandbase's execute flow (execute -> logcommand).
Candidate: invalid? actionreturnvalue <UNK> = <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> invalid?
Reference: why do we need to execute these create and drop table statements?
Candidate: this try-with-resources is try-with-resources
Reference: list.contains
Candidate: please use <UNK>
Reference: since you created the stored procedure just for your use case you can adjust the query to take a list of device types instead of firing the query two times
Candidate: you could use <UNK>
Reference: if selected resource is non-workspace, then you'll get first path element from getproject() method, and finally getmapping will return null. with change i929c3c32e getmapping for non-workspace files will return proper
Candidate: could you explain this ? serialization : <UNK> ?
Reference: hash()
Candidate: objects.hash()
Reference: i think it's preferable to take all logic out of the tablewriter, so that you calculate false positives here and not inside composeline. this may require creating another nested class
Candidate: we could use a download <UNK>
Reference: what's the benefit of using optional instead of returning null? in what way would it make a caller's life easier? i suspect instead of simply checking for null a caller
Candidate: this is a <UNK>
Reference: as the test method name suggest, we should probably leave readunsignedshort call here.
Candidate: this is not
Reference: i imagine it's going to be super useful to have a single line log with op : user [path]
Candidate: suggestion <UNK> = new <UNK>
Reference: line-wrap? this seems pretty long.
Candidate: could you add a check if the == null || <UNK>
Reference: qu: is it worth creating a variable for this since currentthread() is native ?
Candidate: could you move this piece of sketchy to <UNK>
Reference: we can use the cache here for a read: accountstate s = rsrc.getuser().state(); if (s.getusername() == null) { throw new resourcenotfoundexception(); } string p = s.getpassword(s.getusername()); if (p == null)
Candidate: please add a description
Reference: should probably be at the end of the method.
Candidate: wait.forelementclickable() should be <UNK>
Reference: again would be nice for this to be a mock/fake rather than a spy.
Candidate: you could use <UNK>
Reference: are this changes related to xsite?
Candidate: this is not be invoked from the node.
Reference: seems, don't need map method
Candidate: this is not a map? why,
Reference: a bit of a renaming, since this effectively comes down to a permission issue suggestion ______ts("instructor attempts to edit student's response with appropriate permission, should be accessible");
Candidate: please use <UNK>
Reference: it's better to use firebaseanalytics.param.value as the parameter here as firebase [auto-aggregrates over that](<link_0>
Candidate: could be simplified to <UNK>
Reference: unmodifableset(sets.newhashset..
Candidate: @vilchik-elena you could rename this to <UNK>
Reference: no need to check view type above. table.gettabletype() suffice.
Candidate: this should be a <UNK>
Reference: please consider using objects::nonnull instead of lambda
Candidate: use <UNK>
Reference: rather than hard-coding the texts here, they should be defined in a .properties file so that they can be translated.
Candidate: this is be expectations
Reference: see how this is done for entities. does basicbrooklyncatalog.loadclassbytype load policies as well as entity classes? see brooklynassemblytemplateinstantiator.loadentitytype, for a policy equivalent.
Candidate: i think we should be a unsupportedoperationexception
Reference: suggestion } else if (value instanceof floatset) {
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: the test probably has been set to null.
Candidate: you could use a multimap here instead of creating a new object object object object object object instance.
Reference: what if the interface and/or service is null? won't we run into the same problem?
Candidate: you can use <UNK>
Reference: consider make this private as it's not called elsewhere.
Candidate: if you could use <UNK> <UNK>
Reference: i look forward to seeing this in logs.
Candidate: no need to assert for printing the stack trace
Reference: why did you add here a null check but not in the other methods which access the given jsonobject in the same way? maybe you can switch to objects.nonnull call.
Candidate: if you are going to throw an exception instead of <UNK>
Reference: you need to preserve the escaping functionality of getuncapsimplename(), that's the reason for the qpublic and qprivate issues (public and private can't be used as variable names)
Candidate: suggestion <UNK> <UNK>
Reference: here too - can you explain?
Candidate: ![major](<link_1> 'severity: major') remove this method. [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0>
Reference: can this logic moved into 'vdcexc.getmessage()' ?
Candidate: you could move this getparameters().getstoragedomainid()
Reference: why this iterables.size instead of a simple inputpaths.size() ? both choices are not "null protected"
Candidate: this is be pulled to a separate method.
Reference: change loadbuildnumber(system.getenv(), properties); to loadbuildnumber(properties); once the buildserverdataprovider also has a reference to env...
Candidate: this is a <UNK>
Reference: is runqueue used anywhere?
Candidate: can we move this method to the constructor?
Reference: could this code be tested with non segmented logs? perhaps just put the test of swap segments within if (islogsegmented)
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: @joshuajplagonera @ericleich i belive it's important to call  mvunglemanager.removeactivebannerad(placementid, vunglebannerad); everywhere, except for cleanleakedbanneradapters() when we know that it should be destroyed in any case. the reason is that
Candidate: i understand, that this could be a bit more bottleneck. consequently, in the <UNK>
Reference: url in hashset?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: should not catch to just re-throw.
Candidate: you can use <UNK>
Reference: we have the ability to parameterize some classes per upgrade pack. do we need to consider the case where an up defines an ambari class with properties? should open a
Candidate: you could be minimized
Reference: minor suggestion: instead of needing to check the size and each individual entry, could you build the expected config map and then do an equals check?
Candidate: if we is right...
Reference: i have tested on a yarn cluster, it could not take effect here. when i cancel the flink job, the application status is still failed.
Candidate: normal address address instead of normal normal state of returning normal state state state state state state state state returns normal state state returning normal state state state state state
Reference: why this. here? you delete it elsewhere.
Candidate: this should be <UNK>
Reference: not sure where the conventions are from, but this should be made consistent with the other places as:  if (data == null) { throw new nullpointerexception("data == null"); }
Candidate: i'm not sure that this is is not good idea.
Reference: tracing() is never null. if tracing is disable, then cr.tracing().isenabled() returns false. i would remove the condition and always configure tracing. conditionality should happen on a different level.
Candidate: this is not a design to this pr.
Reference: should we use pushinlinedeployments here ?
Candidate: should we use pushinlinedeployments here ?
Reference: this looks weird, what does it mean to watch null?
Candidate: typo: <UNK>
Reference: can extract string to item_id
Candidate: please combine this method please.
Reference: use the separator constant here.
Candidate: if you could use a <UNK>
Reference: this looks identical to the code on line 88. it would be better to have this as a method since the code is repeated. also, if this is a separate
Candidate: you could use <UNK> strings.xml instead of <UNK>
Reference: please restore single node verification to use ==, it is more concise and shorter and performance is better.
Candidate: could you rename datanodeid
Reference: do we really need a switch when this is really just overcomplicating an if...else or even a ternary expression? (sorry if any of these have repeated... i thought i made
Candidate: suggestion throw new <UNK>
Reference: code style
Candidate: this could be replaced by <UNK>
Reference: hashcode might look simpler like java @override public int hashcode() { return objects.hash(getregistry(), getid(), getversion()); }  but i'm ok with current way as well.
Candidate: please consider using equals instead of objects.isnull : <UNK>
Reference: shouldn't we return immediately if we know this fails.
Candidate: i don't think we should have a decision.
Reference: i think this can't be null.
Candidate: this complains about nesting.
Reference: elvis notation?
Candidate: you could use <UNK> here instead of objects.isnull : "\"" < 1) (the less less less less less less less less less less less less less less less less less
Reference: can we discuss this part when you get into the office, for me to get a better understanding of this patch?
Candidate: is there a slight way to be used?
Reference: exceptions.launderedexception is being removed, so avoid calling it here. just wrap and throw runtimeexception.
Candidate: this wording is a bit more than personal concern :(
Reference: what's this change for? refer to #54, please.
Candidate: wdyt about unsupportedoperationexception
Reference: strange place for a linebreak here
Candidate: use try-with-resources <UNK>
Reference: can be replaced with 0l, similarly other casts can be ommitted.
Candidate: you should use <UNK> operand
Reference: the {style} (without capital) is missing ... see table 32 in the wmts specifications.
Candidate: could we use <UNK>
Reference: should it be resteasy with eclipse vert.x here?
Candidate: remove the
Reference: i'm not sure if this is not breaking something. looking at the source code of pgputil.getdecoderstream(inputstream) i can see that the provided inputstream is wrapped by a bufferedinputstream if the
Candidate: you could use a try-with-resource here instead of printing the
Reference: does this have to be synchronized? why not do the post-check after the submission and remove token+message pair?
Candidate: if this is is null, but the discoveryresult 32 == null.
Reference: a cleaner way could be numplayers = players.size()
Candidate: wait.forelementclickable() could be <UNK>
Reference: should we move the metrics code outside the exception type check? seems like we should record the errors even if it was a non-transient exception.
Candidate: you could use foreach loop (throwable ou = <UNK> { ... });
Reference: it seems that you don't have to write a new separate method and call it.
Candidate: is there a reason to assert here?
Reference: for curiosity, will this method be called by multiple threads?
Candidate: is there a reason that happens if this is null?
Reference: i'm not clear on whether the reference here can be null, which should likely be protected so we don't obfuscate the runtime expresson. i think "tostring()" is an implicit, here
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: since we are talking about 128 bits, i'd use bits as the measurement, not bytes
Candidate: _cough_
Reference: <link_0> since they are more methods than variables, should we base it on methoddefhandler instead?
Candidate: please use <UNK>
Reference: you've managed to add the handler, why are you returning false?
Candidate: i think that this is risky.
Reference: since this is debug, i don't know if it would make sense to log the full, unsafe map in addition to / in place of the map with unsafe keys
Candidate: this is not splitting the from the <UNK>
Reference: if waittimeout is what i'm understanding, i.e. the maximum time to wait for the request to be returned, this code doesn't do as expected. it doesn't count the time spent
Candidate: this is not correct.
Reference: return datatransactionbuilder.failnodata(); it is a kind of fail because they tried to remove something that is not there
Candidate: i think this should be a <UNK>
Reference: would this provide better readability? java public list<inputsplit> getsplits(jobcontext job) throws ioexception { list<inputsplit> filesplits = super.getsplits(job); configuration hconf = job.getconfiguration(); boolean copyheader = hconf.getboolean(pathtrackinginputformat.copy_header, false); list<inputsplit> splits = new
Candidate: please move this braces around
Reference: style nit: missing braces
Candidate: you could use <UNK> here instead of objects.isnull : <UNK>
Reference: this distinction isn't necessary; new timeoutexception(timeoutmsg) will work in any case.
Candidate: is there a reason for this method to be called in the <UNK>
Reference: is this right? we want to call gettimestamp for both timestamp and date meta types?
Candidate: please add a warn
Reference: could you give messageinfo a tostring method and use that here?
Candidate: i think this should be thrown.
Reference: there are no email clients installed. move this in strings.xml.
Candidate: this we bail again?
Reference: add a check here to verify that the broadcastserialdatareceived method was not called.
Candidate: you could use <UNK>
Reference: please make this method return an uri. stringifying can always be done later.
Candidate: use <UNK>
Reference: so here you do use objectutils. why not use it in the previous class i reviewed?
Candidate: this is not return <UNK>
Reference: no need check for null, task will be usually created, if it is not we have a bug and these should be solved
Candidate: this should be replaced by: <UNK>
Reference: again, seems like it would be easier to fix with an alignment property somewhere.
Candidate: this is not to be <UNK>
Reference: add more information in the log message, like backup attempt failed for which snapshot, how many attempts left for retry etc.
Candidate: log.debug
Reference: it is totally useless
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: _verify
Candidate: @ivange94
Reference: the break without the label would also terminate the for-loop not the while-loop. why is this label necessary?
Candidate: please use <UNK>
Reference: response is not closed if code below throws
Candidate: can we use a try-with-resource pattern here?
Reference: no need to check for empty
Candidate: you could use <UNK>
Reference: please mock :d
Candidate: please use <UNK>
Reference: please return filter(partialfunction::isdefinedat).map(partialfunction::apply);. we try to omit if-branches if possible.
Candidate: suggestion return <UNK> -> <UNK>
Reference: you have slf4j logger defined up there
Candidate: is there is a a worker way for worker machines worker with <UNK> <UNK>
Reference: could use strings.isnullorempty
Candidate: you could use <UNK> <UNK>
Reference: instead of using boolean.valueof(boolean).tostring(), just use string.valueof(boolean)
Candidate: please use <UNK>
Reference: maybe invert here so that true = success and false = failure?
Candidate: you could replace this with <UNK> with <UNK>
Reference: not a good idea. you're introducing un-obvious coupling here. i should remember that blah here means the same as blah 8 lines above. if in the future i want to
Candidate: you could use <UNK> instead of <UNK>
Reference: which exceptions is this try/catch trying to catch?
Candidate: this should be a <UNK>
Reference: return is not needed here and creates a lint warning
Candidate: ![major](<link_1> 'severity: major') either remove this method [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0>
Reference: why unauthorized?
Candidate: i'm not sure how about catching the exceptions?
Reference: wow!
Candidate: this is be <UNK>
Reference: navigating again?
Candidate: @manuelplazaspalacio this is is not
Reference: whoa been a while since i've seen bitshift code - fancy c stuff here!
Candidate: is there a reason why display this?
Reference: i think the error message should be more meaningful like non-exclusive subscriber received messages. wdyt?
Candidate: we could use utf-8 instead of <UNK>
Reference: duplicated line (probably global replace)
Candidate: i think that this is not efficient, we should have to call the <UNK> <UNK>
Reference: no, this method should not throw interrupted exceptions.
Candidate: no, this method
Reference: it is outside the pr code, but i would like to share concern:  for (string pattern : this.patterns) { if (patternmatchutils.simplematch(pattern.tolowercase(), header)) {  the pattern.tolowercase() should be done
Candidate: this is not to be <UNK>
Reference: this should return a url
Candidate: please use <UNK>
Reference: whitespaces after colons.
Candidate: i think we should throw an exception here instead of <UNK>
Reference: may be it makes sense to leave this check if it's not too heavy? or leave it here by default and add a flag to skip the check as soon
Candidate: please use {}
Reference: do we need a lock? could we use an optimistic "update where" & react appropriately if the update fails to update any rows?
Candidate: <UNK> is designed to be a <UNK>
Reference: it is better to :  java pool bonuspool = getbonuspool(existingpools); if(bonuspool == null) { //create bonus pool } else { //update pool if needed }  this way we:
Candidate: you should throw a authentication authentication authentication authentication authentication authentication authentication authentication authentication authentication exception
Reference: i'm not sure that the effective compatibility version is correct here as well, elsewhere we use 'geteffectivecompatibilityversion', better to use it i think
Candidate: this should be strange,
Reference: extract in method formatignoredconditions
Candidate: please use <UNK>
Reference: this shouldn't be correct, we want the main artifact and the classified one...
Candidate: you could use an exception here instead of merging the exception anyway?
Reference: how many? should we limit these more?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: what message did we get before (just out of curiosity)?
Candidate: this is not be a overhead.
Reference: please change to externalsearch
Candidate: use <UNK> instead.
Reference: if space ( (...)
Candidate: this is right...
Reference: where is the false coming from and why is it false? consider moving it into a variable with an appropriate name to make it easier to understand the code.
Candidate: should we throw an exception instead of <UNK>
Reference: return 'true'
Candidate: is there a reason for this method is not <UNK>
Reference: i think this message should change, we could get a nullstage even for a wrong stage counter.
Candidate: this is be careful to this class, so you could simplify this by by by by by by by by by by by by by by by by by by
Reference: 1. "refs/notes/" could also be excluded 2. would it make more sense to check the opposite: if (!refname.startswith("refs/heads/") && !refname.startswith("refs/tags/")) { continue; } i guess it is more likely that
Candidate: depending on the issue on the issue on the issue depending on the issue depending on the issue depending on the depending on the depending on the depending on the
Reference: will this work on a cluster with namespaces enabled?
Candidate: not sure how about the <UNK>
Reference: could use collections.singletonlist()?
Candidate: you could call <UNK>
Reference: @vilchik-elena what about expressions comparing a string and a non-string (e.g. a number)? are they valid comparisons? should we have separate rules for those cases?
Candidate: you could be a <UNK> <UNK>
Reference: nit: i guess it seem not very readable for message like .....releasing asynccheckpointrunnable, 12. maybe change to ......releasing asynccheckpointrunnable for checkpoint 12? (take checkpointid = 12 as example).
Candidate: i think that this clear() is succeeded to be held by <UNK>
Reference: i was looking at this and thinking about how to eliminate the duplication of readstring("object-id[@pub-id-type=\"doi\"]", assetnode) and would like to suggest:  java if (graphic_node_parents.contains(nodename)) { doi = readstring("object-id[@pub-id-type=\"doi\"]", assetnode);
Candidate: minor: this is not union but not sure how about union union union union union union union union union union union union union union union union union union union union
Reference: please check if it is actually filtered (just to be sure)
Candidate: you could replace this with <UNK>
Reference: nit: can use variable "image". (so does following 3 places)
Candidate: please use <UNK>
Reference: it seems that expected is always the same as observed? if so, why do we have 3 parameters instead of 2?
Candidate: you could use a static import
Reference: i'd suggest test them in alphabetic order, easier to read.
Candidate: please use objects.equals
Reference: you can use url builder here.
Candidate: is there a reason for this logic?
Reference: concern of localisation as before
Candidate: i think that the is not <UNK>
Reference: above calculation will always be 1, suggest to put some description why will it be 1 always.
Candidate: this router is be flagged instead of <UNK> page.
Reference: my point is that this is probably just an oracle-specific thing. since oracle is really the only database blurring the line between schema and user and therefore it probably doesn't
Candidate: you could use <UNK> stubbing here too?
Reference: looks like we silently revert to totaltasks if the used entered an invalid value. shouldn't we error instead?
Candidate: if you could use a <UNK>
Reference: again, don't you think the checking the internaldrivemapping and put it in the hashcode is relevant here?
Candidate: you could use objects.equals instead of relying on the line: { return false; }
Reference: should this be package-access instead of public-access? callers should use archiveretrievaljobrequest.builder correct?
Candidate: this should be encapsulated in <UNK>
Reference: could you refactor this out into a checkreadable method which raises?
Candidate: i think narrowing this line: <UNK> <UNK> return <UNK> <UNK>
Reference: this can be more simple as getglustervolume().getvolumetype().isreplicatedtype() && getparameters().getreplicacount() > getglustervolume().getreplicacount()
Candidate: this is be simplified to true"
Reference: local dynamodb now supports booleans, i updated it in the dynamodblocal repo
Candidate: we could use a builder instead of date, this(name, <UNK>
Reference: a treeset is a sortedset. we can't check for equality here because insertion depends on the underlying comparator. please restore the previous version.
Candidate: is there a reason for element?
Reference: not related to this pr, but could we just do isdeleted = (datastream.readbyte() == 1); here?
Candidate: i think that this is expecting to all, since it is tries to be caused queries on the lock caused queries caused queries caused queries caused queries caused queries caused
Reference: it's matter of taste, but instead enrichmenttagitem != null just true in this situation would be more understandable
Candidate: you could use use <UNK> instead.
Reference: dog.addchangelistener((realmchangelistener) null);
Candidate: i think this should be able to publish at least at all.
Reference: should inner loop be inside transaction?
Candidate: you could use <UNK> instead of <UNK>
Reference: to make sure that the try always throws an exception and hits this case, you should call assert.fail at the end of the try. right now, this test will pass
Candidate: if you could use <UNK>
Reference: isn't there an option to convert the specific value to its desired unit from the values map and then call the executionmessagedirector.resolvestepmessage(steptype, values) instead of resolving the message first and
Candidate: this is designed to be a custom class, to be replaced with <UNK>
Reference: maybe you could use the new branchemail.getmessageclass() method to simplify this error handling (or something like it)? i hate to see this much code for an error message.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: 0? -1 doesn't make sense.
Candidate: suggestion <UNK> = <UNK>
Reference: may be check for size>0 and log a severe message?
Candidate: you could use <UNK>
Reference: typo: reasion
Candidate: we should be a <UNK> <UNK>
Reference: can object be not null and hasalternativecontent == false ? you could probably set object to null whenever you set hasalternativecontent = true, that way you won't need the class
Candidate: is there any way around)
Reference: same as above, please use the file name in the response ?
Candidate: this is not needed here
Reference: these is wrong, if you want to prevent hot plug you should add appropriate check to hot plug command - snapshotsvalidator.vmnotduringsnapshot(), lock is used for other purposes.
Candidate: move this to the unitvmmodel
Reference: it is good to have this condition to be checked only when bytebuffer has any bytes to be read. so, it is better to leave where it is currently. it
Candidate: minor nit: we could use <UNK> instead of '+'
Reference: does currentplan.removerebaseinteractiveplanchangelistener(this); need to be done here in case it's not null? (or rather, should the lines below that do this be moved before this if.)
Candidate: if you could be simplified to <UNK>
Reference: please change the initial capacity of basicparameterclasslist to 15.
Candidate: this is not imply independent of removing this change.
Reference: (nit): not sure if this is any clearer that 1 (and 0) above.
Candidate: same as above.
Reference: remove this method
Candidate: this should be <UNK>
Reference: you have many problems here, i prefer to create a zipdatachecker object in class as a field.
Candidate: @ivange94 not sure that this is should.
Reference: i'm wondering about the "length >= offset" check, does that make sense? 'offset' is represented as a position in the array and 'length' is just a length...for example the offset
Candidate: formatting: '+'
Reference: can't we have a property on the matter and update it when setdeclaredname() is called? that's might be over-optimization, but still - curious what is your opinion :smile:
Candidate: suggestion <UNK> = new <UNK>
Reference: my preference is to use org.eclipse.core.runtime.platform.getws() and getos()
Candidate: use <UNK> here instead of null?
Reference: should we return true when an exception happens? we don't want to prevent people from accessing our app if something is wrong on our end. it's ok to have someone
Candidate: this is a efficient, that this is is widely a efficient, that is widely is a efficient, bottleneck. is a efficient, that is a efficient, but i would be a
Reference: why not java for (int i = position + 1; position < arraylength; i++) {  ditto for other implementations
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: don't call ts.getparameter(key, error) twice, put it in a local variable.
Candidate: i don't think you could print stack trace instead of printing the dates.
Reference: should build rather an immutable collection rather than using foreach to add to a mutable container
Candidate: i think that this is not <UNK>
Reference: should work with static. in my imagination it results in one exclusiverule per command instance.
Candidate: why not use <UNK> here too?
Reference: shouldn't there be a null check here? clearselection() does set the map to null after all.
Candidate: is there a reason for element?
Reference: this is also valid, but it looks not a good convention
Candidate: <UNK>
Reference: i think the bounded case should have explicitly no checkpointing enabled, so that we have recovery that re-executes the fully (goes back to the beginning).
Candidate: you could use fake <UNK>
Reference: kid shouldn't be set from the input. that is assuming that you have the correct keys for the jws, which may not be the case. further, this would prevent any
Candidate: this exception is be thrown by <UNK>
Reference: inet6adsreess -> inet6addresses
Candidate: this used used used used used used used used used used used used used used used used used used used used used used used used used used used used used
Reference: i'm starting to think we need more than just a backport... * we could get a suspectexception here, if one of the nodes crashes during execution * we could also
Candidate: this should be an assert that the is not an argument
Reference: nit: maybe simpler to read (and no need for 'return') with if (!annotationlist.isempty()) { call.addmarker(new inlinemarker(target)); }
Candidate: nitpick, you could be combined with a <UNK> request?
Reference: i would apply the same logic to the expires header
Candidate: suggestion <UNK> = <UNK>
Reference: nice feature -- refresh all after .items file changed, right?
Candidate: how about tracking this out.
Reference: es gibt einen .andexpect(redirectedurl("xxxxxxx")); matcher
Candidate: <UNK>
Reference: perhaps word this a bit differently, successfully loaded path %s after %d attempts? also, is it possible for this to become spammy if a large number of files is to
Candidate: you could use <UNK>
Reference: we could iterate over this with prefscreen.getpreferencecount -> prefscreen.getpreference(cout) and just hide anything that doesn't show up in the whitelisted keys, which would be a bit less verbose (and less
Candidate: you could use a constant here instead of <UNK>
Reference: this is not a good practice to make a fragment static and reaching it with classname. you should use object oriented approaches instead. otherwise it will cause leaks.
Candidate: this is not be called here instead of <UNK>
Reference: not sure that we are testing all the possible situations there. on my side i also tested with the following cases, without encountering any issues:  complexnestedgenericclass v1 = new
Candidate: is there a reason for this test is not <UNK>
Reference: should specify the generic type to avoid warnings: avroitemwriter< plainolduser >. we have a couple of them in this test class.
Candidate: you could use <UNK>
Reference: it looks like indentation is too large here and below.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: use butterknife to annotate contributorname field, and these findviewbyid lines could be removed.
Candidate: we should use a to edit the property?
Reference: please do not use an if-then-else to make the differentiation between 5 and 7 stars. instead create a new method in the connector interface, and implement it to return 7
Candidate: this is not efficient, you should use the println.
Reference: this could be "int" instead of integer here, to avoid an unneeded boxing/unboxing (since it's only used below as an int).
Candidate: > <UNK> > <UNK>
Reference: more concise version: options.overrideloginpassword(passwordoptional.or(passwords.generate())).
Candidate: is there a reason why we conf here?
Reference: string repos = group.getrepositorydirectories().stream() .map(file::tostring) .collect(collectors.joining(separator)); preferences.put(prefs_group_prefix + groupid, repos);
Candidate: throw an exception exception
Reference: i would return ""
Candidate: you could use a constant instead of <UNK>
Reference: any particular reason not to reuse the offsetvector?
Candidate: use <UNK>
Reference: we typically use illegalargumentexception for these kinds of checks.
Candidate: throw an exception exception
Reference: are the tests assumed to be running on an arbitrary windows machine or do they operate in some sort of controlled environment (i.e. no need for the real windows installation
Candidate: please use uri.create
Reference: replace break with return?
Candidate: nit: -1l nitpicky but this is a bit nervous but i'm not sure how about this }?
Reference: suggestion list<restentry> entries = new arraylist<>();
Candidate: you could use <UNK>
Reference: shouldn't you handle the numberformatexception?
Candidate: if you could use a <UNK> <UNK>
Reference: i think this layout should be called button_and_answer or something. i don't like suggesting that it's the "default" answer view.
Candidate: can you revert this property?
Reference: the way i'm reading it is that the logic here flows as follows  if (requested resources fit entirely into available resources) remove the requested resources form the available resources
Candidate: nit: we could use a no-op instead of no-op
Reference: this bit shouldn't be required. if unixshacryptpassword extends abstractpasswordimpl (as it should), then the method to convert it to a key spec should be right on that class.
Candidate: you could use <UNK>
Reference: wrong indentation, code in condition might be mistaken for the code inside it. it should be: java if (uiditer != null && uiditer.term() != null && uiditer.term().bytesequals(buid)) {
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: should the new getapikeyactivitymetdata method be called here? and activitymetadata object be returned?
Candidate: this is a mock expectations for <UNK>
Reference: please not here. this is not a standard swt table.
Candidate: this is not <UNK>
Reference: unnecessary parens around dir != null
Candidate: this is is designed to be 'final'
Reference: this code is not rebased on latest version...
Candidate: minor nit but we could use a warn instead of <UNK>
Reference: do we need to test the older api here, is it enough to just test the new revision has the correct attachments?
Candidate: you could use a try-with-resources statement.
Reference: suggestion unit(string symbol) {
Candidate: you could use <UNK>
Reference: @cti777 same here.. the check is only on then user endpoints.. if you are admin you can execute the operation no matter what..
Candidate: is there a reason for this logic?
Reference: there is an extra ',' in the end here
Candidate: please move this to descriptions all() to
Reference: adding this to a field is good manner.
Candidate: please use <UNK>
Reference: @inject
Candidate: this should be <UNK>
Reference: this seems like an invalid state to me. you should be allowed to be in the same cohort twice, but not with overlapping dates. e.g. you'd need to end membershipaone
Candidate: you could move to to constant.
Reference: i have some doubts that we need to update labels for the namespace where che server is running. maybe it's the job of the operator or another deployment tool.
Candidate: i understood about basic here anyway?
Reference: all gettaskstate methods actually use the "getjobstate" permission. if a user has the permission to read the state of a given job, then he can read the state of any
Candidate: could you move this inside the
Reference: rather than having this somewhat redundant single-use static method, i think it would be cleaner to remove it, and instead factor out the common initialization code from the constructor it's
Candidate: i'm not sure that this is not sure that this is is not but i don't think that this is not
Reference: again, not sure we should have servletexceptions in the dspace api module.
Candidate: suggestion throw new <UNK>
Reference: you may be able to avoid compiler warnings about raw types by phrasing as: return type instanceof class<?> && ((class<?>) type).isprimitive(); you can use the straight-wildcard form of a generic
Candidate: please use <UNK>
Reference: i suggest you clean up the artifacts you created for this test once it's complete.
Candidate: please use <UNK>
Reference: why did you not use a objects.nonnull(title) here like on other places and changes?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: consider using assertequals on the html instead, here and below - since it makes tests much easier to maintain if they start failing. you might want to make this test
Candidate: you could use a constant instead of '+'
Reference: why change to , ?
Candidate: please expectedexception
Reference: i don't like this and i am not totally sure why. it smells like i could get a wfieldindicator with a bogus selector and as long as i got a
Candidate: consider using a custom user.
Reference: wouldn't you want to see if the router is still working properly?
Candidate: this is not to use <UNK>
Reference: i noticed this constructor is deprecated. can we use the not deprecated one?
Candidate: i think this should be a
Reference: why we're not using contants from plainjavaprojectconstants ?
Candidate: wait.forelementclickable() should be <UNK>
Reference: this might not work with some caches since resource isn't serializable. i'd recommend something closer to suggestion string jwks = cache.get(url.tostring(), () -> resourceretreiver.retreiveresource(url).getcontent()); return new resource(jwks, "utf-8");  return
Candidate: this is be <UNK>
Reference: why not objects.hash(x, y)?
Candidate: you could use a hash hash hash hash hash hash hash hash hash hash hash
Reference: the capture of metrics and some assertions can probably be factorized and not duplicated.
Candidate: this args?
Reference: space should be before the opening parenthesis, not after.
Candidate: is there a reason that kubernetes behaviour?
Reference: asma, do we still need this code after edit policy change?
Candidate: you could use <UNK> instead of creating a new anonymous class instead of instantiating the object.
Reference: please remove if not req'd
Candidate: this is not be used?
Reference: how are you going to compute the entity id without the source id? also, please make "filesystempath" a constant.
Candidate: why not use <UNK>
Reference: i think it is better to move counter to handlewebsocketframe method for binarywebsocketframe
Candidate: could we print the stack trace instead of printing it.
Reference: i think it would be better to have this call at the end of the objcclass.register() method. just after the objcclass instance is created.
Candidate: suggestion if <UNK> {
Reference: can we replace "error undoing deploying" with something more descriptive? like what exactly are we trying to undo and why?
Candidate: if you could use the lock here instead of nesting.
Reference: could you check whether this one works alternatively:  super( new translatinggridtypedescriptor( character.class ), org.hibernate.type.yesnotype.instance.getjavatypedescriptor() );  would save that new grid descriptor type. the whole type business is far
Candidate: we should use <UNK>
Reference: is this the right place for this code? shouldn't this be in the mainapplication class and guarded by the config#arefirebasepushnotificationsenabled check?
Candidate: you could bail again?
Reference: code repeated. get interactor from custom listener (if exists), else get it from template method. for both, attach, put and return
Candidate: this feels like a bit misleading.
Reference: shouldn't this be "memory" instead of "mamory" ?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: you need to pass statement.return_generated_keys as second argument (check line 55 on previous code)
Candidate: is there a reason why not use <UNK> here?
Reference: unchangedcommitmessage
Candidate: <UNK>
Reference: revert this formatting
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: maybe add an assertion message: assertnotnull("message must not be null", message);
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this should return a url
Candidate: please use <UNK>
Reference: not sure but i think it should be really the last one in the list, or?
Candidate: could we use <UNK>
Reference: this is a query in loop again. for large lists, this could be a performance problem. we should see if we can use the breedingmethodmap we already have available in
Candidate: should be simplified to <UNK>
Reference: this seems like a lot of work to basically always return new stringdimensionhandler(dimensionname, multivaluehandling), but i assume it's meant to be fleshed out a bit later.
Candidate: is there a reason for the properties?
Reference: please consider adding an overridden version of the script(string, int, logger) constructor that accepts duration to encapsulate this type conversion.
Candidate: consider adding an overridden version of an script(string, that accepts duration to encapsulate this type conversion.
Reference: constructors that exist only for codec / jackson should be either protected or private. that'll probably also handle the warning.
Candidate: <UNK>
Reference: if we are performance concerned, i would recommend adding  if (w.checkerror()) { return; }  as no sense continuing if printwriter has already suppressed the ioe
Candidate: throw an exception
Reference: git is just one implementation of version control, should be getrepo(0) instanceof notebookrepowithversioncontrol
Candidate: this should be <UNK>
Reference: spaces between expressions please: (startidx >= 0) ? (startidx + 1) : startidx; here and below.
Candidate: if you could use <UNK> <UNK>
Reference: i think we might need to add a slightly longer wait. using the exact timing may still cause failures on slower computers. maybe +1 second to it?
Candidate: this is a bit strange, for (string <UNK> : <UNK> { <UNK> = false; }
Reference: applog.e already logs the stack trace, so e.printstacktrace() isn't necessary here.
Candidate: use stringutils.isnotblank()
Reference: what's the reason to need to change this?
Candidate: could we use <UNK>
Reference: webdriver#findelement will throw nosuchelementexception if the element doesn't exist, so it will never be null here. you could use abstractelement#findelementifexists to get the element or null, but it makes more
Candidate: is there any reason to be null?
Reference: this kind of logic is indicative of awkward separation of list modes. i would prefer to use a set<directorylistmode> and provide a simple factories to construct the sets a la
Candidate: is there a lot of the variants of the variants of <UNK>
Reference: this if can be combined with the if starting on line 162.
Candidate: you could use <UNK>
Reference: thrown a notfoundexception (if it is not declared, you should create it). this exception should be catch in the interceptor and to response with 404 not found!
Candidate: this is a to hang that the is not <UNK> the confirm() exception is a good idea.
Reference: replace the 1 with a constant that describes what actually that value is?
Candidate: <UNK> -> <UNK>
Reference: maybe we can use stringutils.empty.
Candidate: why not use <UNK>
Reference: we shouldn't care about source in this context. if resolvedoafobject is not null we are fine.
Candidate: this pagelogging
Reference: if you use the some, how about removing the this.s.
Candidate: i think this this(name, <UNK>
Reference: please rename to match the action: activate/deactivate
Candidate: how about the ip message is appropriate.
Reference: you don't need this null check. if the factorypid is null, then the next condition will return false since the accepted_entry_factory_pids doesn't have null as one of its items.
Candidate: you could use isempty() instead of objects.isnull
Reference: that's much better - but can be even better: no need to explicitly create the callable. just invoking entry.getvalue().apply(store) should allow it to appear as a callable.
Candidate: minor nit: we could use <UNK>
Reference: i think you can move the message into the illegalargumentexception exception. the log statement is optional.
Candidate: log.debug probably?
Reference: primitivetype.stringifier() is for the api user. this one might be package protected.
Candidate: this defaults is designed to be a constant for correctness
Reference: could we change the signature of constraintviolations.determinestatus from  java public static int determinestatus(set<constraintviolation<?>> violations)  to  java public static <t> int determinestatus(set<constraintviolation<t>> violations)  doing so, we can
Candidate: i think we could be careful to a copy worker connection,
Reference: this check is not necessary. formatedtime is already doing it.
Candidate: is there a reason for element?
Reference: nit: acquire the a new lock
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: formatting issue. extra space before ==
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this looks incorrect - record can be instantiated.
Candidate: <UNK>
Reference: the list of hardware profiles should also include the cpu. i see two things to improve here: - provide more cpu/ram combinations (otherwise is not enough flexible), such as providers
Candidate: you could use <UNK> annotation, instead of objects.isnull
Reference: why are you using completablefuture.runasync here instead of executorservice.execute(super::run)?
Candidate: this is not to be <UNK>
Reference: please extract this if-else to method getregexcompileflags.
Candidate: i think this should be to be called from the view?
Reference: this would mean, all access to windowcache started *before* the job runs will use *not* the settings from current workspace. in worst case this can lead to crashes on linux
Candidate: please use <UNK>
Reference: maybe use camelcontext.getexecutorservicemanager().newsinglethreadscheduledexecutor(...)
Candidate: we should mock to <UNK>
Reference: can move this block above
Candidate: could we use <UNK> here instead of <UNK>
Reference: this is quite different from how the blog title is set in [refreshblogdetails](<link_0>
Candidate: this is designed to be a <UNK>
Reference: my fault again - these do need deleteonexit, or better yet unset index_on_the_fly except in one test specifically for the index case.
Candidate: can we use <UNK> here instead of <UNK>
Reference: should this be <=, just check.
Candidate: i think this is a bit strange, since we could use the <UNK> <UNK> <UNK>
Reference: should be boolean
Candidate: this --> <UNK>
Reference: if we have this mergeconfig() method, then all the buildconfig fields should be optional<> to make merging easier
Candidate: this is be configurable
Reference: missed this before: inject an objectmapper here rather than creating one.
Candidate: we could use a <UNK>
Reference: since this method is designed to read $home/.td/td.conf, it is better to print the warning in case of file not found.
Candidate: you could use a <UNK>
Reference: this change seems redundant with the other ones in the file: the constructors now handle the lowercase conversion.
Candidate: use <UNK>
Reference: can we make the expring time a constant?
Candidate: use <UNK>
Reference: there is no need to create a geometry factory for every request, i can be a static final field
Candidate: i think that this is not duplicated properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly
Reference: this effectively overrides gwtp tabcontainerpresenter#setinslot(isslot<t>, t) method, which looks like this: ... try { presenter<?, ?> presenter = (presenter<?, ?>) child; tabcontentproxy<?> proxy = (tabcontentproxy<?>) presenter.getproxy(); getview().setactivetab(proxy.gettab()); } catch (exception
Candidate: is there is a stubbing to be empty?
Reference: i know that transcriptiongateway#stop() doesn't do anything right now, but i think we should call it here anyway.
Candidate: you can call this method to <UNK>
Reference: nit: please pick more descriptive variable rather than r
Candidate: nit: we could use <UNK> calculator to activation. distance
Reference: here we should return the summary_organization profile rather than the summary_station profile.
Candidate: why not handled.
Reference: 1. it seems like this method's name is wrong (two "account"s in it) 2. you don't need to qualify it since it's within this class, right?
Candidate: this is not belong to <UNK>
Reference: i feel a lookup table is justified here. we can generate the lookup in a static constructor and populate it with the sine and cosine values for 0-360 degrees. seems
Candidate: fyi, you could use a division here instead of this(name, <UNK>
Reference: the find method will throw an exception if not found, so the assertion below is redundant. use tryfind if you want to be explicit or just remove the assertion.
Candidate: you could use <UNK>
Reference: this null check seems unrelated now that the data is set by the activity. formentryactivity.setbinarywidgetdata does that check anyway so i think it's clearer to remove it.
Candidate: i wording. this wording. we want to log the events.
Reference: this will destroy the content in all languages that exist and cannot be undone
Candidate: use <UNK>
Reference: nit: previously this function always returned a string; now it's returning null? might be safer to just change the usages of .charat() here.
Candidate: you could use a guava commons instead of <UNK> == null) { return <UNK> }
Reference: just nic instead of nicref ?
Candidate: you could use <UNK> instead of <UNK>
Reference: nit: is there a reason we can't use e?
Candidate: this is not <UNK>
Reference: just "true" or boolean.true would be better here.
Candidate: @override public void <UNK> throws <UNK>
Reference: this check can be dropped.
Candidate: you could use computeifabsent clear() multimap
Reference: since there are two key sizes, there should be two algorithms: "sha-256-crypt" and "sha-512-crypt" look like sensible names.
Candidate: please revert this logging: <UNK>
Reference: the default in tablemetadata is retry_on_write_write, is this intentionally different?
Candidate: this is be clear.
Reference: arraylist constructor can be called with initialcapacity.
Candidate: you could use <UNK>
Reference: asserttrue
Candidate: please use <UNK>
Reference: as we also pass the response object around, is it possible to get the content size from the response object instead of passing contentsize?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: @email2vimalraj could you provide these checkings: java import static com.google.common.base.preconditions.checkargument; import static org.apache.commons.lang3.stringutils.isblank; ... public activity(string apppackage, string appactivity) { checkargument(!isblank(apppackage), "app package should be defined as not empty or
Candidate: please use <UNK>
Reference: use setclass method if possbile
Candidate: we could use <UNK>
Reference: json supports int and float as number types, so could leave the conversion to strings away. this would result in "statuscode": 1 instead of "statuscode": "1". but maybe a matter
Candidate: is there a reason that happens if this is null?
Reference: maybe listing verified states as an enum and using the enum values as cases, instead of hard coded integers, will make things easier to read. for example, which state are
Candidate: we could use a constant here instead of <UNK>
Reference: bad rebase
Candidate: i'm not sure that this is convenient to none of this context, but none of none of none of none of none of this context, but none of none of
Reference: insert a checkargument(ttltimeprovider != null, "ttltimeprovider" ) here
Candidate: suggestion if <UNK> {
Reference: since you removed throw new launcherstartfailedexception(); this method should not throw such an exception anymore. suggestion private platform getplatform() {
Candidate: if this is is designed to return an empty return?
Reference: equals(), not ==
Candidate: you could use isempty() instead of <UNK>
Reference: int enbale = 1;
Candidate: you could use <UNK>
Reference: why expanded format?
Candidate: we should throw an exception here instead of calling <UNK>
Reference: minor: the three logging statements in this method use three different conventions when referring to interfaces: "does not implement ..." vs "does not implement an interface with name ..." vs
Candidate: no, you can call <UNK>
Reference: this can be simplified as return (isinit && initexception != null);
Candidate: could be simplified to true"
Reference: this should be the same functionality (do we have a test covering a change like this?)
Candidate: is this correct?
Reference: if you have more than one thread waiting in take() or blockingpeek(), this will wake up only one of them. shouldn't it be signalall() ?
Candidate: is there a reason to check that this is is not <UNK>
Reference: this is missing the translation of bb.putlong(eid-1);, and the allocation needs to be updated to match it.
Candidate: is there a reason why is not empty?
Reference: iddto object is more readable
Candidate: static
Reference: i don't really like this. the goal of these samples is to stand alone. any alternatives?
Candidate: you could use tear down to
Reference: seems like this method would be good to have protected and non-static, so people could override the combination algo.
Candidate: export <UNK> export
Reference: nit: can it be moved to the first place? in case it needs to skip action, it will save some some time to look up the table descriptor.
Candidate: i think we could be a warn as a error.
Reference: add @since 5.1
Candidate: this is not
Reference: why there is no interface for blobstorecompactor? even if this is tied to the blobstore implementation, we can think of people wanting to have their own implementation for compaction. for
Candidate: minor nit:
Reference: we could just pass null to every parameter here, there is no need for mocking in this case.
Candidate: could you use aforementioned check?
Reference: i think this might be better with an assert,checknotnull check - in what situations could the supported protocols and cipher suites be null?
Candidate: this is not efficient, we could use all() to
Reference: do we want to check for possible null values in sl.getidentifier() and sl.getdisplayname() and fallback to empty string ""?
Candidate: is there a reason for this could be a <UNK> <UNK>
Reference: destination.getparent() return the same thing but is more readable in this context i think
Candidate: please use readasstring(...) instead of <UNK>
Reference: again on future tense as above.
Candidate: you could use <UNK>
Reference: warn ?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: can't you do this as a member variable? instead of creating it every time?
Candidate: is this a bit more specific behaviour?
Reference: let's move this above any other work
Candidate: you can be replaced with:  java <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK>
Reference: missing closing )
Candidate: i explained explained that explained to a <UNK>
Reference: ideal candidate for a method ex. addrealmparameters?
Candidate: we should print description to the msg.
Reference: use class loader of handlertype
Candidate: this should be <UNK>
Reference: static import
Candidate: you could use <UNK>
Reference: as with other places, skip fields and don't add to map if empty strings.
Candidate: if you could use <UNK>
Reference: @darkled here too, let's declare exception being thrown, as suggested [here](<link_0>
Candidate: why not use <UNK>
Reference: instead of character.valueof(char).tostring(), just use string.valueof(char)
Candidate: this is designed to be processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed
Reference: brickdetails.getbrickproperties().getbrickid() could be null if the brick is not present in db
Candidate: you could use a static import <UNK>
Reference: hi! this is the duplicate code
Candidate: you could use <UNK>
Reference: i'm comfortable with throwing an illegalargumentexception for this, which lets you use utils.validatearg.
Candidate: please add a few lines names.
Reference: no need for the or, is has multiple arity.
Candidate: you could use <UNK>
Reference: scheduledexecutorservice.shutdown(); scheduledexecutorservice.awaittermination(..);
Candidate: you could use a try-with-resources for these.
Reference: this isn't right. enabling autofixes disables the cache even if the file has no violations / no violations that are actually autofixable. we are reprocessing all files for no reason
Candidate: if you talked about using a multicatch ?
Reference: invalid reference to output of select clause from grouping() expression in order by or something like it.
Candidate: this is be simplified to <UNK>
Reference: please have static factory methods for calendars that take 2, 3, and 4 arguments. consider placing them into a class calendars that in the same package with tests.
Candidate: i pagelogging
Reference: this try-catch can be moved to the @test annotation as well.
Candidate: use reflectiveoperationexception stream()
Reference: consider changing the default pattern "\\s+"
Candidate: nit: finals
Reference: same here with notebook instance
Candidate: this should be <UNK>
Reference: let's stream the topics and use a collector in the end.
Candidate: ![major](<link_1> 'severity: major') reduce most of most most most most most most most most most most most most most most most most most most most most most most most most
Reference: could use the constructor extensionadaptor(string) with name as parameter (initialize() could be removed).
Candidate: @manuelplazaspalacio
Reference: i think you improve that now :-) ## chico sokol on mon, nov 3, 2014 at 3:59 pm, monitorjbl notifications@github.com wrote: > in src/main/java/org/mamute/search/solrquestionindex.java: > > > - string answer
Candidate: is there is a to be passed in a method, so that method will be passed to a second argument
Reference: shall we use java 8 streams here?
Candidate: you could replace this with a map?
Reference: can we write line 395-440 with one simple stream().filter? nothing wrong with code itself but just a thought.
Candidate: is this needed
Reference: should pass address instead of null for the name
Candidate: why not use <UNK> instead of <UNK>
Reference: this method seems to be indented an extra level. the file also seems to use tabs not spaces. running the gradle spotlessapply task should correctly format things.
Candidate: same as above
Reference: seems like getvm() can't be null here....it's checked within candoaction
Candidate: i think that this is not supported anywhere else.
Reference: extract the building of the responsemessage to it's own variable (in eclipse, select the text, right-click > refactor > extract local variable / select code + shift+alt+l). this will make
Candidate: extract the building of the responsemessage to it's own variable (in eclipse, select the text, right-click > refactor > extract local variable / select code + shift+alt+l). this will make
Reference: parentheses around timestamp ... are not needed
Candidate: i would be faster queries to
Reference: you can put the profile within the userprofile class... you already had it no? and fail if no (return null from translateuser).
Candidate: use commons-io
Reference: i think it might be better to use another exception specific to this case, something like localtargeturlproxyexception.
Candidate: is this optional?
Reference: isn't concurrency_level and lock_acquisition_timeout missing?
Candidate: is there a reason that is used?
Reference: bad formatting
Candidate: if this == null || <UNK> == null && <UNK> == null) { return false; }
Reference: type can be encoded as a number instead of string, you can probably use valuetype.xxx.ordinal() as encoding. io.druid.segment.column.valuetype is an enum defined with the types.
Candidate: this is designed to be reused.
Reference: perhaps export the length to a constant
Candidate: we should use a <UNK> here instead of <UNK>
Reference: i mentioned this in the review of the patch that adds this method, but this doesn't actually implement backoff for the full timeout. it just ensures you'll get another callback
Candidate: you could use <UNK>
Reference: did you verify this isn't going to break any existing test assumptions? we probably shouldn't modify this as we don't know what impact this is having on existing tests. it
Candidate: this should be null
Reference: endswith -> contains to make it more robust
Candidate: if you could use <UNK> <UNK>
Reference: thanks for breaking this down into smaller chunks!
Candidate: minor nit: can be replaced with a string concatenation
Reference: this can be package private
Candidate: this is a <UNK>
Reference: minor: we could decide this outside of the factory method to avoid "on-call/on-demand" instanceof checks
Candidate: suggestion if <UNK> == null) {
Reference: i'm not sure if in 100% the ui identifier should be same as model attributename. see smap above. may be you should add methods with one more attribute identifier for
Candidate: are there a reason to validate the end up at the end sufficient?
Reference: what about more meaningful variable name, instead of br, browser or currentbrowser?
Candidate: @vbradnitski could use <UNK>
Reference: could move this line above line 232.
Candidate: you can be changed to <UNK>
Reference: you can drop this logging here.
Candidate: use <UNK> instead of <UNK>
Reference: please use parserexception instead of the uncheckedioex.
Candidate: we could use <UNK>
Reference: if transports is private, there is not really need for a method that wraps list add.
Candidate: this should be a ctor instead of passing a local config, instead of a local variable.
Reference: public
Candidate: please "_" "_" is a bit more descriptive names.
Reference: just in case, i think you can search and replace to use your previously created enum sourcecontrol. i doubt we'll change the prefix, but just in case.
Candidate: use uppercase instead of <UNK>
Reference: it's really hard to guess why olddefault and newdefault are called like this
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: is this test not missing an assert ?
Candidate: this should be <UNK>
Reference: i'd like to see this refactored, it's a really long method atm.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: in that case, it's better to use fluentiterable.filter since iterables.filter creates a fluentiterable anyway.
Candidate: this is not implemented in the future.
Reference: i think this is a better way of handling the situation, compared to throwing the exception. shall we remove the exception instead? if you do, revise ui tests accordingly.
Candidate: i think cancel this test, but i don't think it's good practice to cancel the
Reference: @droneboost here you can just call mpanmode.compareandset(current, update) to accomplish the intended functionality. you especially don't want to unregister the event receiver since it's filtering over events besides the drone
Candidate: we should throw "invalid a unsupportedoperationexception rather than <UNK>
Reference: might as well make a constant out of this
Candidate: i'm not sure how about the sure that we want to do that _in <UNK>
Reference: i would declare this variable inside the try / catch block too.
Candidate: can we use <UNK> constructor?
Reference: this is the place where the filtering should be moved to
Candidate: suggestion <UNK> = "_" = <UNK> + "_" + <UNK>
Reference: this can be simplified using incompatiblepluginmap.computeifabsent.
Candidate: minor nit: we could use a 'final' here instead of creating a temporary object per uribuilder
Reference: what's the purpose of this? is this to resume migrations that were not done (or service did not receive result) and crashed? if so that is too optimistic i'd say
Candidate: could we use a constant instead of <UNK>
Reference: closequietly again?
Candidate: <UNK>
Reference: i think this method should de-register the actor in the future and thus this would help explain the difference between contexts like this where the actor should not resurrect and
Candidate: typo: <UNK>
Reference: list objects of the values of map are shared between two maps. same at getservermetrics().
Candidate: you could use <UNK>
Reference: get shell from control of current element, i.e. getcontrol().getshell()
Candidate: please use <UNK>
Reference: do we need to check the project == null here?
Candidate: you could use <UNK>
Reference: this can go in the while() loop now and become final.
Candidate: you can use machines here instead of <UNK>
Reference: @vilchik-elena i would prefer avoiding a field (statements) for that.
Candidate: is there a reason for this logic?
Reference: why do we need a map? the list of noncountablequtoavmstatuses is of size 5!!! even if it will get to size 10 it is still redundant. you can just use
Candidate: rename to ctor
Reference: these could be simplified further by importing import static uk.gov.pay.connector.common.model.domain.paymentgatewaystatetransitions.isvalidtransition;
Candidate: this miss?
Reference: separate this chunk out into a helper function
Candidate: you could replace this line indent with with indent with indent with indent with indent with indent with indent with indent with indent with indent with indent with indent with
Reference: i was a bit confused at first, just because the root node isn't the usual jsroot (the parent of all input files). can we add a preconditions check that root
Candidate: you could add a child manager
Reference: is this block checked by automated test? how safe is the update here?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: even after getvmid() is checked, getvm() can return null here and cause to npe.
Candidate: you could use only: return false; } }));
Reference: if the cookie doesn't contain '=', then it looks like an arrayoutofboundsexception will occur here.
Candidate: should be <UNK>
Reference: it's more conventional to return 1 on failure.
Candidate: this is is designed to be a <UNK> <UNK>
Reference: add an assertion here for the files being downloaded and extracted successfully?
Candidate: you could use <UNK>
Reference: same, why not set what is coming in here ?
Candidate: you could bail here instead of <UNK>
Reference: how can you get here runtimeexception? if you can, isn't it better to set retvalue to false here.
Candidate: i would be worth removing the
Reference: avoid negation for readability?
Candidate: this is right...
Reference: sounds great. but what you think to change throwifnotvalidationexception to receive only e.getcause and instantiate a applicationlogicexception only in the 122 line? <link_0> because this catch and the subsequent catch
Candidate: you could use print <UNK>
Reference: saying that a sku is inactive means that it's not for sale whereas the inventoryunavailableexception is really used for when a sku is active but it doesn't have inventory at
Candidate: please add a error message
Reference: add {} to avoid future bugs.
Candidate: if you could use <UNK>
Reference: need to use parameterized logging instead of string concatenation. this should also be a warning, not an error.
Candidate: could we use warn instead of return?
Reference: yes indeed, my mistake
Candidate: typo: <UNK>
Reference: is it worth extracting this stream processing into a separate method and giving it a meaningful name?
Candidate: this is be to be called in <UNK>
Reference: japanesetokenizer t -> tokenizer t = new japanesetokenizer
Candidate: this should be expecting an exception
Reference: protip, arraylist has a constructor that takes and array, also all lists have a addall function.
Candidate: you could use <UNK> instead of <UNK>
Reference: you need to do the settitle() on r.id.switch_logs.
Candidate: please use <UNK>
Reference: i would prefer constant there.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this should be "principaldecoder", i guess.
Candidate: is there a reason to be public?
Reference: use elements.iterator() (of type java.util.iterator) instead of list.ofall(). this will save cycles and memory
Candidate: why is not synchronize the foreach loop here?
Reference: should you adhere to http policy? what if it is https?
Candidate: minor detail: but we could use a constant instead of <UNK>
Reference: how about something like this instead:  .split(this.clients, "iterator")  ?
Candidate: minor: e.getmessage()
Reference: is it feasible to include the resultset in the try so it is closed via autocloseable?
Candidate: as we as this method as this method as one method as repeated one
Reference: any risk in using !connection.isopen() ?
Candidate: i'm understanding that this is started down down down down down down down to me, but i'm not sure how often often often often often often often often often often
Reference: i think you can just drop this parameter, and the mib constant and that is the entire commit.
Candidate: is this guaranteed to a enabled here since it's guaranteed to be enabled since it's guaranteed to be enabled by the baseurl baseurl
Reference: typo
Candidate: typo =>
Reference: we should just pass preferredorderingcolumns to make it consistent
Candidate: suggestion <UNK> = new <UNK> <UNK>
Reference: also, perhaps the new setting should be mentioned in the commit message.
Candidate: why not -1l again?
Reference: error message should read:  could not import "$class", class not found.
Candidate: i'm not sure that this imply that the imply that the imply that the imply that the imply that the is imply that the is not imply that the is
Reference: setfield is meant for api fields. we don't want this as an api field, we want it as a internal flag. instead use dataaccessor.fromdatafieldof(v).withkey(volumeconstants.field_last_allocated_host_id).set(newhost)
Candidate: this should be assertthat()
Reference: what about just doing string pwd = file.getproperty(id) here and then create an instance of kieserverinstanceaccount from it using return new kieserverinstanceaccount(id, pwd)? we don't need to iterate over the
Candidate: you could use <UNK>
Reference: suggestion  i think we to make dorunwithobjectsafepoints private and the finally clause of dorun already does this. what do you think?
Candidate: if you could use the <UNK>
Reference: you need first an assertion that the order type exists before purging it otherwise would be invalid if none matched id 3
Candidate: @vilchik-elena you could use <UNK>
Reference: no. random ports will be a disaster. when it does eventually collide you won't know it and people will just rerun. my recommendation, and we did it in pce, was
Candidate: use <UNK>
Reference: i don't think you should sanitize at this class. this will be an unexpected twist for other callers of this class that are not jsp.
Candidate: use a constant for s?
Reference: what's the point? the method is always false for defaultdebugexecutor.executor_id without your changes.
Candidate: i think this is not <UNK>
Reference: e.printstacktrace(); prints to stdout, not appropriate for production code. use log.error("failed to open {}: ", path, e) here so the stack trace will still be printed. with claiming private static
Candidate: could we use <UNK>
Reference: maybe a more descriptive exception like illegalargumentexception or unsupportedoperationexception?
Candidate: this should be <UNK>
Reference: a bit hard to follow, but does make the following tests really easy
Candidate: nit: <UNK> <UNK>
Reference: intended change in functionality here? and wouldn't the default value null that's being passed here immediately cause an npe?
Candidate: please use <UNK>
Reference: don't need that check, snapshot are relevant only for image disks
Candidate: i think that tracking this condition: if <UNK> { ... }
Reference: please don't introduce such useless and unrelated constructs in patches.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: ide says that malformedurlexception is never thrown, so can be removed. going further i'd replace listing all exceptions with one top level exception.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: just return this.count < this.values.count();
Candidate: this is be objects.isnull flagged instead of objects.isnull
Reference: does that work without kotlin on the classpath? or is that class never even used then? because otherwise it won't be able to be loaded, wouldn't it?
Candidate: i think this should be a <UNK>
Reference: hbasetestingutility has some nice waitfor() methods which simplify this kind of logic
Candidate: i think that the offset is a huge offset limit, but i guess we could be <UNK>
Reference: locale currentlocale = getcurrentlocale(); here
Candidate: i think, you can have a <UNK> <UNK> paths?
Reference: this would be a good place to use a try-with-resources block: java try (zcontext ctx = new zcontext()) { socket push = ctx.createsocket(sockettype.push); assertthat(push, notnullvalue()); }
Candidate: you could use run() eating run()
Reference: branchoperation locks resources and thus should not execute in ui thread.
Candidate: rename braces
Reference: java return issendcomplete() ? 0 : channel.write(buffer);  if you want to make it more elegant.
Candidate: nit: <UNK> = <UNK> == <UNK> { return <UNK> });
Reference: returning null from this method is likely to call an npe in the caller code.
Candidate: we should call the <UNK>
Reference: please use stringbuilder
Candidate: use <UNK> instead of <UNK>
Reference: nit: you may want to inline this method as it is just logging with log.error(errmessage, ex)
Candidate: minor typo
Reference: just curious why you departed from using setfield(... ?
Candidate: you could use <UNK>
Reference: same here, should be a constant
Candidate: you could use the multimap here instead of <UNK>
Reference: nit: should it use expr.arg_joiner?
Candidate: suggestion string <UNK> = <UNK> string <UNK> = <UNK>
Reference: querying
Candidate: this is designed to belong to the the provided by the provided by the provided by the provided by the provided by the provided by the provided by <UNK>
Reference: use 2 spaces instead of a tab character.
Candidate: i think this is a <UNK>
Reference: weak test, content negotiation in ogc api services can also be done via "accept" headers.
Candidate: use stringutils.isnotblank instead of stringutils.isnotblank rather than <UNK>
Reference: we shouldn't do all of this ourselves. you can use class properties, that does exactly the same, in one line "load(inputstream is)"
Candidate: i don't think that this is not efficient, we could use a try-with-resource block instead of printing it.
Reference: use constant
Candidate: log message
Reference: this if/else block is replicated below modulo a log statement. private method?
Candidate: is there a reason for none of none of none of these cases that none of none of none of the request?
Reference: everything from here down must be in a try/finally block so that we cannot possibly leak that database connection. right now if the patch set comes back as null (missing
Candidate: not sure that we want to wait for the
Reference: as this class is abstract, i think this should remain protected.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: these error message constants should be updated to say "constructor or static factory method" instead of just "constructor."
Candidate: should we use a constant?
Reference: in this case it is more appropriate to return immediately (the item is an inprogress submission so to discover the right collection you should queries the workspace and workflow tables)
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why this change?
Candidate: we should use <UNK>
Reference: sure, it would be faster to use long. it's a tradeoff between speed and maintainability. if a method returns to int's i find it easier to understand (and maintain) if
Candidate: is this a <UNK>
Reference: i'm wondering if we really need to recheck so soon - seems like we could recheck in a few seconds and still provide a good experience.
Candidate: i think this should be <UNK>
Reference: to reduce the number of methods that begin with the word remove, maybe we should call this handleliteral.
Candidate: is there a reason for this logic?
Reference: rolling back this suggestion assertvalidaudienceclaim(jwt.getaudience(), (list<string>) entry.getvalue());
Candidate: is there a reason for this logic?
Reference: since it seems like pretty much every call to withcontext needs to pass this constant, i think it'd be helpful if we defined something in storage.common that's like withtracingcontext or
Candidate: i'm not sure how about the sure about the sure about this is a <UNK> <UNK>
Reference: the exception shouldn't be silenced here?
Candidate: no, static?
Reference: why not just log the duration?
Candidate: could use <UNK>
Reference: catch ioexception in index(...)
Candidate: this is strange,
Reference: need default case?
Candidate: i we bail here instead of removing only: the case:  case:  case:  case:  case:  case:  case:  case:  case:  case:  case:
Reference: i would simplify the constructor - if the user has supplied an 'otherstatus', you don't need them to supply an operation status, you can automatically make that other.
Candidate: this should be a transactional
Reference: not sure but the use of handle_id here looks strange to me. i have also found this post on stackoverflow <link_0>
Candidate: this is not used?
Reference: this might be obsolete if isvaluevalidis implemented...
Candidate: is there a reason for example that this is is not used?
Reference: i'm not sure about this optional  i believe you should just throw here (equivalent to enum.valueof)  actually the only use you have in this pr simply calls .get()
Candidate: this is a <UNK>
Reference: closeablehttpresponse implement autocloseable. replace finally with try-with-resources.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: if certificate is null, line above will raise npe
Candidate: we could leverage to <UNK>
Reference: nit: spaces around /
Candidate: this is a bit more readable.
Reference: revert this, as it's been fixed by emi's changes for running equiv on full publisher
Candidate: you could move this loop to the
Reference: maybe create a method iswindows() containing: system.getproperty("os.name").startswith( "windows" ) to avoid writing the same code many times
Candidate: you could use the <UNK>
Reference: maybe default arrival time to currenttimemillis here?
Candidate: suggestion throw new <UNK>
Reference: @danielezonca pls check for null in e.getmessage; if null, provide a meaningful substitution
Candidate: this could be pulled out of <UNK>
Reference: is it safe to assume that this list is non-empty? if it's empty, then accounttouse will remain null.
Candidate: if we is a <UNK> to the <UNK>
Reference: style-nit: useless catch/throw. just don't declare the catch, and it'll throw on its own to the caller.
Candidate: is there a reason for paths?
Reference: this was in your original code, but puzzling nonetheless. what is gained by shifting the elements of the permuted list by 1 position before assigning them into the array? why
Candidate: why is this necessary?
Reference: rather than making the app crash, the sdk should handle this case and dismiss the notification
Candidate: nit : <UNK>
Reference: unnecessary brackets here ;)
Candidate: this is not be risky.
Reference: perhaps we should assert here that the size of keys does not exceed the isstandard limits (15, i think?)
Candidate: i'm not sure that this is not sure that this is is not <UNK>
Reference: @captain-p-goldfish can you please define this error message as a constant in responsecodeconstants class?
Candidate: you could use <UNK>
Reference: reformat the code. there are two spaces here.
Candidate: <UNK> is not <UNK> exceptions?
Reference: can be done in one line ??
Candidate: you could use a <UNK> here instead of creating a new connection,
Reference: nit: illegalargumentexception, unsupported spatial join type:
Candidate: i think (filter.getrelationshipdirection() == direction.incoming) {
Reference: check buffer null.
Candidate: if this is is null, but the get's invalid? @nullable.
Reference: given that everything is in memory, a 1mb buffer seems large. maybe something like 32k?... not sure this matters either way
Candidate: this should be defined in the constructor.
Reference: instead using the injector here, pls use the @inject annotation, and when you intend to use glusterstoragedomaindrsyncjob, declare it using @inject or using injector.get(glusterstoragedomaindrsyncjob.class);
Candidate: no need to call super() explicitly.
Reference: same, looks like this could blow up if you pass in an empty array
Candidate: i think this is not efficient, we could use the <UNK>
Reference: attributes is deprecated. it's attributestoretrieve now. instead of manually mingling with the attributes, i would create a query, call setattributestoretrieve() then build() and boom! here you go: simpler, more reliable.
Candidate: use <UNK>
Reference: it could use the same method as the other statements.
Candidate: this is reduced to return an empty string.
Reference: wso2
Candidate: please add brackets around
Reference: s/for/to a/
Candidate: you could use <UNK>
Reference: close inputstream as well?
Candidate: this is a to be optional?
Reference: there's a good few methods here that have a higher wider access modifier than they need to. on the track here, we try to [adhere to best practise](<link_0> as noted
Candidate: you could use <UNK> instead of <UNK>
Reference: i should start at 1, as it's already processed by the preceding loc.
Candidate: you could use <UNK>
Reference: please call  super(statuscode);  and same thing for the 3 below.
Candidate: use @nullable.
Reference: how do these pass semaphore, which is running without campus vpn?
Candidate: typo <UNK> properties?
Reference: are you changing the field from non-required to required?
Candidate: is there a reason for element?
Reference: do we really want to catch all exceptions here rather than just securityexception?
Candidate: could you simplified to java return <UNK> == null) { return false; }
Reference: this null check seems redundant.
Candidate: this is be null
Reference: take the if before try
Candidate: is there any reason why catching exception here?
Reference: i would use instead entity.getparent() instanceof ambariserver ? ((ambariserver) entity.getparent()).getfqdn() : null;
Candidate: this is designed to be a <UNK>
Reference: what if both object have id==null? then they are not equal?
Candidate: use <UNK>
Reference: in the main method, you used this without checking null?
Candidate: final
Reference: wouldn't it make sense to test first for value != null? that way you wouldn't compute that line all the time but only if necessary.
Candidate: if we is not null
Reference: shouldn't this be a constant somewhere
Candidate: this should be a <UNK>
Reference: let's check that there is no cause
Candidate: you should use <UNK>
Reference: need to retrieve cert's subject name instead of issuer. here is sample code certification.getsubjectx500principal().getname()
Candidate: i am not sure that this is not good idea to return a bit more appropriate.
Reference: :pencil2: i think you could log e.getcause() instead since an executionexception just wraps the real exception that occurred. also, if your value loader function throws an unchecked exception (and i
Candidate: please use <UNK>
Reference: object o is never used. suggestion
Candidate: this is designed to be <UNK>
Reference: i think there is something missing here (or when you're building the queries). in gnocchi, if you dont' specify a granularity (<link_0>, it will return back all granularities associated with
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: can this go in requestactionsupport
Candidate: is there any reason why not we are going to be called at the
Reference: sex language, it exists!
Candidate: wait.forelementclickable() should be <UNK>
Reference: why not call it map like in other uses?
Candidate: same as above.
Reference: how about extracting this lambda into a separate method? then we could replace the lambda with a method handle to the extracted method. let's discuss this separately.
Candidate: i understand, that this is almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost
Reference: bare in mind that, even if non-conventional, people may simply write @org.junit.ruletoo
Candidate: could you rename this to <UNK> view?
Reference: i thought prob = 1 will generates a matrix filled with ones, but the code will generate a matrix with zeros.
Candidate: i think fyi, we could use <UNK> <UNK>
Reference: reducto this duplicate line
Candidate: you could drop this line thanks.
Reference: i think technically this check is not necessary, since the remove() method says it removes a key if it exists and does nothing if not.
Candidate: if you could use <UNK>
Reference: honestly i'm thinking whether it would make more sense to literally inline the template text as static content here, although that would make the permgen size of this file really
Candidate: could we use <UNK>
Reference: checkstate?
Candidate: i think that the consequence unexpectedly is not <UNK>
Reference: this can just be named notesbucket.
Candidate: you could use a constants for <UNK>
Reference: because of compensation in this command its better to have this call in the second transaction below, otherwise handling will need to be added in case there is a failure
Candidate: i think that this is be called at the end of the <UNK>
Reference: rename logo to resourceurl
Candidate: is there a reason for this is not <UNK>
Reference: could have been this: return absoluteuris(ports, vxlanportids);
Candidate: this should annotation, annotation, please.
Reference: this seems to me as util method that could be used by **delegation** instead of **inheritance**. is the inheritance used because of the testeability?
Candidate: suggestion return <UNK>
Reference: we probably need to have a getlastdescriptors.
Candidate: you could use a multimap
Reference: can be final.
Candidate: nextvalueindex could be be a lossy since we is a <UNK> #resolved
Reference: i think we can just leave this additional fix in this pr.
Candidate: this doubt that this is not correct.
Reference: this is a bit weak, its better to use g.isvisible(), the same below. also remember to detach the widget, so as we don't interfere with other tests
Candidate: @vilchik-elena you could use a constant instead of <UNK>
Reference: extra semicolon
Candidate: use <UNK> instead of 1.6 sure.
Reference: this should at least be "privileges required", but it might be better to do this in a localisable way as you did for the other ticket.
Candidate: this is not belong to <UNK>
Reference: use {}
Candidate: i think that this is is not <UNK>
Reference: objects.requirenonnull(buf)
Candidate: we could use a constant instead of <UNK>
Reference: still want this to happen with ops and indexing. it will be significantly faster. have you looked at the put(indarrayindex[])?
Candidate: please add a asserts here
Reference: convert to switch for consistency?
Candidate: this is not "return <UNK>
Reference: additional loadtypenametocategorymap not needed.
Candidate: this is a <UNK>
Reference: event1 -> event3
Candidate: you could use <UNK>
Reference: super() call is implicit. no harm, but not needed.
Candidate: <UNK>
Reference: put this before try
Candidate: is there a reason for this is not <UNK>
Reference: it might be simpler to just do set equality between provided argument names and the required argument names. if the sets are not equal - throw an exception.
Candidate: we should use a constant instead of <UNK>
Reference: not sure whether we need to consider the precision of double comparison here. generally speaking, when comparing double numbers, epsilon is usually used. <link_0>
Candidate: wdyt about we have to use a plug that <UNK> is confusing.
Reference: should we be reading the time from the scheduling block here?
Candidate: return <UNK>
Reference: superfluous newline
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: here's the fallback to not use sasi on duration (when we can't due to version). since indexes are in a separate file, we should be able to more easily maintain
Candidate: how about making a <UNK> simpler.
Reference: it's probably a bad idea to be checking for exception messages in the first place.
Candidate: we could use reflectiveoperationexception here instead of <UNK>
Reference: can we shift all these methods (related to finding possible givers/recipients) into a new class?
Candidate: i'm not sure that this wasn't sure that we want to mock that this is not done in the
Reference: rename to fragment
Candidate: rename to
Reference: the resourcemanager is a singleton, so storing a command specific state in it could cause a race condition. the same state will be visible to multiple instances of this command
Candidate: please add a pair iirc that icon will be storage. iirc
Reference: i think you should test that both master and idbroker instance groups are available at the same time.
Candidate: please use <UNK>
Reference: why have another level method redirection if nothing else is in it?
Candidate: @gunnarmorling this a bit strange to <UNK>
Reference: i don't think this is correct. are you sure every available geocoder use the same key?
Candidate: i is explained in the image model. <UNK> is attached to layout layout layout layout layout layout layout layout layout layout layout layout layout layout layout layout layout layout layout
Reference: you could do (properties) objects.requirenonnull(properties, "properties cannot be null").clone(); and be done with it.
Candidate: you could use a multimap here instead of creating a new instance.
Reference: can we throw a specific exception throw new nosuchtemplateexception(templatename); as we do for invalid agent <link_0>
Candidate: should we add a setter here instead of validating the wording.
Reference: logd? same for everywhere else.
Candidate: i think this is not <UNK>
Reference: ![major](<link_0> 'severity: major') remove this call from a constructor to the overridable "add" method. [![rule](<link_1>](<link_2>
Candidate: typo: <UNK>
Reference: for (int i=0; i< bricks.size() ; i=i+volume.getreplicacount()) { list<brickproperties> set = new arraylist<>(); int replicacounter = 0; while (replicacounter <volume.getreplicacount()) { if (!brick.isarbiter) { set.add(bricks.get(i+replicacounter)) } replicacounter++; } replicasets.add(set.stream().map(field)); }
Candidate: is there a reason to serialize object?
Reference: should be || ?
Candidate: you could use strange, instead of repeating <UNK>
Reference: change this to 'else if'
Candidate: could we use only: <UNK> == null) { return <UNK> }
Reference: is there any reason that we need to expose the sortcachetable in definition with a getter? if not, what about only providing methods to put/get key/value of the cache table
Candidate: you could move this initialization to the
Reference: suggestion throw new nativeexception("failed to stop watching. reason: " + result.getmessage());
Candidate: i am not sure that marking about marking marking marking the consequence of marking marking the consequence of marking the consequence of marking the consequence of marking the consequence of
Reference: it will be better to combine the 3 asserts above? i still don't see a compelling reason of using asserts at runtime? do these asserts have the same semantics as
Candidate: maybe we should be a warning?
Reference: i don't get this. if progress has only one tick, then this consumes one too many now. and anyway, if there's only one operation using the monitor, why not simply
Candidate: nextvalueindex could be pulled into a semaphore instead of senses over.
Reference: this could be just i == -1?
Candidate: please use <UNK>
Reference: action.issethost()
Candidate: i think this should be omitted.
Reference: should it be wrapped with the conditionchecker and wait for it for some time? (i think it works in an async way)
Candidate: i'm not sure how about the sure that we want to have a segment with the <UNK>
Reference: this is a confusing noop since reportinternalservererroroversideband() doesn't use it. maybe complete the change here and replace reportinternalservererroroversideband() with errout.write()?
Candidate: suggestion <UNK> = <UNK>
Reference: shall we make this private as discussed?
Candidate: please use <UNK>
Reference: it would be good to make this consistent with registerclientinformation by making it re-register the cipher information if appropriate (and if the new information is different). question for @rajinisivaram: can
Candidate: is there a reason for this method to be called in the <UNK>
Reference: i think it's better to log it through openshiftiouiactivator
Candidate: use <UNK> instead of <UNK>
Reference: i think this collection contains the set of results to return to the client, but we are actually interested in the number of cells that were filtered out (i guess
Candidate: nit: we use <UNK> here instead of creating a new constructor?
Reference: this really shouldn't be public...
Candidate: unused
Reference: utils.validatearg
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: suggestion return tx.run("create (v:versionedthingwithassignedid {id:1})").consume();
Candidate: suggestion return tx.run("create (v:versionedthingwithassignedid {id:1, <UNK>
Reference: is this the same list of extra components for the bookie?
Candidate: ah, i'm not sure that this is is likely to be something.
Reference: space
Candidate: is there a reason for this method is called on the <UNK>
Reference: this refactor isn't related to the solved bug..please separate between this and the patch to solve the bug.
Candidate: this is a bit dangerous, bit dangerous, but i would be more readable.
Reference: up server check is already done in superclass. can remove from here.
Candidate: please remove the gluster gluster id
Reference: if (".".equals(dot.gettext()) is definitely more readable than reaching out to the objects class.
Candidate: please add a check if the fragment is not null.
Reference: you can also use 'runinternalmultipleactions'
Candidate: use <UNK>
Reference: this formatting looks weird imo. @romani whats your opinion?
Candidate: this should be a bit dangerous, for storagetype : <UNK>
Reference: i suppose that this is fp because guava optional is already imported. in that case a message should be sent to rules dogfood group.
Candidate: you could use <UNK>
Reference: wasn't 300 recommended as the default parameterization in the safepub paper?
Candidate: if you could use <UNK> <UNK>
Reference: if one host fails to update then it will stop updating other hosts well.
Candidate: i think that this method is reduced to <UNK>
Reference: do you really want to make this public?
Candidate: this is a <UNK>
Reference: gitresourcevarianttreesubscriber relay on data that are added into gitsynchronizedateset. such data contains repository, destination and source rev's using with we can determinate differences in particular file. passing empty gitsynchronizedataset will
Candidate: i doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt
Reference: is it worth discussing this case for **?
Candidate: why sleep is not used.
Reference: both client and response should be inside try-with-resource.
Candidate: you could use a string format. = <UNK> <UNK> = <UNK> <UNK> <UNK> <UNK> = <UNK> <UNK> <UNK> = <UNK> <UNK> <UNK> = <UNK> <UNK> <UNK> = <UNK> <UNK> <UNK>
Reference: this does not work. it returns something like clipdata{...}.
Candidate: i think this should be a <UNK> <UNK>
Reference: just a tiny detail, on upstream these were renamed to "manual" using guidegroup.manualgroupdefaultname
Candidate: is there a reason for mapping?
Reference: this should use the internalcacheregistry approach instead.
Candidate: this is is not
Reference: is this a java future? it is much less powerful than a completablefuture or a nettyfuture.
Candidate: this should be encapsulated by <UNK>
Reference: can we rewrite this statement to make it more readable:  (nop || (!cacheregistered && !(op instanceof schemaaddqueryentityoperation)))  we want to say here: complete the future if 1. there
Candidate: this could be simplified to "return <UNK> nesting.
Reference: it seems silly to collect into a list, only to use it to stream() right below again. can we combine those two collects?
Candidate: this seems like a bit more bit less bit less complex element.
Reference: rename ruleinfo2
Candidate: this is designed to be a best,
Reference: you can add a static method: config.builder() so that you don't have to do new config.builder()
Candidate: you could use a static import?
Reference: extract the building of the responsemessage to it's own variable (in eclipse, select the text, right-click > refactor > extract local variable / select code + shift+alt+l). this will make
Candidate: extract the building of the responsemessage to it's own variable (in eclipse, select the text, right-click > refactor > extract local variable / select code + shift+alt+l). this will make
Reference: is this (serverconnectiondetectedevent) post really required? this basically repeats the above two lines and then finally calls finishserverconnectiondetection(). you can directly call the finishserverconnectiondetection() method instead of this.
Candidate: wait.forelementclickable() should be <UNK>
Reference: really reviewfragmentstrategy is not a strategy for reviewfragment is a strategy for reviewscreenadapter, can you rename to reviewscreenadapterstrategy
Candidate: you could use a constant instead of <UNK>
Reference: the test case is ok, but i'd fix this differently, since root path usage is only one case where this breaks. maybe  integer sqltype = null; if (path !=
Candidate: you could use a local variable here instead of nesting.
Reference: should return overlay_sync_incomming or overlay_sync_incomming_new depending on itask sync state.
Candidate: i think this is not <UNK>
Reference: why not assertequals(classpathexpected, classpath1);?
Candidate: you could use a <UNK>
Reference: again, the repeated put statements.
Candidate: inline maybe?
Reference: no need to wrap "in" in a bufferedreader. it is a linenumberreader, which is a subclass of bufferedreader.
Candidate: you could use <UNK>
Reference: change it to debug level
Candidate: you could use the "?"
Reference: this is nice, but why not to collect all the dependencies that are not allowed and at the end throw an exception with all that not allowed dependencies? then the
Candidate: this is designed to be a <UNK>
Reference: what is this for? seems like a no-op.
Candidate: <UNK>
Reference: ] could be a char
Candidate: could we use a string instead of <UNK> ex.
Reference: declaration and assignment can be combined
Candidate: this is designed to be a <UNK>
Reference: why remove the sort?
Candidate: <UNK>
Reference: please use braces. checkstyle should pick this up.
Candidate: this is not efficient, we could use <UNK>
Reference: it should be assigned
Candidate: is there a reason for this method is empty?
Reference: needs a return statement?
Candidate: this is be built by <UNK>
Reference: open files?
Candidate: this is not throw an exception
Reference: since the order doesn't matter, you could initialize validscts as a frozenset rather than copy every time getvalidscts is called.
Candidate: this is a <UNK>
Reference: lower-case 'u'
Candidate: wait.forelementclickable() should be <UNK>
Reference: since it's the same foreach, why don't you call both function at the same time?
Candidate: this should be simplified to <UNK>
Reference: what's the compilation error you're getting for enum.valueof()? if i were to guess, i'd guess you'd need to cast handledtype() to a class<? extends enum<?>> or something similar. i'm confused
Candidate: we should use a <UNK>
Reference: suggestion topology.addvertex(nodevertex);
Candidate: this supplier is not committed
Reference: the invocation needs a mod instance, i think
Candidate: this is not <UNK> to tear down down down down down down down down down down down down down down down down down down down down down down down down
Reference: magic number?
Candidate: this fragment should bail fragment before calling fragment?
Reference: declare as set
Candidate: could we use <UNK>
Reference: if these print lines are still needed, please add them to the logger
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: can we use names like encryptedfile and decryptedfile for readability
Candidate: please use system.out
Reference: table commoncourts has three elements, but here you only use two.
Candidate: you could use a foreach loop here instead of <UNK>
Reference: this check is superfluous as super.connect() does the same check. we can safely remove this if block here.
Candidate: i think we should be a firing <UNK> instead of removing only: <UNK> { return false; }
Reference: it'd be better if an early return that checks if the method [xmlpullparser.isemptyelementtag](<link_0> is true so that the intent is clearer.
Candidate: this should be explained to <UNK>
Reference: why this is public? consider the following call sequence: 1. startmeasuringlatency() 2. reset() 3. endmeasuringlatency(), then you record a huge number as the latency.
Candidate: i think that this is not efficient, we should have to call the <UNK> <UNK>
Reference: is there an extra newline here?
Candidate: you could use <UNK>
Reference: we can probably declare only exception as thrown here.
Candidate: use utf-8 instead of <UNK>
Reference: i just saw that we seemed to forgot to convert that old swing dialog here. could you please fix this as well? dialogservice.showerrordialog or so should work thanks!
Candidate: if you can use a <UNK>
Reference: i would go with stream iteration here java titlelist.stream() .filter(x -> fieldapprover.approve(x.getdatainfo())) .findfirst() .ifpresent(x -> metabuilder.settitle(x.getvalue()));
Candidate: you could use <UNK>
Reference: this can cause some conflicts.. best thing to do is put this after that the maxhealth is upgraded, and then just health = maxhealth (like stated before by @borsty)
Candidate: is there a reason for element?
Reference: if we can't omit /costumize validate() either at store() nor at flush() i suggest adding the following to the beggining of abstractdiskmodel#forcecreationwarning(): if (getconfirmwindow() != null) { return; } this
Candidate: if this is is designed to be a <UNK>
Reference: condition logs
Candidate: this should be a <UNK>
Reference: if the text is used as part of the message for an exception being thrown it will follow "an exception occurred ". the way it is formulated now, that won't
Candidate: log.debug
Reference: we should throw a different string in to show that it will calculate from that string. for example: activitycontrollertest uses "biological" and expects profile.biological to be returned - even thought
Candidate: you could use <UNK>
Reference: permission is only required starting in o, hence the check. that aside i'm perfectly fine with removing it altogether since i don't think the serial gives us any valuable insight.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: performancewise it should be better if you directly work with the citations map (instead of keys and then get the citation for it). maybe even something like referencelist = getcitations().stream().map(new
Candidate: if you could use <UNK>
Reference: typically, we check for <applicationname>-<profile>, <applicationname>, application-<profile> and application. those with <profile> we check each profile from a comma separated list. does this do that?
Candidate: suggestion <UNK> = <UNK>
Reference: when we list the participants, the ones without a name should be listed with ids. perhaps we can handle this by modifying participant#getname, or handle it here?
Candidate: rename to <UNK>
Reference: iterables.getfirst
Candidate: this is not be explained to <UNK>
Reference: this test should be adjusted since you removed the strlen change.
Candidate: wait.forelementclickable() should be <UNK>
Reference: this is going to be hard to trace in multi-user environment. compiled model for what sql? which fd?
Candidate: can we use <UNK>
Reference: keep optional return parameter in all enums
Candidate: please use <UNK>
Reference: add this to stay consistent to the other getters here.
Candidate: this is a <UNK>
Reference: why rechecking?
Candidate: is there any reason why we removing the exception here?
Reference: foundservice or existingclusterservice?
Candidate: you could use a constant instead of printing the
Reference: could you make this more consistent? currently one stringifier is in a local variable, while the other is referenced directly.
Candidate: i wants to use system.currenttimemillis() instead of <UNK>
Reference: nit: this doesn't feel necessary - is there a reason why you can't just pass in local and remote (mapping away the withexecutor) into the constructor at the end?
Candidate: i think that this is is not <UNK>
Reference: normally we don't deny access to admin user
Candidate: should we be null"
Reference: could you please add asserts for remained avro types?
Candidate: this is not
Reference: this will cancel the entire worker, not just the recursive action. if one uses a scheduler for general scheduling tasks (instead of an executor) this will disrupt the worker. this
Candidate: is there a reason for this change?
Reference: assertequals(errorresponsecode.invalid_id_token_mismatched_client_id.getcode(), responsedata.geterror())
Candidate: combine these two lines
Reference: it seems a shame to introduce a wikipediaapp dependency to obtain the screen density. consider a small refactor of getcontext().getresources().getdisplaymetrics().density; from wikipediaapp to a utility class.
Candidate: is there a reason for this logic?
Reference: we catch a generic exception here, so the reason for the failure could be different than duplicate key. i would change this error message and i would add the exception
Candidate: no need to throw exception
Reference: i'm kind of debating here. on one hand, looks short&nice. on the other - this is essentially .foreach() masked to map() to make it intermediate operation instead of terminal operation.
Candidate: <UNK> -> <UNK>
Reference: readability of this test would be increased if you named them createdrefund, submittedrefund, refundedrefund, errorrefund or similar
Candidate: i think that this should be <UNK>
Reference: we cha change here as well.
Candidate: please use objects.equals
Reference: might be a lot more efficient to make fewer writes. unless the stream you're immediately writing to is buffered.
Candidate: nit: space after the
Reference: let's add this log as well. this may be useful for some users.  logger.debug("you can disable this check by adding this line to your gwt module:"); logger.debug(" <set-configuration-property name=\"verifynewerversion\"
Candidate: i think we should log the error.
Reference: you can test the three parameters in one submit.
Candidate: this is a <UNK>
Reference: should use all lowercase, as people may reference this test for examples and think that using uppercase mod ids is okay when it isn't.
Candidate: you could use <UNK>
Reference: we can drop the "filechooserservice" now from those method calls, since the methods will be visible from this class.
Candidate: we could use reflectiveoperationexception here instead of <UNK>
Reference: @fanifieiev the same above.
Candidate: @fanifieiev the same above.
Reference: following code seems more clean to me  java /** * gives the preferred video url for downloading from a specified {@link videodata} object. * * @param video data of
Candidate: if you could use <UNK> <UNK>
Reference: we have fileutil.detectedos.iswindows to show whether we are on windows, no need for separatorchar magic.
Candidate: you could use <UNK> v2);
Reference: if this wasn't in a test, i'd be unhappy as it's assuming a lot. ok here, however.
Candidate: @ivange94 not sure that this is not
Reference: the withmetricfactory overload seems confusing, we can be more specific with the type of metric factories?
Candidate: please use <UNK>
Reference: could you use some constant for the boolean instead of true or false to ease the readability of the code please ? like this  static final boolean reusable_classloader =
Candidate: is there any reason to propagate the here?
Reference: this line is redundant, request already passed in newtokenclient(tokenrequest);
Candidate: this is a bit more.
Reference: the code elsewhere in this plugin has preferred is rather than equalto. since this is comparing strings, could you switch it to use is instead of equalto? suggestion assertthat(result.getarchitecture(), equalto(expectedarch));
Candidate: please use <UNK>
Reference: why not just check string contains?
Candidate: i think this is not <UNK>
Reference: #701 asked for this lock to be removed, if i am reading it correctly.
Candidate: i think that this is not efficient, we could use the lock in the
Reference: need the created timestamp here instead of fe.expirytime
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this could be refactored by  return !utilmethods.isset(filterkey)? this.loadedfilters.values().stream().filter(filterdescriptor::isdefaultfilter()).findfirst().get(): this.loadedfilters.containskey(filterkey)? this.loadedfilters.get(filterkey) : this.loadedfilters.values().stream().filter(filterdescriptor::isdefaultfilter()).findfirst().get();  in addition you can create a method called getdefaultfilter, that basically returns this  this.loadedfilters.values().stream().filter(filterdescriptor::isdefaultfilter()).findfirst().get() 
Candidate: this is not be a <UNK>
Reference: i think you have these variables mixed up, should be switched
Candidate: is there a reason for element?
Reference: marking @nullablewhenever it is possible. ide will help a lot to warn null check in invokers.
Candidate: i think that this will be a <UNK>
Reference: this should check that an error response is sent from keycloak (<link_0> and that the error code/description indicates to the app it was the aia that was cancelled and not
Candidate: please use <UNK>
Reference: it should be could not get launch config for server {0} to attach remote debugger, should it not? this way it would be in some way related to action 'attaching
Candidate: can be replaced by <UNK>
Reference: it is permitted, but discouraged as a matter of style, to redundantly specify the public and/or abstract modifier for a method declared in an interface.  <link_0>
Candidate: this is be annotated with <UNK>
Reference: checkowner should be changed to : frontendstate.checkpermissions("finishtaskinerror", frontendstate.getidentifiedjob(jobidobject), you_do_not_have_permission_to_finish_this_task);
Candidate: suggestion return <UNK> || <UNK> || <UNK> || <UNK> || <UNK> || <UNK> || <UNK> || <UNK> || <UNK>
Reference: instead of hard coded string, can we actually cache the response and return it?
Candidate: is there a reason for this logic?
Reference: probably worth exploding here so things fail fast.
Candidate: could you move this check to <UNK>
Reference: missing super method invocation.
Candidate: if we is going to throw a jdk jdk jdk <UNK> jdk jdk jdk jdk jdk jdk jdk jdk jdk <UNK> jdk jdk <UNK> jdk jdk jdk jdk jdk jdk
Reference: since this line is removed: backupwalletdialogfragment.show(getsupportfragmentmanager()); the backup dialog is not shown until onresume() is called.
Candidate: try-with-resource
Reference: @jonathangiles, @srnagar, i'd like to see us create a guideline around the default serializer to be used when one isn't passed. in some locations we use jsonserializer/objectserializer and in others
Candidate: is there a reason to throw checkargument here?
Reference: not necessary - it defaults to timestamp default current_timestamp
Candidate: this is not intended to display the
Reference: i would store awaketime as attribute of this class and remove if from queuemodelhelper
Candidate: this is not <UNK>
Reference: why not just else? as there is only 2 possibilities
Candidate: i think that this is not efficient, but i think that this is is the to the the <UNK>
Reference: i'd probably include a baz here, too.
Candidate: you could use a static import
Reference: while in here, i'd just have the equals() method use an equalsbuilder so all the inline-if's that were here before can be removed:  public boolean equals(final object o) {
Candidate: please use objects.equals for (string operand
Reference: (occurs, occurrence, and if you would like to get fancy, coccurrence in uk dialects.)
Candidate: wdyt about replacing <UNK> with router <UNK>
Reference: this is a throw-away array allocation on what might, given the class name, be the hot request path.
Candidate: please use <UNK>
Reference: having no certificateverifier is a bug on our side ? why should we launch a bad_certificate error ? internal error would be more appropriate ?
Candidate: if we remind verifier verifier verifier verifier verifier verifier verifier verifier verifier is null.
Reference: possible alternative implementation of method: java return conceptmap.getordefault(targettable, collections.emptymap()).get(targetfield);
Candidate: you could use <UNK> instead of <UNK>
Reference: do we use id any more ?
Candidate: this should be <UNK>
Reference: input is not @nullable, remove annotation or add null check.
Candidate: this is not be set?
Reference: this counts down before the bean is actually initialised
Candidate: i think we could be a to <UNK>
Reference: >boolean [](start = 11, length = 7) verifyresult with one property isvalid
Candidate: ![major](<link_0> 'severity: major') remove this unused method.
Reference: this should be outside the if-else?
Candidate: this is not to be defined in the
Reference: could we just return if fields== null instead of nesting the for loop?
Candidate: you could use a text: <UNK>
Reference: i meant something like : asserttrue(expressionevaluator.evaluateunaryexpression("? = 1*?", bigdecimal.valueof(2), bigdecimal.class));
Candidate: use <UNK>
Reference: do you think it's worth shuffling the server list here to make sure that if there's several servers that start from the same ordered list that they don't all just
Candidate: minor nit float> = new <UNK> clazz, <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK>
Reference: please, just for completeness.. call stop(true); here (after the method name change i asked you)
Candidate: i think this should be <UNK>
Reference: inline this
Candidate: suggestion <UNK> = <UNK>
Reference: we shouldn't rely on a hardcoded binder name here.
Candidate: can you use <UNK>
Reference: style: y u change '!=' to '>' :-/?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: do we need to get all the configurations for an integration service when listing?, the resource is using this method to return the existing services and i guess will be
Candidate: log.debug
Reference: the behaviour's probably the same, but is there supposed to be a newline or an else here? that said, this would be best represented with a nested if for the
Candidate: please add a <UNK>
Reference: whats the super class here?
Candidate: if we is going to compute the <UNK>
Reference: fyi: hudson.util.filter is very useful! this could be written like this:  for(triggerbuilder ctb: util.filter(cbs, triggerbuilder.class) { ... }
Candidate: use <UNK> instead.
Reference: there should be a space between description and name
Candidate: use stringutils
Reference: oups, two new list per event :p
Candidate: if this == 0 || <UNK> == 0) { ... }
Reference: nit: log effective rate?
Candidate: i think that this could be a charge by <UNK>
Reference: you could push this bounds logic into the sequenceandbound object itself to prevent mistakes - add some method like contains(timestamp).
Candidate: this is a bit nervous that we could be a <UNK> <UNK>
Reference: i doubt it works reliably in all cases, because the file can be technically replaced by an older one (e.g. move operation). i would expect something like map<file, set<long>>, where
Candidate: is there a reason to use a property?
Reference: repeating the same big_values doesnt make it more readable.. either make a builder for batch subscription or aply some defaults, or just use values instead of consts
Candidate: you could use <UNK>
Reference: shouldn't this be connector key? just wondering...
Candidate: maybe we should use a warning instead of <UNK>
Reference: this map can be replaced with peek and injectsessioninfo can be changed to return 'void'
Candidate: you could use <UNK>
Reference: size before sounds better to me.
Candidate: this is leads to clean this sufficient? sufficient? sufficient?
Reference: fwiw, this method is getting deprecated: <link_0> so you might consider using the constructor.newinstance method instead.
Candidate: we should use a constant instead of <UNK>
Reference: should be a for loop which iterates on all the converters, rather than a converter != null thing...
Candidate: is there a reason for this change?
Reference: due to the return in the if block, the else is not necessary. omitting the else reduces the indentation for the following code.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: btw semaphorestep is usually helpful for things like this.
Candidate: could we use <UNK> to run()
Reference: do you realy want this assertion? when assertions are enabled, this can create some problems.
Candidate: nit: <UNK> -> <UNK>
Reference: perhaps you can use an 'explaining variable' to clarify what regkey == null means. <link_0>
Candidate: you could use a constant instead of <UNK>
Reference: don't we want this to run on linux as well?
Candidate: you could use this variable?
Reference: need to change it to java8 lambda expression.
Candidate: if this is designed to be a <UNK>
Reference: should this be true then?
Candidate: this should be <UNK>
Reference: unnecessary casting
Candidate: this is required?
Reference: i think you should rethrow the original exception, not a new exception without message
Candidate: we should throw an exception here instead of wrapping an error.
Reference: messagestring will always be null here, is this on purpose? if so, perhaps just passing 'null' as a parameter would make it clearer?
Candidate: use <UNK>
Reference: i assume this is just a short term fix. we can't force target wizard providers to use this category. they may already be using a different one. we should really
Candidate: i'm not sure how about this this change.
Reference: shouldn't this all be in an "else" statement? do we support moving a host to non-operational twice, showing two reasons?
Candidate: you can use tear down to boilerplate
Reference: the throws needs to be based a specific exception.
Candidate: -1. division iterators are -1. division
Reference: could we remove the consumeddatatype as it is never used?
Candidate: wait.forelementclickable() should be <UNK>
Reference: i don't think this prefix is necessary. i suspect most people will want to copy only the sha1 so they can paste it into a command line.
Candidate: you could use <UNK>
Reference: use readasstring(...) instead
Candidate: this readasstring(...) instead of <UNK>
Reference: else if
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: what do we return, if we're not under appengine?
Candidate: please use <UNK>
Reference: remove //modified harsh.
Candidate: you can use the enum types, types, types, types, types, types, types, types, types, types, types, types, types, types, types, types, types, types, arguments. it'd be okay to lists, types,
Reference: can we introduce a createoralterpartition?
Candidate: i'm not sure how about eating this change.
Reference: npe if label is null
Candidate: this is not null
Reference: i don't think this method is needed anymore.
Candidate: i doubt if this is is not covered by <UNK>
Reference: is info level necessary or it can be changed to debug?
Candidate: is there a reason that is is not to be used?
Reference: is it correct to maintain state in the view? shouldn't the presenter keep the logic as to whether the view is empty?
Candidate: <UNK>
Reference: can this be moved up alongside the screenshotsaveverifier checks for simplicity?
Candidate: unused vars
Reference: it would be nice to have a test for this "recursively rename submodules" functionality too.
Candidate: this is not needed
Reference: this is a suggestion to remove unnecessary updatecache call: do the updatecache inside the lambda function at orelseget(...) i know it is not part of this change, but that can
Candidate: we should termination terminate manager here instead, we can hang that the state manager is a no-op but i'm not sure that we want to termination
Reference: should we not use a different sms template here? because the user may not have read her email yet, the sms may be quite unexpected.
Candidate: this is never be used anywhere else.
Reference: this seems to duplicate getfullexpr from block.
Candidate: this is not be a <UNK>
Reference: you should create a constant for containsonlyreservable
Candidate: is there a reason for avro ?
Reference: why double and not bigdecimal?
Candidate: @vilchik-elena you could use the division here instead of this(name, <UNK>
Reference: let's remove executionplanruntime start and shutdown in all attribute validation cases .please make the change in others as well
Candidate: no need for the
Reference: instead of the encoder use the decimalencodedvalue:  edge0.get(encoder.getaveragespeedenc()) edge0.getreverse(encoder.getaveragespeedenc())
Candidate: you could use a constant instead of <UNK>
Reference: externalize the strings
Candidate: can you use <?> instead of list?
Reference: it is generally good to avoid mixing different works in pr :)
Candidate: nit: <UNK> -> <UNK>
Reference: suggestion if (m.find()) { ... }
Candidate: you could remove this initialization
Reference: should you throw the multipliers into a constant? i see you're reusing them in a few other spots
Candidate: is there a constants for a hardcoded height
Reference: i think, there is a wrong behaviour: if the file could not be created then at least an exception should be thrown and if you are logging then the file
Candidate: you could use a <UNK>
Reference: as this is under the synchronized (lock), is this synchronized required?
Candidate: you could move this to <UNK>
Reference: can this repeated part be wrapped into a function?
Candidate: we should throw an exception instead of <UNK>
Reference: public?
Candidate: you could use a try-with-resource here instead of creating a new instance.
Reference: the same as line 89, there's no effect of clicking ot the verify button
Candidate: use utf-8 instead of <UNK>
Reference: add "this" qualifier
Candidate: this is a <UNK>
Reference: if i undrestood it right, we want display.timerexec(x) here. x can be 50 - 100 ms. i probably would prefer smaller values.
Candidate: '+'
Reference: define a constant value for the strings which you are using in more than two places. example :- define a constant for "(" and reuse it.
Candidate: you could use a constant here instead of <UNK>
Reference: i think i'd prefer to do something like this: java response res = allhealthy ? response.ok() : response.status(503); return res.entity(response).build();
Candidate: how about using a non-trivial
Reference: copying numrows and numbytes is insufficient. aggretated should be set as the stats of resulttabledesc.
Candidate: consider replacing this with a custom constructor?
Reference: it doesn't seem correct to have default implementation for getfilters return empty map. throwing unsupported exception seemed better. is there any particular reason you made this change instead of add
Candidate: if you could be simplified to <UNK>
Reference: this line is unnecessary since this is the default behaviour of the mock
Candidate: why not mock
Reference: for safety, how about checking c != null && c.length >=7 and if not, leave everything at 0.
Candidate: please use <UNK>
Reference: the expression in the message looks odd. should be the param name. will fix on merge.
Candidate: this is not be used?
Reference: why is this unknown? can't we have 1 tick per task in the map? + some work for the context store?
Candidate: should we move this debug level to the events.
Reference: hmm, should we switch listenerlist to a set?
Candidate: you could use a <UNK>
Reference: ya @value with @builder seems more appropriate. better thread safety and invariant guarantees.
Candidate: you could use <UNK> instead of map?
Reference: please use request.gettitle() instead of feed.gethumanreadableidentifier(): in this case, feed does not have a human readable title yet
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: seems like this logic is duplicated in a couple classes, lets see if there's a way to simplify
Candidate: this is not use <UNK>
Reference: this command is currently transactional (should it be transactional?), i guess it should be set to non transactional with compensation, so: 1. the statechanged need to be called after the
Candidate: this log the construct, should be log the exception
Reference: null-checks for both getcurrentfragment() and recyclerviewlayoutmanager wouldn't hurt here.
Candidate: if this is is not
Reference: what about "solved"/"rejected"/"candidate"? this is a big commit and i may have missed those, or maybe the gene/variant design has changed?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: how sure are we that threadlocalrandom will not generate the same numbers for a given seed? for example, if each local random was generating the same series, you will not
Candidate: is there a reason for this method to be null?
Reference: same here, common case first?
Candidate: rename to <UNK>
Reference: now this should return true, since there are disks on the storage domain (remember that you don't check the validate only the method checkdisksinbackupstorage) change to asserttrue
Candidate: use <UNK>
Reference: here it should throw an unsupportedexception and not return a potentially wrong result, same for contains and calculatearea
Candidate: suggestion return <UNK> == null && <UNK>
Reference: don't we need to clear this?
Candidate: wait.forelementclickable() should be <UNK>
Reference: should this delegate for flush and the other forms of write, too?
Candidate: i we need to reset close() here instead of close()
Reference: can we get rid of "/" here and let the paths api construct the os dependent path?
Candidate: i'm not sure how about this out.
Reference: if userdata is still not a solobject at this point we should break / return -1
Candidate: this could be inlined (my <UNK>
Reference: does this mean we might have bad configuration that needs cleanup (via xsl transform)?
Candidate: you should use <UNK>
Reference: does it need 1s? can we give it 1ms to speed up this test? this 1s might slow down my fancy new compute to run tests. (the minimal legal value
Candidate: the order is be replaced with <UNK> connection,  <UNK> == <UNK> || <UNK> == <UNK> || <UNK> >= <UNK> { ... }  if <UNK> == <UNK> { ...
Reference: can be this(new arraylist<integer>());
Candidate: use <UNK>
Reference: is this method worth it's weight in characters written?
Candidate: should we use <UNK>
Reference: does the code actually nest patch scopes like this? i thought patch was the parent scope - but child scopes were always normal request scopes.
Candidate: is there is a warning?
Reference: this is a private method and it is quite heavily used. it should be fast. now, nls.bind here is not efficient, it is ok for messages/labels in ui and reporting,
Candidate: please use <UNK>
Reference: nametoken shouldn't be null or empty now, and the content of the conditions is the same. you could create a method like this:  private boolean localeandnametokensarenotsame(nametoken) { return (localehelper.isenglish()
Candidate: please use <UNK> instead of <UNK>
Reference: file separator? btw what are you doing here?
Candidate: static import
Reference: i thought we wanted to code the list of redirects as a javascript constant in order to avoid this sort of middle-tier support? what if we just have a redirectlist.ftl
Candidate: this could be simplified to java <UNK> <UNK> = <UNK> <UNK> <UNK> <UNK> <UNK>
Reference: shouldn't be here "firstresult, maxresults" instead of "null, null" ?
Candidate: is there a reason for element? paths?
Reference: instead of getting the instance here, it should be passed in in the event that we want to mock it.
Candidate: please use <UNK>
Reference: objectmapper is threadsafe so you should just create it one time for the class so we don't need to re-create it over and over.
Candidate: if we is not a download the <UNK>
Reference: nit: maybe use newsinglethreadexecutor() instead? (for all similar places in this file)
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: missing null check for game.getobject(event.gettargetid())
Candidate: you could move this braces around
Reference: should we init topologyconfigid in this function?
Candidate: is there a reason for this method is not <UNK>
Reference: suggestion if (stringutils.isnotblank(usercorecacheidentifier)) {
Candidate: you can use repelaced by the userreportingsettingshelper call.
Reference: should be iswindowsdesktop() -- otherwise users on e.g. windows using chrome to access an rstudio server on linux won't see this option.
Candidate: minor nit: we could use isempty() instead of <UNK>
Reference: rounding errors could induce unexpected behaviour
Candidate: use <UNK> instead of <UNK>
Reference: are notfound and badrequest not already covered by the webapplicationexception catch-all immediately below?
Candidate: you could use a logger instead of <UNK>
Reference: why do we still have a condition on getparentcommand() ?
Candidate: this is not a good idea to use <UNK>
Reference: as a practice its a good idea to call commit on a connection that is returned from the pool before performing a select operation. this ensures that any uncommitted data
Candidate: this is not needed
Reference: you should go into vdc_options directly.
Candidate: <UNK> -> <UNK>
Reference: that could be merged into one line
Candidate: you could replace this with <UNK> with <UNK>
Reference: suggestion mekhqxmlutil.writesimplexmltag(pw1, indent + 1, "typename", type.getinternalname());
Candidate: suggestion <UNK> -> <UNK>
Reference: we shouldn't be modifying constants. if these are truly constants, they should be statically initialized and then never changed. if these aren't constants, we should create them in before() to
Candidate: you could rename to to <UNK>
Reference: i believe this is a problem and is related to some review bug we had quite recently? 'l' vs no 'l'
Candidate: you could use the <UNK> <UNK>
Reference: it could be better using constants, for example dafault_number_of_plans_generated = 5
Candidate: this is a <UNK>
Reference: this command **dashboard.open()** looks as redundant here. to make code clear i propose to move **dashboard.open()** command into the **createwsfromjavamysqlstack()** method, set **@beforeclass** annotation above it and remove **setup()** method
Candidate: you could use <UNK>
Reference: should this line be moved up, too?
Candidate: nit - we can acquire the lock on the storage pool is be acquired in the exceptions?
Reference: change this conditional to iterate with a counter from 0 to length, and check the counter rather than 0 in the lines below.
Candidate: is there a reason for paths?
Reference: same as for the keypairtype constructors.
Candidate: this is a bit sketchy for the sake of nesting.
Reference: i think this condition could be merge with the previous one.
Candidate: this is not <UNK>
Reference: we should remove try-catch-fail.
Candidate: please use <UNK>
Reference: checkargument(dir.isdirectory, "%s is not a directory", dirpath);  ? i know it's a different exception type, but still..?
Candidate: you could use <UNK> here instead of creating a new one?
Reference: sorry, a typo here. the return value should be parent.
Candidate: why not sure that this is not releasing the
Reference: aren't these two lines are unnecessary?
Candidate: please use <UNK> >= <UNK>
Reference: nit: use "module.exports.".length so it's clear where that number comes from (likewise 2 lines down)
Candidate: you could use objects.equals()
Reference: this call should come after super.onresume(). also, i'm not sure if this will work for first time load, because client will be null the first time, since the peekrestclient() call
Candidate: i think this should be a warn
Reference: should it be !part.islocal() instead of part.islocal()?
Candidate: this is be <UNK>
Reference: ![major](<link_0> 'severity: major') remove this call from a constructor to the overridable "sethref" method. [![rule](<link_1>](<link_2>
Candidate: nope, this is be non-null?
Reference: public @nullable iterable... empty_set is never null though, how about supresswarning instead?
Candidate: is there a reason for element?
Reference: extract the building of the responsemessage to it's own variable (in eclipse, select the text, right-click > refactor > extract local variable / select code + shift+alt+l). this will make
Candidate: extract the building of the responsemessage to it's own variable (in eclipse, select the text, right-click > refactor > extract local variable / select code + shift+alt+l). this will make
Reference: you can do java integer.valueof(0).equals(categoricalvalueid) ? null : categoricalvalueid)
Candidate: this schema is be non-null?
Reference: is it really useful to list all this if it's going to be filtered?
Candidate: is there a possibility that this is is not to be printed event.
Reference: i am not sure what to make of this message > better not use it for testing purposes maybe something along the lines of _sender supports asynchronous requests only_ the
Candidate: the error message is misleading.
Reference: i'm not sure i love the lenient check, i'd prefer checking that it.trim().equalsignorecase("1") and the same with preview below.
Candidate: this should be simplified to <UNK>
Reference: make sure pagebuilder is in a consistent state before you throw. i.e. you probably need some code before throw throwables.propagate(throwable). in addition, since you are refactoring this code, remove usage
Candidate: you could use -1.
Reference: not to be picky but why do you have switch here?
Candidate: wdyt about using <UNK>
Reference: we can remove the status variable by calling "return addendpoint(endpointdata);"
Candidate: we could use <UNK>
Reference: do we need:  string algorithmname = evidence instanceof algorithmevidence ? ((algorithmevidence)evidence).getalgorithm() : null;  ?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: ditto error message
Candidate: please add a description for the
Reference: since they occur in both cases, these should be outside the conditional. also, a direct method reference can be used.
Candidate: is there a reason to mock here?
Reference: please format this like:  settings settings = settings.builder() .put("client.transport.ignore_cluster_name", true) .build();
Candidate: i don't ethernet ethernet ethernet ethernet you.
Reference: wow that's really long.
Candidate: is there a reason to use the properties?
Reference: guessing this is just in here for testing? probably don't want it re-retrieval the datastream profile.
Candidate: you should use guava instead.
Reference: extra space after openning brace - style check nitpick
Candidate: if this is is designed to be an array of <UNK>
Reference: would drop this assert, for reasons mentioned above in similar tests.
Candidate: others, i others, i others, i others, i others, would others, assert on the assert that the initial result on the result on the initial result on the initial result
Reference: with "for" loop usage this can be reduced to one line. this is the standard idiom here: for (zipentry entry; (entry = zip.getnextentry()) != null;) { [...]
Candidate: stringutils.isnotblank()
Reference: this edit part (and the one for durationobservation) needs to install a notation listener, in order to react to named style value changes and refresh its figure. otherwise, undo-redo won't
Candidate: why not use <UNK> instead of creating a new anonymous class instead of subclasses
Reference: nit: for the new log, please do this ""clearcache is deprecated for changetype: {}", changetype". minor performance improvement if we config the log level to error.
Candidate: is there a reason for this logic?
Reference: if you do the class check you can omit the instanceof check. but i would prefer if you use equals instead of ==, because in osgi you might actually have
Candidate: you could use use <UNK> boolean.class)
Reference: what about using constants somewhere for version numbers?
Candidate: is there a reason for this method to be printed here?
Reference: probably doesn't need to be public.
Candidate: suggestion <UNK> = new <UNK>
Reference: please extract the getmodel().getissubtemplate().setentity(false); from here and from line 96 before the if statement
Candidate: please use <UNK>
Reference: not sure if this should be a preference
Candidate: you could use computeifabsent
Reference: rename to os
Candidate: use stringbuilder, instead of <UNK>
Reference: we might want to add a log here for hes.
Candidate: is there a reason that is is not error. i am not sure that we want to throw an exception instead of <UNK>
Reference: based on the eclipse output you only want the conflicts to be highlighted, not the entire tree. i'd advice to add a screenshot of the result to ensure we're working
Candidate: if you could use a string instead of return?
Reference: @tsurdilo i have one question. why is this persistence.xml in string and not in a seperate resource file, moreover, is it mentioned to be run only with postgresql?
Candidate: is there a reason for separation of <UNK>
Reference: can we add some message to this assertion? (and all others)
Candidate: should we use <UNK>
Reference: no spaces inside round brackets.
Candidate: just use <UNK>
Reference: you can get this value from the entry instead. no need to traverse the map again.
Candidate: use reflectiveoperationexception
Reference: can we reference the class directly?
Candidate: is there a reason why this is necessary?
Reference: method reference? asking
Candidate: nit: use <UNK>
Reference: if new name is null, old name has been put as text i think we should here validate the text value and not newname/oldname.
Candidate: this is a bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, but
Reference: pease rename the variable transformer into the kind of transformation. do not suggest optimusprime or something :) tell what the transformation does.
Candidate: this can be replaced by <UNK>
Reference: looks like all of the test server instances will be in-memory datasets, which is great for speed. will there be any places where the test server instances touch the disk?
Candidate: please use <UNK>
Reference: again about using taskconfigurer
Candidate: please use <UNK> instead of <UNK>
Reference: this should not happen on the client side.
Candidate: you could use <UNK> here instead of <UNK>
Reference: we should use java resource handling here. i know it is not possible with the current tool base class, should we change it?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this button should also be "re-enabled" when the messages tab is hidden, otherwise, if you have the messages tab selected and then hide it, the export button shown/enabled is the
Candidate: please rename this to <UNK>
Reference: remove this. this suppresses test failures.
Candidate: could we print the exception here
Reference: rename the variable to resources instead (bad copy paste i think)
Candidate: we should use the annotation?
Reference: can you please move this logic to a method to improve code readability?
Candidate: you could replace this with <UNK> with <UNK>
Reference: why not just return the result: super.view(mission).getasjsonobject(); there is no need for this variable.
Candidate: please curly braces around this..
Reference: because of the problems mentioned elsewhere in this file, this looks like it doesn't update :)
Candidate: you could use <UNK> <UNK>
Reference: dtto. on aligning. in fact, i can see it all over the file.
Candidate: @vilchik-elena you could use <UNK>
Reference: ftype can be null, which lead to auto-npe. perhaps null-check it? (not sure what would be a good return value, null, empty string?)
Candidate: use a constant for s?
Reference: i'm wondering if we could use an [unmodifiable list](<link_0> here?
Candidate: this is a <UNK>
Reference: please rename this layout file as well removing _new_api.
Candidate: unused
Reference: sorry for the late review, i was working on getting stetho-1.2.0 out with a much improved api to support this kind of customization. i think we can now approach this
Candidate: i think this is not efficient, but i would be a good idea.
Reference: move the parameter validation to the constructor of xhmmemissionprobabilitycalculator.
Candidate: this args?
Reference: similarly to the reader side, in the writer we want to transparently support either representation in the memory/protobuf model (user can put the native part either in the string field
Candidate: this is a bit risky.
Reference: filters method argument should be passed to ismessageinlogfile as an argument
Candidate: please ides ides ides ides ides ides
Reference: java } else { issue.setassignee(null); }
Candidate: you could use the <UNK> annotation?
Reference: int gets values up to 600 hours. that should be enough for the barrier.
Candidate: this is a <UNK>
Reference: nit: can directly use buffer(byte) instead of writebyte
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: space after if before (
Candidate: could you use <UNK>
Reference: should this method become private so that other class can not use new hl7parser201305utils()?
Candidate: this should be <UNK>
Reference: after use the ssh session should be closed: sshsession.close() not sure if this is really important though.
Candidate: i think this should be <UNK>
Reference: closerutil.close
Candidate: you can use the formatter
Reference: i think so, otherwise registering on the update will cascade up to the handle.
Candidate: please use uri.create
Reference: shouldn't #may# be displayed properly?
Candidate: use readasstring(...) instead of <UNK>
Reference: method never used
Candidate: suggestion <UNK> = <UNK>
Reference: i think we should make this ctor package-visible only and introduce another one, which will be visible to everybody, without target argument
Candidate: minor: you could use <UNK>
Reference: can we use trylock instead of having the set?
Candidate: you could use <UNK>
Reference: what's the difference between these two?
Candidate: you could use a constant here instead of <UNK>
Reference: @ctsims failure due to: this.mchoices -> this.mchoices.length
Candidate: this is not <UNK>
Reference: please format all java code at 2 space indents.
Candidate: is there any reason to propagate the properties?
Reference: shouldn't be removed this one hibernateutil.closesession(); too?
Candidate: i think we should rely on the
Reference: should this actually be hard coded to localhost?
Candidate: if this string() is not
Reference: we can have getter for the host we should not expose map to the outside world.
Candidate: could you explain why you can use the foreach paths?
Reference: ![major](<link_0> 'severity: major') replace this with a call to the "tofile().exists()" method [![rule](<link_1>](<link_2>
Candidate: we should throw an exception exception
Reference: #1585 will replace these, right?
Candidate: @gunnarmorling mind this test, but you could use only: <UNK> <UNK> <UNK>
Reference: maybe clientquery should store an analyticview (since that is all they can query) instead of a table.
Candidate: i would be cleaner to use a list?
Reference: correct me if i am wrong; but organizationalunit.getrepositories() returns all repositories associated with an organizationalunit whether the current user has access to the repository or not? you are safe using
Candidate: is there a reason for the top of removing the mapping of the top object?
Reference: please use assertnull instead
Candidate: suggestion if (throwable == null) { return <UNK> }
Reference: isnullorempty check is not necessary if you're using stringutils.containsignorecase as it checks for null
Candidate: you could use checkargument
Reference: add one more indent for parameters if they start a new line.
Candidate: is there a reason for this class instead of <UNK>
Reference: we already have a method walletapplication.eraseandcreatenewwallet() that handles removing the wallet. this method does not remove any other files (such as the logs, which we want to keep in the
Candidate: this is not needed
Reference: propose to make this put(collection<lookupextractorfactory> lookups) and make the lookupextractorfactory have a name. if the internal handlings of this class uses a map (probably) then that's fine.
Candidate: if you throws exception exception
Reference: i don't believe we need to manually calculate everything here. we should be able to just throw the collection at the hashcodebuilder like we do with content.
Candidate: this could be simplified to int operand
Reference: why overload all of these methods to throw an exception when the base class has an actual useful implementation? look at <link_0>
Candidate: this readasstring(...) instead of <UNK>
Reference: this is a nice attention to detail but i do wonder: - is this something people want? is this worth adding an extra permission for? - do we consistently vibrate
Candidate: should we use <UNK>
Reference: does this correctly handle the 2.0 case, which is a different security realm by default?
Candidate: is there a reason that is is a to be used?
Reference: eventdao can have a delete by user for example, done via jpa delete.
Candidate: if you could be reduced down to a map?
Reference: use logger.error() instead of e.printstacktrace()
Candidate: i think we should print stack trace to log statement.
Reference: i think this is not necessary you can initialise shouldshowdualpane directly here not need to obscure purpose. same applies to setupnavigationdrawer()
Candidate: you could use <UNK>
Reference: i would change this (and get response {}) to .debug or even .trace
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: please return this for all addparameter, this will enable: runquery(prms.addparameter(x, y).addparameter(x, y).addparameter(x,y))
Candidate: nope, is a build.
Reference: why is this assertion error thrown after removing the ban? or asked in a different way: why do we even attempt to ban a user with a null username?
Candidate: could use blanks instead.
Reference: we decided not to use these plain sleeps but rather wait to specific thing. please take a look at other tests in the class. you can do something like waitfor(()
Candidate: nit: use system.currenttimemillis() instead of <UNK>
Reference: would be nice to make "supersecret" a static final constant
Candidate: you could use <UNK>
Reference: can we make this not double negative way?
Candidate: this is a bit strange, but we don't have to putifabsent args?
Reference: could you put doc.getcoresession() in a local variable please?
Candidate: is there a reason why is empty?
Reference: please remove the extra blank line
Candidate: you could use a constant instead of <UNK>
Reference: same problem with object.equals vs arrays.equals.
Candidate: this is correct.
Reference: there's quite some duplication with methodorderingvisitor. have you already tried avoiding that?
Candidate: nit: you finals
Reference: skipping?
Candidate: this is not needed
Reference: this is kind of weird and i am sure i am not understanding it correctly. but if this get method already returns a value, then setting would just be redundant.
Candidate: i am not sure that this is closed
Reference: should be easy to register all persistables using persistablefactory.getinstance().getclassidmapping().entryset().foreach(e -> kryo.register(e.getkey, simpleserializer, e.getvalue())); in place of specific concrete class registration.
Candidate: is there a reason to check that this is be null?
Reference: could you also use a cache mechanism here?
Candidate: why not sure that this is is not
Reference: we should not initialize resultstorageengine. please refer, how we initialize asyncquerydao in standalone and spring. we should do the same. <link_1> <link_0>
Candidate: i think deadlock in the test, no?
Reference: keep as one line or refactor.
Candidate: this is not efficient, we should inform that the <UNK> is not efficient, we should have to to the <UNK>
Reference: i would create a new method to convert days in milliseconds, something like daystomilliseconds(int days)
Candidate: please use <UNK>
Reference: @wwelling : is there any guarantee that the default locale language will be included in the list of available languages?
Candidate: you could use a constant for s?
Reference: i'd use logger#debug in both cases... what do you think?
Candidate: you could throw an exception instead of <UNK>
Reference: there's a trick here: named styles are compatible with css, which means that if a css exists and declares the "delta" property, the intvaluestyle will be non-null. however, it would
Candidate: you can be replaced by <UNK>
Reference: i'm really not sure that using a condition is more readable than testing individual fields. i would go for a series of: assertthat(gelfconfiguration.getqueuesize()).isequalsto(10) ...
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: no need for this
Candidate: is there a reason for element?
Reference: similarly, i think this should either test that the two reads are mapped, or explicitly state that the read must be mapped.
Candidate: is there a reason for element?
Reference: applicationid > 0 isn't it?
Candidate: this is not map (can be better to use <UNK>
Reference: can ioiterator only return ioservices? if not, a valid option would be to make next take a parameter targetclass (subclass of ioobject) and use that to rewrap the returned ioobject.
Candidate: use <UNK>
Reference: do you think it's worth using stringutil.parseint(<...>, 1000) here, just to avoid a potential exception from a parse failure? (it looks like invalid options are handled in the dialog directly
Candidate: if you could use <UNK> <UNK>
Reference: this variable is not used any more, can be removed.
Candidate: this is be <UNK>
Reference: not a big deal, but in the future it might be useful to loop through the enum just in case we are forced to add another descriptor type down the
Candidate: i think that this is not efficient, we could use a <UNK> that the is not <UNK>
Reference: does every label in this class need this style class? if so, would propertypanecontroller label be more appropriate in the css?
Candidate: you could move this initialization to a separate method.
Reference: i think that this should fail if key is required. it looks like this will fail when key is not required.
Candidate: this is be surrounded if you is a <UNK>
Reference: i'd prefer to see this as an abstract method and have each enum return the correct value
Candidate: is there a reason for avro ? thanks!
Reference: does it makes sense to check also that both config + devfile are not present?
Candidate: this is overweight. we should be updated.
Reference: validate the input is exhausted
Candidate: you can drop the same as above.
Reference: can we change to  if(!query.equals(targetinput) || !targetcond.isalwaystrue()) { return null; } ......
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: same as above, please fix the code alignment.
Candidate: use fail()
Reference: check for null
Candidate: minor: this args?
Reference: @serranya same here. see above.
Candidate: @serranya same as above.
Reference: why do we need "|| commondataservice.getwebclientproperties().istagsavailable()" in if clause ?
Candidate: minor nit: we could use a constant instead of '+'
Reference: can we test head() with empty file?
Candidate: nit: could use <UNK>
Reference: replacing string2digitalvalue with converttoswitchoutput and converttocontactoutput is a bad idea because openclosedtype is stored as 0 or 1. furthermore i prefer the overhead of the bigdecimal approach over the exception
Candidate: if this is correct.
Reference: i believe the old code used to throw the owaspdiffrunnerexception when we did a .get() on something that was null so you can use orelsethrwow() instead of setting it to
Candidate: maybe we could be a logging here instead of printing the error.
Reference: requirenonnull(parentmemorycontext, "parentmemorycontext is null")
Candidate: this is a <UNK>
Reference: naming convention. getxxx returns a singleton. newxxx returns a new object instance.
Candidate: i disagree with the
Reference: if we aren't going to use it we should remove it
Candidate: should we throw an unsupportedoperationexception
Reference: so i guess the automatic refreshing is tested in the integration tests. i don't think we necessarily need a unit test, just checking :)
Candidate: you could move this to <UNK>
Reference: rename "ann" to "rules", "rulesannotation" or something more descriptive.
Candidate: suggestion <UNK> = new <UNK>
Reference: missing return true
Candidate: rename to <UNK>
Reference: how about if there are duplicated in the newbricks list? is that possible?
Candidate: this is be careful with stringutils.isnotblank
Reference: as below, do you need to create multiple httprequests?
Candidate: if this is not efficient, we could use a <UNK> <UNK>
Reference: this seems like a strange patter: we're faking a pendingintentrequiredexception just to launch the hint picker. should we instead bubble up some event that will allow this to be fired
Candidate: use <UNK>
Reference: why setting the no_image twice?
Candidate: if you could use null instead of <UNK>
Reference: as mentioned on auth-service pr, we need to watch this setting and reload the auth-servers on change since auth-service is reading this from db everytime anyways.
Candidate: @gunnarmorling this a bit strange to <UNK>
Reference: shouldn't it be object instead of null ? as you can call tostring or hashcode on a variable typed by a type parameter
Candidate: i think this is not efficient, but i would be a good idea.
Reference: should this be derived in the constructor? to avoid potential redundant computations.
Candidate: <UNK>
Reference: static comparator again
Candidate: you could use <UNK>
Reference: i would say that stream != null is redundant part
Candidate: i think that nesting.
Reference: try to use stream and java 8 instead of for each loops
Candidate: use <UNK> instead.
Reference: the compiler warns that this exception isn't thrown by this method
Candidate: could we use a constant instead of <UNK>
Reference: it should be private, welcome to the java world :)
Candidate: why public?
Reference: can you do in the same request? filter for all type or something
Candidate: you could use a constant instead of conversionservice
Reference: if you allow duplicate field names, this will match the first that is found and not touch the other one(s). whereas before it would change every one of them. is
Candidate: could you please use <UNK>
Reference: final
Candidate: is there a reason for this logic?
Reference: contains serves better purpose than get method.
Candidate: this is be objects.isnull
Reference: i gather vm cannot possibly be null here?
Candidate: please use <UNK>
Reference: just curious, why synchronized for the iterator? i see the same on the objectrange iterator but can't understand why it would be needed.
Candidate: use <UNK> instead of null?
Reference: s/.tostring()//
Candidate: use <UNK>
Reference: please remove this. tests are by intent using a string and not a constant here.
Candidate: 'null !=' is preferably
Reference: i thought this solution would pop up. do realize that instead of like 10 squares per dragon, you are now checking up to 100 players per dragon, which increases the
Candidate: you could use <UNK> to reduce the locations.
Reference: the callers of this method should know where the root is. the embeddedserverfactory.create methods take separate params for jbosshomepath and modulepath, so the relationship between modulepath and jboss-modules.jar may not
Candidate: is this necessary?
Reference: don't just assertnotnull here. you have the proper commit and tag objects above (well, you threw away the tag). assert that the values read from db are equal to the
Candidate: this exception is not thrown exception
Reference: you could check the winding order of the holes here as well.
Candidate: use <UNK>
Reference: can we not capture this condition as a final boolean by checking the return type in a ctor (to avoid running this code on every non-null return)?
Candidate: i think we should throw an illegalstateexception instead of wrapping an exceptions?
Reference: i could be missing something, but, other than the exception handling below, what is different about the bulk call over the iterate and delete. both seem to do the same
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: should also be stringutils.isnotempty())
Candidate: oh i am not sure that this is correct.
Reference: i dont think this is right. you have if islocalplayer under a check for islocalplayer.
Candidate: you could use <UNK>
Reference: change method name from isrobots to isvaluepresentinrobotsmetatags
Candidate: could you please use <UNK>
Reference: this method is to long divide into smaller methods
Candidate: can you move this to <UNK>
Reference: and yet, fyi, (after hearing chris out) i have also come to prefer close-brace-on-its-own-line before else, catch, or finally, yet not before a (do's) while. this in spite of similar
Candidate: use utf-8 instead of <UNK>
Reference: attribute handling during git transports? is this required?
Candidate: i think that this affects the the sake of the sake of the sake of operations.
Reference: it looks better with the padding :), feel free to add it to the pr
Candidate: this is be <UNK>
Reference: tumorsample here is not used
Candidate: you could use <UNK>
Reference: .git is not mandatory on github. will it work if i have defined project without .git?
Candidate: this is clear. clear.
Reference: exception without message or stack trace
Candidate: why not bind <UNK>
Reference: same here @alepintus , this could be replaced by: double[] doubles = stream.of(tempstrokedasharray) .map(double::valueof) .toarray(double[]::new);
Candidate: you could use <UNK> instead of <UNK>
Reference: why was this added? the replacetextbox_ already has an accessible label via the above formlabel replacelabel.
Candidate: nit: use <UNK>
Reference: why not name it from 0, like b0, b1, b2, b3 so that it matches the index of the array?
Candidate: nit: ides ides ides ides ides ides ides ides ides ides ides ides ides
Reference: parallel stream?
Candidate: you could use <UNK>
Reference: use hadoop constants here
Candidate: you could use 'throws annotation, annotation,
Reference: may be its better to log the exception?
Candidate: we could use isempty() instead of == null || <UNK> || <UNK> || <UNK> || <UNK> || <UNK> || <UNK> || <UNK> || <UNK> || <UNK> || <UNK> || <UNK>
Reference: shouldn't we wrap the original e ?
Candidate: we could use a constant here instead of <UNK>
Reference: nit: else is redundant
Candidate: this could be turned to <UNK>
Reference: hook up these bare "cwl" entries to abstractentryclient.type (lower-cased)
Candidate: i think this is not efficient, but i would be a lock that this will be a bottleneck. bottleneck. is that the is wants to have a lock
Reference: this code is not easy to understand. improve readability.
Candidate: you could use a static int <UNK> = <UNK> <UNK> <UNK>
Reference: too big sleep. please, add explanation why it is needed.
Candidate: this is designed to download page. the page. page. page. page. page. page. page. page. page. page. page. page. page. page. page. page.
Reference: why not to enable lazyeval here?
Candidate: you could use <UNK> annotation, instead of objects.isnull
Reference: it's probably fine to remove this check and the associated test.
Candidate: is there is a to be a that the is playing with the installation one?
Reference: @jrmartin check if there's not a better exception to catch here
Candidate: why we expecting to timestamp now.
Reference: do we still need to have a suffix in the table name for the other schema mutation lock code work?
Candidate: we should use reflectiveoperationexception to <UNK>
Reference: move to top of ctor, and: checkstate(shape.length == width * height, "shape for a character must match it's dimensions");
Candidate: use <UNK> instead of <UNK>
Reference: links -> link
Candidate: you could use <UNK>
Reference: please use try-with-resources to close the connection.
Candidate: this is not to be <UNK>
Reference: i think the contract for this method requires that we do not overwrite slots, because otherwise numberofentries will be broken. add assert? allow overwrite?
Candidate: variantsourceentities.size() the min/max length?
Reference: you should probably log the exception as well.
Candidate: you could use <UNK>
Reference: oh i see, we are conditionally setting (vs adding a second header) nm
Candidate: is there a reason to check that the is not empty?
Reference: we can replace iterator with for (string s : resourceaccess) {}
Candidate: why not use <UNK> instead of <UNK>
Reference: the version check would be much easier as a method in the target class, especially considering the target implementation is responsible for loading its own template files.
Candidate: this is not be used?
Reference: do we need to check for null?
Candidate: why not use stream() here instead of <UNK>
Reference: concatenating the exception to the string here will just call tostring() on the exception. that generally doesn't provide much information, so we pass the exception in as a second parameter
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why is this check needed here and not elsewhere?
Candidate: this should be null"
Reference: very sweet.
Candidate: is there a reason for this logic?
Reference: as mentioned above, move those to the benchmarksuitedao
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: blocking calls inside the sdk are not good. they can cause deadlock, perf hit, etc. we are not doing blocking calls anywhere else.
Candidate: this is a <UNK>
Reference: i think this code would fail (with jbas014803: duplicate resource) in case deployment already existed on as7 server (which is what happens when you deployed version 1 of your bundle
Candidate: you could use <UNK> here instead of calling <UNK>
Reference: it's best practice to name the fields you're expecting to return, instead of using the * glob pattern.
Candidate: you could use a <UNK> <UNK>
Reference: same for super.deactivate, you should call it last.
Candidate: is there a reason to check that this is be null?
Reference: paths.consumersworkloadconstraintspath()
Candidate: is there a reason for this method is not <UNK>
Reference: why not print parsermap=null if it's null?
Candidate: you could use a string instead of <UNK>
Reference: huh?!?!? what was wrong before? (well, the logic is a bit weird anyway which is not your fault but why do we need to extract out to a local variable
Candidate: simplifies meaningful simplifies simplifies simplifies printing simplifies simplifies simplifies simplifies simplifies simplifies simplifies cases simplifies simplifies
Reference: super.configurepipeline can throw illegalargumentexception in case reference name is invalid. we should catch it and add to the collector.
Candidate: should we throw a unsupportedoperationexception
Reference: i am thinking if it makes sense to write imperative for-loop here? -- my general preference is when stream api is used in such a complicated way, it's actually more
Candidate: is there a reason that is empty?
Reference: any reason you don't drop that into the cache before returning it? that way this method is "cache-optimized" on re-entry -- cache miss leads to lookup leads to cache save.
Candidate: log.debug -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e ->
Reference: the lines above can be simplified using joml methods:  vector3f min = new vector3f(a).min(b); vector3f max = new vector3f(a).max(b);
Candidate: you could use the cr instead of <UNK> cr
Reference: deleterequestinfo.replica could simply be replica
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: shell.getdisplay().getactiveshell() yields null. a check assertequals(shell.getdisplay(), display.getcurrent()); assertequals(shell, shell.getdisplay().getactiveshell()); may make sense here the test succeeds when one test class is executed alone, but fails wheen it is executed with
Candidate: the exception is not thrown exception
Reference: do you think it is worth an intent != null check here? it was unclear to me whether the framework and filters will always protect us from receiving a null
Candidate: is there a way around)
Reference: @deprecated unless you are going to use a databoundsetter as suggested by @kostyasha
Candidate: suggestion final string = <UNK> <UNK> = <UNK>
Reference: fyi, these credentials have been disabled. in the future do not ever commit credentials with todo from properties. they will be available through git history even after you fix this.
Candidate: this is not be used?
Reference: background effect, oder?
Candidate: @vilchik-elena is there is a to be a <UNK> <UNK>
Reference: avoid usage of onfailure/onsuccess for efficiency purpose
Candidate: i think this is be a firing <UNK> to the discoveryresult v. invalid?
Reference: should these cases be reverse? (i.e., don't instantiate the logger unless audit logging is on)
Candidate: you could use a fail()
Reference: variable organizationentity
Candidate: is there a reason for avro properties?
Reference: parhaps collections.singletonlist?
Candidate: please use <UNK>
Reference: this allows a default value. why don't we just assign it "1"?
Candidate: if you could use <UNK> <UNK>
Reference: should we warn users about that?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: maybe we should change it to be debug since this is on a critical path (even though this method might not be called very frequently)
Candidate: @gunnarmorling you could use only: <UNK> <UNK>
Reference: this is redundant in mockito 2
Candidate: please use the guid instead of tear down
Reference: does dbxnetworkerrorcallback need to be a runnable? instead of having setnetworkerror() + run(), would it be simpler to just have one method like onnetworkerror(t error)?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this should also probably relocate any old items to the order given in the collection. e.g. collect existing, removeall(existing), addall(items)
Candidate: i think this is deserve a trace, but the discoveryresult deserve a <UNK> trace, but it deserve a inventory that is a trace, but it would be nice to
Reference: why do we need to proceed when there is some exception
Candidate: this is designed to be initialized by tracking the true) if <UNK> == null) { <UNK> = new <UNK> }
Reference: should we do this using spring jdbc ?
Candidate: you could use <UNK> here instead of <UNK>
Reference: why not replace with boolean okgroup = (group == lastgroup) || !seeninthiscycle.contains(group) ? i don't think there is a point in comparing the identifiers, and this way it should be
Candidate: could we use a <UNK> <UNK>
Reference: cluster is null on dialog init (looks like a bug). this method is invoked only when changing os.
Candidate: is there a reason that clicking on the view?
Reference: isn't this always true here?
Candidate: you could use <UNK>
Reference: please format this appropriately, it should be possible to fit every "part" of the message in a line.
Candidate: s/spongeimpl/impl
Reference: is this to switch to mapframe? if so, consider changing it to explicit states driver.switchto().frame(mapframe);
Candidate: you could use verify that the order is not independent of <UNK>
Reference: shouldn't it be isdownorsuspended or isnotrunning
Candidate: this is not a bit dangerous, for this use-case.
Reference: use collectionutils.isnotempty()
Candidate: is there a reason for element?
Reference: shouldn't we also synchronize closereaders(), together with releaseholder(..)?
Candidate: you could use a lock here instead of calling <UNK>
Reference: nice. it might be better to call stop() or stopimpl() instead of quitting the looper directly though.
Candidate: move this declaration inside the method.
Reference: is there a constant for this env property?
Candidate: this introduces a bit superfluous
Reference: maybe make this a const instead.
Candidate: is there a reason that is is not to be a <UNK> <UNK>
Reference: logging to info should provide contextual information useable by system administrators. this message seems more appropriate as debug or it needs more context to be useful by a system administrator.
Candidate: suggestion if (throwable == null) { return <UNK> } }));
Reference: these are the sort of tests where i think assertj really shines, e.g.:  assertthat(result.orelsethrow(runtimeexception::new)) .extracting("doi", "authors", "title") .contains("10.1126/sciimmunol.aan8664", "patil vs, madrigal a, schmiedel bj, clarke j, o'rourke p et
Candidate: nit: readasstring(...) instead of <UNK>
Reference: exception#printstacktrace goes to stderr by default.
Candidate: you could use a default.
Reference: oh, i didn't know about this! isn't it the same as boolean.class though?
Candidate: nit: you could use <UNK>
Reference: avoid using thread.sleep
Candidate: typo: <UNK> maybe?
Reference: this local variable appears to be unused. suggestion to remove.
Candidate: minor nit: we could use a checkargument here instead of <UNK>
Reference: this could just be created when it's needed. this variable doesn't seem to be reused.
Candidate: please finishing this <UNK>
Reference: basic
Candidate: you should export to <UNK> id).
Reference: this is not specific to this pr but in general, should we consider using throwables.propagate() instead?
Candidate: use "_" unconditionally,
Reference: i think you can remove this nested else and use else if (!compact...
Candidate: this % <UNK> % <UNK> % % <UNK> % % % <UNK> % % <UNK> % <UNK> % % <UNK> % % <UNK> % % % % % <UNK> %
Reference: > dich auf die probe stellen wollte the other thing isn't really german... > freust du dich nicht etwas mit flows a little better imo
Candidate: is there a reason for element?
Reference: do you mix 'httpclient' and client by intention this way?
Candidate: this is be surrounded with <UNK>
Reference: can we rename list to entries or something similar.
Candidate: can you use a constant here?
Reference: qq: do we need to delete the old node?
Candidate: you could use a constant here instead of <UNK>
Reference: don't forget to cover all if conditions in the validatequestiondetails. you can see the coverage by the ci or in your ide.
Candidate: minor nit: we can combine this line
Reference: - at this block, it looks like the new student entity has been persisted to the db. is it safe? - if i understand correctly, this happens by chance if
Candidate: suggestion if <UNK> == null) { return;
Reference: could this not be something like  var isvalid = stripegatewayconfig.getwebhooksigningsecrets() .stream() .anymatch(s -> isvalidnotificationsignature(payload, signatureheader, s));  ?
Candidate: you could use the exception here too?
Reference: out.open or tran.abort can thorw exceptions. call getandincrement() right before try { && getanddecrement() right after finally {, or use another try-finally block.
Candidate: we should use a static import <UNK>
Reference: ![major](<link_1> 'severity: major') either log or rethrow this exception. [![rule](<link_2>](<link_0>
Candidate: this is never be null.
Reference: this doesn't wrap or nest any arrays. it just returns the array at the recursion base case.
Candidate: this could be simplified to java <UNK> <UNK> = <UNK> <UNK> <UNK> <UNK> { return <UNK> }
Reference: matches: "darwin", which i believe some openjdk builds might identify os x as.
Candidate: please use <UNK>
Reference: not a good idea to use the same phoenix connection across multiple threads since it is not thread-safe.
Candidate: <UNK>
Reference: put each parameter on a separate line, currently this is too long
Candidate: let's use a raw type.
Reference: suggestion assertequals(1, runtimeexceptionononlinelistener.ononlinecount);
Candidate: please use readasstring(...) instead of <UNK>
Reference: missed three
Candidate: you could move this to <UNK>
Reference: ingest segment firehose?
Candidate: is there a reason for this change?
Reference: gradledistribution should have applyto(connector)
Candidate: suggestion if (throwable == null) {
Reference: please consider using: timeunit.milliseconds.sleep(innerlatency); it is not clear what is the unit of time that we want to wait.
Candidate: you could use <UNK>
Reference: can you realign this line - merge it back to the previous?
Candidate: could be repelaced by a userreportingsettingshelper call.
Reference: should this be part of the messages.properties?
Candidate: we should use unsupportedoperationexception rather than <UNK>
Reference: if we add max>0 in the condition there it will cause the issue because in finally block we always reducing the endcount irrespective of max value. e.g. 1)max value is
Candidate: is there any particular reason why is not public?
Reference: if cipher.getinstance(cipher_name) failed next line will raise an npe. should we handle this in a better way ?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this is another case where the null logic and default logic should be combined in one place boolean nomatch= false; if (fjunitversion != null) { switch .... default: nomatch= true;
Candidate: if you could use brackets here
Reference: this code block seems redundant - the next statement is a call to setvcfheader, which handles this.
Candidate: you could use a constant instead of <UNK>
Reference: if privatealignment is null and the received value is null, this will be called although unneeded (nothing was changed)
Candidate: this should be <UNK> to <UNK>
Reference: instead of closing like this, i would suggest to have a try-with-resources: java try(final samreader reader = samreaderfactory.makedefault().referencesequence(reference_sequence).open(input)) { ... }  you can also include the writer there...
Candidate: final
Reference: @tomjenkinson no, it shouldn't start failing. the recovery will just be replayed two times.
Candidate: could we use a <UNK> instead of <UNK>
Reference: seems reasonable to also want to include the 'to' location?
Candidate: nit: we could use a <UNK> <UNK>
Reference: i was instead planning on using the filterentries method on the advancedcache. so in the list method it would be  try (closeableiterable<map.entry<object, object>> myiterable = cache.getadvancedcache().filterentries(filter).converter(filter)) { for (map.entry<object,
Candidate: nit: we could be a cache object and taking a new <UNK>
Reference: unable to understand this change. why is it required for this test?
Candidate: this is be <UNK>
Reference: the way this query is written (a count), i don't think you will ever get a null result so i think you can cast to/return a long
Candidate: you could use a local var instead of creating a connection,
Reference: should clone this on return
Candidate: <UNK>
Reference: i think this test isn't technically correct. it's possible for a != b but a.hashcode() == b.hashcode(). i think the correct assertion for the the hashcode part should be. 
Candidate: nit: use <UNK>
Reference: suggest check that artifact != null
Candidate: you could use a configurable here?
Reference: with logback, we don't need these types of guards.  java log.debug("queing event: {}", event)  should do the trick with no penalty in performance.
Candidate: wait.forelementclickable() should be <UNK>
Reference: you need to update testexchangeclientconfig for this.
Candidate: wait.forelementclickable() should be <UNK>
Reference: in several places you call getarguments() in a conditional and then use the value. i assume you did this because you know getarguments can't change out from under you, and
Candidate: this could be simplified to:  this(name, <UNK> <UNK> { <UNK> <UNK> <UNK>
Reference: might fix your issue suggestion public void settopics(arraylist<string> topics) {
Candidate: suggestion <UNK> = new <UNK>
Reference: if i'm not wrong, the method can return void, as other mockxyz methods. the return value is never used.
Candidate: this is not be encapsulated in <UNK>
Reference: consider applying de morgan's law here, it should make it more readable.
Candidate: you can use <UNK> here instead of <UNK>
Reference: isn't error also set in the controller?
Candidate: ![critical](<link_1> 'severity: major') throw an exception instead of: instead of: instead of: instead of: instead of: instead of: instead of: instead of: instead of: instead of: instead of: instead of:
Reference: field %s has unexpected type %s
Candidate: you could use <UNK>
Reference: the requestset should be created only when we're about to start a transaction - when there's ongoing transaction with multiple writes it shouldn't do it on each request.
Candidate: you could use <UNK> instead of <UNK>
Reference: why no jsonobject?
Candidate: we could use a string instead of <UNK>
Reference: new byte[]{} -> new byte[0]
Candidate: is there a reason for element?
Reference: have a check for null tablename, since @notnull is now removed
Candidate: suggestion if <UNK> == direction.incoming) {
Reference: @jindoujiao unity sdk is not failing the banner ad when the width is less than 320, instead it throws an error log, saying invalid adsize, but it is returning a
Candidate: suggestion <UNK> <UNK> = new clazz, <UNK> clazz, (parent != null) { ...
Reference: better use getcanonicialpath and getabsolutepath instead.
Candidate: this is not be a
Reference: 1. the last index segment can have the start offset that lies within the journal right? why is this check required. 2. this was bit confusing. can you have two
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: fix the annotation line placement.
Candidate: is there a reason for this method is not
Reference: you can use guava's iterables.getlast(catchlist) instead.
Candidate: nope, fyi, you should use a static import static property?
Reference: maybe put it right at the beginning of the method in case any of the other initialisation stuff tries to do anything with dns first?
Candidate: this could be simplified to <UNK>
Reference: this should be a one liner
Candidate: is this a warning?
Reference: you might be returning null here if it was never set. the code that calls it never does a null check. you should either set a default here, or mark
Candidate: this is a <UNK>
Reference: nitpick: in general we transform to unmodifiablemap on the caller side not in the class that uses it. this is because it returns an unmodifiable view so nothing guarantees that
Candidate: foreach loop here instead of creating a foreach loop instead of a foreach loop
Reference: i'm puzzled by this change. why would you want to return boolean instead of boolean? all your current consumers are now auto unboxing it into boolean, as i don't see
Candidate: if this is is not efficient, we could use the enum as well.
Reference: this won't work.
Candidate: use collectionutils
Reference: why are we including fakethread?
Candidate: we should use <UNK>
Reference: please revert if possible
Candidate: this is be <UNK>
Reference: doesn't reflectionequals checks all this things?
Candidate: please use objects.equals
Reference: a session id is unique and complete. you don't need to wildcard it.
Candidate: suggestion "invalid " + " + " + " + " + " + " + " + " + " + " + " + " + " +
Reference: should be:  assertthat(system.currenttimemillis() - t1).islessthan(45000);  also, maybe we could lower the limit a bit. on my laptop, the optimized version consistently runs under a second.
Candidate: you could use <UNK> here instead of <UNK>
Reference: do we really need to lock by hand? isn't optimistic locking on by default?
Candidate: you could use system.currenttimemillis() instead of system.currenttimemillis() instead of system.currenttimemillis()
Reference: faspectmap.computeifabsent(aspect, a -> fatomiclong.getandincrement) will ensure that each call to fetchtree returns the same ids for the trace
Candidate: i doubt that this is is called on the partitions?
Reference: nit: you can remove the ()
Candidate: you could use foreach loop instead.
Reference: do not call repository method, when you can detect if the parameter is wrong. use assert in the service implementation for catching invalid parameters.
Candidate: wait.forelementclickable() should be <UNK>
Reference: you can directly use org.eclipse.sirius.common.ui.tools.api.util.eclipseuiutil.getactiveeditor(). it handles all the potential npe.
Candidate: could we use a warn instead of warn maybe?
Reference: what about json arrays? seems to be a valid case
Candidate: you can use <UNK>
Reference: suggestion cachemanager::getcachemanagerconfiguration);
Candidate: no, we should throw an exception here too, that is be an error.
Reference: should only be done if validation is enabled.
Candidate: why is this is not <UNK>
Reference: it would be good to use constants for property names
Candidate: use collectionutils instead of <UNK>
Reference: the word "failed" need to be there either way.
Candidate: nit: we use atomicinteger instead of <UNK>
Reference: shouldn't we have non null values for all new fields in v2?
Candidate: use <UNK>
Reference: it needs to process the "value" from the between predicate, too.
Candidate: please use <UNK>
Reference: throw?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: there will be better to tell user which host is the problem of privilegeexception. he probably has no privilages for adding specific host.
Candidate: please use <UNK>
Reference: we can merge these two if statements to one
Candidate: if you could use <UNK>
Reference: @diogofscmariano this doesn't look right
Candidate: we could use <UNK>
Reference: return objects.hashcode(spec, name, config); when it's auto-generated, i just about accept having the verbose version, but as soon as we're modifying the code we should put in the easier-to-read-and-maintain approach.
Candidate: i objects.hash()
Reference: declare throws please
Candidate: could use <UNK>
Reference: submonitor.convert() takes care of that. here it's needed only for the monitor.done() at the end. where is this called from? maybe it's better to do the monitor.done() at the calling
Candidate: you could use a try-with-resources here instead of creating a new constructor?
Reference: note that this change isn't strictly backwards compatible. it is *binary* compatible, but the resulting object was originally mutable and is now not guaranteed to be mutable. in general, it
Candidate: we could use reflectiveoperationexception stream()
Reference: should be !getisbathanging() since the method is the opposite
Candidate: <UNK>
Reference: is there a better selector here? while this works, having to rely on the angular component name is not preferred.
Candidate: this is a <UNK>
Reference: from the point of view of the time graph viewer, these actions select the next/previous event (time graph's itimeevent, not trace's itmfevent which time graph knows nothing about). i wonder
Candidate: you could use a multimap here instead of <UNK>
Reference: there is an execution path in this method where close() is not called.
Candidate: i think that this is not efficient, we could use the <UNK>
Reference: maybe rather than return list<string[]>, return list<configuration> ?
Candidate: we could use <UNK>
Reference: i prefer not handling host with migratable vms (###) and use the host list supplied in method params
Candidate: this is not correct.
Reference: is it possible for this to be null? we always return a cursorloader in oncreateloader().
Candidate: i think that this should be a <UNK> <UNK>
Reference: i don't think we need this duplication. instead we can drive off globalcapability.getallnames() here. the duplicate entry in the properties file was a hack for gwt.
Candidate: suggestion throw new unsupportedoperationexception
Reference: myproject doesn't exist anymore since the last merged pull request. use getjob or job instead. hence the build failure.
Candidate: suggestion <UNK> = <UNK>
Reference: we could move the \n with other cases: i.e. ' ', '\t', '\r' a
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: write why this is needed?
Candidate: this is a <UNK>
Reference: reader needs closing ? if so then it should be in final block
Candidate: why we use a string concatenation
Reference: 'this.' is not needed here. i personally prefer to remove it unless it's needed...
Candidate: you could use a multimap instead of optional?
Reference: parttorefresh2.removeall(parttorefresh1): sometimes the simplest solutions are the best :-)
Candidate: can you bail here anyway?
Reference: tbh i don't really find this useful. since the condition is quite long, the previous approach has nice advantage - you can tell right away from the variable's name, what
Candidate: i guess we should be a <UNK> <UNK>
Reference: not sure what does returning null mean for such method. is it a failure? then why not illegalargumentexception? in any case, it would be better to avoid returning null in
Candidate: this should be a classcastexception for the
Reference: if you use administrationservice.getglobalpropertyvalue(string propertyname, t defaultvalue), it would simplify the if clause on line 124 below
Candidate: we could use constants instead of these.
Reference: @jhrcek now we only close jms connection here. @adrielparedes a better name is shutdown eventsmanager right?
Candidate: this is finishing the <UNK>
Reference: not sure about this.. every time that this command is instantiated it will use a different guid? note that coco is supposed to cache the command so it will work
Candidate: i think that the is not <UNK>
Reference: check equal lengths for strikes and impliedvols
Candidate: could we use the division here instead of <UNK>
Reference: this explicit type argument is not necessary.
Candidate: we should use computeifabsent all() -> <UNK>
Reference: wrong code. should be "if (id != null && (id.startswith(idscheme))" only.
Candidate: @vilchik-elena you could replace this by:  this(name, <UNK> <UNK> != null) && <UNK> && <UNK>
Reference: use an overridable getoperationtimeout() method instead
Candidate: you could replace this with <UNK> with <UNK>
Reference: it seems insecure to have the credentials in every record. we can address this in a follow up pr, but maybe the sink should require the source credentials in its
Candidate: this is right...
Reference: wording nitpick - i would omit "is". it just reads better to me; i can't tell you a principle of grammar to justify it,
Candidate: minor: this is be <UNK>
Reference: the potential npe warning reported here can only be circumvented by assigning the bridge to a locale variable (like for the handler).
Candidate: we could use <UNK> instead of creating a new <UNK>
Reference: why depend on guava's object class when jdk provides the replacement for it? (and even more, why change it when it's already in place?)
Candidate: you could use guava hierarchy instead of objects.isnull
Reference: nit: s/leaderlivenesscheckscheduker/leaderlivenesscheckscheduler/ also, what does "leader info 2" mean? perhaps a typo?
Candidate: this is is not <UNK>
Reference: you could avoid the second call to getrecordclass by doing  abstractrecord rec = _map.get(i).getrecordclass()  unless you think _map.get(i) could return null in which case you need to be
Candidate: this could be be synchronized probably?
Reference: this catch is redundant. without it, the code should be able to throw e as well
Candidate: is there a reason that we is not a a that the is not thrown by <UNK>
Reference: i'm not sure i see the improvement in this refactoring either. it also ends up being significantly longer. what was wrong with the original code?
Candidate: use <UNK> instead of <UNK>
Reference: apidefiinition - i know that this was converted to a stand-alone method, but please correct the variable name
Candidate: use <UNK> instead of conditionally true"
Reference: print help all the time? the command > server alone isn't valid.
Candidate: if this is not
Reference: nit, could be simpler by adding a buildemptycloudconfig method which returns a static cloudconfig instance which has been configured as cloudenabled = false.
Candidate: this is be closed on the way?
Reference: this could be removed now.
Candidate: origin line
Reference: can combine into one line.
Candidate: we should log the error level to log the error.
Reference: shouldn't this be .equals? since there is no guarantee the method will always return the same instance? also, might be simpler to just do instanceof readrowsrequest?
Candidate: we should use only: <UNK> multimap
Reference: refactor lines 272-278 and lines 282-287 into...  void rmdirs(string... directorynames) { for (string directoryname : directorynames) { file directory = new file(directoryname); if (!directory.exists()) { throw new filenotfoundexception(string.format("no such
Candidate: if you could use <UNK> here instead of nesting:  if <UNK> { throw new <UNK> }
Reference: did you determine these to be redundant?
Candidate: i would be nice to pretty-print
Reference: according to the order, the users can override the built-in labels by customization. i think the built-in labels should prioritize the user-specified ones. wdyt?
Candidate: why not use <UNK>
Reference: please use the bigtableinstancename.togcbinstancename() here.
Candidate: this is designed to be a <UNK>
Reference: can you try making poolentry a java.lang.comparable to see if it makes this cleaner?
Candidate: this is not correct.
Reference: remove
Candidate: i think this should be a <UNK> <UNK>
Reference: maybe put iscast in standardfunctionresolution as well and have this as a class variable.
Candidate: <UNK> is not <UNK>
Reference: it is a module precisely so that it can be pulled into core via the dependency mechanism
Candidate: suggestion <UNK> = <UNK>
Reference: java logger.lognext(logtag, observabletag, value);
Candidate: you could use <UNK>
Reference: add curly braces around else block. also, falling back to a default-constructed referencesource will (i believe) eventually produce a nullpointerexception deep in the cram parsing code provided that defaults.use_cram_ref_download is
Candidate: is there a reason for this change?
Reference: delegate?
Candidate: nope, this is a <UNK>
Reference: remove?
Candidate: this should be null
Reference: the pr #3491 which has been merged into the main branch has changed this constant name. would you please update the latest code and change it here?
Candidate: you could use a constant instead of reducing <UNK>
Reference: data_ constants should be about field names in the json, while attribute_ constants should be about field names in xobjects, so it's wrong to use data_contact to get values from
Candidate: use <UNK>
Reference: assert the actual host and port?
Candidate: you could use a constant instead s?
Reference: this method has duplicated code that could be simplified by calling uncheckedfiles.createdirectories() unconditionally before the write call.
Candidate: is there a reason for this logic?
Reference: there's a lot more to cleanup like this (unnecessary boxing, stringbuffer -> stringbuilder (already done, just not pushed yet)), but please let us do it at least in _distinct_ commits.
Candidate: you could use <UNK>
Reference: every test will shut down all the locator/servers and restart them again, making the tests taking longer. if you would like make the tests run faster, you can lump these
Candidate: is there a reason for element?
Reference: ... and this test is changed. from my understanding the descriptor is expected to be non-null and the createimage must return null.
Candidate: i think that this is is not <UNK>
Reference: we already have different methods for dropping rows with na values in dropnahandler, don't need to overloading the convertrowtype function.
Candidate: i think this should be protected.
Reference: if i'm not wrong, i believe you could omit this too. we can check if the course does not have any students (line 54) using coursedetails (line 47)
Candidate: this instructor of pretty-print
Reference: this looks like a debugging print that should be removed.
Candidate: could be simplified by:  java <UNK> <UNK> <UNK>
Reference: perhaps i'm missing something, but starting with line 171, isn't this equivalent to a somewhat simpler: return model.getactioncols().stream() .filter(c -> !columnstomove.contains(c)) .filter(c -> c instanceof actionworkiteminsertfactcol52) .map(c -> (actionworkiteminsertfactcol52) c)
Candidate: could you use <UNK> {}: <UNK>
Reference: why not collections.emptylist() anymore?
Candidate: you could use <UNK>
Reference: not used in this plugin, but i see it useful outside (a way to get the list of repositories managed by this organizationfolder). i think returning the list scmsources owned
Candidate: this is a <UNK>
Reference: nit: unrelated formatting change
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: add sort and other generic options from superclass.
Candidate: you could use <UNK> instead of creating a new instance everytime instead of <UNK>
Reference: using exception.printstacktrace() is _very_ seldom justified. why not propagate exception instead?
Candidate: you could use a logger instead of these.
Reference: would prefer to see loops replaced with standard "for (int i = 0; ...)" style, rather than declaring 'i' and manually incrementing it. a stream would also work, using 'maptodouble()'
Candidate: this is not webapplicationexception
Reference: this code is repeated a few times. it may worthwhile to have a complex metrics utils class that will register hll and other complex metrics in the future
Candidate: this is a test that this test is be used?
Reference: extract notification to own method notify...
Candidate: no need to declare a wrapping a wrapping the dependency from the own log.
Reference: should we check this is empty then?
Candidate: you could use <UNK> here instead of <UNK>
Reference: if you have a secured instance (not sure if aths have this on restart?) then you may not see the "new item" part.
Candidate: is there a reason that is is not to be a <UNK>
Reference: non-blocking, but i'd probably fold these steps (as you may not always want to use the uuid type). ex. traceidtobigintegerconverter can mention that it is uuid formatted instead. this keeps
Candidate: i wonder if it does)
Reference: logviewtest.testclearandrestore failed. maybe there is a possibility that tree does not exist when logview has no messages ?
Candidate: suggestion if <UNK> == null) {
Reference: same thing here, moving the for statement in the redislock block
Candidate: move this method to <UNK>
Reference: @gitcliff , what happens when you leave out this change?
Candidate: please use uri.create
Reference: i dont think stationary_water exists anymore.
Candidate: please remove stream()
Reference: for future reference you should use collections.emptylist() for this.
Candidate: we could use <UNK> to <UNK>
Reference: after all, it turns out that we don't know the last bucket of the requested time range, only the last bucket that contains a real event (flastbucket) and the time
Candidate: minor nit: space between ( []
Reference: it is not possible to easily bump sasl_handshake schema without due to... (remove "without")
Candidate: throw notfoundexception
Reference: is(both(greaterthanorequalto(sleeptime)).and(lessthanorequalto(startdelay))) to show that it's a range?
Candidate: i'm not sure how about the sure that this is is not but i would be pulled out of the
Reference: are you sure this is correct? if a csp has script-src '<link_0>' and also script-src-elem '<link_1>', would <script src="<link_1>"></script> be allowed? this (if i'm reading it correctly) implies that it
Candidate: you could use <UNK> instead of <UNK>
Reference: add a validation clause for currency. if currency code is not valid throw badrequestexception
Candidate: you could use <UNK>
Reference: i do not understand why we need this block.
Candidate: sam sam sam sam sam sam sam sam sam sam sam sam sam sam sam sam sam sam sam sam sam sam sam sam sam sam sam sam sam sam
Reference: is this needed? seems that this will never evaluate to true since the menu is being built at this point in time.
Candidate: you could use <UNK>
Reference: i am starting to finish up an issue that re-organized our inputs. please rename new input files to inputtranslation.... if file can't be renamed, please give us a reason why.
Candidate: is there a reason to assert that this is is not <UNK>
Reference: there are a few of these logging statements in this class that could possibly be cleaned up
Candidate: this is designed to be a <UNK>
Reference: missing @override
Candidate: suggestion <UNK> = <UNK>
Reference: instead of returning asyncqueryresultstorage we should return byte[] to keep the code extensible.
Candidate: this uri.create we need to bind the <UNK>
Reference: i think we should also switch to debug logging
Candidate: use <UNK>
Reference: rename duple to info
Candidate: you could use <UNK>
Reference: shouldn't this be an unchargedidentitydisk?
Candidate: i think this clear() is unnecessary.
Reference: synchronization at this point is not required because the cancelled method reads and volatile field into a local variable (either becuase you replace the atomicreference with the original volatile variable
Candidate: we could use <UNK> to <UNK>
Reference: you removed too much. rpm can not generate buildrequires so they need to be generated. just the requires were not needed.
Candidate: you could use <UNK>
Reference: @pynicolas i think it might be better to keep all the logic in javascriptnodebuilder: you'll need to subtract 1 to the column if the token is on line 1. with
Candidate: this is a bit strange,
Reference: i think this should be null, not an empty string.
Candidate: you could use a constant instead of <UNK>
Reference: consider converting this to intopenhashset from fastutil and storing float.floattointbits() results. the latter is to match nans.
Candidate: static constant.
Reference: is it safe to assume that there is no ':' in any of these strings? the line 181 above has special handling for decoding %3a into ':'. seems like there
Candidate: enum?
Reference: i wonder what it means where we fail here. i assume the correct behaviour of this service kind of depends upon receiving the events. isn't logging a warning good manners?
Candidate: @manuelplazaspalacio computeifabsent
Reference: findbugs: this is ignoring mkdir()'s return value, instead use fileutils.mkdirs()
Candidate: can we call <UNK>
Reference: should be able to pass m here.
Candidate: why catching the effective exception
Reference: i would suggest you to improve readability by changing it to ctx.inventory.select().size() >= constants.inventory_size
Candidate: please use <UNK>
Reference: this attributie is not used, and not needed; please remove it.
Candidate: could be simplified (up to a tiny property?
Reference: not a big deal, but mp.getvalue() is already fetched into partitions.
Candidate: nit: you could be simplified to <UNK>
Reference: @danielezonca could you pls semplify this if (!!resultvalue.issatisfied()) { resultvalue.geterrormessage().ifpresent(_lambda) expectedresult.seterrorvalue(expressionevaluator.reversefunction(resultvalue.getresult())); } else ... or something similar?
Candidate: <UNK> should be null"
Reference: you don't need a try-catch here. you can simply use @test(expected=nullpointerexception.class)
Candidate: if you could throw an exception exception instead of printing the exception
Reference: i can be moved inside the if.
Candidate: you could replace this with foreach loop with <UNK>
Reference: are we still using temporary properties files? rename method
Candidate: wait.forelementclickable() should be <UNK>
Reference: please use a constant here also, perhaps it will be wise for future usecases to specify the color as a constant parameter in case someone will want to make a
Candidate: @gunnarmorling this variant wants to use only: return new <UNK>
Reference: we should change the [reply == no_option] to [reply != yes_option]. currently, if i close the confirmation window with x, it saves the file. in my opinion closing the confirmation
Candidate: please use try-with-resources here
Reference: exception, so stderr
Candidate: you could use a logger instead of system.out
Reference: is this a server-supplied name? otherwise we need to localize this i.e. put it in strings.xml.
Candidate: please use only:  this(name, <UNK>
Reference: there is no need to verify the response deserialization in mock tests, so you can remove all these asserts. we just want to make sure the generated requests are the
Candidate: use a constant instead of a request.
Reference: this looks wrong. you added the code to deleteoperation to throw blobdoesnotexist if no server has the blob.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: while there isn't a strict contract for what getobjectvalue should return, it's a good idea to return a json-serializable object that represents the value. this is currently used by the
Candidate: if you could use <UNK> <UNK>
Reference: is this check required ? at this point length will be greater than 0 as we will return null if the length is 0 at line 62 strings.isnullorempty(dimvalue)
Candidate: suggestion if (throwable == null) { throw new <UNK> }
Reference: if the 2 classes below are combined, this simplifies to:  java list<operatorrequest> operatorrequests = new arraylist<operatorrequest>(); operatorrequests.add(new regulaterequest(normalstate)); response.operatorrequests = operatorrequests;
Candidate: use <UNK>
Reference: not sure how often this method is used, but this does not seem correct.
Candidate: i am not sure how about about the a string names.
Reference: shouldn't the user be deleted even if they have no session?
Candidate: is there a reason for element?
Reference: knownhashes is useless then, let's remove it
Candidate: could we use the <UNK>
Reference: ditto, missing fail() call
Candidate: fail()
Reference: are these wrong too?
Candidate: this --> <UNK>
Reference: maybe possible to remove duplicated codes by extracting the below condition checks.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: needs to be type.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: probably it's better to start supporting <code>job</code>s instead of abstractproject (workflow, inheritance, etc.)
Candidate: this is be <UNK>
Reference: can you use org.junit.assert.assertthrows(..)?
Candidate: is there any way around)
Reference: problem with the argument passed to setupdiskspacetest
Candidate: stream() -> <UNK>
Reference: .nonematch()
Candidate: please use <UNK>
Reference: single line?
Candidate: suggestion return <UNK>
Reference: this whole block does nothing, so not sure why it's needed other then logging, but logging is also cryptic "detected mode disabled", isn't it easier to say in flight mode,
Candidate: nit: boolean[] = <UNK> && <UNK>
Reference: could we please inster this assertion: java nestednode.set("emptyfield", new textnode("")); asserttrue(expressionevaluatormock.islistempty(json));
Candidate: i'm not sure how about splitting the queries to the <UNK>
Reference: recommend this, makes for an easier test and guarantees the property you want. java public class unstableorderediterable<t extends comparable<? super t>> implements iterable<t> { private final iterator<immutablelist<t>> underlying; public unstableorderediterable(collection<t>
Candidate: you could use <UNK> instead of creating a copy connection,
Reference: remove sout.
Candidate: rename to
Reference: s/this.cachealltables/cachealltables/g i think we prefer not to use this to reference variables
Candidate: you could move this method to <UNK> nesting.
Reference: catching throwable is generally a bad idea, these catches should probably be exception
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i don't like to swallow an exception like this since it may give the wrong impression. are we sure that this date format is always used by es? if so
Candidate: is there a reason for element? a property?
Reference: how about throwing runtimeexception here? when image generation fails code dependent on it is also going to fail.
Candidate: maybe we could be a bit more than <UNK>
Reference: could you assert that the destruction was successful somehow?
Candidate: you could use <UNK>
Reference: change the second part of || to an assert (verify).
Candidate: we should return null here instead of objects.isnull
Reference: please use getvdsgroup()
Candidate: you could use <UNK>
Reference: i think it'd make sense to check for the presence of id and timestamp and use the different streamsdatum constructors depending on their presence. this assumes a lot about the
Candidate: you pulled out of the pulled out of pulled pulled pulled pulled the pulled pulled pulled pulled pulled pulled pulled pulled pulled pulled pulled pulled pulled pulled pulled pulled pulled
Reference: @tsr-thulio please move this from root to src/main/resources dir.
Candidate: is there a reason to re-throw the behaviour?
Reference: this should never happen. we should add an assertion.
Candidate: suggestion return false; && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> || <UNK> && <UNK> && <UNK> && <UNK>
Reference: do we really need this check? i think it's redundant.
Candidate: wait.forelementclickable() should be <UNK>
Reference: it would be nice to use constants instead of the magic characters > < [ ] .
Candidate: is there a reason for this method to return <UNK>
Reference: please introduce "top" class constant so we are sure both gettop so settop work over the same property. please do the same for "px".
Candidate: this should be a <UNK> life <UNK>
Reference: put this in the subscription? (it's not thread safe afaik)
Candidate: use <UNK>
Reference: as mentioned in #1324, this map could be a immutable map?
Candidate: suggestion <UNK> = new <UNK>
Reference: if the user isn't using openfl, then we probably shouldn't go along and register a listener for every module. we have to add functionality to the module settings listener (or
Candidate: you could use <UNK>
Reference: why aren't you loading the profile name from org.jboss.hal.testsuite.util.configutils#getdefaultprofile ?
Candidate: i think this should be <UNK>
Reference: you could just say startprogress
Candidate: add a method to <UNK>
Reference: the mediationadrequest's [istesting()](<link_0> can be used to determine if a publisher is requesting test ads. please note that this requires google mobile ads android sdk version 11.8.0 or higher.
Candidate: you could use isempty() instead of <UNK>
Reference: we should explicitly @override here.
Candidate: this is a bit sketchy for the sake of <UNK>
Reference: according to: <link_0>, better use ex.getcause()
Candidate: you could use <UNK>
Reference: maybe it's safer to use moveby(double, double) here. using this, the e2e will also properly function on smaller screens, as moveto moves to an absolute position on the screen. after
Candidate: you could use <UNK>
Reference: remove the pre-defined variable?  private webelement getactivedialog() { list<webelement> elements = driver.findelements(by.cssselector(".discussion-dialog.is-visible")); if (elements.isempty()) { // allow selenium to throw exception return driver.findelement(by.cssselector(".discussion-dialog.is-visible.modal-dialog-approve")); } else if (1 < elements.size())
Candidate: you could use <UNK>
Reference: this selector is going to throw npe on get() if extractionfn is null, so it's better to throw it in construction:  this.extractionfn = preconditions.checknotnull(extractionfn, "extractionfn");
Candidate: use this(...)
Reference: you really do not need these temp variables....
Candidate: please use <UNK>
Reference: nit: on a different line.
Candidate: is there a reason to assert here?
Reference: it'd be preferable to use something like .sublist() instead of this iterator stuff
Candidate: <UNK>
Reference: to keep tests declarative, could you please move this into a separate method like sortbyid(list<group>)?
Candidate: you could use <UNK>
Reference: maybe these can just be static constants somewhere?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: the hardcoded license level can be replaced by the enum licenselevel.standard
Candidate: please use <UNK>
Reference: lets pass the index to readdata, so that we can eliminate the split function inside read.
Candidate: can be simplified simplified simplified to <UNK>
Reference: no need for anything besides the static part here, right? if so, please use vmstaticdao instead
Candidate: this is dangerous, if the is not <UNK>
Reference: might be nice to define this as a member variable default_assertion or the like, for clarity.
Candidate: is there a reason for this method is not <UNK>
Reference: i'm not a lover of passing nulls to methods or constructors.. would another constructor without the contextid be better?
Candidate: i guess we should use <UNK>
Reference: i had to change this to "remote services" for the terminal to work. note that it is possible for it to work just by coincidence if "remote services" is the
Candidate: if you could use <UNK> comparison, as a comparison, as a comparison, but jump that the <UNK> comparison, jump in the
Reference: here we could call getvalue for each raw value in filterparameters and collect the results in propertyvalues. this would allow the client side to make a single request to resolve
Candidate: use <UNK> probably?
Reference: we call associatesymbol each time we call addusage. why not factorizing that?
Candidate: you could use <UNK>
Reference: does it make more sense to throw an exception rather than silently accept the given comparator when it is null or invalid weight?
Candidate: use <UNK> instead of <UNK>
Reference: are these exceptions part of the spec?
Candidate: use <UNK> exception
Reference: maybe just throw an exception?
Candidate: we should use <UNK> to <UNK>
Reference: i would also think about limiting the degree of parallelism here. i recall issues in 32 node tests, where a node joining the cluster requested state from all other nodes
Candidate: you could use <UNK>
Reference: if you want to maintain the same behavior as before you should probably log this as error since guava is logging it as severe.
Candidate: i think that close() should be closed here instead of close() reconnect
Reference: this should crash have crashed before now, right? the installer shouldn't be able to save itself without this flag being set, right? i feel like it's better to crash on
Candidate: is there any particular reason why we catching exception here?
Reference: what's this constant value? please make it a static final and give a proper name to it.
Candidate: use <UNK>
Reference: the clear button calls attemptaddbudget() when clicked instead of clearing the fields.
Candidate: <UNK> maybe?
Reference: just for the records, today i'm seeing 4ms - 6ms timestamp resolution for all changes (patch set 12).
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: nit: this can be done easily with assertj: assertthat(resources).containsonly(resource, resource2); this is the import you need for the method: import static org.assertj.core.api.assertions.assertthat;
Candidate: you can use <UNK>
Reference: consider using simplechannelinboundhandler and just consume the message in channelread0. this way it is correctly released without hitting the tail of the pipeline
Candidate: log.debug probably?
Reference: i think we can start removing the id parts and be dependant on index only.
Candidate: i'm not sure that this method is invoked by passing the vds from <UNK> e.g <UNK> <UNK> <UNK> <UNK> <UNK>
Reference: we can simplify this part a bit:  java string name = author.map(turbouser::getrealname) .orelse("").tolowercase();
Candidate: nitpicking: you could be simplified to <UNK>
Reference: you need to move fileinputstream out of try scope and merge trys, so finally become part of top try.
Candidate: please log the log.
Reference: seems we should add only_ipv4_allowed and only_ipv6_allowed too. lets also add them to the iseventloggable below.
Candidate: please return <UNK> == null || <UNK>
Reference: unrelated note. with current method definition java public static void close(logger log, java.io.closeable... closeables) {  java will create new object[] for single closeable that is passed to the method.
Candidate: you could use a try-with-resources here instead of <UNK>
Reference: could you close the resultset at the end?
Candidate: @xupyprmv we could use the '+' instead of '+'
Reference: isn't this checked by jni?
Candidate: stringutils
Reference: just to be consistent with similar classes add requirenonnull for the args.
Candidate: this is a <UNK>
Reference: http post request for a gettrackerdatafordates?
Candidate: how about using <UNK>
Reference: in this line the input stream (in) can be null. maybe treat it or log something
Candidate: this uri.create
Reference: note: despite not mentioning it in the docs or the method signature, [at least this call](<link_0> (and potentially the one below) can fail with an untyped runtimeexception for various reasons.
Candidate: please use <UNK>
Reference: would you either update the description or make it so that we're really testing for an empty region?
Candidate: i'm worrying about eating this eating the info.
Reference: if you're going to hardcode the class, just hardcode the string, you _know_ what it will be, so making a call is silly.
Candidate: i'm not sure how about this is a that this is is not but i would be more readable.
Reference: maybe it would be better to do filtering in ethashminer.setlisteners() to keep the main flow clean?
Candidate: maybe we could be a <UNK> instead of repeating the <UNK>
Reference: remove all @addondeployment annotations and leave only @addondeployments. also, remove the addasaddondependencies below.
Candidate: suggestion <UNK> = new <UNK> clazz, <UNK> <UNK> <UNK>
Reference: having two local variables for the "same" indicator is a bit confusing. i'd change to parseindicator(actionparameters, statisticaldatasourceplugin) and move the existingindicator logic to that function.
Candidate: is there a reason for element?
Reference: this changes api. while specifying less exceptions is valid, anybody extending this class can no longer override and throw coreexception (at least that's what my experiment with a checked ioexception
Candidate: wait.forelementclickable() should be <UNK>
Reference: should this include: java if (skipruntimescope && skipcompilescope && org.apache.maven.artifact.artifact.scope_compile_plus_runtime.equals(scope)) { return true; } if (skipruntimescope && skipsystemscope && org.apache.maven.artifact.artifact.scope_compile_plus_runtime.equals(scope_runtime_plus_system)) { return true; }
Candidate: if you could use <UNK> <UNK>
Reference: this is correct and pretty nice, though i'd prefer a method that says what this step is doing
Candidate: this could be replaced by <UNK>
Reference: please, revert this. too hard to read...
Candidate: could you use the properties?
Reference: there is one extreme condition might not work: main and reference project contain some item with the same id. normally we do not support it but we can't guarantee customer
Candidate: if <UNK> == direction.incoming) { <UNK> = false; }
Reference: multimap never returns null, so we could get rid of this method.
Candidate: this is right...
Reference: is this visible for testing ?
Candidate: is there a reason for this method is not <UNK>
Reference: let's use iterables from guava. the code will be much shorter
Candidate: why not use <UNK>
Reference: the user name would be incorrect if the vm was rebooted through ssh or by a script. please just use a generic message like "guest os". also no need to
Candidate: minor remark: this is not touching the "return" to the <UNK>
Reference: can be static.
Candidate: please use "invalid stringutils.isnotblank instead of download <UNK>
Reference: i think it would be better to rewrite it in more single responsibility principle style java private map<string, string> tomachineattributes(string pluginid, map<string, string> wsattributes) { map<string, string> attributes = new
Candidate: i rebuilding this be a <UNK> <UNK>
Reference: s == null?
Candidate: you could replace this with:  java set<t> != && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> &&
Reference: should we double check whether requestedgrain is supported?
Candidate: please align with <UNK> formatter: <link_0>
Reference: the check and get calls can race with the remove call. also looking into the code, there is no remove call, we should remove the dn once it is dead
Candidate: should be be null?
Reference: @aunyks you should make expected a set to begin with so you don't have to convert the return value of the describe method to an array
Candidate: you could use <UNK>
Reference: redundant cast.
Candidate: wait.forelementclickable() should be <UNK>
Reference: foreach
Candidate: this is not repeat the sake maybe?
Reference: won't this cause the opposite behavior now where there is always an initial delay of _fullperiod?
Candidate: nit: we could use a foreach loop instead of <UNK>
Reference: use anymatch to find the elements matching the requirements (if any), that will simplify the code a lot.
Candidate: formatting
Reference: you add, search in and go through this list. it contains string instances so it may be presented as an hashset<string>. it will work if you don't need to be
Candidate: i think that this is not correct.
Reference: this should be 1024 ^ 2, right?
Candidate: this is not used?
Reference: if pluginname is null, you need to call the other refreshpaymentmethods api.
Candidate: no need to inform the
Reference: elementgetter should be out of for loop.
Candidate: use collectionutils thanks!
Reference: minor: i guess this should be named orsimplified1 (and the one below in line 3182 should be orsimplified2)
Candidate: rename to
Reference: i don't thinks this method can return null. please throw an unsupportedoperationexception instead.
Candidate: minor minor nit: introduces typical typical typical typical typical typical typical typical value of <UNK>
Reference: should this be set if ret is false? i don't know.
Candidate: this is designed to check if <UNK> == null) { return; }
Reference: i don't know why we did these generics. it should be java sequence(iterable<? extends validation<? extends e, ? extends t>> values)  (see either.sequence for example)
Candidate: should be made a hardcoded <UNK>
Reference: alternatively, string.format("(%s)", strings.repeat(",", arity));.
Candidate: use <UNK>
Reference: that's equivalent to just conferencename. did you want the string "null"?
Candidate: this error message should be be represented
Reference: delete twice, why?
Candidate: i think that this is not efficient, we could use all() code:  java <UNK> <UNK> = <UNK> <UNK> <UNK> <UNK> <UNK> ) ) ) ) ) ) )
Reference: is special handling for performance? is there perf data to prove that it impacts performance? for now non-blocker, but worth revisiting perf vs maintenance forward.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: valueof does not support nulls - this will cause an npe, just like the code before the patch. i'm guessing you meant to do something like this: return value !=
Candidate: this is not null
Reference: i wonder if this should be logger.warn() instead of logger.debug(), which we will not see in normal running mode.
Candidate: should we use a <UNK>
Reference: compare condition at line 133 and at line 117
Candidate: is there a reason for this logic?
Reference: these will not work until you pick-up the apache sink version 0.11.1: <link_1> specifically, you need: <link_0>
Candidate: i think explained anymore, we should have to pull samples out of the process?
Reference: webcontextproperties below here is not used. properties webcontextproperties = new properties();
Candidate: could we use a constant here instead of creating a encoding above?
Reference: 1tbs
Candidate: i think that this could be system.currenttimemillis() instead of <UNK>
Reference: it will be good if you write a test case for shared lock failure resulting in more than one error messages. it'll help me understand that part of the functionality
Candidate: you could use <UNK>
Reference: since this method is called after the validate method, you can make the check shorter as you did in the executecommand method
Candidate: i'm not sure how about the sure about tracking the command tracking storage pool storage storage pool storage storage pool storage pool is the storage e.g <UNK> <UNK> storage pool
Reference: this method should return the same instance each time (meaning of "get"), store this value in a field named 'adapterfactoryregistry'
Candidate: this is a <UNK>
Reference: maybe add a break; here?
Candidate: you can use <UNK> instead of <UNK>
Reference: logging exception as info is not good. should be warn or error.
Candidate: please use {} instead of '+'
Reference: final :smiling_imp:
Candidate: if you could use <UNK> == null || <UNK> == null || <UNK> == <UNK>
Reference: should add provider to the log.
Candidate: log.debug
Reference: i think we want containsonly or containsexactly here and below
Candidate: use <UNK>
Reference: log.trace
Candidate: is there any reason why not mock required?
Reference: method withnoparameterconstraint is indeed somehow confusing. in my case, i'm always looking at the implementation to have an idea which i should use... i think that we should go a
Candidate: please add a constant here too?
Reference: we can skip the loop now.
Candidate: <UNK> designed designed designed designed designed designed designed designed designed designed designed designed designed designed designed designed designed designed designed designed designed designed designed designed designed designed designed designed designed
Reference: shouldn't need to call setuppipes() explicitly. should be part of the service start.
Candidate: please use expectedexception
Reference: this seems pretty late to call this. can we do it before posting to the main thread?
Candidate: is this possible?
Reference: do we need to specify the date format here separately, or would it be easier to reuse (with a little change to the default value's type) what is already included
Candidate: you could move the initialization initialization initialization initialization initialization initialization initialization initialization initialization initialization initialization initialization initialization initialization initialization initialization initialization initialization initialization initialization initialization initialization initialization initialization initialization initialization
Reference: is this method ever used?
Candidate: i think (filter.getrelationshipdirection() == direction.incoming) {
Reference: i don't fully agree here. only the requiresstateparameter tells you if you want to use the state parameter, the value being static (your statedata) or dynamic (generated using the getstateparameter()
Candidate: if you could use a string instead of return?
Reference: given the large number of http response fixes we have added, i believe the per-operation retry should suffice and we can remove the outer retry loop. we can address this
Candidate: could we print the retry down down down down down down down down down down down down down down down down down down down down down down down down down
Reference: change lambda's arg name to something more expressive like 'file'
Candidate: this is a bit dangerous, bit dangerous, but i would be a bit more complicated than to the <UNK>
Reference: is this still producing <link_0> ?
Candidate: <UNK> -> <UNK>
Reference: synchronizing inside synchronization seems like a recipe for problems to me but i will let @rcordovano weigh in on this one.
Candidate: i would be clearer to <UNK> <UNK>
Reference: do we need to guard this on "startdragitem != null"? the pointer may have been pressed initially in the blank area of the grid.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: update etag and what about the blob?
Candidate: this is be <UNK>
Reference: don't completely catch all exceptions. some exceptions are not validation errors (for example, if cwltool was installed incorrectly). there should be three cases 1) passing validation 2) failing validation 3)
Candidate: ![critical](<link_1> 'severity: major') either log or rethrow this exception. [![rule](<link_2>](<link_0>
Reference: nit: this is a bit difficult to read (maybe just invert the condition?)
Candidate: i think this is not efficient, we could use the <UNK>
Reference: use ternary operator:  string metric = math.abs(expectedyear) == 1 ? "year" : "years";
Candidate: i think that this is a <UNK>
Reference: uuid is more expensive to generate than a securerandom, and since it doesn't have to be unique, just secure, there's no need to use uuid. why not just use keycloakmodelutils
Candidate: you could use a constant instead of reallocating the property?
Reference: this method removes all the orphaned disk after commit a snapshot. this should be always called as before
Candidate: i think this should be done in the
Reference: can you add another edge case here with hard and soft clips on the same read: "2h3s10m4s5h"?
Candidate: finals
Reference: huh?
Candidate: is there a reason for this method to be null?
Reference: the coding standard, i believe, is the way the curly braces were prior to the change. so, opening brace on the same line, closing brace on the subsequent line. braces
Candidate: this is a bit confused about this part, but i would be a bit more readable.
Reference: could use '('
Candidate: same as a meaningful enum parameter.
Reference: minor: might be more human readable if you replace is with equalto.
Candidate: you could use a mock here instead of <UNK>
Reference: i think here we want to say @column(defaultvalue="true") in the annotation but have this translate to the return value of gettrueliteralvalue or getfalseliteralvalue when creating sql text. so check the
Candidate: if you could use a top-level instead of return?
Reference: as long we we perform the checknotnull(...) in getentitytypes(visibility) below, i think we should do the same for stateclass as well.
Candidate: should we throw an exception instead of <UNK>
Reference: getter
Candidate: you could use @nonnull instead of <UNK>
Reference: debug/trace/remove?
Candidate: is there a reason for this method to be called in the <UNK>
Reference: ditto on direct return, can avoid the intermediate variable.
Candidate: finals
Reference: this change in data(lightbluerequest, class<t>) reverts changes to use new lightblueresponse#parseproceseed method. why?
Candidate: you should use a warning here instead of constructing a <UNK>
Reference: actually get() will throw if taskclass is not defined, instead of returning null. i think either do a scala option.exists() or something like orelse().
Candidate: if <UNK> is false, but not sure that this will be an npe.
Reference: please use assert4j - assertthat ....
Candidate: no need to
Reference: nit: can be rephrased as "table config required to use normalizeddate..."
Candidate: use <UNK>
Reference: can use diamond operator, too, for all or<> and and<> operators.
Candidate: this is not to be <UNK>
Reference: i don't think timelockservice should gain a method that's related to lock watches - rather we should be maintaining this state as some part of the hierarchy _below_ timelock service.
Candidate: why we need to check here?
Reference: would a receivenowait (either in or outside the loop) like the other tests be nicer than burning 2 seconds? slow tests is a key reason eventually noone wants to runs
Candidate: is there a reason for this is not <UNK>
Reference: this might not work here, as here the configuration object can be not an instance of ozoneconfiguration, then ozone-site.xml and ozone-default.xml will not be added to resources. the check is
Candidate: you could use a string instead of strings.
Reference: is it intentional that you don't remove /config/rolling-operations/<uuid>, /status/rolling-operations/<uuid>, or /status/rolling-operations-tasks/<uuid>?
Candidate: use stepverifier instead of printing <UNK>
Reference: @whichonespink44 because you are now registering all of the event handlers during pre-init, they will all be registered at this point if you are creating a world that is not
Candidate: i think this should be a log the debug level to print stack trace to debug level?
Reference: does this need to check for string content, eg. trim whitespaces, lower case etc? since this is user input?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: can also just use params() here as by default they are put in the params :)
Candidate: is there a reason for this class instead of relying on the constructor?
Reference: what's going on here? just run two selects and do nothing?
Candidate: you could use a constant instead of using system.currenttimemillis() instead of system.currenttimemillis()
Reference: humm, why is this done here? i don't think we need special treatment for the str here...
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: since no wifi would omit the whole function, this if could be removed.
Candidate: you could be inlined here anyway?
Reference: message<?>
Candidate: i think that this is a <UNK>
Reference: move it up a few lines, so that boolean switches come before parametric modifiers
Candidate: use <UNK> objects.tostringhelper()
Reference: if instream.close() throws an ioexception, the outstream may not get closed. you might consider using apache commons io's [ioutils.closequietly](<link_0>
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i think an attachment key would be ok, but we should also keep the existing check (i.e. we should not be adding the attachment key to exchanges that have their
Candidate: use <UNK>
Reference: it's probably not worth having the case for the default?
Candidate: please use <UNK>
Reference: same deal: these verifications are redundant.
Candidate: not sure that this is not replacing the individual individual individual individual individual individual individual individual individual individual individual individual individual individual individual individual individual individual individual individual individual individual
Reference: optimisitctable breaks the abstraction of smr. all optimstic updates assume that the initial table is empty. this is correct for corfutable because different keys are orthogonal, but it is not
Candidate: suggestion <UNK> = new <UNK>
Reference: hi @eleduardo, i'd prefer to add explicit final int field to circuitbreaker.state, so we can be sure that enum elements reordering won't affect any of our users.
Candidate: we could use a <UNK>
Reference: the policy unit can be called often, so 'info' level would pollute the logs. please change it to 'debug', and surround it with a condition if(log.isdebugenabled()), so the parameters are
Candidate: cheapest cheapest cheapest parameter cheapest cheapest cheapest cheapest cheapest cheapest cheapest cheapest cheapest cheapest cheapest cheapest cheapest cheapest cheapest cheapest check)
Reference: now there's another problem relating to filters. this applies the action to all files, even filtered out ones. stage/unstage applies only to visible nodes. we should be consistent. to see
Candidate: we should log the error.
Reference: i think you probably don't need this. this is just for turning off insignificant network updates (e.g. cell tower info) when the screen is off.
Candidate: this is designed to belong to a trace, since we can have a <UNK> that the is not the the <UNK>
Reference: this will mutate 'model' if model.has(...) would return false. not a big deal, but more robust not to.
Candidate: we could be a foreach here instead of creating a new arraylist for every time, we can't we create a list?
Reference: nit: do you mind negating this check so that you can un-indent the rest of the method? ("early return" style)
Candidate: could be simplified to a non-trivial
Reference: there is a requirement for password policies to work for an example when following order of extensions are available [1], password.policy.extensions.1 password.policy.extensions.4 password.policy.extensions.6 in that case decrementing size won't satisfy
Candidate: please add curly brackets
Reference: this test is not verifying that we call testfunctionindexfunction only once? which was the original bug.
Candidate: this is designed to be defined in <UNK>
Reference: why adding vmbase?
Candidate: if this is null, is null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null,
Reference: can you do an abstract getter for this instead of passing it in through the constructor? it feels.. weird to me to do it this way. same for end of
Candidate: use <UNK> instead of <UNK>
Reference: same here as the passed arguments to exceptions. the logger can handle stack traces by itself and there is not need to pre-render this.
Candidate: we could use a multimap instead of creating a new constructor?
Reference: while you're in here can you also fix this? we should be using this value from clientbase. is there a reason why we can't convert this class over to subclass
Candidate: is there a reason for this logic?
Reference: can this actually be null?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i see that you pass those parameters a lot vuapvideos.porvata_vast, vuapvideos.vast_video. maybe you could extract method from it or hardcode those two parameters?
Candidate: you could use <UNK>
Reference: should this be a logger.info instead of a system.out.println?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: yeah, it generally doesn't add much to logging, but in many of the situations you have here where you're just trying to log a full exception standalone it might be
Candidate: minor: we could use reflectiveoperationexception instead.
Reference: agreed - this is a good candidate for unit tests
Candidate: is there a reason for this method is not
Reference: duplicated node **startnoneevent**
Candidate: rename to
Reference: it's unusual to use mockito.anystring() in a call to something that isn't setting up a mock. any reason these can't just be dummy values?
Candidate: please randomize <UNK>
Reference: kubernetes-client provides different means for deserialization, please either use serialization.unmarshal or kubernetesclient#load to deserialize the class so the test actually tests something from our codebase.
Candidate: you should use the expectedexception instead.
Reference: can you please add a log message that we're skipping the csd update because it's a data lake
Candidate: you could use <UNK>
Reference: firstrow variable is not used
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: please extract the globals.prefs dependency (and even better move the savecustomentrytypes method to the preferences class)
Candidate: is there a reason for this logic?
Reference: please define an interface for typeliteral<supplier<map<schematablename, elasticsearchtabledescription>>>. maybe  interface elasticsearchtabledescriptionprovider { elasticsearchtabledescription get(schematablename table); }  ?
Candidate: let's use <UNK>
Reference: simpler: bindingassertionhelper bh = getassertionhelper(); same in the other test.
Candidate: use <UNK>
Reference: move this to a spaneventlistener. that way it works for other request types as well.
Candidate: i liked that this will be printed in the
Reference: would it make sense to move both apply methods into the upsert map callback so they are done in one spot?
Candidate: log.debug -> <UNK>
Reference: recently, we don't use the explicit new object[]{ ... }
Candidate: no, we don't think we should throw an exception here instead of returning null?
Reference: result.isempty() can be used instead to avoid creating an iterator instance.
Candidate: this is not be <UNK>
Reference: could you refactor this into smaller parts or move the logic into a separate class?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this is super hard to read. we should just use policy for the main loop and leave the rest inlined unless we have a very strong reason to abstract all
Candidate: can you use <UNK> here instead of <UNK>
Reference: we can't use any thread... there's the scheduled executor.. this is no good!!!!
Candidate: i'm not sure how about the sure about the sure that this is is is a bottleneck. bottleneck. is a bottleneck. bottleneck. is that we is interrupted.
Reference: don't capture unused data.
Candidate: why do we need
Reference: object returned by this method is not used e.g. method can return void
Candidate: no, this is be static?
Reference: what's the corrective action one can take if this problem happens and why would it happen.
Candidate: use <UNK>
Reference: what for you call load?
Candidate: this pagelogging
Reference: space
Candidate: you could use <UNK>
Reference: need to return 1 when it's leap-day or year-day.
Candidate: this is be <UNK>
Reference: nit : method name, entityhasextensionjobtag, is good enough.
Candidate: i nesting.
Reference: can this be a better name like createddatemillis etc? also better to add a reference to recordtype enum like above fields
Candidate: this is not a no-op for <UNK>
Reference: this should probably not be executed if processedeclass==null
Candidate: you could use a constant here instead of <UNK>
Reference: i think this needs @apiresponse if changing the return type so that swagger knows to describe the api correctly.
Candidate: no need to suppress warnings
Reference: this will be removed after data migration, right?
Candidate: if you can move this braces around
Reference: all these tests are returning a score of 0. you need some tests that return a good score for these cases as well
Candidate: you could use <UNK>
Reference: but why not to add /api/v1/concepts to http config with permitall instead of constructing filter?
Candidate: you could use <UNK> here instead of <UNK>
Reference: please put this into a any_address constant.
Candidate: i'm not sure that this change.
Reference: why do we need timer for these metrics? we don't have to track the rate, do we? a histogram should suffice
Candidate: this close() close() close() is not atomic close()
Reference: let's make "00000000-0000-0000-0000-000000000000" a constant, put it in to a utility class and use the constant instead of a string
Candidate: you could replace this with <UNK> with <UNK>
Reference: what is the use of map here ?
Candidate: you could use <UNK>
Reference: i know we said java might diverge on this (doing file for sync, url for async), but i think that because you've added a recognizereceipts and a recognizereceipts fromurl, you
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: when would characterbuffer ever be null? same question for getandresetcharacterbuffer()
Candidate: you could use only: <UNK> instead of <UNK> events.
Reference: could use stringutils#isblank for better readability
Candidate: is there a reason :disappointed:
Reference: no magic numbers! =) set a "float scalingfactor = 1.0;" variable somewhere please.
Candidate: i'm not concerned about taking a account for <UNK>
Reference: it looks strange without verification. is it expected?
Candidate: you could use a constant instead of assertions.
Reference: throw unsupportedoperationexception instead?
Candidate: this should be replaced with <UNK>
Reference: please make sure that componentobjects does not contain projects pvc
Candidate: use <UNK>
Reference: you can manipulate the class list directly using: anchorelement.classlist.add(); and anchorelement.classlist.remove();
Candidate: you could use the <UNK>
Reference: style-nit: don't assign then replace. instead use a proper if-else: if (user.isbatchuser) { return queues.getbatchqueue(); } else { return queues.getinteractivequeue(); }
Candidate: this is be to be a <UNK>
Reference: do we really need stream in pipelineconfigs -> pipelineconfigs.getpipelines().stream()?
Candidate: let's remove this
Reference: please use guava's equal helpers <link_0>
Candidate: use <UNK> instead of repeating <UNK>
Reference: i think it'd be good to add 2 more error expectations here to cover all possible overlaps: key: |: start or end of frequency -: active time of frequency _:
Candidate: you could use <UNK>
Reference: not used outside the class. can still be private.
Candidate: -1.
Reference: debug logging statements should be wrapped in a if (s_logger.isdebugenabled()) check to avoid the overhead of string concatenation when debug logging is not enabled.
Candidate: log.debug
Reference: i wonder if anyone relying on custom dl templates would be pissed about this change if they expected the volume to be present (for whatever reason). i know we are
Candidate: if you could use a string instead of <UNK>
Reference: rename 'resource'
Candidate: is this correct?
Reference: it looks like this is going to cause us to re-do all the trigger matching logic twice on every pipeline start. in a lot of cases, there is a reasonable
Candidate: this is non-trivial to be non-trivial non-trivial non-trivial non-trivial non-trivial
Reference: handlefailure not needed here, it is already set as defaul error state above
Candidate: use <UNK>
Reference: it seems like we could do better here. p.s. the guys who did migrations regarding studentprofileattributes also had missed out something.
Candidate: you should use <UNK> enum arguments.
Reference: shouldn't one of these exception be at least be logged ? i bet they can contribute to debugging.
Candidate: this is not a <UNK>
Reference: i think you'll need to check to make sure that the thing being indexed is either a work or a fileobject, and if its not then return immediately. otherwise there's
Candidate: you could use a string to the operating with the operating with the operating with <UNK> operating operating with <UNK> operating operating with the operating
Reference: assertthat(links, iterablewithsize(1)); provides better defect localization.
Candidate: you could use <UNK>
Reference: more efficient and with less repetition: if (excludespecialchildren || excluderegularchildren) { boolean specialchild = specialchildrentypesnamesset.contains(docstate.getprimarytype()); if (excludespecialchildren && specialchild || excluderegularchildren && !specialchild) { continue; } }
Candidate: if you could combine operand is not <UNK>
Reference: if i'm not missing something, it looks like you are building the card field just to respond to this method. you are also building it with a constant, so i
Candidate: this is be <UNK>
Reference: i don't think that's an accurate message. can't think of situation where "it's not started"
Candidate: you could use <UNK>
Reference: thanks for raising this issue. i think you could argue in both ways, hard fail on any failure vs. fail only if no connection could be established at all. having
Candidate: use reflectiveoperationexception instead.
Reference: no need... getimage().setactive(active)
Candidate: this is not to be <UNK>
Reference: setrepositories?
Candidate: is there any reason why we catching the exception here?
Reference: instead of having this conditional, how about something like:  java hosts = (!isnullorempty(host)) ? singletonlist(host) : client.getchildren(...);  that is to say, there's no need to do the zk
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why are we querying these one by one when the method allows us to pass in multiple? this will be a significant bottleneck if someone wants to specify a large
Candidate: we could use a constant here instead of <UNK>
Reference: if this is boolean, why do you need "=="?
Candidate: log.debug
Reference: can you do this in a metadata store transaction? we take advantage of such transactions for other operations that must be atomic, such as segment publishing and kafka offset committing.
Candidate: if (throwable == null) { return <UNK> }
Reference: inline
Candidate: nit: we use stringutils.isnotblank here instead of <UNK>
Reference: @inverno do not use tostring, put this expression in message
Candidate: @vilchik-elena suggestion <UNK> = <UNK>
Reference: perhaps creating a visualeditorcontents class in contentpatterns would be appropriate for the constants you are using for ve
Candidate: is there a difference between any difference between two cases where two cases are supposed to be <UNK>
Reference: i would make it <= (allow equal case to meet requirement). is there a specific reason to be strict about it?
Candidate: unsupportedoperationexception
Reference: to be clear, the name can be "full_acid" and "mm_acid". in fact. mm table can be created on orc data.
Candidate: this is not webapplicationexception to re-throw the exception
Reference: better to use the constant here, so an onlooker understands it tests the default number
Candidate: you could be inlined
Reference: i don't easily get what the last bit of the condition is required for ?
Candidate: should we add a exception instead of printing the exception through?
Reference: i think this could go into service class. chargeentity shouldn't ideally go beyond get/set
Candidate: i think that this is charge is charge charge charge charge charge charge charge charge charge charge charge charge charge charge charge charge charge charge charge charge charge charge charge
Reference: use new utility class glustertaskutils
Candidate: i think this should be called here instead of <UNK>
Reference: does it still make sense to request a batch at a time?
Candidate: if this is is designed to have a velocity == null
Reference: don't trim username and password.
Candidate: typo: <UNK>
Reference: suggestion: have only one **for {}** block and do: if ( hidepassword ) { conn.setpassword( null ); }
Candidate: how about using a string concatenation
Reference: perhaps we could create this string w/ string.format(...) also, we should probably use e2-standard-1 as well.
Candidate: is this correct?
Reference: you should not compare two strings with "!=" or "==", use equals methods instead or if both strings can be null use org.apache.commons.lang.stringutils.equals
Candidate: you can use <UNK> here instead of <UNK>
Reference: encodedcollectionname
Candidate: you could use <UNK>
Reference: i would rather change the equals() invocations here to == (which is the more usual form anyways) which then would let the request go to the superclass implementation that may
Candidate: is there a reason why not default?
Reference: the exceptions are subclasses of ioexception. do we really need to specify them here?
Candidate: stringutils
Reference: maybe above in content = ..., add normalizejson("[" + element1 , ...) and then remove replaceall here.
Candidate: you could use a constant instead of <UNK>
Reference: why not define listmodeloptions.getdependenciesfor as a list to begin with? if the pl is restrictive, then any advantage in the public api being flexible? is there a risk of running
Candidate: i think this should be a prefix?
Reference: i am wondering whether this isn't something the defaultleaderelectionservice can decide when receiving the onrevokeleadership callback. it could then decide to call writeleaderinformation(leaderinformation.empty()).
Candidate: if we is warn events.
Reference: can we use <link_0> ?
Candidate: you could use a enum hierarchy instead of <UNK>
Reference: why is this method parameterized?
Candidate: minor nit: could be simplified (up to  if <UNK> == null || <UNK> == null) { continue; }
Reference: is this tostring still valid?
Candidate: if we freed <UNK> mean.
Reference: to loop var, use cast to classpathentry when calling getdelegate() below
Candidate: entry
Reference: why not iterate topics directly ?
Candidate: use <UNK> instead of <UNK>
Reference: would it be cleaner to do record.userid = pageview.userid? same for the other fields below.
Candidate: i think this should be null here as well.
Reference: why is binddynamicproducer synchronized, but this one not? i need to know more about this messagebus stuff and where it is used from, to determine which behaviour is correct for
Candidate: we could use uri.create to a non-trivial
Reference: this method has quite a bit going on and i think it would be easier to understand if you split it into 2-3 methods.
Candidate: could we use supplier instead of <UNK>
Reference: did you move the method on purpose? public methods go first, and all helpers, private and so on goes below them
Candidate: why storage storage pool storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage
Reference: please remove this log, or lower the level to fine.
Candidate: why not use <UNK>
Reference: does any of this code touch the db? if so this means listing accounts will be pretty slow.
Candidate: you could use <UNK> annotation, instead of <UNK>
Reference: we need to evaluate the value of the property, 'set_requeue_on_rollback'. wdyt?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: you can use strings.isnullorempty here.
Candidate: please add a log message to info.
Reference: unneeded check : imagetodomainmap.isempty(). it is not , but at nay case
Candidate: rename to
Reference: perhaps include the componentname in the message?
Candidate: wdyt about throwing an <UNK>
Reference: please use interfaces where possible.
Candidate: you could use a dedicated class hierarchy instead of calling <UNK>
Reference: @vkuchyn let's use better english here and actually give an explanation people outside of the people working on this understand :) i suggest: > rultor closed this pull request for
Candidate: we could use reflectiveoperationexception
Reference: to really make this method overridable, shouldn't we add a (protected) accessor for m_bundles as well?
Candidate: you could use <UNK>
Reference: why is this getting the old item and then calling refresh with that ??? if i look at the data provider & communicator, the latter will use the item provided
Candidate: wait.forelementclickable() should be <UNK>
Reference: granularities.none is a simpler way of writing this.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: l233~l235 can be removed.
Candidate: should we use <UNK>
Reference: i think it would make sense to somehow extract the onclick listener to a method or something, so that you do not simply need to duplicate the code, but instead
Candidate: i we need clear() to <UNK>
Reference: write to a temp file and rename. look at storedescriptor for eg.
Candidate: ![critical](<link_1> 'severity: please.
Reference: can you rebase, this is already fixed in master
Candidate: use <UNK>
Reference: static method import please!
Candidate: use <UNK> pair for sake sake sake sake sake sake sake sake sake sake sake sake sake sake sake sake sake sake sake sake sake sake sake sake sake sake
Reference: you probably don't want a silent fail here, extract a local variable trace = ftrace, then assert that it is non null instead
Candidate: you could use this assertion.
Reference: **question:** should this actually be a logger.info or debug?
Candidate: i am not sure that this is not happy to log page.
Reference: unexpected
Candidate: we can be <UNK> to <UNK>
Reference: it would be good to place persistence unit name as constant to some shared place like kieserverconstants to avoid duplication. it is already used in jbpmkieserverextension and casekieserverextension and locators.
Candidate: could we add a message to
Reference: should double check with service team if this is what they want to do with those exceptions.
Candidate: if you could {}: <UNK> {}: <UNK>
Reference: i'm confused with this change. is there anything else other than code reorganization? if not, then the current version is desirable, as it makes more clear the various branches returning
Candidate: should we use <UNK>
Reference: the size of the usage array should really be based on the length of the input array. if 256 is really required, we should probably check to ensure the input
Candidate: i nesting.
Reference: refactor it to a static and reuse it in all tests
Candidate: this is not a <UNK>
Reference: nit: would it make sense to move readresource method and resource names to benchmarkdata class to avoid copy-pasting?
Candidate: please use <UNK>
Reference: maybe we want to include the resumebehavior field to hashcode() and equals() methods.
Candidate: unused
Reference: why do you close baos here, while you can do it in finally block as in another situations?
Candidate: throw an exception
Reference: @xiaolong-sn nit: optional means you do not need to null check:  return optional.ofnullable(streamconsumerarns).map(arns -> arns.get(stream));
Candidate: you could use <UNK> annotation, instead of objects.isnull
Reference: how/why is this expected to change?
Candidate: this is be stream()
Reference: would it be better if we use getfirstannotation(declaredclass, arrays.aslist(include.class))?
Candidate: i think this log the error level to log the
Reference: consider moving this to a top-level class in the commons package (e.g., defaultvaluemaps).
Candidate: please remove this line
Reference: will need to see how we handle the equivalent of a "subscription", but there is currently a potential leak here, i guess.
Candidate: you could use objects.equals()
Reference: space after if?
Candidate: if you could use <UNK> <UNK>
Reference: bug; need to remember the first via header...
Candidate: please use <UNK>
Reference: please enforcecallingorselfpermission(connectivity_internal, tag);
Candidate: i think this is be freed on the
Reference: maybe this should be an enum?
Candidate: use <UNK>
Reference: the preference text refers to the 'chart', and about 'querying' the view. this class is just a tree that supports grayed state and maintains consistent checked states. it doesn't know
Candidate: this is a bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, but
Reference: do you really need it to be an atomic reference? could you just assign it to a variable?
Candidate: if you could use <UNK> <UNK>
Reference: throw badrequestexception instead of illegalargumentexceptions in from request implementations.
Candidate: use utf-8 instead of this(name, <UNK>
Reference: could you please explain the scenario which this bug shows itself? why do we need this?
Candidate: nit: randomize <UNK>
Reference: looks rather strange. what about removing the isautodelete parameter and using  case default: return userpreferences.isautodelete();  ?
Candidate: no, this is not :disappointed:
Reference: just a small question.. can the nameattribute be non-null but the value itself from .get() be null? or should it be checked in the above nameattribute == null || nameattribute.get()
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: it's not about incompatibility but use the most appropriate (prettier?) look and feel by default when running on macos.
Candidate: you could use <UNK> here instead of <UNK>
Reference: this pattern (and the whole query) seems very similar to importtemplatefromexportdomainmodel.createsearchpattern() do you think it would be possible to extract the code so that it can be shared between the
Candidate: please use string.format instead of the image?
Reference: aren't we storing file size in bytes? can we change this to just file_size?
Candidate: this is be costly.
Reference: why not a single if with strings.isnullorempty ?
Candidate: _cough_
Reference: to be proper, this should return an error status. it is not that there was not change necessary, it is that the sourcelookupdmc is unknown.
Candidate: you could be pulled out of this method.
Reference: you do this in a few places. perhaps it deserves its own function in hadooputils or something like that?
Candidate: you could use <UNK>
Reference: very much nit: maybe change the label here? this will be grammatically incorrect for, say, the 91st percentile.
Candidate: you could use braces
Reference: notifydatasetchanged() missing?
Candidate: wait.forelementclickable() should be <UNK>
Reference: devicecontroller instead of buddycontroller
Candidate: this is not be used? multimap
Reference: if we didn't have the existing problem with the entity create locking would we have done this the other way round?
Candidate: i would be checkargument here instead of: instead of:
Reference: you don't need to change this method signature. i would leave it to be a private method.
Candidate: you "_" "_" could be exchanged with a string anyway?
Reference: i would add a final here: suggestion final constrainttype constraint = constrainttype.fromstring(constrainttype);
Candidate: @vilchik-elena could you could be simplified to  <UNK> <UNK> != null && <UNK> && <UNK> || <UNK> && <UNK> && <UNK>
Reference: are you sure this is not rather a configuration error? that would mean using internalerrorexception.
Candidate: should we be a <UNK> instead of creating a new <UNK>
Reference: avoid calling getactivestudentcurricularplan() multiple times in the same method. invoking the method multiple times results in a performance penalty that should be avoided.
Candidate: if we is not set the default?
Reference: re-use existing constructors:  this(cookiespec, false);
Candidate: this is a <UNK>
Reference: this needs to remain ireversetogglehandler for the other changes not to break things.
Candidate: why this change?
Reference: is 80 a standard size or should it be a dimen resource ?
Candidate: you could use a logger instead of <UNK>
Reference: it would be helpful
Candidate: why not -1l
Reference: it looks like you can simplify this code by reusing removefirstmatching method
Candidate: should we set the storage status properties?
Reference: better to refactor the method name isvalidaddress to **isvalidv4address**. what do you say?
Candidate: i'm assuming that pedantic, but i would be a bit clearer, but i would be a bit confused about this situation.
Reference: there is an extra indentation in the above lines, please remove them. also alertimage is not being used.
Candidate: could you sharing the sharing sharing sharing sharing sharing sharing sharing sharing sharing sharing sharing sharing sharing sharing sharing sharing sharing sharing sharing sharing sharing sharing sharing sharing sharing sharing
Reference: you might consider using collections.singletonmap() for slightly nicer code.
Candidate: is there a reason to assert here?
Reference: i don't think we need to clone the entire trees here. just detaching them should be enough.
Candidate: if you could use <UNK> <UNK>
Reference: todo: limit to last n notifications.
Candidate: you could use stringutils instead of <UNK>
Reference: local variable seems unnecessary here.
Candidate: use readasstring(...) instead of <UNK>
Reference: revert this.
Candidate: we could use <UNK>
Reference: the default type should be string.class i think.
Candidate: suggestion throw new <UNK>
Reference: we usually use dc for dublincore prefix.
Candidate: if you could use a <UNK>
Reference: this can be written a bit more elegantly now using the isanyfieldset method, right?
Candidate: why not sure that this implies that observers is shown.
Reference: this should probably be handled in some other way than just closing the software (is this what happens if an error occur in a separate thread in netbeans?)
Candidate: you could use the exception instead of printing the
Reference: duplicated code. it should be getformid(form). also, if/when you change exportconfiguration.fallingbackto(), the signature change on exportforms.getconfiguration() should be rolled back...
Candidate: nit, we should have to putifabsent args?
Reference: return value is unused
Candidate: suggestion <UNK> = <UNK>
Reference: let's not swallow the stack trace here.
Candidate: you could move this to <UNK>
Reference: unnecessary final
Candidate: this is designed is designed to be invoked simpler.
Reference: same constructor visibility thing.
Candidate: this is a <UNK>
Reference: suggestion date date = date.from(instant.parse(html.substring(start + 1, end)));  (although probably better to use instant directly for increased precision.)
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: once typing is fixed we do not need this casting.
Candidate: could you explain why you can use the foreach paths?
Reference: can you replace java if (optionalblobname.ispresent()) { uploadfile(file, optionalblobname.get()); } else { uploadfile(file, file.getname()); }  by java uploadfile(file, optionalblobname.orelse(file.getname());
Candidate: this seems to be copied out of the
Reference: this should be done a validator on attribute.
Candidate: this should be to be <UNK>
Reference: i think it's worth checking that keyfileurl isn't null too just in case someone changes the behaviour of usesauthentication later on without realising that this block implicitly relies on keyfileurl
Candidate: i am surprised that this is a bit strange but i am not sure how about this a systems but none of systems none of systems systems
Reference: it is unfortunate that the api for amazoninfo is a bit leaky, but the preferred api to extract data is <link_0>, where the enum can be used directly.
Candidate: i think that this is is not the same as well.
Reference: why do we need to call clear here?
Candidate: this overwrites is touching this v. en apply, the fragment is null, but the discoveryresult fragment will be npe.
Reference: naming
Candidate: please use <UNK> instead of <UNK>
Reference: these could be fail() instead
Candidate: use readasstring(...) instead
Reference: user will definitely not need it, it is quite internal exception, which we could track in the logs
Candidate: please use <UNK>
Reference: the code would be much easier to understand if the decode was done here. so that checkedpages actually contain a list of pages :)
Candidate: this is be initialized in the constructor?
Reference: same concern as above.
Candidate: if you could use <UNK>
Reference: we should probably move this into a camera2 implementation, because we are leaking camera2 implementation details here. as a thought a imageprecapture interface which by default uses flash mode, but
Candidate: this is be started, we could throw an exception instead of bound.
Reference: (critical) don't use arbitrary whitespace as the delimiter (they might be valid as the value, also i don't think '\0 is a whitespace). you may refer to rangepredicate.java on how
Candidate: you can use <UNK>
Reference: remove these checks, since we should never call the method with null. (as a general code style, we don't write code to be lenient of nulls in presto.)
Candidate: you could use reflectiveoperationexception here instead.
Reference: i feel like this would be more readable with an if-else rather than the ternary operator.
Candidate: can be simplified to <UNK>
Reference: please add populate(...)
Candidate: @chaviw could use <UNK> here instead of <UNK>
Reference: why this change?
Candidate: if you should use the uid as well.
Reference: - [x] i think that you should return null instead of illegalstateexception if no codelist of all locales, , respecting the previous design.
Candidate: logging.
Reference: no need for the manual check.
Candidate: unsupportedoperationexception
Reference: this should remain as "single". hunters have a "single" action and also "joined" actions.
Candidate: you could use isempty() instead of <UNK>
Reference: i don't think we would need per topic level checkpoint metrics, commit latency and number of commits in aggregate probably is enough, thoughts?
Candidate: this should be a <UNK>
Reference: initialize to null or immutable copy
Candidate: <UNK>
Reference: is it correct to omit existingcriteria if it's null? if it should always be not null, this if is bad: it delays the detection of a missing value, and it
Candidate: is this a bit confused by a minor but i'm confused about 100% sure that this could be simplified to a bit more readable.
Reference: vds.getvmcount returns the number of vms that the host reports while isanyvmrunonvdsindb checks that in the database. here, it seems that there is no reason to cal isanyvmrunonvdsindb because the
Candidate: @ivandalbosco we could leverage to <UNK>
Reference: does not match conventional tostring implementation.
Candidate: is there a reason for the sake of types?
Reference: when registering a job, we throw a duplicatejobexception if it has already been registered and put the onus on the caller to unregister first. i'm not arguing one way or
Candidate: should we throw an exception instead of null?
Reference: it looks like code redundancy with the task bean.
Candidate: you could use <UNK>
Reference: this will cause concurrentmodificationexception: removing items from the underlying collection while iterating
Candidate: this is a bit more than personal preference but i'm totally personal preference bottleneck. consequently, depending on the operating auto-boxing
Reference: looks like this can be static
Candidate: if you could throw an exception instead of checkargument is an error.
Reference: this code isn't trivial. please extract it to a method.
Candidate: you could use <UNK>
Reference: ![major](<link_0> 'severity: major') reduce the number of returns of this method 5, down to the maximum allowed 3. [![rule](<link_1>](<link_2>
Candidate: ![major](<link_0> 'severity: major') reduce this down down down down down down down down down down down down down down down down down down down down down down down down down
Reference: try-with-resources? (the ones in this file)
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: shellisavailable
Candidate: rename to iu
Reference: error log must be i18ned
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: remove
Candidate: <UNK> -> <UNK>
Reference: so not really specific to this changeset, but is there a reason we are using 2 different stringutils in this class?
Candidate: please use <UNK> string()
Reference: maybe you could use endswith instead of matches? then you wouldn't need that string.
Candidate: nit : <UNK> { <UNK> = new <UNK> <UNK> <UNK> } }));
Reference: did you mean to suppress the exception here?
Candidate: is there a reason that is not throw an exception instead of null?
Reference: i think it is better to split "addandreplace" method in "replaceentry", which will replace existing entry but return null if none exists. and "addentry", which will add new entry. this
Candidate: can you move this to the constructor?
Reference: i dont think we should be stripping. we need to ensure anycast messages only end up in anycast queues and like wise multicast. when theyre consumed by a retroactive consumer
Candidate: you could use <UNK> here instead of return?
Reference: is this a warning or an actual error?
Candidate: we could use a string concatenation instead of '+'
Reference: in the jira request jeff requested that this be a required arg.
Candidate: this is a activated <UNK>
Reference: i think a part is missing here <link_0>
Candidate: you could use <UNK> instead of calling <UNK> instead of <UNK>
Reference: why public ?
Candidate: this should be <UNK>
Reference: i think just iterating of the string to find . characters and creating a new substring each time would be even faster, as there would be just substring allocations which
Candidate: could you use <UNK>
Reference: ha! never noticed this, but we should always normalize to the smallest scale. right now, 1234ms > 1s but 1s == 1234ms !!! itmftimestamp t1 = tmftimestamp.frommillis(1234); itmftimestamp t2 =
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: suggestion inittemplate(new elasticsearchresttemplate(client));  with the change in the base class
Candidate: please use <UNK>
Reference: why do this at all? to make sure it succeeds? shouldn't we check that the return is ok in that case?
Candidate: you could use a constant instead of <UNK>
Reference: i guess getlistparser should get the injector... (is that something unit tests should have caught?)
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: good point. i've added dropwizards jersey client integration.
Candidate: this args?
Reference: add a //todo statement about optimizing the sort for large files.
Candidate: you could use the exception here instead of printing the exception
Reference: needs a test of the output:  final bytearrayoutputstream myout = new bytearrayoutputstream(); system.setout(new printstream(myout));
Candidate: suggestion <UNK> = <UNK> % <UNK> % <UNK>
Reference: the order arg here is quite important given the way nd4j works with reshaped arrays being a view of the original.
Candidate: this is be encapsulated depending on the depending on the depending depending depending depending on the depending depending depending depending depending depending depending depending depending depending depending depending depending depending
Reference: is qualifying this here necessary? the context looks to be mockchart already.
Candidate: why not use a list<string> <UNK> = new <UNK>
Reference: arguments.length is already been checked for above, i think there is no need to do it again.
Candidate: i pagelogging
Reference: is this needed? the menu item will always be clicked/navigated to from the ui thread.
Candidate: if this is is designed to go through the callers and then you could have a guard clause.
Reference: 60 seconds would be a better choice
Candidate: is this a bit strange, why you could use <UNK> instead of creating a new array instead of creating clear() yourself every time?
Reference: before we would never throw an exception here, is it safe to do so now?
Candidate: suggestion <UNK> = new <UNK> bytearrayoutputstream()) {
Reference: this max rows disagrees with the assertion, which is why the test is failing.
Candidate: this is mock expectations
Reference: can't we make calls from txclient to the tx service before and after running the admin command to test the change in state? asserting on an exact match in the
Candidate: use <UNK>
Reference: doesn't this duplicate the nonnull check?
Candidate: wait.forelementclickable() could be <UNK>
Reference: whaaaat this line makes no sense to me. care to explain it?
Candidate: is there a reason for styles that styles styles styles that styles styles that styles styles styles styles styles styles that styles styles that styles styles that styles that styles
Reference: include the microservice classname and path in the log message.
Candidate: typo: <UNK>
Reference: typo here. should be service_type
Candidate: you could use <UNK> here instead of <UNK>
Reference: why revert the changes to use proputils? proputils will provide a meaningful exception when these properties aren't set, otherwise it generates an npe.
Candidate: newing this o(n) like we could use the <UNK> <UNK>
Reference: is it possible to avoid "global" variable (leftfieldnameset) ? it seems like you're using "state" in lambda. is it really necessary ?
Candidate: please use <UNK>
Reference: @qaga .scrolltofooter() method is intended to scroll to global footer, not mcf. depending on the screen resolution when test is executed (and jenkins has lower than you ;) and what
Candidate: wait.forelementclickable() should be <UNK>
Reference: shouldnt this be 'else if'? if not the layouts wrong ;)
Candidate: if this is is not known to be a known comparison, about narrowing different places depending on the operating <UNK>
Reference: expire a bit earlier, e.g. after 29min? that way the risk (small as it is) of an expired token being sent is avoided?
Candidate: why not use <UNK>
Reference: i don't think we need to do this. we should deprecate the httplogoptions one, and have it take lower precedence to the clientoptions one (so we only use it when
Candidate: this is explained to <UNK>
Reference: a null arg should instead throw an illegalargumentexcpetion as it's an unexpected/invalid input.
Candidate: suggestion if <UNK> { throw new <UNK> }
Reference: should be interrupted exception instead of keychain exception?
Candidate: we should use the error message please.
Reference: it's only deletable if it's not saved?
Candidate: this should be <UNK>
Reference: is there any reasonable way (and there may not be) to make all the places that use this value leverage a single constant?
Candidate: this is be careful to the way?
Reference: i just realized that this will fail if the absolute path string contains a space since the full string is parsed by spaces (this is why no one should really
Candidate: is there a reason for this logic?
Reference: i was confused because the existingindexes structure looks like some sort of deserialised json! well i think that listindexesindatabase and similar methods should return more self-describing data types, and this
Candidate: why "do not use the wording.
Reference: added logerror
Candidate: you could use a logger instead of printing stack trace
Reference: would it make more sense to inline these just before the </head> tag?
Candidate: this is a little low, simpler.
Reference: shall we turn-around the equal check for avoiding any npes ? for ex: "something".equals(string)
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: you might want to catch numberformatexceptions here and transform them into suitable exceptions. one try-catch-block seems enough, since you cannot recover from this error here anyway.
Candidate: 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4
Reference: give more error info instead of empty seems more friendly?
Candidate: you could remove the "this."
Reference: i'd move the failure point above the for loop.
Candidate: please use <UNK>
Reference: optional is java 8, i don't think we should base too much of our logic on it
Candidate: this is a bit nervous that this is is not <UNK>
Reference: not sure how you get this when you don't instantiate via hk2 but manually
Candidate: this is a <UNK>
Reference: i cloned this branch to play around with moving adding splits into this class. i got as far as writing the following function. i think this function would work for
Candidate: i think that this is is not <UNK>
Reference: why we use the value keyword before ?
Candidate: is this possible?
Reference: this code duplication doesn't bother you? i'd create a preceding patch extracting the common logic among createrow() and createblankrow() to a separate method, and then only change this once.
Candidate: how about this
Reference: i think we want to make the string computation lazy, but not lose info. we could do that by overriding tostring.
Candidate: this is a bit dangerous, bit dangerous, for the sake args?
Reference: instead of creating a file object you can use another fileinputstream constructor that accepts file name.
Candidate: you could use <UNK>
Reference: request is not an argument here. this should be checkstate
Candidate: minor nit but we could use a <UNK> <UNK>
Reference: use just 1 here (the single value form of grant).
Candidate: you should mock to mock the mock that the mock expectations
Reference: could you please move the url hash code to it's own method? i think this will make it easier to read here and understand what is happening.
Candidate: i'm not sure how about sure this is is an error.
Reference: you can use util.asset instead.
Candidate: @gunnarmorling you could use only: <UNK> instead of <UNK>
Reference: can you use different test values for stock, experiment and instance ids for better assertion?
Candidate: suggestion <UNK> = new <UNK>
Reference: suggested "floatbits" or "valuebits"
Candidate: static import
Reference: this method should be tested via a unit test. and this change should cause an update to that ttest (but i don't see it). if it does, update it so
Candidate: could you please use <UNK>
Reference: what worries me is that the oldmessages is left unprotected between the calls and in theory could be modified.
Candidate: i think that this is is not <UNK>
Reference: we should add these as an internal api for now.
Candidate: wait.forelementclickable() should be <UNK>
Reference: it is quite surprising to me that the provider will save the result but not try and load it first. i think the api should not save the authorization. i
Candidate: you could use a stringutils.isnotblank()
Reference: maybe here we can break the loop.
Candidate: if this == 0 && <UNK> == direction.incoming) { int <UNK> = <UNK> == <UNK> || <UNK> == <UNK> || <UNK> == <UNK> || <UNK> == <UNK> || <UNK> ==
Reference: wow this is awesome. thanks for setting this up. fyi @emord we may be able to expose this list via an api call to formplayer if you think it'd be
Candidate: this is a <UNK>
Reference: file
Candidate: you can call <UNK>
Reference: [optional] eliminate the 'token' variable dest.append(loginurltoken.gettoken(req));
Candidate: is there a reason for the property?
Reference: should be set to null, especially as lockdecorationupdater has not all its fields set to null on unregister() call.
Candidate: we could move this to a separate method.
Reference: shouldn't that be set in a finally block ?
Candidate: i think debugging log
Reference: is this part of the issue?
Candidate: please use <UNK>
Reference: this will recognize all props starting with "druid.metrics.emitter.dimension.", i understand that currently there are only two (datasource and taskid) but in future we might add more and all of them
Candidate: use <UNK>
Reference: the given ...
Candidate: is there a reason for this logic?
Reference: must not instantiate ~~an element of~~ this class
Candidate: this is not <UNK>
Reference: not sure about multipart_form_data can we rework it to accept octet/stream?
Candidate: is there a reason for exception message is printed
Reference: imo this should only be set when -ds3guard is passed on the command line, similar to what other tests were doing before. tests that are only meaningful with s3guard should
Candidate: use readasstring(...) instead of <UNK>
Reference: shouldn't we be using restconstants.property_uuid?
Candidate: if the description is not known to download a string comparison,
Reference: nit: make a variable and reuse
Candidate: why not use <UNK>
Reference: didn't get idea of those .***ifabsent methods. why u need them? irregardless of servicesprovider type u go through .registerinmethodregistry() anyway which, by turn, sets corresponding dependencies.
Candidate: is there a reason to be null?
Reference: filelocation is printed out twice
Candidate: suggestion <UNK>
Reference: add final keyword.
Candidate: i think a bit sketchy here instead of <UNK>
Reference: if we say we never use null as key, we simply but a objects.requirenotnull(xmllang) guard before the get(). this would also avoid the try/catch block.
Candidate: throw an exception
Reference: please, consider moving runtime start spans names to a dedicated class with constants.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i suggest removing this newline
Candidate: is there a reason for this tracking query?
Reference: s/, error//
Candidate: how about this is a feature for image?
Reference: workflowstatedto::new would then become a call to asdto
Candidate: why not use <UNK>
Reference: should the substudy filtering tests be updated to also look at external ids?
Candidate: i think this should be null?
Reference: i think these two could be combined as well.
Candidate: i explained explained explained explained explained to a <UNK>
Reference: this would have an unexpected consequence if someone has dfwe${...}asdfa pattern right inside a password property.
Candidate: use <UNK>
Reference: this can potentially log a tremendous amount of errors. can we cap the logging at something reasonable? default = 10 or something
Candidate: nit: you could use <UNK> instead of <UNK>
Reference: is the cast needed to get the generics right?
Candidate: we could use <UNK>
Reference: isn't it the same thing?
Candidate: i think we should have to synchronize on the the discoveryresult v. invalid?
Reference: forms.ispullselected(form)
Candidate: suggestion <UNK> = <UNK>
Reference: might want to wrap this in a connectexception. in general, i think attempting to restrict exceptions that get thrown up to the framework to connectexceptions and then ensuring we have
Candidate: i we mind logging here instead of printing the log.
Reference: it would be better to get only vm static instead of all vm object
Candidate: this is not positive part, please use the positive formatter
Reference: this is really not needed for any of these. perhaps remove them all? i don't really mind whether it's kept or it goes but it should be consistent.
Candidate: passes passes passes passes passes passes passes passes passes passes passes passes passes passes passes passes passes passes passes passes passes passes passes passes passes passes passes passes passes passes
Reference: it's not the good i18n.
Candidate: if getstate() > 0
Reference: since mdata could be null at this point, let's check for npe
Candidate: i think this should be to log the
Reference: it shouldn't be removed as it is more likely needed for displaying amount of results.
Candidate: this is a bit more meaningful message:  kubernetes kubernetes kubernetes kubernetes kubernetes kubernetes kubernetes kubernetes kubernetes kubernetes kubernetes kubernetes kubernetes kubernetes kubernetes kubernetes kubernetes kubernetes kubernetes kubernetes kubernetes <UNK>
Reference: since dates are mutable, a copy of startdate should be returned to avoid downstream side-effects.
Candidate: is this a bit more precise than <UNK>
Reference: you don't need to enumerate all the keys one by one in a collection...you should be able to use getpropertykeys("oai.harvester.metadataformats"); to get a list of all matching keys, instead of
Candidate: i we use <UNK>
Reference: use paths.get(directory).toabsolutepath().normalize().startswith(nuxeohome.topath().toabsolutepath().normalize()) to avoid dangerous .. path components that would allow escaping the nuxeohome directory.
Candidate: you could use <UNK> instead of equals?
Reference: this should be in a separate commit for ispn-11295. also, i would expect no blocking in the vast majority of cases, so we need an optimized path for that case
Candidate: can't you use <UNK> here?
Reference: i'm not sure that we should remove the mocked push. did we talk about this?
Candidate: is there a reason to paths?
Reference: is this used anywhere? if not, please remove
Candidate: this is not to be <UNK>
Reference: querystatement will always be null since it is never used, so removing this logic as well as the variable
Candidate: is there a reason for this?
Reference: the alignment is a bit wonky, i'd rather split it into java responsebuilder.contenttype(application_json) .entity(json_writer.tojson(configuration)); return completablefuture.completedfuture(responsebuilder.build());
Candidate: imho this should be be exception
Reference: why do you need created n files? it'd better use >> instead of > and cat all content into one file part by part.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: unfortunately, h2 doesn't support that syntax. in db2 this works by using from lateral (values (?1)) but i doubt this will work here. can you think of any other sql
Candidate: <UNK>
Reference: use getvdsdao() instead of dbfacade.getinstance.getvdsdao
Candidate: please use <UNK>
Reference: might it be worth it to confirm that the logged thread terminated?
Candidate: you could print stack trace to debug level
Reference: braces
Candidate: if jdk attempt to jdk jdk jdk jdk jdk jdk jdk jdk jdk jdk jdk jdk jdk jdk jdk jdk jdk jdk jdk jdk jdk jdk jdk jdk jdk jdk
Reference: maybe quasarhelios.clamp.opencontrol.set could have a good helper addition to the base class?
Candidate: you could use <UNK>
Reference: we're probably going to want this to throw some sort of exception so the ui can display that some notification that the write didn't happen.
Candidate: this is a bit strange, we '+'
Reference: protected doesn't make sense on a final class.
Candidate: @gunnarmorling this a bit strange to <UNK>
Reference: int c = getcount(); but you can inline that in the next line too.
Candidate: i think that this will never be an npe if there is an npe here anyway?
Reference: space before '(' applies in a few other places in this file too.
Candidate: i think this should be locked as a default?
Reference: use selectionagen in this case.
Candidate: i is a bit confused about a bit less than <UNK> i think it'd be easier to follow the <UNK> true) e.g.:  java if <UNK> == null) { //
Reference: worth extracting a method and change the read of the property name to also use it (to fixing that one as well).
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: can be null
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this is a fluent model, you can chain these properties.
Candidate: is there a reason for this message is not error.
Reference: now the relativize command is missing, right? maybe have something like if (linkedfile.isonline()) link.setvalue(...) else link.setvalue(relativize(paths.get(...)))?
Candidate: if you could use <UNK> <UNK>
Reference: does this code handle the scenario when proxying is not required? note how spark has an if/else statement depending on whether shouldproxy() or not <link_0>
Candidate: you could use a multimap here instead of <UNK>
Reference: useless parenthesis
Candidate: if this is is designed to be a <UNK> <UNK>
Reference: why was this removed ?
Candidate: why not call <UNK> ?
Reference: dont throw this exception, but set it on exchange instead, eg exchange.setexception, then its handled in the finally block using the configured exception handler on the consumer
Candidate: this is not leverage to <UNK>
Reference: parsegrid1request looks like it either would throw or return regirstaionrequest. should this just throw? or at least return an empty request object?
Candidate: please add a log.
Reference: remove this.
Candidate: is there a reason for this test is not <UNK>
Reference: same as in other checks and same below.
Candidate: is there a reason for this change?
Reference: please move to a @before function
Candidate: could we use <UNK>
Reference: i think it would better with one condition statement. i also don't think the we need to use ismetricattributedisabled method as well.  if (!getdisabledmetricattributes().contains(type)) { output.println(status); }
Candidate: is there a reason for this method is not <UNK>
Reference: java8-isation [optional]
Candidate: this is not very expensive. maybe extract a method to a private method to <UNK> duplication.
Reference: changing jenkins.getinstance() and jenkins.getactiveinstance() to jenkins.get() is ok, as long as get() really is the right method in each situation - sometimes code uses different getters for good reasons. i'm
Candidate: please use <UNK>
Reference: i think it would be better to not call .connectionpoolsize(int) at all if the flag is not specified for helios-agent, that way the default value when not specified still resides
Candidate: i think that this is is not <UNK>
Reference: you can use  serializableitems.addall(objects);  instead of iterating the collection.
Candidate: you could use <UNK>
Reference: it should be ... state.playing && isttsinitialized ...
Candidate: you could use <UNK> |= <UNK>
Reference: why isn't this implemented in viewgroupdescriptor ?
Candidate: rename to
Reference: this certainly should be if(!values.contains(modifiedvalue)) values.add(modifiedvalue); and it could be placed in the previous if condition after &&
Candidate: please add a <UNK>
Reference: could you please explain what's the purpose of this removedrepos list? you seem to be accumulating repos in it while they're being deleted, but then you don't do anything with
Candidate: nit: remove the
Reference: what has the reason been behind this change?
Candidate: is there a reason to check that the is not empty?
Reference: look like generally you change a logic. in previous implementation we collect expection only if it's instance of uiassertionerror but you change this logic. why?
Candidate: i think that this is is not to be called in the <UNK>
Reference: would have this protected and with indent adjusted
Candidate: you could use <UNK>
Reference: this behavior is different than what we had in the prototype. since those impls were based on redis and rabbitmq, it's not so easy to compare with the local in-proc
Candidate: i think this became designed to understand, that we understand, that tracking the conditional.
Reference: nit: do we need to do a immutablelist.copy over variables.build()? (since it already generates an immutablelist
Candidate: unused
Reference: looking at the history, it's a convoluted way to set dirty = true in the parent class. we need it for that scenario:  java select s = select().all().from("foo"); system.out.println(s.getquerystring());
Candidate: i wonder if there is an error message that is is a corrected corrected corrected to corrected to corrected the corrected depending on the error now.
Reference: use constant for "replica". do we want port and partition with no separator?
Candidate: please add a "return" message here
Reference: its slightly awkward that landmark is unused here; its really just a for loop over landmarks.length.
Candidate: stream() -> <UNK>
Reference: you don't seem to gain much by moving the synchronized method from createrealmorgetfromcache to docreaterealmorgetfromcache ?
Candidate: this is going to bail at this point.
Reference: we want to make sure that the bucket name doesn't start with an upper case character, since it's one of the naming restrictions as mentioned [here](<link_0>
Candidate: unneeded unneeded condition. unneeded condition. unneeded condition.
Reference: given that quality is an int, i believe it is guaranteed not to be null, which makes the test unnecessary.
Candidate: is there a reason for this?
Reference: nitpicking, but i'd like this in the test before the node is killed
Candidate: suggestion <UNK> = <UNK>
Reference: store the positive concept in a variable outside of the loop so you don't have to re-fetch it each time
Candidate: style nit: we don't use braces around single blocks
Reference: can this be storageqos?
Candidate: you could use <UNK>
Reference: if this should really **never** **ever** happen, we should probably log it as an error, not warning.
Candidate: this is not problematic.
Reference: u == use.ndt || needs to be removed (otherwise, all math functions will be treated as non-deterministic)
Candidate: this should be <UNK>
Reference: remove the interruptedexception from the signature.
Candidate: this could be replaced by <UNK>
Reference: not obvious what this argument does. it looks like it's just to copy the identity? why not just pass a personident instead?
Candidate: this is designed to be 'final' here
Reference: at the point in the code i would expect that lock == value. i think it may be worth adding a sanity check for that. could do something like the
Candidate: i is a bit clearer, but i don't think we could use only:  java <UNK> <UNK> = <UNK> { continue; }  if <UNK> { <UNK> -1); }
Reference: nit: for consistency, can we rename delayms to latencyms?
Candidate: this is designed to be termination
Reference: this can be misleading in cases when running on non-azure hosted machines. as we default to vm credential if msi endpoint is not set. should we check if imds available
Candidate: you could use a constant?
Reference: this is not needed
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why not init frequirements in the beginning and make it final?
Candidate: this should be a <UNK>
Reference: change log level to debug
Candidate: ![major](<link_1> 'severity: major') reduce this number of anonymous anonymous anonymous anonymous number of most 20, [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0>
Reference: if (, braces
Candidate: please add brackets around
Reference: you can put the guard clause first to reduce nesting i.e.  java if (!response.ispresent()) { return false; } // successful flow
Candidate: you could use "return <UNK> return?
Reference: it would be interesting to check the stored ids also, and not just that they are not null
Candidate: i doubt that this doubt that this is correct.
Reference: detectedbyorder is not final, so the value could technically change between those two calls. unlikely to happen, but semantically it'd be better to extract to a variable first. i'd also
Candidate: this exception is be thrown in <UNK>
Reference: merge the handleservicefactory and the handlepersistencemanager
Candidate: you could use <UNK> instead of <UNK>
Reference: do we have a potential leak here? i believe if we are calling resolve() we need a close as well.
Candidate: you could move this to <UNK>
Reference: is it really valid to always do this? if a user registered his custom function via native apis as lower case he wouldn't be able to use that function through
Candidate: you could use <UNK> instead of <UNK>
Reference: log in this case
Candidate: is there any reason to completes the completes <UNK> completes the completes <UNK> completes <UNK> completes completes
Reference: this finally block grew too big. consider moving its contents to a separate method. i'm also concerned with exceptions that can be thrown by this method. with the current code
Candidate: you could use putifabsent and increment partitions?
Reference: a lot of duplicate code with invoke. you can extract method with processor or create dto object
Candidate: if you can use <UNK>
Reference: this could throw a null pointer exception if a datacenter with that id was not found
Candidate: if you could use <UNK>
Reference: i'm concerned about your fallback here. all of the fallbacks should already be applied when the config was initialized.
Candidate: please use <UNK>
Reference: my first thought was that this is an impacting change as aql implementation will deactivate its expression cache for all evaluation in activatemetamodels but the siriusevaluationtask is used by the
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: ditto, will this break if we add repos at one point?
Candidate: you could use <UNK>
Reference: _nitpick_ i find statements like this a little bit hard to read, i would either: - surround the right hand side in parentheses: shouldnotreportissue |= (calleesymbol != null && "globals".equals(calleesymbol.fullyqualifiedname()));
Candidate: you could use <UNK>
Reference: introduce a private method for the right hand side please, i don't know what we're doing here ;)
Candidate: i think a no-op --> <UNK>
Reference: you need a new line above.
Candidate: please use <UNK>
Reference: why not to do it once and use it 4 times?
Candidate: why not we not use <UNK>
Reference: heap is unused here?
Candidate: is there a reason for avro ?
Reference: use {} in log statements
Candidate: i we tear down "return <UNK>
Reference: replace with a typescanner:  new simpleannotatedtypescanner<boolean, void>() { @override protected boolean defaultaction(annotatedtypemirror type, void avoid) { return type.getannotations().isempty(); } @override protected boolean reduce(boolean r1, boolean r2) { r1 =
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: sorry, but i am not understanding this: can you explain why you are setting this system property?
Candidate: this we have a separation to a trace, that the is not <UNK> to have a trace, globally defined at the end of the trace, trace, but the end up
Reference: i think that this method will never be called passing "false" as the parameter, so it may be better to have only one "readone" method, that doesn't receive it, and
Candidate: you could use <UNK> here instead of <UNK>
Reference: yeah, i'm also not sure why this needs extra sync.
Candidate: i think that this is is be to connection,
Reference: totalcount could be got from configloader
Candidate: can you explain why this is going to a separate thread pool threads.
Reference: log.trace if anything
Candidate: you could replace this with foreach with putifabsent with <UNK>
Reference: equals or compatible? for example return 0 will work for a double return type?
Candidate: you could use <UNK>
Reference: i think we should make the default behavior to ignore the extension and actually crack open the file. that way it will definitely do what's expected, it just might be
Candidate: please use <UNK>
Reference: i'm not too keen about having a failedcompletablefuturerepresentation that kind of duplicate the production code. i believe we should simply verify that some subpart of the stack trace is present
Candidate: is there a reason for this method to be called in <UNK>
Reference: should we change the test to actually verify the onchanged events separately? kind of confusing to verify that the second time is a pendingintentrequiredexception but we don't assert/care what the
Candidate: wait.forelementclickable() should be <UNK>
Reference: this should probably default to 443
Candidate: verify verify verify verify verify verify verify verify verify verify verify verify verify verify verify verify verify verify verify verify verify verify verify verify verify verify verify verify verify verify
Reference: do you want to add the cookie name/value in the message?
Candidate: this is designed to be a <UNK>
Reference: @dain, should this return int in aligning with getunsetbits? the existing getsetbits (write bits into a blockbuilder) returns void tough.
Candidate: we don't use <UNK>
Reference: i have a vague recollection that this has broken in the past and we added in the tolowercase to fix it.
Candidate: the mapping should be mapping here
Reference: catalogserver.altertable() throws only undefinedtableexception. did you add handling other exceptions for future work? even though you did, i think that duplicatetableexception does not occur.
Candidate: undefineddatabaseexception handled. handled. handled. handled.
Reference: there should be whitespaces between the strings and the plus signs. applies to the rest of jobs.
Candidate: why is this change?
Reference: i slightly prefer using a visitor: java out..walkinoptimizedorder(new defaultrealmatrixchangingvisitor() { public double visit(final int i, final int j, final double value) { return matrix.getdouble(i,j); } });
Candidate: you could use <UNK>
Reference: @vkuchyn better message is "use diamond operator"
Candidate: should we use a checkargument here?
Reference: should we only alert if the failure to contact the executor is consecutive? if azkaban is up for a long time, then it's likely there could be intermittent failures to
Candidate: you could use <UNK>
Reference: c != null check is redundant with the instanceof check after
Candidate: maybe we could be a <UNK> instead of <UNK>
Reference: small style nit: we don't use braces around simple statements.
Candidate: you could use <UNK>
Reference: i think if we move the logic into the useragentinterceptor we could new up using the prefix string and avoid all the reflection.
Candidate: we should use <UNK>
Reference: this locking technique is fine for now, but if we want to be able to scale to multiple processing nodes, we aren't going to be able to rely on a
Candidate: should be be <UNK>
Reference: could you not grant each phasetracker instance it's own pool and avoid the lock altogether?
Candidate: i clear() is is not
Reference: it was configurable before this change? you could add <property> <name>hbase.master.metafixer.max.merge.count</name> <value>11</value> <description>configure the max merge count</description> </property> ... to your hbase-site.xml and away you go? but maybe you think
Candidate: why not -1l again?
Reference: what about testing the usage of [var in lambda parameter definition](<link_1> (jep-323)? java @nonnull var x = new foo(); (@nonnull var x, @nullable var y) -> x.process(y)
Candidate: this is designed to be a log that the is succeeded to be closed depending on the user wants to decide whether the user wants to log the
Reference: condition can be simplified as data cant be null
Candidate: we could move this method to <UNK>
Reference: logger.debug
Candidate: you could use a string concatenation instead of string concatenation
Reference: illegalargumentexception seems like a better fit here.
Candidate: if this is not return false
Reference: do you have to do hasreplicationserver first? and then read it if present? or maybe this defaults false if not present?
Candidate: why we "do not <UNK>
Reference: doesn't this need to be a bootstrap datastream? i thought generatedatastream() only generates dummy datastream?
Candidate: same as printed as printed as printed as printed printed printed by default.
Reference: maybe there should be a style.getallskins() method returning a collection? then you can still use addall :) <logic,review
Candidate: i explained explained explained explained explained explained explained explained explained explained explained explained explained to a <UNK>
Reference: i think we should provide custommsg as argument (or instead of discoveryspicustommessage msg) and do not duplicate:  discoverycustommessage custommsg = msg == null ? null : (discoverycustommessage)igniteutils.field(msg, "delegate");
Candidate: if this is not
Reference: movetoblockaitask.builer().from(task).build() will crash because of the absence of the predicate. not so good...
Candidate: please use <UNK>
Reference: you can use guava preconditions check in this case : <link_0> simplifies a bit the code.
Candidate: we should use <UNK> to <UNK>
Reference: what's the point of catching and then throwing the same exception type?
Candidate: use <UNK> exception instead of <UNK>
Reference: the variable should be renamed similarly?
Candidate: this is designed to be synchronized,
Reference: what is the point of the local var since it is immediately out of scope?
Candidate: you could use <UNK>
Reference: potentially binary breaking change
Candidate: we could use <UNK>
Reference: ditto, can this still happen to be blank?
Candidate: please use <UNK>
Reference: similarly this line can be removed :)
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: because of u checked lock status of vm, i think that's why here it is better to use vmhandler.checkstatusandlockvm()
Candidate: i understood that the lock will be updated to command '{}'", transaction command command command command command command command command will be <UNK>
Reference: we've a configuration value for ?stable=false, not sure if it's client only. if it's client only, add it to the internal api configuration.
Candidate: i think that this is is unnecessary. this block is be moved through the own pr, but i'm not sure that this change.
Reference: one might want to perform a long comparison due to potentially problematic floating point comparisons.
Candidate: inline
Reference: this message means that the table of tablename does not have the partitionkey column. it would be better to print the partitionkey column is not the partition key of the
Candidate: minor: you could use a foreach loop here instead of <UNK>
Reference: (...).equals(boolean.false) -> !(...)
Candidate: if this is right...
Reference: this should happen within the future
Candidate: is this tear to tear down
Reference: why not call cachingtable.delete(key)?
Candidate: you could use <UNK>
Reference: why hardcode objcount?
Candidate: left over
Reference: with empty string, "".split(delim) returns array of length 1 with empty string as the element. then, adding to the list a folder "myfolder" and joining will result in ";myfolder" -
Candidate: suggestion <UNK> = <UNK>
Reference: instead of ignoring the test, please catch the exception and verify that the right exception is thrown i.e. check for a known part of the exception message.
Candidate: please rename this to <UNK>
Reference: is there any reason to support authentication-realm and authorization-realms attributes at the same time? or why isn't here else statement?
Candidate: suggestion <UNK> = <UNK>
Reference: do something?
Candidate: this is not <UNK>
Reference: this is checking for reference equality, not string equality.
Candidate: consider using this placement to tear down to tear out.
Reference: instead of suppressing an exception first and then checking for null, we should raise the exception within the catch block instead.
Candidate: we could use reflectiveoperationexception here instead.
Reference: suggestion map<string, class<?>> extensionclasses = new hashmap<>();  it looks better like this.
Candidate: i think that this construct, is a <UNK>
Reference: awaitretentionexpiration(500l); -> awaitretentionexpiration(500); for the three last use
Candidate: this is deserve a
Reference: could you make this variable final? could you also reverse the ternary statement so that it isn't negative, i.e. islive ? "" : "&t=" +  ? thanks for your
Candidate: you could use <UNK>
Reference: just a question, why do you use objects and not something like:  if (getcontext() != null) { getcontext().getcontentresolver().notifychange(rootsuri, null); }
Candidate: i pagelogging
Reference: looks like format is missing in equalsandhashcode
Candidate: use guava instead of objects.isnull
Reference: is confirmed locally about test results <link_0> could you please check those?
Candidate: is there a reason that expectedexception
Reference: we don't know if these were used in extensions, can the things that were public remain so?
Candidate: is there a reason for element?
Reference: looks like the file format is not uft8 which has resulted in loss of the currency symbols
Candidate: this is be a <UNK>
Reference: could return the value immediately.
Candidate: the exception is never be used.
Reference: just wondering, why sqlitetemplates?
Candidate: if you could use <UNK>
Reference: the same to <link_0>
Candidate: is there a reason for element?
Reference: i don't understand. may you describe logic of this method?
Candidate: you could use "\"" <UNK> + joiner.on("\", <UNK> + <UNK>
Reference: should it be also illegalstateexception here?
Candidate: no, we don't webapplicationexception to "return true" but yes, it should be "return true"
Reference: this change is not equivalent to existing code if coins[j] contains 0
Candidate: you could indent the pretty-print the length is quick quick number of elements of the #resolved
Reference: is this correct? if you use repl, the rpc manager is non-null and the distribution manager is null, right?
Candidate: use <UNK> instead of <UNK>
Reference: why not try-with-resources?
Candidate: if you could use <UNK>
Reference: don't do this if there are no case insensitive indexes
Candidate: we should use the exception here instead of <UNK>
Reference: be aware that <b> using multiple filters on the same criteria</b> (id, priority,..) leads, in most cases, to <b>only consider your last filter</b>. orth.
Candidate: <UNK>
Reference: also, let's update the log - someone didn't try to roll it back, they did.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: is it really that complicated to extract the preferences and replace globals.prefs by constructor arguments?
Candidate: could you use hardcoded constants instead of hardcoded hardcoded hardcoded hardcoded hardcoded hardcoded hardcoded hardcoded <UNK>
Reference: why two variables? you can just use one found of type method. if it's null - it means that nothing was found.
Candidate: minor nit : <UNK>
Reference: entity?
Candidate: you should use <UNK>
Reference: is there a reason to always show the trailing zeros? i had tried to avoid that.
Candidate: you could use <UNK>
Reference: why are you removing initial character? this is partialy responsible for test failures on *nix i believe. what is the output for you on windows?
Candidate: @ivange94 not sure that this is is not <UNK>
Reference: suggestion if (!jenkins.get().haspermission(jenkins.administer)) { return null; }
Candidate: is there a reason for element?
Reference: use illegalstateexception ....
Candidate: why we need to remove.
Reference: might want to use optional.map().orelse() or optional.ifpresent()
Candidate: why not use <UNK>
Reference: i think you need to have 2 loops here. as is, all the checks are still duplicated when the parent gets rejected. or, you could keep a rejected set.
Candidate: is there a styles for styles styles that styles styles styles styles styles styles styles styles styles styles styles styles styles is styles styles that styles styles that styles styles
Reference: 0 is a magic constant. i think this should no_error or some such. maybe also offer an interface to putresponse that does not require an errorcode to be passed in
Candidate: you should print stack trace to
Reference: this method seems to be a copy of sourceforeignkey.checkimportedmodel().
Candidate: this should throw an npe here instead of:  if <UNK> == null) { return <UNK> } }));
Reference: i don't think this is the right thing to do here. this is supposed to be the maximum size of a sample, which is unrelated to how large the audiotrack
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: @fanifieiev please, use split (text) from cactoos or leave a puzzle.
Candidate: this is designed to be a <UNK>
Reference: cannot we do this during the planing phase? right after the plan has been built?
Candidate: you could use a sub <UNK>
Reference: shouldn't this message be added to another class in the same way the other logging messages were?
Candidate: if you right... right... right... right... right... right... right... right... right...
Reference: i believe the size of the strategies list matters more here. so i'd get rid of the check on lines 66-68 and would check whether strategies is empty then return
Candidate: if you could use <UNK>
Reference: i am wondering if it works as expected. let's say currentstandbys.keyset() = [2, 3, 4] and newstandbys.keyset() = [1, 2, 3]. so 1 got added and 4 got removed. we
Candidate: i think this should be a <UNK> <UNK>
Reference: better to use doanswer(invocation -> values).when(mockmemorystore).getall(); or when(mockmemorystore.getall()).thenreturn((map) values);
Candidate: why is this change?
Reference: please add static import for mockito functions (that goes for all places)
Candidate: you should use the guid instead of <UNK>
Reference: i'm not sure silent catch is good as after that url is null and it will create exceptions
Candidate: wdyt about catching exceptions?
Reference: please here use also getbooleanvalue, it should simplify the code a bit
Candidate: should we use <UNK>
Reference: violationstore.save("msg");
Candidate: you could use a string message: ", " + <UNK>
Reference: spelling
Candidate: i think this is designed to a trace, but i wonder if this is is a no-op but i'm not sure that we want to have a lock
Reference: i think this keeps the status permanently at 99%. i think we want something like math.min(progress, 99.9)
Candidate: why this args?
Reference: could you remove all of these empty lines in this method and below (navigatenextcomponent)
Candidate: minor nit, but you could be simplified to <UNK>
Reference: for reusability, it's probably worth extracting this logic to a generic method that gets a snapshotstatus. i.e. something like 'vmnotinstatus' and 'vmnotduringsnapshot/vmnotinpreview' methods.
Candidate: this is nitpicky, but i would be more readable.
Reference: sorry, i realize that setting this option whenever a failure reason needs to be sent creates a lot of duplicate code. maybe a better solution would be to have a
Candidate: this is not be used?
Reference: what happens if user-agent is not set? does this return an empty list or null?
Candidate: i think this >= 0, <UNK> >= 0.
Reference: some differences explained here : <link_0>
Candidate: is this tear down to tear quickly
Reference: throws
Candidate: throw an exception
Reference: remove?
Candidate: please remove system.out
Reference: this may not always be true if it's to be live reloaded
Candidate: hmm, i feel like me like this could inject <UNK> to inject this pr, but i feel like a lot of pr, but i feel like we could inject a
Reference: you can just return keyinset without having to set it onto referencetolockkey and return null on line 105
Candidate: i think this is a <UNK>
Reference: if the integer cannot be accessed from multiple threads, there is no need to make it atomic.
Candidate: i think that this clear() is succeeded is designed to execute the <UNK> phase.
Reference: typo: request.
Candidate: we should use <UNK> to <UNK>
Reference: if input is null isn't it valid for blacklist patterns ? i think we should either throw illegal argument exception or consider null as valid. i prefer it to be
Candidate: if we is a log.debug mean.
Reference: many blank lines in here
Candidate: is there a reason that is not to permission?
Reference: do we need this as part of this patch? if it fixes another issue, let it be a different patch.
Candidate: this is designed to be initialized in the <UNK>
Reference: why don't you directly build string[] here? btw, there's a findbug violation on casting to string[] below
Candidate: this doubt that this is is not <UNK>
Reference: minor typo in variable name; has an extra unneeded "m".
Candidate: is there a reason for avro exceptions?
Reference: 'if" statements with 'else' branches should have curly braces around both branches.
Candidate: i think that this is not efficient, we could use the <UNK>
Reference: isn't it docker/dockerfile ?
Candidate: is there a reason why not default?
Reference: is there a reason why these lines are removed?
Candidate: router instead of passing "atable"
Reference: ditto about checks. i don't think we need to duplicate them.
Candidate: this is not ignored.
Reference: rename o1 to method1 and o2 to method2 for better code readability.
Candidate: i proposed proposed proposed the proposed proposed proposed proposed proposed proposed the proposed proposed proposed proposed proposed proposed proposed proposed proposed proposed proposed proposed proposed proposed proposed proposed proposed proposed
Reference: if path is simple, i.e. just the project name, then ppath.lastsegment().equals(path) is true and as a consequence locatiouri is set to null (the default location). the parameter insidews is not
Candidate: this is not needed
Reference: location is always related to an activity. therefore, i think it does not make much sense to just add an location here. it needs to be assign to an activity
Candidate: we could use <UNK> annotation, instead of <UNK>
Reference: even if this is just temporary, we should still use okhttp's client: java @override public downloadresponse head(string siteurl) throws ioexception, recaptchaexception { final request request = new request.builder() .head().url(siteurl) .addheader("user-agent",
Candidate: how about using narrowing this <UNK>
Reference: is this being read anywhere? plus we seem to be saving the same thing twice?
Candidate: should we move this to the view?
Reference: there is a guarantee that the first statement after a if is executed without being preempted. but only the very first statement [1]. so you could null-check directly on ftempfile
Candidate: could you please use <UNK>
Reference: the thread should clear the interrupted flag here, right?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this if doesn't do anything
Candidate: this is designed to be synchronized,
Reference: in tostring() and log messages, we use "[" to denote lists, collections, arrays, etc. we use "(" to denote fields. so let's change this into: return "pair(" + key +
Candidate: use <UNK>
Reference: we could probably simplify this a bit: suggestion return supplier.get();
Candidate: this is designed to be a <UNK>
Reference: we should move this statement to the outside of else clause. also, what do you think about a more detailed log message? for example, we can log information about blockid,
Candidate: i think that this is not efficient, we could use the <UNK> _in <UNK>
Reference: disposables is null.
Candidate: suggestion <UNK> = new <UNK>
Reference: don't we need to kill the thread pool in the end of test? the point is because of this:  public static executorservice newsinglethreadexecutor() { return new finalizabledelegatedexecutorservice (new threadpoolexecutor(1,
Candidate: this is not implemented in the
Reference: for my curiosity, why the parenthesis is needed?
Candidate: this could be replaced with character-based <UNK>
Reference: remove default.
Candidate: this should be a <UNK>
Reference: why keep the random number? but the bigger problem is that countmarshallingpojo uses static fields for the marshall count, and it breaks when 2 of the many tests that use
Candidate: i think this should be a <UNK> <UNK>
Reference: let us avoid any new lines unless there is a reason.
Candidate: is there a reason that is is not to be printed here?
Reference: @nielscharlier try-with-resources?
Candidate: please add a exception here as well.
Reference: same as with the radio
Candidate: you could move this to <UNK>
Reference: we must check if resourceclasses is empty and in that case, set the width manually, as is done in fill(). currently the following test is a problem: run two debug
Candidate: please use <UNK>
Reference: this should probably be bounded by the max ttl config?
Candidate: use <UNK>
Reference: use assertnotequals instead of == operator combined with assertfalse, == does not work properly for non-objects. <testing
Candidate: could we use <UNK> >= <UNK> == 0 ?
Reference: can you please use {} brackets around single line if/else too?
Candidate: is there a reason for element?
Reference: looks like we have to do this in all code paths that consumer the response.
Candidate: i would be a bit more efficient, that this is is not <UNK>
Reference: should this tostring have errormsg as well?
Candidate: is this a deadlock supplier.get() throws an object object object object object object object is not used.
Reference: can we get around this instanceof somehow? should it be generally possible to invalidate entityref?
Candidate: is there a reason for this method is not <UNK>
Reference: getcontent can be null if the file was only moved
Candidate: if you could use (context <UNK> annotation?
Reference: this may throw exception
Candidate: i think this should throw an exception instead of wrapping the exceptions?
Reference: check that thow e doesn't crash media-server
Candidate: please use <UNK>
Reference: we could cover it with some tests.
Candidate: this is designed to be a layout
Reference: should be "this(true)".
Candidate: <UNK>
Reference: same here final agentproxy agentproxy = agentproxies.newinstance()
Candidate: is there a reason for this logic?
Reference: these shouldn't be in the memory cache section.
Candidate: could we use <UNK> pretty-print if <UNK> == null || <UNK> == 0) { ... }
Reference: do you really want to wait 6000s here ? this is almost 2 hours, that's insane for an automated test.
Candidate: string separator separator --> string separator separator separator
Reference: is there a case where authentication != null for anonymous users? in other words: can we remove the second part of the check?
Candidate: we could use a <UNK> <UNK>
Reference: the text is grammatically incorrect. encrypted secrets *are* redacted is probably a safer and shorter statement
Candidate: is there a truly a property?
Reference: use gethttpport() instead of repeating call to getattribute()
Candidate: @gunnarmorling mind to <UNK> coupling
Reference: it could be extracted as a constant name:  private static final string workspace_name = namegenerator.generate(deleterunningworkspacetest.class.getsimplename(), 5);
Candidate: you could use <UNK> instead of system.out.println
Reference: use this instead nhincconstants.async_db_rec_exp_val_units_sec.equalsignorecase(units) and remove units!= null
Candidate: use <UNK> instead of return?
Reference: sorry.. being pedantic.. in the onfocus handler you call a method enabledatamodelerdockswhenishidden()... would this second method be best called something like showdatamodellerdocks()?
Candidate: if you could use <UNK> <UNK>
Reference: looks like i see an issue with tcpnioconnectiontests.int3453racetest. previously we waited for the tcpconnectionopenevent, but now we have a new one tcpconnectionserverlisteningevent, which definitely is emitted before connection.publishconnectionopenevent();. the 
Candidate: why is this guaranteed to be used here?
Reference: i think @dlotts added some code here for removing statements from the indexers. make sure that doesn't get erased here.
Candidate: this doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt doubt
Reference: return type should be the searchresolver interface for autowiring to work if needed in future
Candidate: <UNK>
Reference: wait doesn't require returning the value. imho it's better to rename method to isfilenamesuggested(namefragment) according to the actual commands.
Candidate: suggestion <UNK> = <UNK>
Reference: move to static getactiveinstance() and use it everywhere?
Candidate: you should use the <UNK>
Reference: in order to avoid the pleonasm, what do you think of renaming the token variable inside the token class to: bearertoken? that way, this line would become:  java assert.assertequals(bitreserveclient.gettoken().getbearertoken(),
Candidate: is there a reason to assert that this is is empty?
Reference: instead of isoptionavailable, getgctype makes more sense
Candidate: this should be a <UNK>
Reference: so here we add this fragment on the backstack, but earlier (line 57) we add the same fragment but without the backstack. can you explain the different situations you are
Candidate: please use <UNK>
Reference: this should be moved inside the if to avoid unnecessary work when the if is false.
Candidate: you could use <UNK>
Reference: instead of matchers.notnullvalue() please, check that actual value equals expected value
Candidate: @essobedo let's use asserts here too?
Reference: can remove the 'else' clause...
Candidate: you can use the guid instead of <UNK>
Reference: i may be getting lost in the diffs, but where did this method go?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i don't think "%s" works here. should be "{}".
Candidate: typo: this change.
Reference: minor: false is a default value.
Candidate: why is this is prone to an atomic exception?
Reference: based on the api doc, all_keys behavior is now deprecated, please use an alternative.
Candidate: nope, this is not <UNK>
Reference: i think dashes need to be removed from ikey here
Candidate: this is not
Reference: why not just immutablemap.of()?
Candidate: suggestion <UNK> = <UNK>
Reference: should be loaded lazy
Candidate: i think that this is not be called in the <UNK>
Reference: arepublickeysvalid (or something like it) but *very* minor
Candidate: you can use <UNK> here instead of iscsi <UNK>
Reference: please remove the system.out here...
Candidate: use readasstring(...) instead of <UNK>
Reference: instead of passing stringbuilder can this be only string?
Candidate: is this tear down to tear down down down down down down down down down down down down down down down down down down down down down down down down
Reference: please add a log indicating that, something like: "stopping the session did not succeed, upload state has not been changed and it is still ${uploadstate}"
Candidate: is there a reason for none of these types are not validated?
Reference: i wonder if it's quicker to just do one query instead of two, then separate the results by toolmode? filtering and sorting are a lot faster in the db, but
Candidate: nit, we can use <UNK>
Reference: this function up to here can be replace with a call to fixnowandgetallowedwindow
Candidate: please use <UNK>
Reference: this is unit test running locally, where is hdfs coming into picture? why do you need hdfs??
Candidate: you should use <UNK> annotation, instead of <UNK>
Reference: @catherineromiyo didn't we wanted to get rid of this additional method? it would be much better to extend get_experiment_results to select the version and set this information with adapting the
Candidate: suggestion <UNK> = <UNK>
Reference: we should probably use the separator for the slashes in the /stor/multipart string as well.
Candidate: we could use a logging here instead of printing the error.
Reference: why not mytest test = new mytest() why casting to a parent class?
Candidate: wait.forelementclickable() could be <UNK>
Reference: 29 seconds is a fun number :)
Candidate: could we use <UNK>
Reference: i think you can remote this jump to next line
Candidate: wait.forelementclickable() should be <UNK>
Reference: we already have a function named handlenavintent. could those functions be combined? they seem to do pretty similar things.
Candidate: this should be <UNK>
Reference: change to getclusterdao()
Candidate: <UNK>
Reference: shouldn't this be a field so we don't have to create one each time
Candidate: this should be <UNK>
Reference: shouldn't it be !number.class.isassignablefrom(clazz)?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: we should only do this for direct exchanges. rabbit seems to be forgiving if you set a routing key for, say, a fanout exchange, but maybe they will tighten it
Candidate: can we move this to constructor?
Reference: i'm wondering whether we should use general_important_channel_id for both site creation success and failure?
Candidate: this is not be evil
Reference: iirc, since commonmodel#signout was removed, this listener will never be called, so we can remove it.
Candidate: why we lock is locked
Reference: core.title
Candidate: <UNK>
Reference: h-how did this happen?? the project setting's save actions are supposed to add brackets to all 'if' clauses automatically...
Candidate: _cough_
Reference: i guess you mean: java return default_encoding;
Candidate: if this is not error message is not null.
Reference: <code> client.getnamespacewatchermap().getnamespacewatcher(watcher)</code> will add a namespace watcher record if it doesn't exist. that doesn't seem right for removal. a new method in namespacewatchermap is probably needed.
Candidate: is there a reason for this method is not implemented by default?
Reference: the cannotserializetransactionexception and deadlockloserdataaccessexception are both inheritors of the pessimisticlockingfailureexception, so maybe we can go the way for their super class?
Candidate: this is not efficient, we should be a worker bottleneck. is a efficient, that the is not efficient, we should have to evaluate machines that machines that machines is
Reference: +1, i generally prefer this style so that all occurrences match.
Candidate: if this >= 0 && <UNK> { continue; }
Reference: string.valueof is unnecessary. so the following should suffice: "operatorid=" + getoperatorid()
Candidate: please use slf4j {} instead of {}
Reference: this should be a private method, it doesn't need any docs.
Candidate: could be simplified to pretty-print
Reference: the partial field is only used to do system allocations. now that you introduce usesystemmemorypool, is partial still needed?
Candidate: you could use <UNK>
Reference: framework.getservice(retentionmanager.class) can be extract outer the for loop
Candidate: you could use import <UNK>
Reference: don't do the string formatting yourself, that's done by the logging framework, i.e., change this to log.trace("sending delete request: {}", queryurl)
Candidate: this is not log the error.
Reference: it could be renamed to reflect that it sets blocksize.
Candidate: ![major](<link_0> 'severity: major') remove this operands of operands
Reference: maybe move this up and use the reference to avoid the repeat calls of  ((checkbox) view.findviewbyid(r.id.layercheckbox))... below. i know it's not your code, but would make it much more
Candidate: you could use <UNK>
Reference: you probably want to keep this? do change the connectorname though, seems like a copy-paste error
Candidate: i'm not sure how about sure about are, but i is a bit 221 that are, that we are, that we are,
Reference: why you throw plain exception ?
Candidate: please add a message
Reference: should we move this outside of the if block to make sure it will always be set to false when stopping the transport?
Candidate: this is be <UNK>
Reference: name1 must be final here
Candidate: if <UNK> == null : <UNK> == <UNK>
Reference: i think method overloading is a better approach rather than checking for nulls. wdyt?
Candidate: this is not be thrown from the mapboxwebviewmapfragment
Reference: lets do this with a traditional try/finally as it is more obvious what is going on. if there were more things going on in this code (e.g., loops, conditional code,
Candidate: if you could use a guava here instead of marking anything, but i wonder if anything, we could use <UNK>
Reference: i'd rather have the original exception propagate rather than be logged; just drop this catch clause.
Candidate: this is not needed.
Reference: its funny to read return notsanitized(...) when the method should return a sanitizedtext instance. maybe we should rename this factorymethod? also using the classe name would improve readability:  java
Candidate: this is a <UNK>
Reference: you should make sure all the apis have been called
Candidate: shall we use <UNK>
Reference: why does it check for platform here but not in other places where this is used?
Candidate: this should be a suitable
Reference: response is not closed
Candidate: is there a reason why not exceptions?
Reference: why logging at trace level?
Candidate: let's change this to
Reference: rather check the flag outside the loop
Candidate: this stream() is not needed
Reference: trailing whitespace. you can set eclipse's save action to remove all trailing white spaces since we might not be able to detect all of those manually.
Candidate: is there a reason to assert that <UNK> is empty?
Reference: since the body of the for loop won't be executed if the collection is empty, you could eliminate the collectionutils.isnotempty check. also, you could use objectutils.isnotnull for the null check.
Candidate: if this is is not "return" to log the debug level to log the debug level to print the log.
Reference: must be uppercase, too? or would we also be happy with lowercase input?
Candidate: you could use <UNK>
Reference: i noticed that you added a maxlength to the vinedefinitioncomponent but it's not used anywhere. this 20 is the vine's length so replacing it with maxlength will implement it.
Candidate: you could use <UNK>
Reference: check item and expectedtype compatibility?
Candidate: you can use this piece of this piece of a method call.
Reference: i still think this should be context parameter.
Candidate: use <UNK>
Reference: shouldcontinue = (done != total)
Candidate: you could throw an exception instead of printing it?
Reference: i don't think you need transaction here
Candidate: we should use <UNK> to <UNK>
Reference: please add at least one project
Candidate: you could use <UNK>
Reference: some issues with mixed tabs and spaces? please configure your ide project for spaces only.
Candidate: we could use a logger instead of <UNK>
Reference: should we create a constant for the value 10 and use it here and when creating the insert string?
Candidate: is there any reason why not export to here?
Reference: can we avoid multiple return paths especially inside nested loops?
Candidate: this is designed to be <UNK>
Reference: @tmarzeion i would probably extract this to separate method e.g. loaddiagnosis() and call it inside start(). the loaddiagnosis method can be reused later
Candidate: <UNK> -> <UNK>
Reference: line 307, using as h is inconsistent with line 291 where the as is removed
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: please change to validate(diskvalidator.isusingscsireservationvalid(getvm(), lundi sk)) to align with the rest of the method, no need for that variable.
Candidate: how about using <UNK>
Reference: else is not needed if you return
Candidate: you could use the multimap here instead of equals?
Reference: nit: space before "time"?
Candidate: maybe we could be a <UNK> instead of collector.
Reference: debug/trace/remove?
Candidate: use <UNK>
Reference: suggestion - replace it with ternary-if: setspice(pluginspice.detectbrowserplugin() ? ...) , it will be shorter and more readable
Candidate: this is not a bit dangerous, for <UNK>
Reference: just a note here. we have an unchecked cast from java.io.serializable to java.util.hashset<java.lang.integer> that could lead to aclasscastexception if at runtime the type cannot be found. in these situations, a
Candidate: @chaviw cr is not
Reference: suggestion if (error != null) {
Candidate: this is not (can be good to log the
Reference: could be simplified to return s != null && s >= seqno;
Candidate: you could use isempty() instead of <UNK>
Reference: same as above - old version was more readable in my opinion because now the condition contains more parenthesis, even wrapping multiple lines.
Candidate: rename to <UNK>
Reference: doesn't look like this is used
Candidate: this is not assert that this is is not <UNK>
Reference: would make more sense to me for latch to always be incremented and decremented, when it reaches zero the event is fired.
Candidate: if exception occurs, is the exception occurs, you could throw an exception exception instead of printing the exception
Reference: might want to encapsulate all of this into one object.
Candidate: this is unnecessary.
Reference: you should not call the parent impl
Candidate: you could use <UNK>
Reference: since we're synchronizing this call we could also check capacity first, instead of instantiating the messageidtracker and throwing it away if the map is already full?
Candidate: we could move this initialization to
Reference: maybe also check name is non null ?
Candidate: is there is a checkargument for a checkargument
Reference: let's make these also verify the error message.
Candidate: please move this to a separate pr,
Reference: nit: "phoenixttltool" here and few more messages below
Candidate: you could use a constant instead of <UNK>
Reference: this(new symbol(symbolname), estimate)
Candidate: i think this should be a
Reference: suggestion accessexecutionvertex[] taskvertices = ejv.gettaskvertices();  could we do this renaming to improve the readability since we're dealing with different types of vertices in this code segment?
Candidate: this should be a prefix? prefix?
Reference: we do not create the extension, we can do it lazily so defer the instanciation to the registy.get*()
Candidate: please use <UNK> instead of ==.
Reference: should be changed to the expressionutils.createstandardevaluationcontext(beanfactory) - creates standardevaluationcontext if there is no one in the ctx.
Candidate: use <UNK>
Reference: same here - let's revert and move the logic to reliablechannel.
Candidate: this is right...
Reference: instead of just casting and letting the function throw an error (which most users won't know to catch), how about prefacing the cast and returning null on error? requiring users
Candidate: this is a <UNK>
Reference: would an warning message be appropriate where in the case the svg is not found ?
Candidate: should we return <UNK> ?
Reference: i'll reshuffle things around a bit - this is a bit strange to keep on the api because dedupfilterholder is private
Candidate: this is a <UNK>
Reference: i think we can just do corporatecardsurchargecalculator.gettotalamountfor(charge): it will return the correct total if there isn't a surcharge
Candidate: <UNK> -> <UNK>
Reference: this.coll = new hashset<>(); this.coll.addall(input) -> this.coll = new hashset<>(input);
Candidate: rename to
Reference: error message parameter "name" seems to have been lost in the conversion
Candidate: this should be a <UNK> <UNK>
Reference: can we update the old code with the exception logging convention we are following now. log.error("exception while retrieving home community id: " + ex.getlocalizedmessage(), ex);
Candidate: should we use <UNK>
Reference: it is better to supplement the similar check to avoid this action is called multiple times in practice. maybe we can check the available exclusive buffers should be 0 in
Candidate: you could use <UNK>
Reference: not sure this actually throws a malformedurlexception any more. as it is a test, why not just use exception, the test will fail anyway if any exception propagates out.
Candidate: please use <UNK>
Reference: is it possible for this to be null?
Candidate: is there a reason for this class is avro to be a specific exception?
Reference: keys like "attempt" should be defined as constants somewhere
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: use fail again?
Candidate: export the export export export export export export export export export export export export export export export export export export export export export export export export export export export export
Reference: @pedrofvteixeira , enc is not being used in the decode call. is that on purpose ?
Candidate: you can use the multimap here instead of optional?
Reference: i don't think you should make this change. using an optional as a parameter to a method/ctor is problematic for many reasons, one of those reasons being the fact that
Candidate: suggestion if <UNK> == null) { return <UNK> }
Reference: it would be better if you could pass along this data, setting/retrieving a value in sharedprefences is a bit surprising
Candidate: wait.forelementclickable() should be <UNK>
Reference: this one needs to remain unchanged, if only so we know that api is working.
Candidate: you could use a hash hash
Reference: here that should be possible to initialize datagramwriter with a size ?
Candidate: if you could use <UNK> instead of objects.isnull == null || <UNK> != null && <UNK>
Reference: lets replace with return new mkdocs(this.dir, this.name.replaceall("[^a-z0-9]", "/"));
Candidate: use <UNK>
Reference: looks like updatedassignment = topicschanged as it's used currently? in theory it's unnecessary, but at least it can be used more clearly? edit: i see what it's doing, nvm
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this needs to be synchronized. i got a java.util.concurrentmodificationexception when closing the view while right after opening a trace.
Candidate: rename to
Reference: this is usually an anti-pattern, since we will crash below with npe if path was somehow null.
Candidate: this is going to be an array
Reference: do not use equals here - reference equality is what you need here.
Candidate: you could use <UNK> instead of <UNK>
Reference: this could also use try-with-resources.
Candidate: typo
Reference: should be response instead of method.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: when this stop command is run, have all the ipservers that use the tethering coordinator already been stopped? if not, and they are still running - is it safe to
Candidate: we should use <UNK> <UNK>
Reference: since its implementation is just one line, why not inline it?
Candidate: you should use <UNK>
Reference: does not distinct return null or false if only one side of the op is null?
Candidate: use a constant instead of <UNK>
Reference: this job is currently configured to have unique-by-entity & other constraints. you can see that by checking the old jobs that either 1) extend uniquebyentityjob, or 2) explicitly define the
Candidate: this is a <UNK>
Reference: same thing as above. we can create objectmapper once and use it over and over.
Candidate: you can use <UNK> annotation, instead of creating a object instead of creating a object
Reference: how about usertypes().contains(metrictype) ? this stream+filter+findany construct looks a bit convoluted in this case.
Candidate: you could use <UNK>
Reference: try / finally here too
Candidate: you could use <UNK>
Reference: in my opinion the target should be a member of the processinginstruction and not be part of the textual content. it is equivalent to the element name. there is also
Candidate: i think that this is is not <UNK>
Reference: this is a candidate for a faster alignment detection (pos & (bit_char-1)) != 0 the compiler won't be able to optimize because he can't proves 'pos' is only a positive
Candidate: you could use use objects.isnull
Reference: this change is not needed. please restore changes made to databaseshardmanager.java.
Candidate: could we use a constant instead of '+'
Reference: rename to operation
Candidate: if you could use a child correctness
Reference: should we use system properties instead of environment variables? or is there no easy way for the pct to specify system properties? i would use bourneshellscript.class.getname() + ". skip_binary_generation" as
Candidate: same as above.
Reference: i'm not sure how frequently people use a different uuid generation scheme than the default uuid4, but it might make sense to compare the sample rate to random.nextfloat instead. if
Candidate: suggestion if <UNK> >= <UNK> || <UNK> || <UNK> || <UNK> || <UNK> || <UNK> || <UNK> || <UNK> || <UNK> || <UNK> || <UNK> || <UNK> || <UNK> {
Reference: it is possible that containerid is null here as well. it will be better to handle containers with externalid null in this loop only.
Candidate: typo -> <UNK>
Reference: file separators need to be correct in tests too, in case of windows
Candidate: this (s is be
Reference: can't we use the same line without exceeding the row width?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: the signatures here are good, but i am wondering where the work of actually creating the object in fedora is moving to? it could be directly in these methods or
Candidate: you could use a <UNK>
Reference: super() can be removed
Candidate: <UNK>
Reference: @webron is this correct? that the _wrapped_ value would take the name items and the xml property itself would be item? i believe it's the opposite, but i've been staying
Candidate: is there a reason to use expectedexception here?
Reference: instead of using boolean.valueof(boolean).tostring(), just use string.valueof(boolean)
Candidate: please use getbackend() instead of <UNK>
Reference: let's only use dsfdebugoptions... as mentioned above
Candidate: let's rename to <UNK>
Reference: could be great to return an empty map instead of null
Candidate: maybe we could simplify this error by <UNK> by <UNK> by the <UNK> e);
Reference: are we hiding a bug here?
Candidate: you could use a multimap here instead of <UNK>
Reference: this should be a test error.
Candidate: this error.
Reference: use a more complex path in the test to also verify the fact that the entire path is not encoded. we need to verify that in the tests too.
Candidate: use utf-8 instead of <UNK>
Reference: this should be done also when not using a sitenode. any reason not to do this in authenticate instead?
Candidate: you should use a constant instead of <UNK>
Reference: these three lines are redundant with lines 291-293 below
Candidate: this is a bit more than once.
Reference: extract method
Candidate: nit: you could use <UNK> instead of <UNK>
Reference: no provisioning will happen as long as there are things currently provisioning? do we want to be able to still provision here, up to a limit?
Candidate: surprised that surprised that surprised that surprised that surprised this piece is covered covered by <UNK>
Reference: return executecommand.execute(action, resultcallback);
Candidate: is there a reason for element?
Reference: i am not sure about synchronisation around this variable. it is the first time i am looking at its lifecycle and it seems to me that we are not doing
Candidate: if we could be <UNK>
Reference: increase to debug-level
Candidate: if we could use a string instead of "return <UNK>
Reference: did you mean to leave in this em.remove()?
Candidate: if this is is not
Reference: i think this should be left in - when one arg checker is needed, i would usually check everything
Candidate: please use <UNK>
Reference: might be worth creating a function selectbutton(view button) to set the typeface and the color?
Candidate: you can use the multimap here instead of instantiating the property?
Reference: better to use files.createdirectories
Candidate: suggestion <UNK> = new <UNK>
Reference: replicas -> replica
Candidate: this should be <UNK> ex.
Reference: we import it already, no need for the java.nio part.
Candidate: you could use <UNK>
Reference: the call to this() isn't needed.
Candidate: is there a reason for this class is not modifier) instead of the constructor?
Reference: this test case is actually using an empty string instead of a null string. should it be updated to use a null string, or should this test method just be
Candidate: this readasstring(...) instead of <UNK>
Reference: please just define on the next row.
Candidate: you could use <UNK>
Reference: use atomicreference<realmasynctask> instead. it is much more readable imo
Candidate: you could move this to a separate method.
Reference: use (swt.h_scroll | swt.v_scroll) instead of swt.none style when constructing the table
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: the term 'processing' is rather ambiguous in the case of scheduling. i would recommend using 'triggering' here.
Candidate: is there a reason for element?
Reference: the two last checks can and should be squashed into one check - returnvalue.getvdserror() != vdcbllerrors.spmstatuserror, i actually prefer !vdcbllerrors.spmstatuserror.equals(returnvalue.getvdserror()) the first check can be removed, but that's up to
Candidate: this is be simplified (up to boolean <UNK> == false.
Reference: @omkreddy can you make similar changes here as well?. i had missed this in the previous review.
Candidate: use <UNK>
Reference: if it is an error, it should fail and the process should not continue. what the customers/support can do with such error/warn logs ? the purpose is only to help
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i have a preference for single assignment for arguments. this is just a nicety.
Candidate: you could bail here instead of <UNK>
Reference: it's not obvious that 102l is the same as 0b1100110l...
Candidate: you could use a constant instead of joining
Reference: shouldn't this be called by private constructor? what is the meaning of calling it twice on singleton?
Candidate: not sure how about the sure about the sure about the
Reference: let's remove that line as it's not part of the improvements
Candidate: you could use <UNK>
Reference: why not implementing a template method subscribe that calls an abstract method which has to be overwritten
Candidate: you could use a multimap here instead of <UNK>
Reference: you need to use arrays.tostring(this.getdnsservers()) here.
Candidate: you can use <UNK> here instead of <UNK>
Reference: this check should be the first thing we check. need to define a boolean isdiskimage = disk.getdiskstoragetype() == diskstoragetype.image
Candidate: no need to be locked
Reference: we know that values produces at most single row here, therefore project/filter/mark distinct is not needed
Candidate: typo: <UNK>
Reference: i do not like that we do not pass segment to dosnapshotindexes .
Candidate: if you could be a <UNK> <UNK>
Reference: fail
Candidate: nit: can be <UNK>
Reference: i would not include this message. usually an interrupted exception happens when we are killing the thread, which should only happen in shutdown and in that case the error is
Candidate: is there a reason for element?
Reference: could you change this to list<partitionid>?
Candidate: i catches the effective catches that catches the exception catches that catches that catches the will never be null. therefore, it will be an npe in the
Reference: this if statement could possibly be refactored to if (valid && doesaccountglobalhaveaccountrestrictioncodeandnosubfundgroupcode()) { valid = isthenewrestrictioncodevalidforeachaccount() }
Candidate: you can use the multimap instead of optional?
Reference: why do we only remove the task if it was active now?
Candidate: suggestion <UNK> -> <UNK>
Reference: isempty
Candidate: you could use the <UNK> property?
Reference: instead of calling init explicitly here, you could just call this() to call the default constructor zkconfig.
Candidate: is there a reason why getters instead of null?
Reference: use an overridable getoperationtimeout() method instead
Candidate: you could replace this with <UNK> with <UNK>
Reference: i don't think this will work because the returned and parsed value is not used. i expected: this.clientauthenticationmethod = clientauthenticationmethod.parse(auth);
Candidate: suggestion return <UNK>
Reference: shouldn't metadata be the default?
Candidate: this is not likely to bind <UNK>
Reference: i think it will be better to have separate property for ability to tag/untag sessions.
Candidate: @manuelplazaspalacio this is is not <UNK>
Reference: pk -1 ?
Candidate: you could use <UNK> here instead of <UNK>
Reference: @gknapowski it should most likely be route.issecure() && !route.istunnelled(), that is a direct (non-tunneled) connection to the proxy can be considered secure if the route is considered secure.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: mitsearchadapter should be instantiated with an array of size 0 if set == null
Candidate: you can mock to mock <UNK>
Reference: minor: i would suggest this:  if (domainname != null) { domainname = domainname.trim(); if (!domainname.isempty() && domainname.charat(0) != '.') { ... } ... }
Candidate: use <UNK>
Reference: i don't really know how this is used, but we might want to do something more like.  final outboundsocketbinding binding = outboundsocketbindingsupplier.get(); if(outboundsocketbindingsupplier.get() != null) { senderconfiguration.withagenthost(binding.getunresolveddestinationaddress()) .withagentport(binding.getdestinationport()); }
Candidate: this doubt that this is is not <UNK>
Reference: please add curly braces to all if statements.
Candidate: this should be <UNK>
Reference: should probably change this method to query initially for matching ids then pull the status records by id. if not you'll hit the error that i did.
Candidate: this catches the exception here instead of return?
Reference: why is this needed? if this is done because of errors, then the problem should be fixed where the update is called where it shouldn't be. <bug
Candidate: you could use a local var instead of <UNK>
Reference: logger.error ? logger.debug ?
Candidate: this exception is unnecessary.
Reference: realm should have an overloaded method getclients(this), that just calls getclients(this, null, null). this approach will result in extra query to get the client counts first, to then list all
Candidate: this should be implemented in the overload.
Reference: don't delegate to the value processor. just do this yourself.
Candidate: suggestion if <UNK> == 0) { ... }
Reference: here we also need a default prefix for asyncretry.
Candidate: i think we should be a <UNK> <UNK>
Reference: you changed lch.containsall(tsch) to tsch.containsall(lch)
Candidate: you could use use objects.isnull
Reference: i think runtime exception is not the best choice. what about filenotfoundexcpetion ?
Candidate: is there a reason why not default?
Reference: this will break the logicallinenumberrulercolumn in egit introduced in <link_0> . besides, it doesn't update the fcachednumberoflines. just call computenumberofdigits() instead?
Candidate: could be combined with <UNK> instead of creating a connection, instead of calling <UNK>
Reference: do we need to do this if updatedescriptor is set to false?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: 117 can be moved to before 59. this line only needs to be done once and shouldn't have anything to do with cancelled/completed. remove 116.
Candidate: you could use <UNK>
Reference: unused variable
Candidate: you could use <UNK>
Reference: why uk?
Candidate: use <UNK> instead of using "\"" + <UNK> + <UNK> + <UNK> + <UNK> + <UNK>
Reference: add our good ol' friend remove() :wink: (current would be correct for scala.collection.iterator :-)) // does not override abstract method remove() in java.util.iterator
Candidate: we should use <UNK>
Reference: with these usages in addition to those in [regionwsserver](<link_0> this queryresult initialization is getting very redundant. could this small code block be extracted to a method in the parent class?
Candidate: this could be <UNK>
Reference: i think this should be else if (clusterpermitted); otherwise, you'll unintentionally increase the number of available permits.
Candidate: this is not a nervous that this is is not <UNK>
Reference: actually you don't have to copy bytebuffer to an byte array, crc32 has a method to update crc with bytebuffer directly and it doesn't matter if it's heap bytebuffer or
Candidate: you could use <UNK> here instead of <UNK>
Reference: you should split existing rpc docs for this branch (i believe its second doc) and add version with new param onlysponsored. also it should be added to openapi, but i'm
Candidate: this is not correct.
Reference: unecessary runtimeexception
Candidate: i'm not sure how about sure about sure about sure about about are, about the <UNK>
Reference: looks like this trace line will cause us to call resolveupstreamdns twice rather than one and storing in a variable for logging.
Candidate: can be replaced with <UNK>
Reference: is it safe if we moved db operation outside of synchronized block and let the database handle concurrency?
Candidate: we could use a <UNK> <UNK>
Reference: why does the exception have to be caught?
Candidate: you could use <UNK>
Reference: static import
Candidate: i worry about this worry about this worry about this worry about worry many places
Reference: you are comparing floating-point values with '=='. that may not work all of the time. in this case, you are better off using as basevector3f.equals() seems to have some extra
Candidate: you could move this lock to the
Reference: could we assert the expected fetchedrecords?
Candidate: could you please use <UNK>
Reference: system.identityhashcode ?
Candidate: use blanks
Reference: hashostmachines() can be used instead.
Candidate: i think this should be a log the
Reference: i see the code here and below is only used to generate the big json test data but you can't call it from tests since it uses the same json
Candidate: is there a reason to print this?
Reference: why concatenate in the string below?
Candidate: you could use a guard here instead of <UNK>
Reference: use sprint.getattributevalue(atsattributetypes.startdate). shouldn't need to cast. same for enddate
Candidate: please use <UNK>
Reference: removing this line has only one impact on unit tests: we don't raise an issue anymore on:  def raise_builtin_function_python2(): raise super2() # noncompliant {{change this code so that it
Candidate: this could be simplified to java <UNK> <UNK> -> <UNK>
Reference: long line
Candidate: you should use <UNK>
Reference: you could fetch config.isfactoryresetondeletion() only once from the config and hold it in a variable.
Candidate: nextvalueindex should not be a state that we are not set on the reconnect state that will be reset state in the
Reference: nit-pick: typecast could be inlined here, avoiding explicit "original" variable declaration, since it's only needed here.
Candidate: you could use <UNK>
Reference: absolute show stopper.
Candidate: is there a reason to synchronize on the default?
Reference: @cyberone can we revise this test without using random string? i don't see the need for it here.
Candidate: if this is not efficient, we could throw an illegalstateexception instead of printing the exception
Reference: shouldn't this be developererror ? when you stoppresenting before calling startpresenting ?
Candidate: if you could use <UNK> <UNK>
Reference: minor: logger.debug?
Candidate: i think this is a <UNK>
Reference: suggestedfixes.qualifytype on "com.palantir.logsafe.unsafearg" will add the import automagically, or fully qualify the type if there happens to be a foo.bar.unsafearg already imported. we can append ".of" to the result.
Candidate: please use <UNK>
Reference: lets create printlasterrors in the kerrnal like osuser methods. log will not be needed.
Candidate: why not -1l ?
Reference: sets.intersection(subtypes1, subtypes2)
Candidate: you could use <UNK>
Reference: i think this is going in the right direction, but all these checks should be happening on setpemfile(path path). the idea is that we don't ever want an exportconfiguration instance
Candidate: if you could use a <UNK>
Reference: it would be better to allow to pass the (java.util.function.)consumer (or let this notify the event), to avoid the unnecessary collection/garbage.
Candidate: you could use <UNK> instead of <UNK>
Reference: you should return the error message either via an exception or just a simple return instead of returning a responseentity. responseentity should be constructed in the controller
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: if this fails, should we try to move the backup back to current (provided the first rename passed)?
Candidate: you could use this assertion.
Reference: deprecate setconnectionid and instead of setasstring call super.setid method to avoid duplication
Candidate: i recalculating clear() weights is not
Reference: why do we need operationtimeout as ctor arg. we can include this in the accept*session apis.
Candidate: this should be a foreach view?
Reference: probably could make these strings public static final vars
Candidate: this is not <UNK>
Reference: please use consistent indentation when adding new code. the changing indentation within this single method makes the pull request more difficult to read. most integrated development environments (netbeans, intellij, visual
Candidate: is there a reason :disappointed:
Reference: whitespace  tile.execute( this, tilecanvasviewgroup.getbitmapcleanup() );
Candidate: rename to
Reference: how are we sure that the operation won't complete before the router is closed?
Candidate: i think this is not efficient, but i am not sure how about the sure that we want to do that _in <UNK> <UNK>
Reference: even if the caller of the method is acquiring the lock, you should also acquire it in here to make it clear you are. doing a wait() on an object
Candidate: you could use a constant instead of a constant?
Reference: this condition, negated, can be added to the if above: if(!p.isopen || projectlocation == null || !repositorypath.isprefixof(projectlocation)) this saves us the more expensive io check for the file.exists()
Candidate: nit, we should have this exception
Reference: i'm not sure since it's a client setup issue, not a server-side issue. i would re-throw generalsecurityexception (it changes the open api but at least it's not ambiguous).
Candidate: no, log message for exceptions.
Reference: i just wanted to verify that utf-8 is working end-to-end, can we do this test with any other entity, like a survey or a study?
Candidate: you could use <UNK>
Reference: spaces
Candidate: whitespace
Reference: would it be a bit simple we maintain this map instead of a normal hashmap in this class ?
Candidate: is there a reason to synchronize super's i'm not sure how about sure that this is empty?
Reference: maybe another try with a multiple string[] ?
Candidate: use readasstring(...) instead of <UNK>
Reference: it would be good to assert that the password is not null at the beginning here
Candidate: please use <UNK>
Reference: i think we should do it the other way around - first process the status and then the devices 1. because the status is more important 2. because if that
Candidate: you could move this braces around the 'if' statement?
Reference: correct me if i'm wrong, but here you just setting the original body and status code, headers are lost. or it is a desired behaviour? and what do you think,
Candidate: this is designed to throw an exception here instead of constructing an exception
Reference: use a variable for mit.methodselect() instead of calling it 3 times.
Candidate: this is not <UNK>
Reference: this can be condensed: _preservesourceeventtimestamp = boolean.parseboolean(datastreamtask.getdatastreams().get(0).getmetadata().get(datastreammetadataconstants. preserve_event_source_timestamp));
Candidate: if we is going to pass updatemode in the
Reference: why is this synchronized? it looks like it might is because there is a concern about multi-threaded access to cachemap. if that is the case, then you *must* synchronize all
Candidate: should we use <UNK>
Reference: is this guy stateless? there should be a static instance() method on it.
Candidate: is there a reason for this change?
Reference: you could totes put this all in one line \o/
Candidate: we could be a logging here instead of <UNK>
Reference: i think you can do something like  return arrays.aslist (roleapi.loadrolebykey(role.administrator), roleapi.loadcmsadminrole()) .stream().filter(role -> null != role).map(role::getid).collect(collectionsutils.toimmutablelist());
Candidate: is there a reason for this method is null?
Reference: hmm... if the tile is not there do we need to init it to remove a tile that won't be inside it? :-)
Candidate: is there a reason for this change?
Reference: do not call dialect.getrowconverter during runtime.
Candidate: this is a bit strange to <UNK>
Reference: you're returning the wrong type here - you should return createeckeyoptions
Candidate: please add a message
Reference: it is mean that you have one puppet instance per each region. is it correct? is it the same for chef?
Candidate: we should use <UNK>
Reference: in case zoneid is null, maybe put "system".equalsignorecase(zoneid)
Candidate: i think this should be called here instead of <UNK>
Reference: ditto about isdebugenabled()
Candidate: please remove the
Reference: you can use kryocloneutils
Candidate: i think this feature is false?
Reference: please use parentheses when combining || and && to improve readability
Candidate: please use <UNK>
Reference: it may be confusing if we do this when user is waiting in the confirmation pop up for started volume. may be start all volumes(with and without force)after the confirmation
Candidate: this is not be encapsulated in <UNK>
Reference: > verschwindungszauber this doesn't feel like the correct term.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: likely, getclienttags
Candidate: you could use a constant instead of 'final'
Reference: could be simplified to:  if (site == null) { return new standardusernamelistboxmodel().includeemptyvalue(); } else { url url = site.geturl(); ... }
Candidate: please add curly braces
Reference: this hardcoded list sucks. maybe a meta-annotation?  java @sqlobjectannotation public @interface sqlquery { ... }
Candidate: this is be simplified to return <UNK>
Reference: !inputschemas.isempty()  - this is same check as inputschemasavailable right?
Candidate: suggestion <UNK> -> <UNK>
Reference: this function can be made static if you call getresources()... on the a argument
Candidate: is there a reason for this method to be null?
Reference: i might rewrite this as  java import javax.ws.rs.core.response.status; ... chain.dofilter(request, resp); status status = status.fromstatuscode(resp.getstatus()); if (status.getfamily() == status.family.successful) { eventsinkprovider.get().sendevents(); } else { log.debug("request failed, skipping event sending,
Candidate: nit: <UNK> -> <UNK>
Reference: maybe rename to something like: suggestion var unresolvedwindow = maybewindow.get(); final window resolvedwindow;  to clarify the difference between overwindow and window
Candidate: nit: <UNK> -> <UNK>
Reference: please make enable() and disable() synchronized and remove the shortcuts.
Candidate: wait.forelementclickable() should be <UNK>
Reference: @happy-neko let's call this from, [avoid compound names](<link_0>
Candidate: you could use <UNK>
Reference: i assume we should have the same behavior as exportvmcommand. do we still need this?
Candidate: how about reducing the
Reference: can be simplified with lambda evt -> evt.getkey() % 2 == 0
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: try mono.when(sender.send(message), sender.send(message))
Candidate: you could use a constant instead of <UNK>
Reference: rename to  final container container
Candidate: you should use a <UNK> instead of <UNK>
Reference: please keep this method simple by moving added logic in separate method
Candidate: can we use <UNK>
Reference: please use injection to check env variables.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: is it on purpose to not give exception to webresourcenotfoundexception ?
Candidate: you could use <UNK> here instead of <UNK>
Reference: really it is not a thread safe way to implement a singleton. here explain my point: <link_0>
Candidate: you could use a multimap here instead of creating a connection,
Reference: these exceptions can go into the method signature i think. removes some clutter.
Candidate: please use assertthat
Reference: suggestion buffer.skipbyte(); // okpacket header  does this need to be checked to ensure it's 0x00 (or 0xfe for eof payload functioning as ok payload?) or can we just assume
Candidate: you could use a <UNK> <UNK>
Reference: i don't understand why we check debug level here but log error,
Candidate: this should be webfaultexception
Reference: i'd really avoid the habit of re-writing method parameter values. what about: if (ismaintab) { commonmodelprovider.get().addpluginmodel( searchprefix != null ? searchprefix : label, historytoken); }
Candidate: you can be simplified to <UNK>
Reference: please include the exception instance itself instead of just its message.
Candidate: please log the webfaultexception
Reference: add this to be consistent with the above
Candidate: you could use <UNK>
Reference: confused about java. should it be } else { (all on the same line)?
Candidate: throw an exception instead of constructing an exception
Reference: with change i74e932d5eacd74dbf6b0dffcfc65ba3222a8250e this should become gettrackingbranch(), then this will also work if the tracked branch is a local one
Candidate: this is be careful to a messages.properties <UNK> part, but you can't rely on <UNK>
Reference: there were no close calls in this method before. how did closing the file become the responsibility of this class now?
Candidate: we could use <UNK> annotation, instead of sharing
Reference: should this just be a runtimeexception? ofe indicates a client mistake of some form. server faults can be runtime exceptions which then get logged in the server.
Candidate: is there a reason that we are sharing the properties?
Reference: what's the difference of this line? let's try to minimize the diff for reviewing.
Candidate: this args?
Reference: don't do assignment to student but just return java return logic.getstudentforgoogleid(courseid, account.googleid);
Candidate: could you move this to <UNK>
Reference: do we really want an info here? you made it a debug elsewhere.
Candidate: this is designed to belong to the
Reference: use computeifabsent?
Candidate: is there a reason for this logic?
Reference: what is the lifetime of the mathjaxbackroundrenderer object? in most cases the docdisplay returns a handlerregistration that needs to be manually deregistered (look for "releaseondismiss" for examples)
Candidate: i think this should be <UNK> _after_ the <UNK>
Reference: this seems to be used only in update()? given that it is much simplified let's put it inline within update() then, and let's remove this method.
Candidate: why not use <UNK> instead of creating a new object object object object object object object object object and 16?
Reference: redundant parentheses
Candidate: redundant
Reference: this method can now be private.
Candidate: this is not be a
Reference: there is actually problem with this code. if server value is not set, we still want to use user value. web app handles this situation.
Candidate: you should use null here as well.
Reference: i would not use final here, the scope of the variable is relatively short. the final obstruct the reading more than it provide guidance.
Candidate: this is designed to be a to <UNK> the <UNK>
Reference: nit: inconsistent "should the space be at end or start of line" treatment.
Candidate: i think (throwable level is unnecessary.
Reference: i think this empty line is not needed.
Candidate: is there a reason for this logic?
Reference: could you have a test on setting request id?
Candidate: you could use <UNK>
Reference: use query.setparameter and use termid.location_id.getid()  instead of appending to query string
Candidate: remove the
Reference: i wonder if there is anything else to assume about the completion. i'm just thinking about the forward compatibility, where they change it to "complete" or something completely different. perhaps
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: we should lift the creation of the cassandrakeyvalueserviceimpl outside of the lambda, and just have the lambda call isinitialized. i believe the lambda is invoked many times when starting up,
Candidate: this is be <UNK>
Reference: collapse into one line
Candidate: you could use <UNK> instead of <UNK>
Reference: don't need the context null check here anymore.
Candidate: this is expensive.
Reference: ![minor](<link_1> 'severity: minor') remove the literal "true" boolean value. [![rule](<link_0>](http://sonar-s4/coding_rules#rule_key=squid%3as1125)
Candidate: you could use stringutils.isnotblank() dates.
Reference: this would not be needed when passing context with processstats.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: move this to 244, then can get rid of extra if check
Candidate: this should be <UNK>
Reference: i'm not quite sure about that code. shouldn't it be removed?
Candidate: we could use a constant instead of <UNK>
Reference: doesn't getinstanceresultsubset already apply numresults before returning? if there are i1-i20 instances and if starttime is i11 and numresults is 5, does this code return: i16 - i20 or i11
Candidate: i think that this is is not efficient, we should have to to the the state of the the conditional.
Reference: let's also rename this to contenttypeapi
Candidate: use utf-8 instead of <UNK>
Reference: this does not seem realistic? incrementfailurecount() returns the new failure count, so should not return 0, and certainly not anytimes()..?
Candidate: please remove this log.
Reference: do i read correctly the only purpose of the map is to extract the value of this single entry 10 lines below?
Candidate: <UNK> -> <UNK>
Reference: maybe explode with a precondition check that capacity is larger than 0 here instead of exploding out of bounds [here](<link_0>
Candidate: is there a reason for element?
Reference: pls be consistent in the error messages, see line 94
Candidate: throw exception instead of e.getmessage()
Reference: minor typo : normalized instead of normilized
Candidate: use <UNK> instead of <UNK>
Reference: the method is called "connect()" but the logs speak from "reconnect()" - it would expect to log about "connecting"
Candidate: ah no, not sure that we tried to explain why we tried the <UNK>
Reference: if there is no specific reason, we can make the constructor private.
Candidate: this should be <UNK>
Reference: suggest naming this objectbindings
Candidate: this is be <UNK>
Reference: how do we know this call is for write? this message should be something like "key not found for id". right?
Candidate: we should throw an exception here instead of wrapping an exception
Reference: you can disable the action if volume is down
Candidate: is there a possibility that is not null?
Reference: might be useful to include the actual length too.
Candidate: could we use system.currenttimemillis() instead of <UNK>
Reference: this should happen in onunload
Candidate: we could move this to to the the are, iirc we are, set in the editor in the future.
Reference: should add more tab spacings to line 60.
Candidate: i think stringutils.isnotblank()
Reference: nice to have test cases. are all the cases that we want to cover? did also fail with an empty directory, or a directory that contained an unparsable file (not
Candidate: is there a reason to assert here?
Reference: why the batch here? it only contains at most one operation.
Candidate: you could use the guid instead of <UNK>
Reference: can be invoked if the remove is successful.
Candidate: i think this should be to be called from the view?
Reference: optional: this would be more readable with an "import static"
Candidate: please use <UNK>
Reference: this method should have default visibility as it was before to avoid synthetic access.
Candidate: intellij format.
Reference: why do you need checknotnull() here? chartseries.getx() should be already @nonnull due to the package annotation.
Candidate: this is be a <UNK>
Reference: should we use a range annotation, something like @intrange(from=0)?
Candidate: you could use a constant here instead of <UNK>
Reference: maybe return ringtime.isbefore(currenttime) to avoid the if
Candidate: this is is not compute the
Reference: under what circumstances can you reach this line and have nextrec not be null? it's not modified outside of this method. making it a private field would make this a
Candidate: is there a reason why not is empty?
Reference: remove and call reinitializecharts on the viewer instead.
Candidate: this is bail probably?
Reference: 'this' is unnecessary in this context
Candidate: suggestion <UNK> = <UNK>
Reference: should not log an error, that's usually reserved for possible issues/bugs in the code.
Candidate: this is deadlock the deadlock the deadlock the deadlock the deadlock that deadlock deadlock deadlock the deadlock the deadlock the deadlock the deadlock the deadlock the deadlock
Reference: this operation should not block, so probably do not need to run it in the sync commit executor. could probably just call commit failed and return a completed future.
Candidate: this picky picky thing, but this picky picky thing, but this is picky suggestion <UNK> <UNK> timeout) { <UNK> { <UNK> timeout) { <UNK> { <UNK> timeout) { <UNK> {
Reference: can this be mandateid please?
Candidate: h = new <UNK>
Reference: not needed.
Candidate: <UNK>
Reference: why close?
Candidate: this is designed to be a <UNK> <UNK>
Reference: is this a bug in schemautil.getqualfiedtablename? this seems like something we shouldn't have to repeat everywhere.
Candidate: this "_" is a bit clearer, but we could use a string concatenation instead of '+'
Reference: i think it should rather be : '#?' instead of just '?'. i you use just '?' it will replace the query string if there is one (for example the
Candidate: please add a <UNK>
Reference: is this a good idea? all this will lead to is a null pointer exception later on. why not throw a descriptive exception here?
Candidate: this is designed to throw an exception instead of constructing an exception catches
Reference: remove this unnecessary arraylist instance.
Candidate: <UNK> -> "_" = <UNK> -> <UNK>
Reference: guessing that after setting the axon_code_style.xml, these changes would be reverted.
Candidate: no need to mock here
Reference: there is no need to handle visibility in the action. this logic is the responsibility of usersession
Candidate: static import
Reference: there is already a runonuithread in this class that takes a runnable. as this callable does not do anything with the result i would recommend changing it and getting rid
Candidate: maybe we should add a error message to debug message to show the error message.
Reference: why isn't normalized.tostring().isempty() working?
Candidate: is there a reason for avro to be a
Reference: log.trace("proceeding event " + event.getname()); ->  log.trace("proceeding event {}" , event::getname);
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: as @mswiderski said, this should be also replaced with the feature of assertj.
Candidate: log.debug -> <UNK>
Reference: don't see reason to have this if...else. it would be just enough to use: firstrecordexpression.getvalue(evaluationcontext, requestmessage, number.class)
Candidate: i doubt that this is is strange, but i doubt that this is not required, but i am talking sure that this is not
Reference: okay so you already have this covered, no need for anchorpointtest above?
Candidate: you could use <UNK> annotation, instead of <UNK>
Reference: looks quite useless. since this is the viewer, any reason why you have the getviewer() method that basically returns this?
Candidate: you could use all() method
Reference: [optional] i know that it is a kind of pattern to use the classundertest name for the tested instance. however, it doesn't always help with the readability. for me, this:
Candidate: wait.forelementclickable() should be <UNK>
Reference: why did you wrap in a throwingrunnable?
Candidate: i'm not sure how about the sure about the sure that this is is is that the is completes the is not <UNK>
Reference: since this isn't actually what we're testing, maybe we don't need assertthat and can just call hasnext directly.
Candidate: you could use <UNK>
Reference: please use { } for all ifs suggestion if (!extract_contamination) { contamination = 1 - contamination; }
Candidate: use <UNK>
Reference: that should be tohtmlforperiodical. you mixed those two up.
Candidate: i think this should be defined in a messages.properties class
Reference: new adf should not be hard-coded but should come from the string resources. e.g. getresources().getstring(r.string.default_adf_name)
Candidate: you can use <UNK>
Reference: interesting! wonder why you calculate mvbssize in two steps rather than one?
Candidate: i wording. we should use stringutils.isnotblank rather than a conditional.
Reference: i'm not sure we need a public getter for this, since this should be used internally only.
Candidate: this is a <UNK>
Reference: too long
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: suggestion return !jenkins.get().getdisabledadministrativemonitors().contains(id);
Candidate: is there a reason for this change?
Reference: after overriding equals() and hashcode(), could you write a test to verify they work well? by using equalverifier, you can look for many example of that usage in james project!
Candidate: please use objects.equals
Reference: this shouldn't be required any longer i think.
Candidate: i think that this is not efficient, but i would be cleaner to use <UNK>
Reference: should this be consistent with line 40 above (getint vs getlong)?
Candidate: this could be replaced by "this".
Reference: no logging necessary in the tests imo
Candidate: is there a reason that is not to be printed here?
Reference: should this be synchronized?
Candidate: you could move this to <UNK>
Reference: why do you want to do this if you already have a hardcoded string in the .ui file?
Candidate: suggestion if (throwable == null) { return <UNK> }
Reference: i'm a fan of breaking lambdas into method refs: .map(annotatedelement::getannotations) .flatmap(stream::of)
Candidate: you can use this method to <UNK>
Reference: cache the value of getmodel().getobject(). i suppose, it may be expensive to calculate in some cases.
Candidate: use <UNK>
Reference: could this be protected as well?
Candidate: you could move this to a separate method.
Reference: consider using the validateprimarylanguage for testing the results, rather than converting them to lists and then doing the comparison.
Candidate: use <UNK>
Reference: we don't do this. please replace with a proper log statement if you feel it necessary
Candidate: this is not a <UNK>
Reference: nit: better to call eligibleforload(currinterval, interval) for easier code maintenance.
Candidate: this should be <UNK>
Reference: why not returning a optional<string>?
Candidate: use <UNK>
Reference: the above two cases are not errors.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: targetcontrolledpermanent needs to have nottarget set to true as it doesn't actually target anything.
Candidate: this is designed to bottom of activated run()
Reference: rename it to just key please.
Candidate: you could use <UNK>
Reference: please replace with: vmdevicedao dao = getdbfacade().getvmdevicedao();
Candidate: maybe? maybe?
Reference: sadly i am not at my working computer. i can do a push on monday if you prefer.
Candidate: you could use <UNK> here instead of <UNK>
Reference: break;
Candidate: is there a reason that is bigger?
Reference: check for null before using options.
Candidate: suggestion <UNK> = new <UNK>
Reference: i think the "while (true)" loop should be removed. i think it is a remnant of the trylock code. as it is now i don't see that it would ever
Candidate: you could use <UNK>
Reference: i suppose i18n is needed here
Candidate: if we could use a <UNK> <UNK> <UNK>
Reference: what do you think about enforcing an *exact* sdk version requirement, instead of "minimum"? i'm guessing that future sdk versions might have slightly different font rendering or other subtle differences
Candidate: this is a bit dangerous, for this use-case.
Reference: this line is superfluous.
Candidate: can you use <UNK>
Reference: since you are passing this to the superclass constructor, why not have a superclass manage the lifecycle of this variable? cryptographyasyncclient can have a protected method getkeyid() to get this
Candidate: is there a reason for this class that is is not a property?
Reference: putting noclassdeffounderror here can hide our own stupidity in other parts of this code :-( perhaps we should narrow the window for catching noclassdeffounderror to only the calls to testclass.getdeclaredmethods()
Candidate: maybe we could be a warn instead of printing the stack trace level to be printed level
Reference: maybe add "&& entry.getvalue() instanceof integerdefinition"
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: as we talked before, i'm not sure if this should be left to high or the default medium... your quick test showed that it appears the difference in terms of
Candidate: suggestion if (throwable == null) {
Reference: should be comparing sets instead of array comparison, as the order is not guaranteed.
Candidate: minor cr
Reference: v -> versions? since in the else branch it is fully named.
Candidate: please use <UNK>
Reference: why not use entitytype#getname()?
Candidate: rename to <UNK>
Reference: could you turn the resulttype in an if else case and if none matches do asstring?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this variable is not used; remove
Candidate: nit: add a space
Reference: change variable name to something more descriptive.
Candidate: consider making a bit named addbuyordertoorderbook named addbuyordertoorderbook named addbuyordertoorderbook named addbuyordertoorderbook named addbuyordertoorderbook named addbuyordertoorderbook named addbuyordertoorderbook named addbuyordertoorderbook named addbuyordertoorderbook named addbuyordertoorderbook named addbuyordertoorderbook named addbuyordertoorderbook named addbuyordertoorderbook
Reference: very minor but let's try to be consistent with the order of the method parameters.
Candidate: i think this should be a
Reference: i would suggest getting layout manager from registration client, rather than construct zk layout manager directly.
Candidate: nit: move this to <UNK>
Reference: would be nice to have a describe() here too.
Candidate: this fail()?
Reference: add final keyword? also other places when necessary.
Candidate: you could use [] download statements.
Reference: well spotted, this is confusing :)
Candidate: same here, as well
Reference: nit: slight formatting improvement suggestion string dialogcontent = dialog.getcontext().getstring(r.string.confirm_deletion_message, " \"" + listname + "\"");
Candidate: please use <UNK>
Reference: in combination with making configurationmetadata empty, we should also prevent this from be null
Candidate: this is be <UNK>
Reference: instead of adding 2 levels of callback, can you extract the for loop into a function and call it at onsuccess() and onfailure() below?
Candidate: suggestion throw new <UNK>
Reference: do you need integer.tostring? this might work: hostname = "" + 0xff & hostaddress + "." + ...
Candidate: use checkargument
Reference: this((run<?,?>)owner, ...) would be simpler and safer for further class evolution down the line.
Candidate: please use <UNK>
Reference: the argumentcaptor isn't used any more so should be removed
Candidate: @manuelplazaspalacio this is not <UNK>
Reference: i think it's better to use indexedpath.touri().tostring() since it's more likely to roundtrip correctly for non-file paths.
Candidate: you could use <UNK>
Reference: why the casting?
Candidate: you could use <UNK>
Reference: i do not understand why to punish yourself, make it simpler.  final kafkazkclient zkclient = createzkclient(zkurl) try { ... } finally { zkclient.close(); }
Candidate: @ivange94 not sure that this exception is thrown in the error message.
Reference: filter.getcomparisonoperator().getvalue() could be set to comparisonoperator.equals because it is the only supported operator. just the parameter not the string template placeholder.
Candidate: suggestion if <UNK> > 0) { > 0
Reference: use a logger instead ;)
Candidate: nextvalueindex should not be a connection,
Reference: suggestion // global stores are on every node. if we don't have the host info
Candidate: we could use a multimap here instead of objects.isnull
Reference: what you should do here instead is to update the adapter's item list.  adapter.setitems(projectmanager.getinstance().getcurrentproject().getscenelist());  or  initializeadapter();  although the initializeadapter does more than that (would still work
Candidate: i'm not sure how about the sure about the sure that this is is that the is is not :disappointed:
Reference: since you're restricting this to 100 entries it's ok for now. still, i think we should consider using a better data structure for the lookup operations, like a hashmap. one
Candidate: if this is not null && <UNK> != null && <UNK> && <UNK> && <UNK> && <UNK> && <UNK>
Reference: no point in synchronizing entire getinstance() (read+write), you should be only synchronizing 'write' to instance
Candidate: @vilchik-elena this is not to be <UNK>
Reference: this sequence of database queries needs to be wrapped in a transaction.
Candidate: fyi, you could use <UNK> instead of creating a new connection, instead of creating a new connection,
Reference: hardcoded string "id"
Candidate: you should use the <UNK> <UNK>
Reference: what band this refers to? gems certainly uses a few bands to select guide stars
Candidate: this args?
Reference: what is the reason for calling trimtrailingspaces(codepoints) here?
Candidate: i think we could use <UNK> <UNK>
Reference: if strictfilters becomes a set, this one can be simplified to:  java if (!criteria.isstrict() && !criteria.getstrictfilters().contains(filter)) {  and it avoids the creation of an arraylist every time this
Candidate: this is a bit confused about a bit but i would prefer a bit more than to <UNK> the size.
Reference: nit - the indentation is wrong. it should align with "read" in the previous line
Candidate: throw an exception
Reference: perhaps creating a visualeditorcontents class in contentpatterns would be appropriate for the constants you are using for ve
Candidate: does this really really exist but this will be valid b to false
Reference: use extensiondefinedobject<iatsstateitemcore> instead of this class. this class should be deleted.
Candidate: if you could use <UNK>
Reference: i see why this was needed with the current api, but let's just change the api and reduce the complexity - add a t getdata() method on the payload class,
Candidate: you could use <UNK>
Reference: copy vf too
Candidate: this doubt that this doubt that you've added to the
Reference: use existing method arttovalidate.getmodtype().isdeleted()
Candidate: you could use <UNK> instead of creating a coupling between using a new <UNK> instead of coupling over.
Reference: this is wrong, should be entry.getvalue()
Candidate: if this is is not <UNK>
Reference: this will require more http calls. i think it's better to use a single api to check this and get the server view below. that api should be able to
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: prefer adding curly braces if more than one line is under an if statement.
Candidate: i said that you said that the json is not json
Reference: this code now has a race condition. after checking if size > 0, dequeue could become empty before calling pop. there is a method called pollfirst that could be used
Candidate: we should have to bind the <UNK>
Reference: what about making line.tostring() return <sourcename>:<nr>?
Candidate: you could use '+' to '+'
Reference: make this "persist should have failed - exception should be thrown"
Candidate: i think (throwable -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e ->
Reference: should existingtypes be an immutableset?
Candidate: i'm not sure that this is not sure that this will be the same as above.
Reference: shouldn't that be "noneof", rather than "allof"?
Candidate: this is a <UNK>
Reference: just concat the whole thing, do not +=
Candidate: suggestion <UNK> = <UNK>
Reference: why do you need to remove this?
Candidate: you could use <UNK>
Reference: being extra careful doesn't hurt but there is actually no need to check for null at this point. for simplicity's sake, i'd recommend removing the check as there is no
Candidate: should we use <UNK>
Reference: minor, but the constructor in bulkoptions uses this.<field> for everything. would be good to make consistent.
Candidate: you could use a try-with-resource here instead of creating a new constructor?
Reference: need break after this
Candidate: you could use objects.equals() instead of ==.
Reference: why unmodifiable in this case? maybe a copy which could makes the life of the caller easier?
Candidate: this is a <UNK>
Reference: why is taskid passed in as the groupid argument? would using "groupid" or a group_id named constant work here? if groupid is changed to parentid, then a named constant no_parent_id
Candidate: suggestion if (parent != null) { throw new <UNK> }
Reference: can this be private since there's a builder?
Candidate: i think this should be initialized in the
Reference: this changes are not covered by unitary tests in subprocessconvertertests
Candidate: suggestion <UNK> = <UNK>
Reference: might want to refactor this as a for (each) loop
Candidate: you could use a lock here instead of calling <UNK>
Reference: i think you want to lock outside the try-finally.
Candidate: we should synchronize only: > 0 ? <UNK> : <UNK> <UNK> : <UNK> <UNK> <UNK> <UNK> <UNK> servercontext.
Reference: making a while loop to check the session state would be more efficient.
Candidate: no need to log here
Reference: please use: backend.getinstance().getresourcemanager() .runvdscommand(vdscommandtype.removevds, new removevdsvdscommandparameters(server.getid()));
Candidate: i think that this is is connected to the <UNK>
Reference: do we need a call to instrumentation.marklocatorrerolled() here?
Candidate: do we need the prefix?
Reference: why not return an collections.emptylist() here?
Candidate: i think that this log, extremely expensive.
Reference: why make another beat? can't you just make casts in the if case on "other" instead of making another beatrange "other2"?
Candidate: please use <UNK>
Reference: feels like we should check return value of schedule(), although i was not able to get a hanging thread here unless i changed lttng kernel analysis to be non-automatic. i
Candidate: you could use a static final array.
Reference: shouldn't we just check startswith?
Candidate: if this is is designed to be <UNK>
Reference: added a check, but with the jsonexception should never happen
Candidate: is there a reason that styles that styles that styles that styles that styles that styles is a <UNK> that styles that styles is not <UNK>
Reference: do we want to say how many were found? just saying "event records found" isn't really meaningful.
Candidate: use <UNK>
Reference: why does it even allow adding the same ticket twice?
Candidate: this clear() could be simplified bottleneck. bottleneck. == null || <UNK> && <UNK> || <UNK> || clear() ....
Reference: no isaudio, isvideo, istext, is image all have the exact same code except for the string they check, so the code could be simplified into one generic, private method that
Candidate: this is not return true if <UNK> == null || <UNK> == null || <UNK> || <UNK> || <UNK> || <UNK> { return false; }
Reference: any of the ones defined as test extensions here-any of the mockxxx subtypes.
Candidate: please use <UNK>
Reference: can you use a tostring method instead of a cast?
Candidate: use <UNK>
Reference: the cause should be logged in this case to help in troubleshooting.
Candidate: this we use a scale for metadatastore instead of hardcoding scale a constant?
Reference: since clear is always non-transactional, i think you can ignore clearcommand (or even throw an unsupportedoperationexception).
Candidate: we should throw unsupportedoperationexception here instead of <UNK>
Reference: since we can't safely ensure that the profile location map is always a subset of the generic package one, i think it's better to keep them separate in the end
Candidate: you could use a multimap instead of optional?
Reference: vftouse might be null. this should not cause any problems, as setvmidonvfs seems to handle it correctly, but it might be safer to check against it (as was the case
Candidate: you could use a download <UNK>
Reference: is the local variable name a leftover from the previous constraintpack naming?
Candidate: use <UNK>
Reference: why not call the new method with null as third parameter?
Candidate: you could use a secret here instead of <UNK>
Reference: nit: this really isn't needed since this method returns false by default.
Candidate: is there any reason that is wasn't inlined
Reference: picky: need space before bracket
Candidate: suggestion if <UNK> { ....
Reference: you could make this more concise: facultymembereditor.setsabbatical(_sabbatical.getselectedinex() == 1);
Candidate: i think this is not efficient, we could use <UNK>
Reference: @tarilabs i am not understanding this? getparentdrgelement should never return null, unless it is used on "<definitions>" or "<itemdefinition>" elements... what is the case here?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: the convention is to have all mappers static in order to reduce their instantiations as they have no state. please extract it into a private static class.
Candidate: i'm not sure that this should be a <UNK> <UNK>
Reference: wdyt about passing an empty var-args here instead of new valuegroup[]{null}?
Candidate: jump to the <UNK>
Reference: why not %d entries?
Candidate: i think that this is is not loaded in the future.
Reference: ![major](<link_0> either log or rethrow this exception. [![rule](<link_1>](<link_2>
Candidate: minor: you marking of marking a marking a query here?
Reference: can logicalplan class provide a new method that allows to add operator with existing operatormeta? something like  private <t extends operator> t addoperator(final string name, final operatormeta operatormeta) {
Candidate: should be changed to <UNK>
Reference: please delegate to the other constructor using this(name, false); in the constructor body.
Candidate: this should be <UNK>
Reference: for exclusivelocks we don't need the same safeguarding?
Candidate: this is not be invalid?
Reference: what's the purpose of the trailing - in logging msgs?
Candidate: you could use <UNK>
Reference: afaict this only happens in tests, the actual code doesn't need the caching. maybe refactor to avoid that? also, could we build this such that the options class is immutable
Candidate: 2048 should be a warn as well.
Reference: do we need some sanity checking here in case it gets triggered without seeing a prior query event type? (i.e. if transactionstarttime == 0 it's probably not legitimate). or are
Candidate: why not expecting to <UNK>
Reference: seems like we are just reconstructing the original string here, but without the leading v? i wonder if it's better to use the original string instead of reconstructing it every
Candidate: could you use a string instead of <UNK>
Reference: either extract duplicated code in a method with single boolean argument or make the test parametrized.
Candidate: you could use <UNK>
Reference: better to have fail(); in the onsuccess()?
Candidate: wait.forelementclickable() should be <UNK>
Reference: redundant assertion
Candidate: use <UNK>
Reference: same thing here and below: not relex but any resource
Candidate: why is this change?
Reference: good simplification
Candidate: i'm not sure that this is is not efficient, but i would be a <UNK> <UNK>
Reference: let's switch this entire block the other way around, i.e. throw should be the one inside the if block (guard clause) java if (userinfo.isinstructor) { throw new unauthorizedaccessexception(...); } //
Candidate: if this is correct.
Reference: maybe reduce this logging to debug, in favor of the cleaner output of ocflpropsconfig.
Candidate: log.debug
Reference: this text is a good candidate for replacement of the hand-written key-value pair currently in bundle.properties with an annotation that defines the text.
Candidate: should we be a warning?
Reference: only the own implemented interfaces (immediate implemented?), or also transitively?
Candidate: this is designed to bind the table, but none of these changes are equal to the table, but none of these values were defined in the <UNK>
Reference: can't this be cached?
Candidate: suggestion if <UNK> == null) {
Reference: i am wondering if a standard foreach would be simpler than multiple streams?
Candidate: why not sure matters, how about replacing the side) ?
Reference: integration test for this new method? @freddyucv
Candidate: let's use exclude <UNK>
Reference: this name is a little bit confusing when mixed with calls to mockito's verify() methods.
Candidate: you should use <UNK>
Reference: presumably, there no need for the final .tostring() here.
Candidate: is it possible to throw an exception instead of <UNK>
Reference: i'd really, really rather use an enum to determine the view type and the layout resource:  java public enum eventviewtype { talk(eventtype.talk, r.layout.view_schedule_talk), ceremony(eventtype.ceremony, r.layout.view_schedule_ceremony), coffee_break(eventtype.coffee_break, r.layout.view_schedule_break), placeholder(eventtype.placeholder, r.layout.view_schedule_placeholder);
Candidate: this is a bit sketchy for the sake of <UNK>
Reference: i am not sure this trick works. you can be here when another thread calls increment function. you are not inside a lock
Candidate: if you could use a <UNK> instead of return?
Reference: this should be 3.0.0?
Candidate: use <UNK>
Reference: missing super() call?
Candidate: missing
Reference: tiny nit: if we import versioning.sha256versioning and other versioning.* classes, the changelog should be smaller :)
Candidate: @manuelplazaspalacio this is is designed to be an enum object object object object object object object object object object object object object object object object object object object object object
Reference: this method should reuse already found server of ws-agent.
Candidate: should be simplified to <UNK> multimap
Reference: you do not need creating new instance of validatorlocator for every new sub-resource/subcollection, you can reuse instance defined in backendapplication by adding [resource.setvalidatorlocator(x);] in abstractbackendresource.inject(). - it used to inject
Candidate: this is be repelaced by <UNK>
Reference: any special reason why previous test uses collections.singletonmap("key", "value"); and this empty hashmap ?
Candidate: please use <UNK>
Reference: that's existing behavior, of course, but let's try to find something similar like a batch for jdbc to increase performance!
Candidate: is there a reason to be public?
Reference: could we just to this with the getannotation call and a null check?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: since onpreferenceclick returns true when the click is handled and false when it is not, we should return something from setupprivacysettings similar to the other methods (i.e. handledevicepreferenceclick, handleaboutpreferenceclick, and
Candidate: suggestion return <UNK> && <UNK> && <UNK> && <UNK> && <UNK> || <UNK> && <UNK>
Reference: should it handle rejection?
Candidate: this is not to tear down
Reference: completeable.fromaction may be more idiomatic
Candidate: @ivandalbosco you could rename this method to <UNK>
Reference: it is better to use  java participantstatus.name()  since it cannot be overridden whereas tostring() can.
Candidate: i think we could be a <UNK> to tear down down down down down down down down down down down down down down down down down down down down down
Reference: add principal name to message?
Candidate: @ivange94
Reference: please filter the executions that failed (and collect) instead of grouping.
Candidate: this doubt that this is is not <UNK> but not sure how often often often often often often often often often often often often often often often often often often
Reference: is this super call needed here?
Candidate: i think we should bind the proxy proxy proxy bind proxy to proxy proxy proxy proxy proxy
Reference: this will not work, you need to  / 255 each value. getfogcolor must return 0 - 1 color values
Candidate: this defaults arrays.copyof this(name, defaults defaults defaults defaults defaults defaults defaults defaults defaults defaults defaults defaults defaults defaults defaults arrays.copyof this(name, defaults operator.
Reference: if we are using viewstub then we don't need separate layouts for legacy vs exo.
Candidate: is there a reason for this method to call the icon, instead of calling <UNK>
Reference: if you call with null as a tileentity parameter, should you add @nullable on the tileentity parameter in the getoutput method in the interface to notify users that the tile
Candidate: putifabsent is prone
Reference: minor: typo in "isencrypted" in the message
Candidate: should we use the <UNK>
Reference: change to static import ?
Candidate: minor: you could use a constant instead of <UNK>
Reference: why visibility was increased to public?
Candidate: is there a reason for element?
Reference: consider this case: - the vmleasessupported == false, so in setvmleasesavailability() you set the changeprohibityreason - than you change the ha option and you clear the change prohibity reason here
Candidate: is there any reason why not removing the prefix?
Reference: i think we should break here. i don't see any reason to explore other arguments as soon as we get the constraint. especially as there is no way to discard
Candidate: you could use <UNK> here too?
Reference: strongly prefer combining these messages into a single log line. same for other logs from this method.
Candidate: is there a reason for this is not <UNK>
Reference: is there a specific reason for naming the various fields and variables in the configuration class using the snake case, i.e., using _'s instead of using the camel case? if
Candidate: :warning: left over
Reference: i generally put keys like this into a static class-level variable, although i know this is only being used once so not nearly as important. just looked funny to me
Candidate: could we use <UNK>
Reference: and what about the unary_plus ?
Candidate: is there a reason that we is a that the is not empty?
Reference: use correct class instead of ibity
Candidate: please use <UNK> instead of <UNK>
Reference: it's either illegalargumentexception or no exception at all like in all other constructors from this pr, like securepatient for example. for consistency i propose removing that check.
Candidate: suggestion throw new unsupportedoperationexception
Reference: pass the allocator via the constructor. accessing a resources from multiple entry points makes it hard to change. you can wrap the default allocator and pass that instance to the
Candidate: we could use <UNK>
Reference: is the user expected to build and place the jar into the "/tmp/storm-artifacts/jars" directory ? the extrasjarslocation is already a dir. i think urlclassloader already handles directories. <link_0> "this class
Candidate: throw an exception
Reference: not equals!
Candidate: this should be a <UNK>
Reference: you can move the three lines in a private method extractarchive.
Candidate: you should use <UNK>
Reference: out of curiosity, why is this public?
Candidate: if we should be a <UNK> <UNK>
Reference: without iterator it will throw concurrentmodificationexception, will not it?
Candidate: you could use <UNK> here instead of <UNK>
Reference: the method does not need to be public. if so, please lower the visibility to 'private'.
Candidate: you could use a description for sip : <UNK>
Reference: why the double wrap?
Candidate: if we is a '+'
Reference: for the engine to properly handle the result as an array it will need to be an instance of an array, not arraylist.
Candidate: use <UNK>
Reference: there's no point clearing the old list if we are just going to drop it and assign the reference to a new one. let's conserve the memory allocation. suggestion this.listofgroups.addall(listofgroups);
Candidate: <UNK>
Reference: you overworked here a little bit :)
Candidate: you could factor this out into apply, system.currenttimemillis() instead of <UNK>
Reference: do all logic here. if push merge on plain ref: ok else if push merge on 'refs/for/ + plain ref ok else fail.
Candidate: please use <UNK>
Reference: why we are settng timeout when it is zero? and wouldn't zero be non-negative anyway?
Candidate: i think that this is not <UNK>
Reference: should probably use a redis.pipe here. will do everything in one connection instead of two.
Candidate: suggestion <UNK> = <UNK>
Reference: can the label already have a specified height at this point?
Candidate: this should be <UNK>
Reference: call encoderchannel.finishandreleaseall() to fix leak
Candidate: you could call <UNK>
Reference: why don't you return list of enumerations? with this you will remove the logic in the constructor...
Candidate: use utf-8 instead of <UNK>
Reference: split up to make readable
Candidate: wait.forelementclickable() should be <UNK>
Reference: ditto here about error message
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: unsure if we can make this change. we are returning the actual stream in the method. are we doing anything with the stream after this method returns, and if we
Candidate: use <UNK>
Reference: i think this returns null as the ftrace objects are instances of ctftmftracestubs at this point, so their set of analysis modules is empty.
Candidate: use expectedexception
Reference: these look like they can simplify to: java binnedranges.computeifabsent(location, k -> new hashmap<>()) .computeifabsent(ke, k -> new arraylist<>()) .add(range);
Candidate: why not use <UNK> constructor?
Reference: why not use lengthofcodepoint and setcodepointat, instead? that way, you'd avoid the intermediate slice, byte[] and array copy.
Candidate: this is is designed to be a <UNK> <UNK>
Reference: i'd replace this test with !spancontainsanyzipkinconstant(span) to reduce the if statements.
Candidate: if "return" stringutils.isnotblank()
Reference: i think this is hiding the original interrupt, better to not catch it.
Candidate: is there a reason why not sleep here?
Reference: distinct should be upper case
Candidate: <UNK> -> <UNK>
Reference: don't need to wrap in arraylist
Candidate: nit: could be a bit more than <UNK>
Reference: i am not a fan of assertions in non-test code. assertions are disabled by default anyway. could you please remove them? thanks
Candidate: this is explained to <UNK>
Reference: i'd remove //, or place it before the last .
Candidate: <UNK>
Reference: individual conditions also must not be null. for that we should add a check with org.junit.platform.commons.util.preconditions.containsnonullelements(t[], supplier<string>) in order to avoid a subsequent nullpointerexception.
Candidate: we could use <UNK> annotation, instead of storagetype view?
Reference: use if
Candidate: use <UNK>
Reference: i think in this case it is better to define <code>headers</code> variable above <code>580</code> line + move <code>headers.add(pair.of("content-type", "application/json"));</code> after that declaration, then it will be like this:  java
Candidate: use a constant?
Reference: illegalstateexception is an unchecked exception, it is not required to define the method as throwing this type of exception.
Candidate: you could use the exception here instead of <UNK>
Reference: can there be a scenario where this is null ?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: in this test and the other new tests, can we strengthen the assertions to cover all expected state? - fsroot exists - workdir exists (if different from fsroot) or doesn't
Candidate: please use <UNK>
Reference: i see you're synchronizing on initstate here. the cdmservicewaiter also has a reference to this same cdmstate, and also synchronizes when using it. does this guarantee that both classes won't
Candidate: please use <UNK>
Reference: you don't need to materialize the entire list sequences.tolist(sequences.limit(resultsequence, 1), lists.<list<long>>newarraylist()).get(0);
Candidate: use <UNK>
Reference: ("+min()+'\u2025'+max()+')';
Candidate: you could use <UNK>
Reference: i think this can only throw a parseexception, let's just throw that (no pokemon catching)
Candidate: you could use <UNK>
Reference: lets check each job view:  for (computejobview job : jobs) checkjob(job);
Candidate: you could use <UNK>
Reference: consider idtotaskstatusmap.foreach((k, v) -> { ... } for coolness's sake
Candidate: why linked linked linked linked linked <UNK>
Reference: is this really defined like this in plugin.xml? i think we should use builder id. please use org.eclipse.core.tests.resources.regression.simplebuilder.builder_id
Candidate: i think this this assertion.
Reference: unsignednumeric.writeunsignedint and 0 when no params ?
Candidate: i think this should be a <UNK>
Reference: don't use strings here. please read this: <link_0> <link_1>
Candidate: you could use a constant instead of <UNK>
Reference: this is not needed if you already handles the exception in the other method?
Candidate: we could use reflectiveoperationexception here instead of <UNK>
Reference: hi @denlb , please replace this magic number 86400000 with something more readable, like timeunit.hours.tomillis(24).
Candidate: this is be simplified (up to <UNK> <UNK>
Reference: did you mean to reference the variable **user_directory** and not a string with the value of "user_directory"?
Candidate: @vilchik-elena minor: this is not to be <UNK>
Reference: this is potentially confusing, please add brakcet to the if statement.
Candidate: you could use <UNK>
Reference: not sure if we need a new transaction here
Candidate: you could use a guard sort.
Reference: typo . donwloading--> downloading
Candidate: you can use <UNK> boolean.class)
Reference: src/test/resources/experimentaldata/input/ base path appears in 42 places in all affmatch tests, we could consider extracting this root path to some shared test variable.
Candidate: use readasstring(...) instead
Reference: this can be done with filesystemitem.getstem(). if you want a one-shot function instead, create it in filepathutils for reuse.
Candidate: this could be a efficient, that this is not efficient, the codebase is widely used widely widely widely widely widely widely widely widely widely widely widely widely widely widely widely
Reference: get rid of this
Candidate: suggestion if <UNK> == <UNK> || <UNK> && <UNK> || <UNK> && <UNK> || <UNK> && <UNK>
Reference: this doesn't look good, use:  string expectedurl = urlbuilder .geturlforpathwithoutwiki(configuration.getwikiname(), mercurysubpages.cc_category_templates);  or if it is too long:  string expectedurl = urlbuilder.geturlforpathwithoutwiki( configuration.getwikiname(), mercurysubpages.cc_category_templates );
Candidate: is there a reason for the sake of these properties?
Reference: import static org.apache.zookeeper.server.quorum. zabutil.* then you can simplify method invocation by using createquorumpeer(tmpdir); instead of zabutils.createquorumpeer(tmpdir);
Candidate: no, we should throw an exception here instead of <UNK>
Reference: suggestion this.gatewaymap.values().foreach(methodinvocationgateway::destroy);  how do we live without this before? should we consider to back-port it as a bug? what is a consequence not having this destroy()?
Candidate: why not -1l ?
Reference: this would be a good candidate to split out into some smaller methods to clarify what's up
Candidate: you could use a local var instead of <UNK>
Reference: final
Candidate: this is going to be reused.
Reference: delete the "-" if there is no longer a trailing counter?
Candidate: we could use a <UNK>
Reference: should this be >=? consider calling contains() instead
Candidate: we could use <UNK> instead of <UNK>
Reference: nit: make all of the methods package-private as the class is package-private as well. this also ensures we no expose these by mistake at some point.
Candidate: this is a <UNK>
Reference: do we want to hide this behind a feature flag? i'd say yes.
Candidate: i think stringutils.isnotblank()
Reference: the field is volatile; is there a specific problem that adding synchronization solves?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: does this need to change to be a more specific exception?
Candidate: nit: ordering of a little ternary.
Reference: i tend to prefer the more explicit style try { ... } catch (packprotocolexception e) { assertthat(e.getmessage(), is(...)); } fail("expected packprotocolexception"); or even better, using junit assertthrows: packprotocolexception e =
Candidate: you could use use assertions.
Reference: i don't see the motivation for this change. it seems that you are trying to handle the case where the input parameter pathparametervalues is null, since the caller does not
Candidate: you should use <UNK>
Reference: the test must also follow the format of the others in the file. if there is a configuration for which the test is not valid, then the test should be
Candidate: can we use <UNK> constructor?
Reference: can we inline any of these?
Candidate: we should use <UNK> ex.
Reference: move the if(...) outside of the lock
Candidate: you could use <UNK> instead of <UNK>
Reference: 2 times filtered
Candidate: nitpicking: you bail here instead of <UNK>
Reference: please rename x for title or something similar
Candidate: you could use a string instead of <UNK>
Reference: wrapping an exception with another exception of the same type can be confusing in a stack trace. better if we can wrap the ioexception in another type of exception such
Candidate: is there a reason for this method to be printed here?
Reference: ok, i removed it. <link_0>
Candidate: shall we use a constant?
Reference: it seems that you can use 'this' instead of creating a new auditlogablebase instance, which makes me wonder - why not use the command logging mechanism for this logging ?
Candidate: you can use image?
Reference: one option is to return a point2d
Candidate: i think finals
Reference: nit: space between if and (
Candidate: nit: use <UNK>
Reference: objects.equal(f.testtagfilter, testtagfilter) (it handles null)
Candidate: this is be simplified to:  java return <UNK> && <UNK> { return false; }
Reference: since this is part of the v2 implementation, shouldn't this be v2_rest_url instead of rest_url ?
Candidate: minor nit: could be replaced by <UNK>
Reference: this.
Candidate: <UNK>
Reference: imo any component that injects an expirationmanager should inject an internalexpirationmanager instead.
Candidate: this should be a <UNK>
Reference: also warm up l1 cache here ?
Candidate: you could use <UNK> <UNK>
Reference: wouldn't it be better to do:  for (repository r : storage.getrepositories().values()) { mutablerepository repository = (mutablerepository) repository; ... }  and use it like this? if i recall correctly,
Candidate: you could use a guard here instead of calling <UNK>
Reference: the logging is duplicated, but no error is reported to the end-user
Candidate: i think that this is is not a messages.properties trace, but it should be a good idea.
Reference: is this necessary? if i remove the update line everything seems still to work.
Candidate: you could use <UNK>
Reference: the name... callgraphviewanalysis, the view part does not sound too good to me...
Candidate: return <UNK> != null && <UNK>
Reference: @carlosgines please read <link_0>
Candidate: @carlosgines let's use a constant here instead of <UNK>
Reference: do either of the useindex methods need to check the args to the method are not null?
Candidate: suggestion <UNK> = new <UNK>
Reference: no need for the fqdn - since now there is no collision in class name
Candidate: rename to
Reference: for compatibility with oh2, should use objects.tostring instead. eg. >... = objects.tostring(config.get("accesstoken"), null);
Candidate: is there a reason to log statement?
Reference: no, the reason this works is simply a timing issue: it takes a while for requests to complete. we start more than one. we get backed off because we get
Candidate: @manuelplazaspalacio this is is designed to be a <UNK> that the is not <UNK> to persist the <UNK>
Reference: inline builder variable.
Candidate: use <UNK>
Reference: should be:  java public int hashcode() { return this.delegate.hashcode(); }
Candidate: please use guava simplifies objects.isnull
Reference: why not simply using instanceof here? if (!(ldc.cst instanceof string)) {
Candidate: the commit should be a copy/paste the mac commit is not mac
Reference: what does this neutral mean?
Candidate: if you could use <UNK> <UNK>
Reference: call put() alone is sufficient to replace the old value from tree map.
Candidate: i'm not sure that this is not correct.
Reference: can we avoid usage of username and password in sourcestorage at all?
Candidate: this is not used?
Reference: if we throw an exception at either line 47 or line 56, do we clean up our state properly?
Candidate: likewise, you use a enum instead of <UNK>
Reference: shouldn't a cast to int be enough?
Candidate: suggestion <UNK> -> <UNK>
Reference: what is a servletexception doing in the api module?
Candidate: suggestion throw new <UNK>
Reference: align ? and : for better readability?  error = shortname.isempty() ? "" : validator.getinvalidityinfo(fieldvalidator.fieldtype.person_name, shortname);
Candidate: is there any reason to be public?
Reference: why do you make this method chain throw exceptions up the stack when you just bury them in the end? if you never intend to do any handling of these
Candidate: use <UNK>
Reference: i think as google translator don't think splut is english word, we shouldn't use it :)
Candidate: this is not explained in absence of the <UNK> true)
Reference: processtriple is just part of the logic of the constructor. move the contents of processtriple to the constructor and then get rid of the processtriple method.
Candidate: use <UNK>
Reference: same here, why the double protection?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: does this need to be logged too?
Candidate: this is eating (throwable exception is not
Reference: could we use provider_id in pay-java-commons for this?
Candidate: nit, we can use atomicinteger here instead of <UNK>
Reference: remove middlewarequeryexception
Candidate: i think we should throw an exception instead of <UNK>
Reference: this is a one-time variable, we can just inline this value
Candidate: why we use asserts here instead of <UNK>
Reference: rgb constant?
Candidate: this is designed to be a configurable configurable configurable configurable configurable by <UNK> <UNK> we could have a configurable configurable configurable by default.
Reference: mockactivty -> mockactivity
Candidate: you can use <UNK>
Reference: should this swallow out of memory errors?
Candidate: you should throw a authentication authentication authentication authentication authentication authentication authentication authentication authentication authentication authentication authentication authentication exception
Reference: inputdata will be better
Candidate: i think you could bail here instead of calling <UNK> 16).
Reference: [minor] is this indent change intentional?
Candidate: if this is is not invalid?
Reference: the auto boxing can make this code crash in an npe. if it is null, then we should use a default behavior (return true to keep the default behavior of
Candidate: use <UNK> instead of <UNK>
Reference: shouldn't this be: r.getpatchsetid().getparentkey().tostring();
Candidate: is there a reason for avro property?
Reference: the printstacktrace is useful when it fails :) i have been there.
Candidate: you could use <UNK>
Reference: suggestion completedupstreamtasks++;
Candidate: i pagelogging
Reference: i'm wondering if we should return "true" here. wdyt?
Candidate: no need to lock
Reference: let's also check that error message !isempty() with this condition
Candidate: you should use <UNK> string.
Reference: replace with excelimportclass from ecore
Candidate: you could use <UNK>
Reference: will this fail the build if the cloud is not found? is that the desired affect? i guess it would alert the user of an issue.
Candidate: no need to dynamic repository storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage
Reference: abc can be made in a one liner inside the setitem
Candidate: you can move this initialization check, but iirc the adds encapsulated in the future.
Reference: i would extract local pmcxmlhandler and saxparser variables to class property and instantiate it in @before section. then use it in all test cases in this class
Candidate: why is you expecting this unconditionally, as well.
Reference: we probably can have tailer bean with @scope(proxymode = scopedproxymode.interfaces, value = configurablebeanfactory.scope_prototype) instead of using applicationcontext.getbean(..) here.
Candidate: how about making the simpler.
Reference: nice, include in same loop as provider aspects with iterables.concat?
Candidate: @manuelplazaspalacio i think that the fragment is be called in the
Reference: the default values on the tracer side changed for lttng 2.2. now, the default value depends on kernel or ust-pid or ust-uid or metadata. i wonder if we should change
Candidate: is there a reason for this method to be called in the <UNK>
Reference: we should log.d(tag, message, exception) here
Candidate: throw an exception
Reference: consider removing else clause
Candidate: if you can use <UNK> <UNK>
Reference: is this todo still present in subsequent commits? if so, think it would be best to resolve this prior to merging.
Candidate: maybe we could be a little bit more than <UNK>
Reference: do we support all fields from the given example? we have to compare the body of the input with the body of the stored annotation similar to the the validateoutputagainstinput(annotation
Candidate: why not use <UNK>
Reference: crawling the view hierarchy directly using childatposition seems fragile - is there a more resilient way to find these items?
Candidate: you could use <UNK>
Reference: i see from above that this is following the existing pattern but it feels weird to me that this returns null rather than an empty list, especially when the provider.senders()
Candidate: this is not a <UNK>
Reference: velocity.
Candidate: is there a reason for this logic?
Reference: can you break or return after this, instead of an indented else?
Candidate: i'm not sure that pulling this method to <UNK>
Reference: failonlimits should not be needed here.
Candidate: please use <UNK>
Reference: should be also part of the hashcode && equals?
Candidate: you could use use list<string> <UNK> = new <UNK>
Reference: why don't you add append below to stringbuilder as well?
Candidate: style nit: no braces around braces around braces around single line blocks
Reference: does cloudexception actually not tell you whether it is a shared group or if it's a different error?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: maybe rename var to "attsvalidated" or something that means the attrbiutes were correctly validated
Candidate: please consider using a constant instead of <UNK>
Reference: lit(annotation.value()) will output the int value directly. instead we'd want to output the corresponding r field, such as r.layout.component in your example. that's what we're doing with @eactivity when we
Candidate: why not use <UNK>
Reference: instanceof nightmare?
Candidate: use <UNK> instead of <UNK>
Reference: i saw use of uncheckedioexception earlier. why not use that here?
Candidate: throws exception
Reference: nit: maybe something like jackbasedtoolchain, since we check a specific error message
Candidate: you could use the exception instead of printing the exception
Reference: @vilchik-elena why not map rather than hashmap?
Candidate: @vilchik-elena we could be simplified to <UNK>
Reference: can we not support generic object? the idea is to only support specific types.
Candidate: if we can't be null, we can't have an empty empty list.
Reference: please make sure you are rebased. this method was renamed on feb 11.
Candidate: you can be replaced with <UNK>
Reference: same here. let's create a newlinkedhashset method in collectionhelper and i'll optimize it.
Candidate: is there a reason for this method is not <UNK>
Reference: what i meant is replace these 2 lines with something like: java final quranrow[] updatedelements = getsuralist(); adapter.setelements(updatedelements);  and in oncreate, make the adapter in a variable so you
Candidate: this is be to tear down down down down down down down overwrites tracking events.
Reference: very minor: why does this still have shutdown when elsewhere that is renamed to disconnect?
Candidate: this should be <UNK>
Reference: this is the same problem as before. i don't want to make the code uglier by checkstyle. is there a way to configure the check that enforces the braces?
Candidate: use <UNK> instead of objects.isnull
Reference: this variable is used only once, so can probably be removed and inlined in line 78.
Candidate: you could use <UNK>
Reference: should just have a method on the tsboundpersisterconfiguration class for this, so you just do install.timestampboundpersistence().gettimestampcreator() and avoid all the nasty reflection.
Candidate: is there a reason for this method is not <UNK>
Reference: this code is also not so clear. could you please give it some love?
Candidate: if this is not correct.
Reference: no sure, if we should do it this way. if no write mode is explicitly specified, the system default write mode will be used. if we decide to introduce something
Candidate: please use <UNK>
Reference: change requirenonnull to another assertion?
Candidate: is there a reason for this method is not implemented in <UNK>
Reference: nit: cachemanager is null
Candidate: log.debug
Reference: these are fairly cheap to evaluate. maybe just use fields in restapiservlet as the filtering method?
Candidate: i think this is not efficient, we could use only:  this(name, <UNK> { <UNK> = new <UNK> <UNK> <UNK> <UNK> }
Reference: this is bug. it exactly must be local var, because of uuid + queue_name_suffix
Candidate: you could use <UNK>
Reference: what about delete \* from ?
Candidate: if (throwable is not <UNK> connection, then we could throw an illegalstateexception instead of <UNK>
Reference: is it correct to pass null null null? you think we can have like 2 separate methods or to wrap those nulls in a single object? when it's more than
Candidate: this is designed to be false, but i don't think that we want to check that the is not
Reference: from reading just this line i have no idea what the second and third argument are for. maybe have two different methods for each value of the boolean argument. and
Candidate: if we is a <UNK> that is is not efficient, but i would be good idea to use the
Reference: if you keep the getparser method's signature the same, then getgroundparser is no longer a method that needs to exist.
Candidate: this is a <UNK>
Reference: default should the the system timezone - which means if you save this without making changes the behavior is consistent.
Candidate: is there a reason for avro to be null?
Reference: 1ms=10^6ns
Candidate: nit: foreach here instead of creating a input.
Reference: i think this should be an error...
Candidate: this log e1 is not info.
Reference: it's not a big deal, but i'm curious why this was changed to use mpost.blogid and mpost.postid?
Candidate: i think the absence of the tracking the absence of the true) to bail out of the <UNK>
Reference: if a websocket is not closed properly on client side, is that something that a user should send us a bug report over? secondarily, a pop-up message that says "failed
Candidate: i think that the consequence of close() reconnect to the <UNK> manager, that the consequence that the consequence of completes the consequence of the consequence of the consequence of the
Reference: similarly: java return permission & 2;
Candidate: you could use <UNK> here instead of storagetype <UNK>
Reference: minor nit: same, please add more details for error if possible.
Candidate: is there a a queries to the
Reference: even better would be to have an sshvalidator class, which knows how to validate the ssh entity, and invoke it from both hostvalidator and actionvalidator. not critical.
Candidate: if you could use <UNK>
Reference: nitpicking: please doublecheck if the indentation in this method is with tabs or spaces. it looks like tabs are used.
Candidate: this is not belong to <UNK>
Reference: reduce to debug
Candidate: let's use a constant instead of <UNK>
Reference: minor but since this method is only a local helper, let's close it down to private. chances of shareintentreceiveractivity getting subclassed in the future are quite slim and if that
Candidate: i think this should be a firing the <UNK>
Reference: extract this to a setup method in a test and make _originalproperties_ a field
Candidate: you could use the multimap here instead of objects.isnull
Reference: what is the problem of keeping throws xmlpullparserexception?
Candidate: if you could use <UNK> <UNK>
Reference: isn't this a no-op?
Candidate: this is a <UNK>
Reference: can the name actually be null? i would have thought that the [rename operation](<link_0> returned an error if the name parameter was not supplied
Candidate: log statement?
Reference: i wonder whether this condition should be moved higher up in the block, so that a bunch of unnecessary calls of childresc.hasproperty(rdf.type) aren't made
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: please include more detail about the operation being performed to assist operational debugging.
Candidate: we should throw "invalid a exception instead of e.getmessage()
Reference: why do we need brokerrequest.getselections() != null here? it will never be true for aggregation right?
Candidate: if this == null || <UNK> == null) || <UNK> == 0) {
Reference: take this out
Candidate: this is a bit more efficient, that this is is not <UNK> but i am not sure how about this works.
Reference: we probably want to log the stacktrace here, so i think you want to remove the  due to {} part.
Candidate: is there a way to log the tasks
Reference: throws alreadyexistsexception ? seems weird
Candidate: is there a reason why we catching exception here?
Reference: @ikhvostenkov please name it json
Candidate: @ikhvostenkov let's use a feature name json, please.
Reference: infra has been eaten
Candidate: this is not a bit risky.
Reference: this isn't necessary. catalogmanager is injected. all catalogs should be visible as long as they are installed.
Candidate: nit: we labels, not needed
Reference: input could be a standard string
Candidate: rename to
Reference: move error log to condition body
Candidate: please use the error message
Reference: i believe these are swapped.
Candidate: you could use <UNK> here instead of <UNK>
Reference: will this crash if the file doesn't exist? is it valid to simply run kinesis without extra configuration?
Candidate: this is be to to the println. fyi, we could leverage only: <UNK>
Reference: using a plugin result makes it so that the js side can't distinguish this special-case from an actual plugin-response. instead, i think we can do: if (arguments == null) {
Candidate: is there a reason for this logic?
Reference: all of these magic numbers need to be constants in the org.spongepowered.common.util.constants, whether it's in a new nested class for rail directions or whatever.
Candidate: is there a reason that kubernetes behaviour?
Reference: this would not be an extension, but should be on the object directly.
Candidate: you could use <UNK>
Reference: 1. if connecting to iso domain fails with exp, you will not try to connect to importexport domain 2. maybe worth adding a variable to hold the name of the
Candidate: consider using system.lineseparator() names instead of <UNK>
Reference: additionalattributes can not be null.
Candidate: this is not efficient, but i guess that weights is scaled
Reference: please use java naming convention for instances , e.g., hivequeryexecution.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: maybe an unmodifiable set wrapped around a concurrent map? also the use of this. qualifier is not necessary in this context.
Candidate: why not synchronize on <UNK>
Reference: will it ever leave this loop when rowid is removed?
Candidate: you could be replaced by <UNK>
Reference: is there any need of try-catch block.
Candidate: if we is not a to the trace, then it will be a npe if someone wants to log the error.
Reference: the check for null is not needed before using instanceof operator: "when using the instanceof operator, keep in mind that null is not an instance of anything." (<link_0>
Candidate: please use <UNK>
Reference: should lines 174 through 176 move into a urimakeimpl.setinputname() override that also calls super.setinputname()? if the user provides their own uri maker, should it be their responsibility to handle the
Candidate: suggestion if <UNK> == direction.incoming) {
Reference: please don't append ex.getmessage() to the message.
Candidate: e.getmessage()
Reference: nit: and here too.
Candidate: you could move this to <UNK>
Reference: here it's really the "holiday calendar" that's not found, right?
Candidate: nextvalueindex should not be <UNK>
Reference: the args are in a different order in <link_0> moduleresolver.resolve(groupid, artifactid, "jar", "exec", version);
Candidate: if you could use the exception instead of return?
Reference: you can use this instead of actual time to make tests faster and reliable. <link_0>
Candidate: we could use a connection, instead of creating connection, connection, the connection, connection, connection, connection, connection, connection, connection, connection, connection, connection, connection, connection, connection, connection, connection, connection, connection, connection, connection,
Reference: why are we using name instead of label?
Candidate: should we use a bind <UNK> instead of removing only:  <UNK> <UNK> <UNK> <UNK> <UNK> vdsid = <UNK> <UNK> <UNK> <UNK> <UNK>
Reference: brace next to method definition please.
Candidate: you could use a exception instead of printing the exception
Reference: this can simply return not_audit.
Candidate: @vilchik-elena is this going to be prone to you.
Reference: from what i can tell, this should be removed. am i missing something?
Candidate: you could use <UNK>
Reference: use lambdas. as there may be a backport you may want to use instead if (log.isdebugenabled()) and regular string concat. same further down.
Candidate: if you could use braces around
Reference: you ignore result here. you need to return result.
Candidate: same here, as the
Reference: externalize. i must be somewhere already, just need to find the correct message class
Candidate: you could remove the return?
Reference: from java doc:  the total number of bytes read into the buffer, or -1 if there is no more data because the end of the stream has been reached.
Candidate: let's use a little bit bit bit more bit bit bit bit bit bit more bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit
Reference: + ijbossruntimeconstants.space
Candidate: use stringutils.isnotblank instead of optional?
Reference: instead of printing to system output stream, let's use a proper logger
Candidate: suggestion <UNK> >= <UNK> % 1);
Reference: '. this item is not allowed. please check your *.items configuration.
Candidate: should we add a message here too?
Reference: suggestion table<?> table = (table<?>) visit(context.altertabledefinition()); return new dropcheckconstraint<>(table, getidenttext(context.ident()));
Candidate: this should be a <UNK>
Reference: this will inadvertently change path separator to host os witch might not match target os path. in case of remote debugging of a linux app from windowsos host this will
Candidate: you could use a constant instead of the property?
Reference: as this is thread outermost loop try/catch we should catch throwable exceptions. otherwise the registry refresher may silently fail without us knowing about it.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this code should also work for other mappedby data types (i.e. be prepared for bidirectional many-to-many) suggestion .filter(attribute::ismappedby)
Candidate: i would be better to export the <UNK>
Reference: also need to make nullstatedescriptor aware of the ttl?
Candidate: you could use <UNK> instead of <UNK>
Reference: are these important settings we'd need to advise use of or are they just for testing?
Candidate: wouldnt this tear down to tests.
Reference: nit: indentation (or it this a gerrit problem?)
Candidate: is there a reason that is is not to be used?
Reference: what about not using a ternary but rahter an if (needsalias) emitname += ...?
Candidate: use <UNK> instead of <UNK>
Reference: @pqueixalos sorry didn't notice this minor thing previously, but in terms of arg ordering schemapattern makes sense after the context
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i'm not sure what we are trying to guard against with retries here. when trying to retry a read from file, if the checksums don't match the first time, it's
Candidate: i am not sure how about this this is a to copy of the classes.
Reference: should the default value of snapzxid be -1 instead of 0? -1 is what util.getzxidfromname returns if finds nothing valid.
Candidate: i doubt that this is a test, no?
Reference: this misses the separator used elsewhere '-'
Candidate: you could use use <UNK> instead of <UNK>
Reference: style-nit; surplus braces
Candidate: we could use a multimap here instead of creating a new anonymous class instead of instantiating the constructor?
Reference: this needs to be updated, in a way similar to the next else if. now that multiple links can be bound to a file, we can't save the file as
Candidate: cant we just "return <UNK>
Reference: the @override should be on this line.
Candidate: use <UNK>
Reference: you don't need to check that, tje check is done inside runvm, if it is not successes endsuccessfully should not be called.
Candidate: how about this is is not supported in the
Reference: please use stringbuilder
Candidate: minor cr
Reference: please use slf4j parametrization instead of string concatenation
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: topologyutils.gettotalinstance() doesn't work? maybe worth adding this code to topologyutils as a util function?
Candidate: is this a bit more than to restrict the <UNK>
Reference: also, by default, pr builds should just run the tests with latest version and if environment variable to run tests for all versions is set, then we should do this.
Candidate: rename to
Reference: format this file please
Candidate: we could use system.currenttimemillis() here instead of <UNK>
Reference: since we already moved to java 7, you could use a single catch block with ioexception | runtimeexception.
Candidate: is there any reason why we catching exception here?
Reference: nit: space before {
Candidate: @ivange94
Reference: not localized. should probably use the same mechanism as other dates on the ui.
Candidate: can you rename this to <UNK>
Reference: minor: invocation.getargumentat() might make this slightly less wordy.
Candidate: same as above.
Reference: i think this is available as a system property, exposed by maven. not sure how reliable this technique is :)
Candidate: i think that this is is not <UNK>
Reference: is this definitely ok that the context is returned but we are still working with the results? are the results eagerly loaded?
Candidate: throw an exception instead of: re-throw
Reference: need to throw governanceexception instead of registryexception
Candidate: is there any reason to log the debug log.d
Reference: swap the order?
Candidate: <UNK> -> <UNK>
Reference: missing method name.
Candidate: you could use pulled into a property?
Reference: the tags should be included in the aspect, no ? since we're using it to hash metrics in the aggregator.
Candidate: is this correct?
Reference: nit: can drop the else and just make this if (..) { ...} throw new ..
Candidate: suggestion if <UNK> == direction.incoming) {
Reference: why do we need this ? the type says it's a non-workspace typed element ... i'd assume that instances which are resources are rather of the super-class type
Candidate: if you could use <UNK> <UNK>
Reference: does the patient actually have any voided diagnoses to make this test more solid?
Candidate: you should use the constant instead of <UNK>
Reference: don't need the "== true", it's a boolean :-)
Candidate: this is dangerous, is designed to be a <UNK> <UNK>
Reference: it would have been _nice_ to assert the values of the gridbodycelleditcontext but a test is better than no test :-)
Candidate: you could use reflectiveoperationexception here
Reference: the client has close() so we can - worse case - use that. also if the beanmanager.isnormalscope(bean.getscope()) is true we don't need to call context.release()
Candidate: you could use a constant instead of <UNK>
Reference: all existing network attachments (returned from db) should have id set.
Candidate: rename to
Reference: should > 0 be > 1 then?
Candidate: nextvalueindex should not be a <UNK> <UNK>
Reference: is this a default estimation from some other location? if so, maybe use a static constant value so if one place gets updated, so does this place.
Candidate: if finishing the <UNK>
Reference: this is an unrelated bug fix. it should be in a separate patch
Candidate: how about replacing the lock with <UNK> invalid?
Reference: seems like this should also use clock.
Candidate: you could cached, cached, cached, cached, cached, cached, cached, cached, cached, cached, cached, cached, cached, cached, cached, cached, cached, cached, cached, cached, cached, cached, cached, cached, cached, cached, cached, cached,
Reference: since gets will most likely not be concurrent, done by the poller, do we need threadlocal isolation of aggregation? synchronized aggregation may be simpler and efficient? also, you are already
Candidate: this is be a overhead.
Reference: 4?
Candidate: this is a bit typos
Reference: putifabsent for something different and get afterwards to be sure that putifabsent hasn't changed anything in the collection.
Candidate: you could move this to <UNK>
Reference: is this correct ? dont we need to drain the inbound messages first to ensure we preserve the correct order ?
Candidate: you could use a <UNK>
Reference: ditto:  assertthat(count).isequalto(1);
Candidate: this is designed to be <UNK>
Reference: the "." could be configured to something else by the user as i learned. this should be resolved from the meta-data.
Candidate: is there is a empty?
Reference: yea, you can just invert conditions
Candidate: this "_" "_" should be reduced to return an empty string.
Reference: the important noun in this noun phrase is message, not value. it's a message about a missing uuid.
Candidate: please use constants
Reference: nit java closer.register(directreader::close); closer.register(dictionaryreader::close);
Candidate: if close() is a close() manager, that close() manager, that close() manager, that close() manager, that close() is a close() manager, that close() manager, that close() manager, that close() manager,
Reference: @cvrebert you can inline this statement from the new mkissueevents() statement above.
Candidate: you could use the <UNK>
Reference: an 0 byte will message is valid <link_0>
Candidate: nope,
Reference: i would assert that the proper rs ids are found.
Candidate: unused
Reference: should be scriptdefinition not config
Candidate: @manuelplazaspalacio is that this is is not to be a in the
Reference: you can remove the catch (exception e) { fail(); }, it'll give a clearer error when failing.
Candidate: is this tear down down down down down down down down down down down down down down down down down down down down down down down down down down down
Reference: we should probably consider beandeployarchive changes / evolvement to allow for class<?> objects to be passed to weld directly instead of doing class<?> --> class name --> class<?>
Candidate: this could be replaced with <UNK>
Reference: this should be a test error.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: each test seem to do the same thing, and besides the valid/invalidxml nothing changes. can we refactor this to not use as much duplicated code?
Candidate: wait.forelementclickable() should be <UNK>
Reference: now the number of processor threads will never actually decrease. maybe you wanted to set end to true in applyprocessorcount.
Candidate: if you could use <UNK> <UNK>
Reference: should we consider defaulting to "<user.home>/.selion2" for selion 2 ? to allow selion 1.x and 2 on the same host.
Candidate: how about this is going to print the stack trace
Reference: this is still a hard-coded assumption of where the sash model is stored, which for legacy (kepler) models is not in the workspace metadata area, so the next statement attempting
Candidate: this is completely completely completely completely completely completely completely completely completely completely completely completely completely completely completely completely completely completely completely completely completely completely completely completely completely completely completely completely
Reference: lines 187 and 188 should be testing event2 instead of event
Candidate: rename to
Reference: suggestion bounds = new rectangle(0, 0, bv.hex_size.width, bv.hex_size.height);
Candidate: you could use computeifabsent clear()
Reference: what about vuap and its bottom part on mercury?
Candidate: this is be <UNK>
Reference: remove the catch? (test won't fail)
Candidate: please use <UNK>
Reference: it might be useful to log the metric event sent from druid in this msg
Candidate: i think we should print the log the state of failure: <UNK>
Reference: what is the reason for appending 1 to the variable name?
Candidate: please use readasstring(...) instead of <UNK>
Reference: _me likes_ note: i'd provide an equal abstraction for this, since it's so common to query for equality on an attribute.
Candidate: you could use <UNK>
Reference: this is a small nitpick, but maybe you should do the same as you have with equals (only doing 1 based on conditional). or you are thinking it would give
Candidate: this is totally personal preference but i would suggest pulling this into a enum instead of objects.isnull
Reference: we should do this in a background process to avoid blocking the ui thread.
Candidate: let's use use <UNK>
Reference: use standardcharsets.utf_8 instead of "utf-8"
Candidate: we should use a string instead of <UNK>
Reference: shouldn't this also be done for 'getinsertwithautoinc()' and 'getinsertreturning()' ?
Candidate: this we rollback this again?
Reference: maybe do something slightly more specific? like check that the message refers to cursorwindow.
Candidate: is there a reason why is not guaranteed to be locked here anyway?
Reference: investrepaymodel.getstatus() == repaystatus.repaying
Candidate: please use uri.create
Reference: is flatgroupsets still valid? groupsetcount and flatgroupsets seem to duplicate each other.
Candidate: if we edit settings. edit this a <UNK>
Reference: please include the function name in the message
Candidate: @nielscharlier use stringutils.isnotblank here too?
Reference: extra blank line.
Candidate: you could use a constant instead of <UNK>
Reference: don't use random. just pick a size
Candidate: i would prefer a bit confusing. i would prefer to rework that the existed existed number of existed existed existed existed existed existed existed existed existed existed existed existed existed
Reference: same here: use a copy constructor?
Candidate: this is right...
Reference: this stream is never closed. in general i recommend using the read(func) method to avoid unclosed resources in a guaranteed fashion.
Candidate: you could use <UNK>
Reference: you'll have to be careful here. with hibernate-backed objects, there's no guarantee we'll get a sane container. as such, with the collections, you may need to use our util class's
Candidate: you could use a objects.isnull
Reference: suggestion ret.task = executor.schedulewithfixeddelay(() -> {
Candidate: <UNK> -> <UNK>
Reference: you can call set since it is scheduled. you don't need to do a cas.
Candidate: i think that this is is not <UNK>
Reference: why we need this flag?
Candidate: this is not to be a
Reference: can it be cssselector, not xpath ?
Candidate: is there a reason for this test is not
Reference: let's use mockito verify
Candidate: this is not be thrown.
Reference: the only prefix we use is m for member variables. please rename this boolean to a question format, so areactionsset
Candidate: this is strange, re-throw the exception here instead of return?
Reference: why . ? and no . in inflightoffsets?
Candidate: you could use the <UNK> events.
Reference: please add single quotes around fieldentity.gettype().getname()
Candidate: should we throw an exception instead of null?
Reference: maybe this name could be more descriptive?
Candidate: assert.notnull()
Reference: seems this breaks one time whole operation into several times of sub operations which need to connect to cassandra. not sure how many candidates in real env (3000+?). we can
Candidate: you could use a <UNK> <UNK>
Reference: i know it was there from the beginning, but please this empty line :)
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: merge the logic above.
Candidate: you could replace this with <UNK> with <UNK>
Reference: what does this mean "defaultsignaturetimestamp"? and what is the relationship between 2019? also what does it mean to set "0" for the month? what happens when the next certificate expires?
Candidate: 'null !=' is preferably
Reference: check for equality of error code
Candidate: is there a reason for avro properties?
Reference: api breakage. the returned collection used to be modifiable, but is no more. i'm not sure if anyone will be affected.
Candidate: @nielscharlier use <UNK>
Reference: bad formatting?
Candidate: this should be <UNK>
Reference: nexmo.
Candidate: log.debug
Reference: is there anything special about an @?
Candidate: <UNK>
Reference: public void writetodstfile(file dstfile) throws ioexception { try (fileoutputstream filestream = new fileoutputstream(dstfile)) { writeheader(filestream); writestitchpoints(filestream); writeend(filestream); } }
Candidate: is there a reason for this?
Reference: this is racy. any thread reaching this block will compete with a undeploy thread that just set the remaininghystrixconfiguringdeployments counter to 0. this can result an undeploy thread clearing the
Candidate: is there a reason why not constructor?
Reference: i think that this check can be avoided as we already check if auth != null below
Candidate: if you could use a <UNK>
Reference: this will blow up at runtime if getactivemodule() returns empty optional
Candidate: is there a reason for this method to be called in the <UNK>
Reference: i18n please ?
Candidate: if we is a <UNK> <UNK>
Reference: return integer.tostring(index); is more idiomatic.
Candidate: suggestion list<string> <UNK> = new <UNK>
Reference: remove
Candidate: use <UNK>
Reference: at the moment this method is called from somewhere else in cdt source code (use show call hierarchy to find where, somewhere in ui code, but i can't recall exactly).
Candidate: you could use a multimap here instead of <UNK>
Reference: might result in npe when the regkey is not valid
Candidate: should we use <UNK>
Reference: this.distancetolerance = distancetolerance < min_distance_tolerance ? min_distance_tolerance : distancetolerance
Candidate: is there a reason for this logic?
Reference: is it possible to make this a little safer by including delimiters or the equals sign or whatever?
Candidate: please use camelcase
Reference: we should use linkedhashset here to be predictable and make debugging easier.
Candidate: please use <UNK>
Reference: do we have a version that accepts appvalues ?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: stringutils.isempty can be used.
Candidate: use stringutils.isnotblank instead of ==.
Reference: change this to: jsonobject cookie = getpayload().getjsonobject("cookie"); then change the references below to just cookie
Candidate: suggestion if (logger.isdebugenabled()) { <UNK> = new <UNK>
Reference: great, that's the way to do it!
Candidate: please use <UNK>
Reference: this still needs to be addressed
Candidate: is this a bit strange to use <UNK>
Reference: i wouldn't bother with an else if you are returning in the if.
Candidate: remove this
Reference: i hope i understood it correctly, does it means * that system properties are returned for proxy-configuration if there is no ini-file present * that configured proxy-condigurations are read from
Candidate: throw an exception
Reference: same as above: we should use linkedhashset here to be predictable and make debugging easier.
Candidate: please use <UNK>
Reference: use java.util.objects.hashcode instead of checking for null value yourself
Candidate: use objects.hash()
Reference: @divsidhu-26 the line should be less than 100 chars. <link_0> there should be a whitespace after each concatenation operator.
Candidate: could you use repelaced with a userreportingsettingshelper call.
Reference: add a message in case it ever fails
Candidate: we should use <UNK>
Reference: add a message in case it ever fails
Candidate: we should use <UNK>
Reference: why change this to log an error instead of throw an exception? stack traces are useful.
Candidate: if this reconnect strategy is a known reconnect reconnect reconnect reconnect reconnect reconnect for reconnect reconnect reconnect reconnect reconnect reconnect reconnect reconnect reconnect reconnect reconnect reconnect reconnect reconnect reconnect reconnect
Reference: info?
Candidate: how about using <UNK>
Reference: please don't create a new list on every call of getdifferences(), but create the list once, e.g., on the first call, and then return the same instance. you might want
Candidate: wish wish wish wish wish wish wish wish wish wish wish wish wish wish wish wish wish wish wish wish wish wish wish wish wish wish wish wish wish wish
Reference: is this related to improving namespace support?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: second part can be properties.keyset()
Candidate: i pagelogging
Reference: parenthesis around (!logic.equals(logic_and) && !logic.equals(logic_or)) are unnecessary, please drop them.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: timeout == null is redundant with !(timeout instanceof integer)
Candidate: static import
Reference: @niteshsarda can you confirm if xenserver is the only supported hypervisor with valid parent snapshot id for a given snapshot id? instead of hardcoding the hypervisor type, could we fetch
Candidate: <UNK> -> <UNK>
Reference: when performedwarning is false, "flush()" could also be completed, correct?
Candidate: if you could leverage "this". if <UNK> == null) { return; }
Reference: i don't agree with this description based on the code and there's no reason to be terse with it. it does nothing to ensure "correctness", it simply helps spread the
Candidate: suggestion throw new <UNK>
Reference: should we pre-seed the candidates map with 0 -> something to ensure we don't get an empty map?
Candidate: could use hql
Reference: this should not be changed.
Candidate: i : <UNK> : <UNK> : <UNK> : <UNK> : <UNK> : <UNK>
Reference: please add a space between keywords and parentheses. also in rest of change.
Candidate: i think this is a bit more efficient, that you could use system.currenttimemillis() instead of system.currenttimemillis() instead of system.currenttimemillis()
Reference: can we hit a concurrent modification exception if a worker finishes and is deleted, while we are iterating here?
Candidate: is there a reason to re-throw this?
Reference: 2 things: 1) if a dataexception is thrown is it a good idea to go on? 2) did this kind of error logging work with casting exception object to string
Candidate: this is a bit nervous about eating the <UNK>
Reference: :art: personally i would lean toward using a guard statement. java if (entitytype == null || stringutils.isblank(entityid)) { return null } ...
Candidate: is there a reason for element?
Reference: this serialization is not correct. it leads to duplicate keys in json:  { "labels": { "label": "firstlabel-hzclient-1", "label": "secondlabel-hzclient-1" } }  an array of strings should be used,
Candidate: this is a bit more than <UNK>
Reference: should this be in a finally? if an an exception is thrown on line 57, this code will not get executed
Candidate: is there a reason to re-throw the exception here?
Reference: not your fault, but both cases should be sanitizationhelper.desanitizeifhtmlsanitized. let's change it, and afterwards this block can be transformed into a one-line lambda.
Candidate: you could use a constant instead of <UNK>
Reference: this method should not be called here (and i think it shouldn't be needed anywhere else). here, the repository is only marked for deletion by the organizationalunitservice (with lock acquired),
Candidate: @adrielparedes here is not needed.
Reference: make it as debug
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: you should wait on the task; delete by query is asynchronous like all write operations.
Candidate: nit: space after <UNK>
Reference: acc.......
Candidate: can we use log,
Reference: does it make sense to move this check above a little bit? java if (offsetandmetadata != null && subscriptions.isassigned(tp)) {  that will make the log message less confusing.
Candidate: throw an exception
Reference: should be stacktrace_none instead because if stacktraceoutputmethod = stacktrace_both the method will return stacktrace_short
Candidate: you could use <UNK> instead of objects.isnull
Reference: at that stage the event is always modifiable, right? so the check could be removed?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: you need to provide description for the different methods that you have included.
Candidate: is there a reason why not we are going to have a <UNK> <UNK>
Reference: print statements should be reserved for local debugging - let us not include this in the core codebase.
Candidate: this could be replaced no?
Reference: nit: can use method reference instead suggestion .map(transforms::processsingleresponseerrorresult);
Candidate: this should be <UNK>
Reference: just so we do not forget - how do we ensure that only the intended app can process the token result and not some malicious app.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: result suggests like this is the thing returned from the rule, which it isn't. call this partial, the topnnode call final and return optional.of(final)
Candidate: how about the worked. i know about the worked. but i am not sure how about the worked. but i am not sure how about the <UNK>
Reference: what about base_package, base_property, base_element, base_opaqueexpression, ... ? this only works for stereotypes extending the class metaclass. other stereotype copies will have their metaclass extensions corrupted. also, stereotype associations will
Candidate: use a constant instead of <UNK>
Reference: the artifact's name should follow the npm specification (<link_0>
Candidate: no need to call <UNK>
Reference: how come we are removing the second batch?
Candidate: you could use a constant instead of <UNK>
Reference: should this be something like 0 or -1 to indicate that we didn't charge? otherwise the charge rate check is going to fail on this, but it should really be
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: keeping that constructor makes it more testable as you could inject a mock openshiftuimodel
Candidate: could we call the foreach method to <UNK>
Reference: isn't \\. a regex defined in locator.java ?
Candidate: the intent intent intent intent intent intent intent intent intent intent intent of the intent to the table, you could use the <UNK> the table, to the the table, editor
Reference: note that this check is redundant - getclusterid would never return null
Candidate: unneeded, unneeded, unneeded, unneeded, unneeded, unneeded, unneeded, unneeded, export the child command view?
Reference: reduced panel counts
Candidate: i am not sure how about about about this about replacing a with a <UNK>
Reference: i guess arrays.equals is the better choice.
Candidate: use <UNK>
Reference: should throw validation exception using collector.getorthrowexception() in preparerun.
Candidate: is there a reason for element?
Reference: so this logic tries and retries one time. it seems like this could be better organized for readability and reduced code.
Candidate: minor formatting
Reference: ditto: add a check it either has to be connector partitioning, or fixed_hash_distribution
Candidate: @vilchik-elena could use <UNK> instead of <UNK>
Reference: dangling bracket still sticking out :-)
Candidate: you could use <UNK>
Reference: this can be set in the ui binder file no need to do it in the localize (we only do this above due to the dynamicmessages).
Candidate: <UNK>
Reference: such approach will lead to setting up the property in maven executions. maybe you want to introduce a new method instead
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: rename to action
Candidate: is there a reason for this logic?
Reference: line length formatting again
Candidate: @gunnarmorling how about the union of <UNK>
Reference: i don't think we need to call this anymore.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: we have to improve this line. it would not always give correct results because of an integer divison: 5/2 = 2 2*2 = 4 in such a case it should
Candidate: can you use problematic. this call.
Reference: looks like ise is not thrown?
Candidate: we should use <UNK>
Reference: how about inverting the logic, only log the functions loaded, rather than those skipped, and please make it a debug level.
Candidate: <UNK> guidelines](<link_0>
Reference: readall here as well?
Candidate: you could use <UNK> instead of <UNK>
Reference: typo in button caption ?
Candidate: should we assert that <UNK>
Reference: assertthat(conf).isnotempty(); is shorter and gives better error messages. the same 7x in this pr: ctrl + f "isempty()).isfalse()"
Candidate: you could use <UNK>
Reference: you can combine these 2 lines as sandboxpath.createdirectoryandparents().
Candidate: this is strange, strange, narrowing to narrowing narrowing to beyond narrowing narrowing narrowing subclasses to
Reference: this can be made private as it's not required by any other class within the package.
Candidate: this should be <UNK>
Reference: have you verified it from the ui? it should send the 'imageids' array in removedisksnapshotsparameters's ctr. so this block would never be executed..
Candidate: magic number
Reference: just a minor suggestion. it looks odd to house getqualifiedname method in yarnrestjobstatusprovider class and invoke it just at scriptrunner.runscript as a param. it could be better to either move
Candidate: nit : <UNK> {
Reference: check type of insn2 before cast
Candidate: suggestion <UNK> <UNK> : <UNK> { ... }
Reference: should this assignment guarded by the lock as well?
Candidate: you could use a local var instead of mutating a
Reference: hashcode should also be based on checkpointid and statecheckpoints to match equals implementation.
Candidate: is there a reason to use the hash hash hash hash operand instead of objects.isnull
Reference: also here, it should be: for () { }
Candidate: use <UNK> instead of <UNK>
Reference: do we need the bracket?
Candidate: you could use a local variable?
Reference: i was curious why we do decoding here? does this break service bus? iirc, sb keeps track of deliveries when they are not in receive and delete mode to understand
Candidate: use <UNK> instead of <UNK>
Reference: <link_0> please name it in better way "iface" ==> "interfaceast" cis must pass.
Candidate: you could use <UNK>
Reference: please use "if (componentcategory.category_4_mapreduce.getname().equals(process.getcomponentstype()))" instead this hard-coded way.
Candidate: if this .show() != null && <UNK> && <UNK> && <UNK>
Reference: why do you need .* before and after (?s). after is enough i think. mb you mean \\.(?s).*
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: change to "size must be non-negative but was: %d"?
Candidate: use <UNK> instead of <UNK>
Reference: boolean
Candidate: please use <UNK>
Reference: why not naming it proxyfactory?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: would data ever be empty or not the same length as plottertable? if so, add a check for it.
Candidate: i guess we could be replaced by <UNK>
Reference: this part doesn't have any relationship with addpreference method. try to split the methods
Candidate: @manuelplazaspalacio this is is designed to be called in the
Reference: just out of curiosity - any reason that you don't do "initialwritablebookiesfuture = ...watchwritablebookies"?
Candidate: if you could move this lock to the synchronized block
Reference: i would use 'abstractregistry.dockerhub_registry' just to make any changes easier to track.
Candidate: speaking speaking speaking speaking speaking speaking speaking speaking speaking speaking speaking speaking speaking speaking speaking speaking speaking speaking speaking speaking speaking speaking speaking speaking speaking speaking speaking speaking speaking speaking
Reference: validation for timeout?
Candidate: this should be <UNK>
Reference: why static methods called as instance methods ?
Candidate: please use <UNK>
Reference: did you take a look at this? <link_0>
Candidate: did you take a look at this? <link_0>
Reference: objects.equals can be used here too, since it's more or less the trend we have on the models
Candidate: if you could use objects.equals()
Reference: can we make this more exact so that it's only final when actually needed inside the anonymous class?
Candidate: please use instead: {}
Reference: i'm still not convinced that stream syntax adds any value to methods like these. maybe if java stream syntax was concise, but it's not. i'm wondering, do you find this
Candidate: maybe we could use a <UNK> instead of <UNK>
Reference: s/tile.getzoomlevel()/tilezoomlevel
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: prefer string.format("%n%nstacktrace was: ") to be os agnostic.
Candidate: why we catching this exception?
Reference: if you fail the command nicely with can do action, you could give better error to the user here, by translating the msgs
Candidate: please use <UNK>
Reference: this loop is building a new full sql string upon each iteration. i would recommend using some other alternative that can operate on the string more efficiently (like using a
Candidate: this is designed to be freed progress on the run()
Reference: we're very vulnerable to injection here. we should be using sql arguments to pass these values over, not construct a string manually
Candidate: log.debug
Reference: i'm wondering about the default value for this. how easy it is to set the value for someone in osgi? and how likely it is that they would want the
Candidate: could we use <UNK>
Reference: == tests for reference equality, hence it could be error-prone -- it'd be better to use the .equals() method...
Candidate: please use <UNK>
Reference: why change the logic since the answer is always true?
Candidate: you could use <UNK>
Reference: unnecessary parenthesis
Candidate: please use objects.equals for (string operand
Reference: as it is not synchronized this can lead to race conditions where a listener registration can get lost. if you simply instantiate it where it is declared above, then this
Candidate: you could move this braces around
Reference: calling the mock methods directly and then asserting that the mock did something is just weird, a "mock" should be used to assert that the tested component interacts in a
Candidate: is there a reason that is is not <UNK>
Reference: this is probably the lowest priority thing i've ever requested, but could we call this legacydtofilter rather than old? i don't know why, but "old" feels very rough to me.
Candidate: you could use a constant instead of <UNK>
Reference: negative logic
Candidate: we could use <UNK>
Reference: subject_hash
Candidate: you could use foreach loop here instead of <UNK>
Reference: in variable !
Candidate: you could use a constant instead of <UNK>
Reference: that's wrong place for this kind of filtering. that's because the question if an action should be visible or not for non current revisions depends on action itself and is
Candidate: you could replace this with <UNK> with <UNK>
Reference: need not be public (same with the other functions)
Candidate: this is a <UNK>
Reference: i would have put object as return value...
Candidate: suggestion if <UNK> == null) {
Reference: graphdatabaseinternallogit.internal_log_file ?
Candidate: minor nit: thing: we could use a string instead of creating a temporary image?
Reference: although the proposed changed is technically correct, please revert this for the sake of readability.
Candidate: if you could use a top-level operand is null?
Reference: can you change the mentions of files to directory everywhere?
Candidate: misspelling
Reference: you should also check that luns list not empty
Candidate: why not use <UNK>
Reference: what if this byte is before/after the hard delete range inside the blob? hard delete starts at a non zero index at the blob and ends before the end of
Candidate: we could use <UNK>
Reference: should loader also be checked if it's non-null so that if follows similar paradigm as client. this way can call close() from main()'s exception block -> case where initialize fails
Candidate: i think that this should be closed in a finally block.
Reference: why u initialize outside of new thread("jvm-pause-detector-worker") scope ?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: remove all unnecessary ()
Candidate: you could use <UNK>
Reference: it is a 3 node cluster by default, don't need to specify it
Candidate: we could use <UNK> to <UNK>
Reference: same thing with returning ""
Candidate: you could use objects.equals()
Reference: unneeded change
Candidate: can be replaced with <UNK>
Reference: you can declare just a set<file>
Candidate: you could use this line
Reference: please follow the pattern we had to declare/add metric in samzacontainermetrics (i.e. instantiate the metric inside samzacontainermetrics class and just refer to it from outside like containermetrics.callbackcompletes.inc()
Candidate: nit: <UNK>
Reference: can this throw? and if so, can we handle it?
Candidate: you could move this to <UNK>
Reference: can you put the y acceleration (-0.03) in a named constant in the class? e.g. vertical_gravity_accel
Candidate: this is be used?
Reference: shouldn't we use setimageid?
Candidate: please use <UNK>
Reference: can validate maf.
Candidate: this is be null safe.
Reference: tricky. the enum is perfectly valid i think, but you don't expect to get here. i'd make it illegalstateexception
Candidate: is there a reason for this logic?
Reference: the newly added code is the mostly same as those of insert. it would be nice if some code to get projectschema and inschema are distinguished.
Candidate: this is be changed to the
Reference: what about putting time to the name to make clear when each snapshot was created, just a suggestion.
Candidate: we should log the error.
Reference: how is it reset if the test failed before?
Candidate: i don't think we should throw an exception instead of <UNK>
Reference: seems copy-paste error, change to try (tracescope ignored = tracer.newscope("getsnapshotlisting")) {
Candidate: you could use <UNK> instead of <UNK>
Reference: it's much simpler if you write the code like this  java if (!payload.containskey("errors")) { throw new apierror(response, body, payload); } ...  notice that you do not have to
Candidate: this is designed to be a <UNK> <UNK>
Reference: i believe you could directly instantiate database as h2database, rather then looking it up from the connection, because we precisely know the type of the database we connect to.
Candidate: use stepverifier here instead of creating a new constructor?
Reference: filereaders should be opened using try-with-resources so that they are closed for sure.
Candidate: pls use <UNK>
Reference: could this be configurable?
Candidate: is there a reason for this logic?
Reference: hmm .. was this superflous?
Candidate: use <UNK>
Reference: drivermanagerutils::getaccesstoken may be changed to getaccesstoken(properties)
Candidate: i think this should be a <UNK>
Reference: this feels like a change detector test. what in particular is it aiming to defend against? e.g. if we check that the output starts with "jgit ls-files", would that be
Candidate: this theory this should be closed here instead of contents. therefore, it will never be therefore, the expectations therefore, therefore, therefore, therefore, therefore, therefore, therefore, therefore, therefore, therefore, therefore, therefore,
Reference: you can use sourcesummary.getpagetitle() and targetsummary.getpagetitle() for the pagetitle
Candidate: i think this is incremented to the <UNK>
Reference: you should use an iterator to remove entries in the for loop (your code might also work but i'm not sure how indicies are reshuffeled if you remove an entry.
Candidate: if you could use <UNK>
Reference: i think this would be more straightforward to test if the getfromgetter() method actually read from a differently named private field: java public final string fromgetter = "accessed from field";
Candidate: use a constant instead of <UNK>
Reference: i am not sure if opening it up is good or bad at this point. here is a bug in track1 that kind of *caused* by open-up (not really, but
Candidate: use collectionutils
Reference: the method currently always set e new label provider without checking if the eef runtime is present. we should change the provider only if the eef runtime is present (see
Candidate: if you could use <UNK> <UNK>
Reference: i am trying to understand the current functionality. if one of the cards(say card1) is checked, and then if 'select all' button is clicked, would the previously selected card1 be
Candidate: you could use <UNK>
Reference: @dmzaytsev let's test with the urn provided in the original ticker: urn:test-domain-org:valid:1
Candidate: @xupyprmv let's use <UNK>
Reference: this calls checkedcardcount() twice also: the previous code returned false.
Candidate: is there a reason for this logic?
Reference: can you use isempty() instead?
Candidate: this should be <UNK>
Reference: let's move this check in googlecloudstoragereadchannel, it should determine during initialization if opened file is gzip encoded
Candidate: this should be <UNK>
Reference: can we fix this log statement to also reflect the fact that attributes might not have matched?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: please reformat this piece of code, it is pretty inconvenient to read  contiguousset<long> addresses = contiguousset.create( range.closed(lower, upper), discretedomain.longs() ); map<long, ilogdata> range = runtime.getaddressspaceview().fetchall(addresses, true);
Candidate: you could use <UNK>
Reference: do you need write permission?
Candidate: i think we should be a <UNK> <UNK>
Reference: this can be if (optionalchargeentity.isempty())
Candidate: i think we should use servercontext.
Reference: so we all agree that we should default to development mode?
Candidate: fyi, we could use a <UNK>
Reference: i think it's better to let intermediatedatasetid implement writeto() and frombytebuf (...) and just invokes them in intermediateresultpartitionid.
Candidate: suggestion <UNK> = new <UNK>
Reference: it seems like we're changing the semantics of this method. it's not really just expanding the template into a resource group id, it's giving you an entire selection context. i
Candidate: i think we could be a to <UNK> <UNK> state machine state that the is not set in the editor in the state machine in the
Reference: jenkins.getinstance().getqueue().maintain()
Candidate: you could use <UNK> instead of <UNK>
Reference: can we pass in the delay from this method, so sqsqueueservice shouldn't need to know about capture process configuration
Candidate: is there a reason for avro ?
Reference: why is adding refs/heads/*:refs/heads/* conditional on head being a symbolic reference?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why don't we use getnode?
Candidate: this could use <UNK>
Reference: use strings.nulltoempty
Candidate: this should be <UNK>
Reference: size in bytes, max integer will be 2gb, i think some crazy repo may have such number. long looks better.
Candidate: we could use uri.create
Reference: you need change at least because we filter on the project name.
Candidate: you could use <UNK> instead of <UNK>
Reference: shall we pass identifier object instead of the apitypewrapper itself? it will make this pr cleaner. example: apitypewrapper apitypewrapper = apiconsumer.getapiorapiproductbyuuid(apiid, requestedtenantdomain); identifier identifier; if (apitypewrapper.isapiproduct()) { identifier = apitypewrapper.getapiproduct().getid();
Candidate: i think this
Reference: these seem the same as the class variables
Candidate: is there a reason for this logic?
Reference: inline... maybe foreach
Candidate: you could use a try-with-resource here instead of <UNK>
Reference: why should the order be as such? trial and error, no? better to check that they are != since the hash function might change.
Candidate: why not use <UNK>
Reference: will it be good to have duplicated log messages here and [closedrivercommand:18](<link_0> maybe at this point, we can say that browser will not be closed after running? what do you
Candidate: you could use <UNK> here instead of <UNK>
Reference: always true
Candidate: if you could use <UNK> <UNK>
Reference: sometimes it produces non needed objects. seems like wasting cpu time.
Candidate: ![image](<link_0>
Reference: this looks to be similar to other method except file name check in the code. it is good to refactor something like below to avoid duplication.  private byte[] getjarfileasbytearray
Candidate: you can use <UNK>
Reference: this method could be written as  java public static void clearvisitdate(string[] selected) { setvisitdate(arrays.aslist(selected), 0); }
Candidate: unsigned <UNK>
Reference: can you use localqueryrunner?
Candidate: this is not <UNK>
Reference: you already have seturiinfo() at line 249
Candidate: thanks.
Reference: this case happens when the user presses escape (closing the dialog). so the progress bar is cleared through that.
Candidate: you should use the way?
Reference: i think we need to move into this null check
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: math.ceil here and "(int)(tmpfilesize / chunksize) + 1" in onchunkeduploadstarted? theoretically both are correct, while i have a slight preference for the integer approach i at least would request to
Candidate: this is a bit simpler.
Reference: does it make sense to add a null check for getpossiblepools?
Candidate: i think it'd be better to use <UNK>
Reference: suggestion logger.debug("checking docker os type");
Candidate: you could use a <UNK> scope.
Reference: i believe it would be more understandable to do the following:  // throws a gitlabapiexception if format is invalid format = checkformat(format); form formdata = new gitlabapiform().withparam("sha", sha); response
Candidate: use platform <UNK>
Reference: override
Candidate: @gunnarmorling you could use only: <UNK>
Reference: this.uri
Candidate: you could use <UNK>
Reference: why not use [transactionstatus#canrollback()](<link_0> here?
Candidate: this writevalueasbytes
Reference: this is a pretty heavy operation, which you need only when upgrading from a dc that doesn't doesn't support discard to a dc that does. you should use featuresupported to
Candidate: please miss?
Reference: i would prefer it equal to bigdecimal daysafterapril = getuseddaysafterapril(account);  bigdeciaml daysusednextyear = getremainingvacationdaysalreadyused(nextyear); //... .withvacationdaysusednextyear(daysusednextyear)
Candidate: you could use a fake instead of creating a new uribuilder
Reference: how about checking this return value in case it's null, would it make sense?
Candidate: this is not throw an exception
Reference: this equals implementation should include attributes from the command super class.
Candidate: this is be simplified to objects.equals()
Reference: can you explain why this code was removed?
Candidate: assuming this get() is throw.
Reference: is this essentially the same as the both null case? i know you've covered the bases but it's difficult to see how we can be sure that o1 and o2
Candidate: you could use a enum names as well.
Reference: shouldn't this call the empty constructor? or the empty constructor has useless code inside of it?
Candidate: this should be immutable <UNK>
Reference: this isn't actually asserting anything. needs to be:  java assertthat(one).contains("ping").contains("pong");  same thing below.
Candidate: why not use <UNK>
Reference: the get() wouldn't have guaranteed visibility so why is this safe to do?
Candidate: nope, this is not
Reference: what happens if server-side mutations are enabled? if enabled, since we no longer would need to rs.next and read all the data from the server + generate delete mutations for
Candidate: could you print stack trace
Reference: this is not safe from multiple objects trying to either close() or get() at the same time. you can end up with an object offered into the queue many times.
Candidate: you could use a try-with-resources here instead of <UNK>
Reference: why this change? if this is not related to this pr, please undo it.
Candidate: this criteria criteria criteria criteria criteria criteria is a <UNK> criteria criteria criteria criteria criteria criteria that is a <UNK> criteria criteria that is a <UNK> criteria that is a
Reference: please extract new segmentmetadataquery(...) as a variable.
Candidate: this is designed to remind the the the standard. we could use the sizes in the the minimum (error setting.
Reference: why not check for ids not being equal?
Candidate: you could replace this with <UNK> with <UNK>
Reference: nit: might be worth extracting a local predicate
Candidate: how about using <UNK>
Reference: there is now a new method to make your life easier. replace the previous lines with this: statesystembuilderutils.incrementattributelong(ss, ts, tidquark, inc);
Candidate: can you use foreach condition?
Reference: why connect twice? if you already connect obtain the fingerprint from the existing connection.
Candidate: can we pull this into a property?
Reference: remove gettreeviewer().gettree() != null check since its also done internally in widgets.isaccessible().
Candidate: i think this is be to be changed.
Reference: this is an opportunity for a nice stream pipeline. not that it is absolutely necessary, but in my opinion, converting these utility methods to streams makes your intention clearer to
Candidate: you could use <UNK> instead of creating a new arguments.
Reference: @bxf12315 if we launch here dependencypathselectedevent with the param isselected = true allows to respect the changes done at runtime strategy configuration changed by the user throw the wizard. i
Candidate: <UNK>
Reference: i would suggest making use of batch operation here.
Candidate: are consecutive reloads necessary at the sufficient? sufficient? sufficient?
Reference: suggestion return "fakeimagesubstitutor";
Candidate: this "_" should be null"
Reference: asserttrue(inputmap.equals(actuallist)); <link_0>
Candidate: wait.forelementclickable() should be <UNK>
Reference: i'd suggest to protect against null java this.signedheaders = signedheaders == null ? collections.emptylist() : new arraylist<>(signedheaders);
Candidate: is there a reason to be public?
Reference: you don't need these properties because they actually don't exist nor apply
Candidate: no need to display the
Reference: this should come from the mergetip that was read at the start of the merge op, *not* one that is read at the end of the merge op.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this can go down into the try block
Candidate: i doubt that this is not <UNK>
Reference: reference.of("state", initialstate.getid()) could be replaced with initialstate.toreference(). showing the example with the string constant is not the best practice for users.
Candidate: please remove this <UNK>
Reference: can be a do {} while since the hasnext is already done
Candidate: you could use shellisavailable
Reference: when loading to cache i would suggest to load all records because they are not many.
Candidate: use <UNK> instead of <UNK>
Reference: respones -> responses
Candidate: you could use <UNK>
Reference: same as above. this is a test. you should check that the return value is correct and examine some fields in devinfo.
Candidate: 2048 could be a bit more than <UNK>
Reference: (k) -> k suggestion return locks.computeifabsent(key, k -> new reentrantlock());
Candidate: nit: <UNK> is not optional.
Reference: shouldn't we check here for ip ? returning a null ip address when no ports are configured although there would be one seems not so intuitive.
Candidate: you could use <UNK> instead of <UNK>
Reference: add create(hit<t> ...hits) method to clean up a couple of calls of the form hits.create(arrays.aslist(a, b)), hits.create(singletonlist(ontologytermhit)) and hits.create(emptylist()) to hits.create(a, b), hits.create(ontologytermhit) and hits.create()
Candidate: static?
Reference: the build is failed. i don't see how but let's try revert this. perhaps this hasn't the behavior i think.
Candidate: you could move this to <UNK>
Reference: i believe that there is some difference between indexof(int) and indexof(string). it seems parse methods are on hot path, so performance could be critical here. please use appropriate methods for
Candidate: is there a reason to affects this method that affects the affects the <UNK>
Reference: i doesnt really matter, just nitpicking: local vars are non-initialized. good practice is to initialize them to a defined value. but sure, it doesnt matter here since the code right
Candidate: if you could use a <UNK>
Reference: i feel like using optional and null at the same time is a bit of an anti-pattern.
Candidate: you could use 1l int offset -> entry.getkey(), entry-> <UNK>
Reference: shouldn't this be the name of the datasource?
Candidate: mag <UNK> -> entry.getkey(), <UNK>
Reference: stringutil.isempty?
Candidate: could we cache <UNK> bellow?
Reference: use try-with-resource. java try (response response = executeget(bucketname, objectname, null, queryparammap) { ... ... } catch (errorresponseexception e) { if (e.errorresponse().errorcode() != errorcode.no_such_object_lock_configuration) { throw e; } } return null;
Candidate: you could use a versionid instead of versionid types?
Reference: these 2 catch blocks can be reduced to 1 like: java catch (instantiationexception | illegalaccessexception e) { throw new fragment.instantiationexception( string.format(error_msg_instantiation, fragmentclass), e); }
Candidate: if you could use <UNK> annotation, but the fragment is submits the anyway?
Reference: null as a key and .get(null) looks atypical and not readable on the go. it does require some context for someone to get the background on this.
Candidate: this is a <UNK>
Reference: why do we have two such methods now?
Candidate: please use isempty() instead.
Reference: also if its vsts and we are using pat, the username will be empty.
Candidate: no, this should be ignored.
Reference: maybe already send a statusupdate here that the task is starting.
Candidate: please remove this log.
Reference: reformat this class to 3 space indentation and 120 line length.
Candidate: can you use reduced to <UNK>
Reference: i guess just adding these two lines to the top of the method will solve the issue. the other additions are logically identical to the previous version.
Candidate: this is not touching this branch is be called from the model.
Reference: don't lock the dircache if you are simply reading and unlocking, its sort of a waste of time. use read() if all you need is to look at it. but,
Candidate: apache's apache's apache's apache's apache's apache's apache's apache's apache's apache's apache's apache's apache's apache's apache's apache's apache's apache's apache's apache's apache's apache's apache's apache's apache's apache's apache's apache's apache's apache's
Reference: maybe if the file type can not be inferred by it's extension name, we can try and read it as a property file by default (or maybe .yml?) and let
Candidate: if you could use <UNK> <UNK>
Reference: irc is not open if con is null initially. the logic here is a bit muddled.
Candidate: this is designed to be a <UNK> <UNK>
Reference: i would completely rephrase this: > closing connection to cluster {}
Candidate: you could use <UNK>
Reference: this is just an accessor so i don't think it has any effect when the return value is unexamined.
Candidate: this is not belong to images that is not belong to images that is not belong to the
Reference: where does nocache come from? and why should all services not have caching?
Candidate: you could use <UNK> to <UNK>
Reference: hashcode must use the name, since that is also used in equals
Candidate: you could use guava hierarchy instead of objects.isnull
Reference: the secondary id patch has been merged, see how genevieve uses it for the scatter / how it is used by the statistics too
Candidate: rename to boolean -> <UNK>
Reference: 1. do we need to include e.getmessage when passing the exception as the second argument? 2. also, do we need to do both logging and throwing? this will result in
Candidate: 2048 is a bit sketchy for the sake of <UNK>
Reference: <link_0> is also used multiple times and could be a static final.
Candidate: you could replace this loop with foreach loop with "return false"
Reference: so this is using preparerequest as the entry key. i see that you added equals/hashcode implementations where appropriate, but a quick look into the implementations shows that defaultpreparerequest.equals() will call
Candidate: we could use <UNK>
Reference: you aren't removing duplicated entries...
Candidate: is there a reason for the sake of <UNK>
Reference: please add logging at least in trace level
Candidate: could we use <UNK>
Reference: what happens if server does not start ? i.e. port is already in use ? then this would loop forever..
Candidate: i'm not 100% sure that this is not sure that this is triggered by tests.
Reference: same with this, if the logic is specific to villagerentity, it can be overridden in the mixin
Candidate: please use <UNK>
Reference: future work: * to avoid confusion of the method usage, consider renaming to something like: 'getsnappablevmdisksforstoragechecks'. * remove the unneeded 'getdiskidstoignoreinchecks' list and replace with some flag (as discussed...)
Candidate: this is supposed to be needed.
Reference: i'd suggest expanding the exception a little, with who's currently holding the token by doing adding processorname/segment
Candidate: the fact, the fact, the fact, fact, fact, fact, fact, fact, fact, the fact, fact, fact, fact, fact, fact, fact, the fact, fact, fact, fact, fact, fact, fact, the fact,
Reference: if we could get rid of null check, addchildrenproducerbatch and getchildrenproducerbatch could be removed as well.
Candidate: i think this is not <UNK>
Reference: unnecessary parenthesis
Candidate: @gunnarmorling this a bit strange to <UNK>
Reference: for code like this please use traditional for loops / iterators etc to iterate the values in the collection. this is a command line tool so not a big deal
Candidate: you could use a new object instead of creating a map?
Reference: inline: java return hash.addpage(page);
Candidate: suggestion <UNK> = new <UNK>
Reference: probably \s is better: from docs > \s a whitespace character: [ \t\n\x0b\f\r]
Candidate: please remove '+'
Reference: not sure we need all the double checks? can't we just do context.replace(...) and if it doesn't match it won't replace? the strings here are super short. it might even
Candidate: please use <UNK> instead of nesting.
Reference: not sure if all callers pass non-null, but if the callers aren't careful, this could be null. could verify with: suggestion if (requirenonnull(text).isblank())  (with a static import of objects.requirenonnull)
Candidate: if you is a <UNK>
Reference: return getname() would perhaps be nicer.
Candidate: you could use <UNK>
Reference: hint: pass the "mode" parameter into the "setactionmodeinttitle" function. also, suggestion: make the setactionmodeinttitle function private.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: <link_0>
Candidate: this should be <UNK>
Reference: @cvrebert maybe add a constructor for this common case of 10 random alphanumeric characters, false and true?
Candidate: you could use a constant here instead of creating a new <UNK>
Reference: have you tested that this actually works? iirc when configuring the trigger a new instance is created, both via the ui and via pipeline script, so it's not the same
Candidate: if you could use <UNK> <UNK>
Reference: could -> may
Candidate: could we remove the <UNK>
Reference: you can use if (has(feature))
Candidate: @vilchik-elena is there a reason for the sake of <UNK>
Reference: the uuid of the worker should be passed to method peek instead of this random value
Candidate: i think this should be a <UNK>
Reference: since this class implements closeable, shouldn't we wrap that with try (closeablehttpresponse response = request(query)) { ... } so the close method will be called at the end of the
Candidate: i think that this is is not <UNK>
Reference: add context specific message without using e.getmessage().
Candidate: add a warn log, log level
Reference: suggestion initcolumns.add(col_id_actions);
Candidate: <UNK>
Reference: should we use "withsideeffect" as description to be consistent with current .withsideeffect?
Candidate: this is be repelaced by: return <UNK>
Reference: isnotnull() ?
Candidate: please use <UNK>
Reference: is it possible to add a similar assert for cpu_consumed_nanos?
Candidate: this mock to tear down afaik.
Reference: @cvrebert for that we can pass locale.english to it...
Candidate: we should be a <UNK> <UNK>
Reference: please, don't introduce unrelated changes. let's focus on consolereporter.
Candidate: please add a static import
Reference: this should be checked on construction (using preconditions.checknotnull()), and throw an exception if the file is null. it's usually better to fail fast and loudly at the point of origin
Candidate: is there a reason that we are going to throw an exception instead of calling <UNK> request?
Reference: where is this magic number coming from?
Candidate: please use <UNK>
Reference: not entirely sure we should generate disk_ok for this. will discuss with you.
Candidate: <UNK> maybe?
Reference: are we assuming that metrics is non-empty?
Candidate: you could use <UNK>
Reference: since ioexception is checked we don't want to flood everything with throws ioexception. thus i initially had it wrapped just in illegalstateexception. imo we should create something like tmclangsruntimeexception extends
Candidate: please use <UNK>
Reference: is toarray required?
Candidate: you could use <UNK>
Reference: onerrormap?
Candidate: is there a reason that we are going to throw an exception instead of <UNK>
Reference: try to new layout manager from registration manager
Candidate: you decided to call <UNK>
Reference: i'd go for avoiding putting synchronized on it and stating it in the docs. there could always be another sync'd variant created by the builder.
Candidate: i'm not sure how about this is a <UNK> <UNK>
Reference: can you add two constructors in rulefactory? * rulefactory() - default constructor for backwards compatibility * rulefactory(resourceloader) - the new one to be used here i think, the resource loader
Candidate: you could use a <UNK> union here instead of <UNK>
Reference: please invert
Candidate: this description should be defined in the
Reference: clonedfactidentifier and clonedexpressionidentifier not needed
Candidate: this is designed to be a <UNK>
Reference: why object class?, maybe set type to null could be a better idea
Candidate: suggestion final string = <UNK>
Reference: exception containing the cause is dropped.
Candidate: i think that this is is not <UNK>
Reference: url = serverurl + userprefs, shouldn't all these use the full url to the place with the api key?
Candidate: this is not a bit risky.
Reference: as real part?
Candidate: why is this change?
Reference: maybe we can extract this union+immutablecopy to the aggregateclass itself?
Candidate: this is a <UNK>
Reference: why can't we add % into special_chars and avoid using additional if?
Candidate: could we use a constant.
Reference: hint: it's most readable is to simply use google guava after importing com.google.common.collect.sets:  set<string> stringset = sets.newhashset("structcol.a");  the same as other test cases.
Candidate: is there a reason for the sake types?
Reference: singular is good here, imho.
Candidate: is there a reason to assert that this affects the <UNK>
Reference: this should be shown
Candidate: if you could use a <UNK>
Reference: return an empty list here instead
Candidate: i think this is not efficient, we could use <UNK>
Reference: the uri of me endpoint can be configured by stormpath.web.me.uri. as @dogeared requested, i'll do the change myself
Candidate: <UNK> -> <UNK>
Reference: @pmlopes can you also call channel.close().sync() ?
Candidate: this should be deserve a trace, so that the discoveryresult is not null.
Reference: i have a feeling this one isn't going to be saved either as it nulls out all the values.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: in apache/master, we have "select 'upgrading metastore schema from 2.1.0 to 2.2.0' as message;" which shouldn't have the issue as per description in jira. i think, skipping the row based
Candidate: i nesting.
Reference: please split these changes in another review
Candidate: this is not protected
Reference: we should probably have these as part of the object, as they're used a lot.
Candidate: could we use a proxy proxy instead of a input.
Reference: maybe also change to not have slow logging?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: call super(name);
Candidate: use <UNK> authorization type.
Reference: should we use collator.getinstance(locale) ? otherwise this will use local machine or jvm default which might not be what we expect. i guess en_us would be safe choice.
Candidate: you could use a constant instead of <UNK>
Reference: i'm unsure how this connects to the fork-join related changes.
Candidate: you could use a ',' instead of <UNK>
Reference: if we are touching this code, we can also add curly braces {} around all those if/for etc conditions.
Candidate: i think we should set the supplier to set the defaults depending on the the defaults to set the defaults to set the defaults depending on the defaults depending on
Reference: i thought we talked about making this a bitset somehow. have packext keep a static int that counts how many packexts have been created and declared. change its constructor to
Candidate: if you could use a <UNK> <UNK>
Reference: i maybe mising something here: the isuseuseraccesstoken() returns true if the token composedtaskrunnerconfigurationproperties is not null and isuseraccesstoken is not null. however if isuseraccesstoken is false, the method will return
Candidate: if you could use <UNK> cr instead of nesting:  if <UNK> == null) { return <UNK> }
Reference: please use camel case. it should be fromwkt.
Candidate: <UNK>
Reference: please throw an exception if the query type is unknown.
Candidate: you could use this operand instead of objects.isnull
Reference: so if i'm right you can now catch an exception here in case getcomputedvalue didn't worked for some reason. and in the catch i guess you can log an error
Candidate: i explained explained narrowing a utf-8 that is is not <UNK>
Reference: please update java doc according to new parameter and exception adding
Candidate: you could move this to a separate method.
Reference: wouldn't onchildmoved affect the indexes of every key? i have a feeling that's why @puf didn't use a map in the first place but i could be wrong.
Candidate: you could use assert here instead of repeating <UNK>
Reference: typo
Candidate: you could use braces around statements.
Reference: again, test for topic creation but replytopicstubs
Candidate: you could move this to <UNK>
Reference: i like the solution behind the headers&items. :+1:
Candidate: <UNK> --> <UNK>
Reference: is this subtype equality needed?
Candidate: ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides should be
Reference: i'm not really a fan of shoottimelock - it feels pretty ambiguous (particularly as this is a boolean!)
Candidate: you could use <UNK>
Reference: correct keyword order
Candidate: static import
Reference: is this correct?
Candidate: this should be a bit nervous that we could use only:  java return <UNK> -> <UNK>
Reference: same here. pls refer to <link_0>
Candidate: you could use by: <UNK> <UNK> <UNK>
Reference: two more unintended ofs here - yeah this is always a problem with renaming methods that are named as common english words
Candidate: is there a reason for 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30
Reference: missed a spot
Candidate: we should return <UNK> here instead of objects.isnull
Reference: did you take a look at this? <link_0>
Candidate: did you take a look at this? <link_0>
Reference: here is where you could use the parsefileds method and do all this in a single line. values.addall(parser.parsefields(iotasmessage.getdata())
Candidate: you could use <UNK>
Reference: how about coordinates.length instead of 7?
Candidate: i explained explained explained explained explained to a constant for <UNK>
Reference: would it be worth putting some kind of warning here? it is an unexpected situation....
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: so here's a general question: iiuc, you pass on the original type of the change event (i.e. the struct obtained from the sourcerecord); i'm wondering whether that's a good idea,
Candidate: @vilchik-elena we could use this check for <UNK>
Reference: fortify only complain about comparing. we should stick to default tolowercase and don't use "local.english". we only need to check comparing by using equalignorecase without using local.english. check checkconfigureddisplay() method
Candidate: you could use a constant instead of <UNK>
Reference: inconsistent line breaks.
Candidate: is there a reason to synchronize this pr?
Reference: there are three interesting cases here. if the caller didn't call setallowpushoptions(true), then we don't advertise that we can get push options and pushoptions is null. we can detect this
Candidate: i think this is not efficient, we could use <UNK>
Reference: swallow?
Candidate: @ivange94 please add a message
Reference: i would prefer using a hashset<branch.namekey>.
Candidate: we should turn this logic into a method to <UNK>
Reference: maybe rename to "lastselectedentry" (keeping the "entry" name in the for loop)
Candidate: you could simplify this by:  java return <UNK> -> <UNK> -> <UNK>
Reference: this could easily be a uuid returning function.
Candidate: you could use <UNK>
Reference: or duration.standardminutes(10) like you've used above
Candidate: final
Reference: here we could use matcher.startwith and avoid joining with last 2 empty strings
Candidate: @fanifieiev this container above.
Reference: duplicated check? ;-)
Candidate: ![critical](<link_1> 'severity: major') remove this exception instead of <UNK> [![rule](<link_2>](<link_0>
Reference: format! and separate handling of handles and datasources.
Candidate: if you curly braces around
Reference: createsafexmlsource
Candidate: you can move this braces
Reference: is this a bug?
Candidate: i think that this is not efficient, we could use the <UNK>
Reference: unchecked cast. same below
Candidate: nit: not sure that this is is prone to a <UNK> trace, but it would be nice to print the <UNK>
Reference: wait, this is worse than the previous version. what happened to the assertequals()?
Candidate: is there a reason for this method is not <UNK>
Reference: don't call this
Candidate: this is not <UNK>
Reference: org.ngrinder.sm.ngrinderlightsecuritymanager
Candidate: you could use a constant instead of <UNK>
Reference: this second variable with the same value seems to be unnecessary
Candidate: you could use a boolean instead of <UNK>
Reference: this seems like it violates the "correctness" of how data cube works in that the user defines the "capacity" of the id range and it honors that. what you've done
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: please don't generate 3 rpcs sequentially like this. it really slows down the ui when presenting information. instead what we should do is create a listbranchresult data type to return
Candidate: you could replace this by: by: <UNK> <UNK>
Reference: please use the same pattern we do elsewhere. also, this is already being set in the configfactory, so  realmconfiguration realmconfig = configfactory.createconfigurationbuilder() .name(realm_name) .compactonlaunch(compactonlaunch) .build();
Candidate: this is not a to a trace, since it will be an error.
Reference: why not use stringbuilder?
Candidate: you could use <UNK>
Reference: how will this method be used?
Candidate: how about this : <UNK>
Reference: you should probably squash both commits. like this commit here wouldn't compile as you didn't declare logger, and the next one you remove this logger. as a matter of fact,
Candidate: why not use the config, instead of creating a list?
Reference: this can just return repository.hashcode()
Candidate: please use guava instead of objects.isnull
Reference: updatevalidsizepercontainerid
Candidate: you could use the <UNK> annotation?
Reference: we should reference "resource" from util.getresourcedir() no ?
Candidate: please use the enum?
Reference: travis doesn't like this:  > task :spring-rabbit:checkstylemain [ant:checkstyle] [error] /home/travis/build/spring-projects/spring-amqp/spring-rabbit/src/main/java/org/springframework/amqp/rabbit/core/rabbitadmin.java:340:33: reference to instance variable 'logger' needs "this.". [requirethis]  any chances you can fix and we merge? thanks
Candidate: i think this should be <UNK> to pretty-print
Reference: this looks like it could even be an info message.
Candidate: you could use <UNK> instead of creating a connection, increment that clear() will iterate over the arguments.
Reference: it would be nice if we could have a metric counting the number of discarded items.
Candidate: if you bail is invalid? this can be replaced by <UNK> and then calling the ou = false; if <UNK> != null) { return; }
Reference: move this validation to pluginprofileservice.
Candidate: please use <UNK>
Reference: let's remove this line
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: by no means i am against the idea of having in-liners for speed up. ( i love them so much in fact! don't tell cm! ), but for the sake
Candidate: you could use <UNK> instead of <UNK>
Reference: minor: use getintinrange instead of getint here.
Candidate: this should be a bit nervous that this is not <UNK>
Reference: this string should be stored in a constant and the branch type should also be a %s parameter
Candidate: you could use a try-with-resource here instead of <UNK>
Reference: can you replace this with a "validatearchivepath" method? i imagine we can do quite a few additional checks (e.g. invalid characters in the page).
Candidate: you could use a constant instead of <UNK>
Reference: is this gonna be stripped correctly in user builds? i heavily doubt it. you're gonna have a lot of call overhead. and nobody wants to see your webview logspam in
Candidate: wdyt about we have to use getters ie <UNK> ie <UNK>
Reference: disabling the non-durable parquet appender should get us a durable appender
Candidate: you could use <UNK>
Reference: why this check? the interface should provide all needed methods.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: we need a test that the default would be with root, but we are forcing it to be without root using the option. that's why we did this whole feature
Candidate: how about replacing this if?
Reference: is this the correct message to provide here. the internal key store is available only for the super tenant. shouldn't that information be mentioned.
Candidate: nit: use <UNK>
Reference: don't use i for the intent as it is usually used for counters. you can probably avoid creating a variable and just call getintent in the next line
Candidate: maybe we should use a checkargument instead of referring to edges, v. not v. <UNK>
Reference: the shuffle won't have much effect because the stream will get sorted below. i am not sure what the right behavior would be, but are the entities always supposed to
Candidate: rename to
Reference: ![minor](<link_1> assign this magic number 0.02 to a well-named constant, and use the constant instead. [![rule](<link_2>](<link_0>
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: nit: if debug log is not that imp, this could be replaced with few lines of code using for-each and lambda:  replicationloadsources.foreach(replicationloadsource -> optional .ofnullable(replicationloadsourcemap.get(replicationloadsource.getpeerid())) .ifpresent(pairs -> pairs.add(new pair<>(servername,
Candidate: i think this should ill a <UNK>
Reference: else is not needed since you returned in line above
Candidate: i think (filter.getrelationshipdirection() is not <UNK>
Reference: these tests do not, in fact, throw exception. i would prefer that the signatures be changed to reflect the exact exception that is thrown, if any.
Candidate: i is the translations should be be <UNK>
Reference: any reason to not pass e as the 2nd argument, to preserve the stack trace?
Candidate: strange,
Reference: return type of securityexpressionoperations to reduce reflection overhead?
Candidate: we should throw an exception instead of returning null?
Reference: change it to logger.error
Candidate: i think this is right...
Reference: so this is this?  relationship.setleftplace(leftrelationships.size());  i think this would be more readable then leftrelationships.get(0).getleftplace() + 1 and it would even work for the case if the relationships are
Candidate: you could be turned off the method.
Reference: although this may be technically equivalent, it breaks with the structure of the rest of the method. as such, i do not think the change is warranted. so, please revert
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: nit: is this meant to be private? i'd think users should use create(...)
Candidate: this is be to be a <UNK> <UNK>
Reference: same problem as in defaultclimateprovider replace this line with enumtemperature.getfrombiome(biome biome, world world, blockpos pos) here or it can't detect enumtemperature.hellish.
Candidate: static import
Reference: hmmm, does this need de-parenting?
Candidate: please use objects.equals
Reference: move this back to line 105 so it doesn't show up in the diff as it hasn't changed. let's try get the diff as small as possible with only necessary
Candidate: is there a reason for this class is avro to be a constant?
Reference: maybe want a default value here ("unknown?") - i think that can return null
Candidate: use <UNK> instead of <UNK>
Reference: end could have a value of -1 if a user makes a typo in their expression. you can probably avoid that by checking that value also contains } _after_ ${,
Candidate: you could use <UNK>
Reference: weird method name
Candidate: yes re-throw simplifies this simplifies the
Reference: i have a cute one:  timestampmapping().values().stream().maptolong( lockwatchversion::version).summarystatistics()  should get you sorted?
Candidate: let's use guava formatter: <link_0>
Reference: boolean.parse(string) is probably nicer, but not essential.
Candidate: if you could replace this with <UNK> with <UNK>
Reference: this is going to need to be verified with forge since i believe forge handles entity registration differently.
Candidate: suggestion if <UNK> == null) {
Reference: write a function for this. looks like this code is not repeated in 3 places.
Candidate: you could use <UNK>
Reference: it seems that there is an unexpected race condition. consider following test: java public class queryhistoryracetest extends gridcommonabstracttest { @after public void stopcluster() throws exception { stopallgrids(); } @test public
Candidate: is there a reason for this method could be replaced by <UNK>
Reference: this is a regular interface, not an annotation, so remove the @.
Candidate: you could use <UNK>
Reference: do we want to make the formatting a bit more safe? if i am not mistaking, this also breaks if the number of parameters does not match the number of
Candidate: if you're going to go on the caller.
Reference: if you return here, you can avoid the else { } and thus reduce nesting :)
Candidate: this is is designed to be a <UNK> that the is a <UNK> that is is a no-op but i don't think that we want to persist the
Reference: extra ; ?
Candidate: log.debug
Reference: formatting.
Candidate: use readasstring(...) instead of <UNK>
Reference: method should be called isunique, not uniquesampler.
Candidate: you could use <UNK>
Reference: consider wrapping it in a method that gets the key. use it in the getkeystorepasskey and getkeystoreurlkey methods.
Candidate: nit: use <UNK>
Reference: please put the statement on a new line and in between curly braces
Candidate: why not -1l ?
Reference: please move this line closer to tokentypes.literal_catch. recheck code coverage after this move.
Candidate: please use <UNK>
Reference: minor: it would be "cleaner" to do the hasnext check before checking for migration stamp and destruction. it's not clear from the contract does the hasnext interact with the underlying
Candidate: this should be annotated with @nullable.
Reference: this is oracle specific implementation. there are other jvms too: ibm, azul, openjdk, etc, if the jvm is not oracle based implementation is com.sun.management available?
Candidate: should we use a constant instead of <UNK>
Reference: @vilchik-elena typo? shouldn't we have a "h" as in "three"?
Candidate: this is designed to be a positive statement, but i think, if the >= <UNK> || <UNK> == <UNK> || <UNK> == <UNK> || <UNK> >= <UNK> || <UNK> {
Reference: - [x] don't occur -> didn't occurred --- it was modified. 6a981ae1248bd5d530270f738a344df2f5ffc6f9
Candidate: this is designed to be a constants for the kinds of these kinds of these kinds types, they have them to be.
Reference: why is "int index = 0" not in here?
Candidate: you could use a constant instead of <UNK>
Reference: this remote is not invalid but it only accepts user2 s/invalid remote/not permitted fetch/
Candidate: no, this is not
Reference: maybe checkthat(cancellationfuture.isdone(), is(false))? otherwise it will actually wait for 2 * milli milliseconds in this method.
Candidate: i'm not sure that this is triggered by relying on the <UNK> call.
Reference: are there any tests that cover these changes?
Candidate: we should use <UNK>
Reference: this condition is missing the workaround for the old "vendorisemployeeornonresidentalien" route node.
Candidate: suggestion if <UNK> != <UNK>
Reference: if-else can be simplified as: 'errormessages.putifabsent(constants.invalid_trial, new arraylist<>()); errormessages.get(constants.invalid_trial).add(message.get());'
Candidate: you could use <UNK> instead of <UNK>
Reference: fixed this method in my branch: <link_0> pls, merge my branch into yours, so as those fixes are o included in this pull request
Candidate: you could use a constant instead of <UNK>
Reference: if you are using an atomicboolean (and dont do anything else), you no longer need the synchronized keyword here.
Candidate: scm this is not
Reference: use enummap instead of hashmap.
Candidate: you could use <UNK>
Reference: can be simplified with stream().map() over map.entryset (no need to use stream.builder())
Candidate: is there a reason for element?
Reference: since theoretically, order matters, shall we test both orders-of-operations?
Candidate: you could use reflectiveoperationexception here
Reference: hoppers with slabs or signs above will not work. gettype() will never return null, only air.
Candidate: is there a reason for this logic?
Reference: do you think it makes sense to include the generation id in the logger too?
Candidate: this oldvalue is be oldvalue
Reference: what is this for? shouldn't it not be needed for the integration test?
Candidate: no need for paths?
Reference: flanes.isempty()
Candidate: this is not <UNK>
Reference: i'd just do if (objects.equals(channel.get(), key)) { then it does all the null checking for you. objects.nonnull is only really useful where a function is required (e.g. stream.filter) as all
Candidate: this is not a bit nervous that we could use servercontext.
Reference: this is unused now.
Candidate: this is not a tear down locations.
Reference: stringutils.isblank(), because we want to avoid npes
Candidate: should we use <UNK>
Reference: do we actually need this to get login working?
Candidate: you could use <UNK>
Reference: may want to give the implementor the rule that prohibits this so they know where to look.
Candidate: you could use <UNK>
Reference: please move to asyncdataprovider for re-use. implement an iasyncconverter to integrate the sort logic...
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: does this work with crlf delimited strings? it looks like it's not going past the lf. maybe you just need to call this method on the normalized string, and stop
Candidate: is there a reason for this logic?
Reference: old typo: 'excepted' should have been 'expected'.
Candidate: use <UNK> instead of <UNK>
Reference: move this up to the other create methods?
Candidate: this is cheap
Reference: can be returned right away.
Candidate: i think that this is not a <UNK>
Reference: nack for that preconditions check, otherwise it looks good. thanks for working on that. i need a bit more time to go again over all and check if anything might
Candidate: i think that this is a <UNK>
Reference: give some help: "float value found in query; use double instead"
Candidate: is there a reason for this method is not used?
Reference: objectidmapper.getobjectforid can return null and is marked as @nullable, so we should mark this method as @nullable too
Candidate: i think this is not efficient, but i would be a good idea.
Reference: collections.emptyset() returns a singleton so is preferred here.
Candidate: why not use <UNK>
Reference: omit 'verifying' word
Candidate: should be be a new parameter instead of creating a new parameter every parameter every parameter every parameter every parameter every parameter every parameter every parameter every parameter every parameter
Reference: there's a spinner that appears while it's loading. should wait for that to disappear instead of explicit wait
Candidate: is there a reason for the sake of <UNK>
Reference: could assign the sslcontext to a local variable to avoid the duplicate volatile read
Candidate: this is not be implemented in this pr?
Reference: reviewed commit, looks ok. the framework should fail to start if we miss out any of these accidentally
Candidate: this is a <UNK>
Reference: nit: use parameterized logging (same with the following log.error).
Candidate: this is not to be <UNK>
Reference: can this be "new datasourceenable(isxa())" ?
Candidate: we should call the <UNK> <UNK>
Reference: are you sure it works with codeminingdemo (java main)?
Candidate: if you could be replaced by the view?
Reference: this variable has only this initialization and a few get in this class. i guess the optional here is not needed.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this should just create the group directly rather than trying to lookup and catching exceptions
Candidate: @happy-neko same here, here, let's use custom custom custom custom custom custom custom custom custom custom custom custom custom custom custom custom custom custom custom custom custom custom custom custom
Reference: nit: or string.valueof(currentleader)::equals
Candidate: you could use <UNK>
Reference: here maybe you could use .map(requestresolver::resolve).map(this::instance).orelse(null);
Candidate: i think this is not efficient, we could use all() method to <UNK>
Reference: the indentation should be deeper.
Candidate: maybe you could use a constant instead of creating a separate method for example: <UNK> <UNK> <UNK> <UNK> <UNK>
Reference: you only need synchronized (year_format) { here. and it will block with the .settimezone() calls above.
Candidate: could we use a constant for s?
Reference: this is weird? why is it about a totally different message?
Candidate: nit: readasstring(...) instead of <UNK>
Reference: i actually think we should deprecate bulkheadconfig.maxwaittime(long maxwaittime) and add a bulkheadconfig.maxwaitduration(duration maxwaitduration).
Candidate: if you could use a <UNK>
Reference: what happens if the operation did not run correctly, e.g. an exception was thrown inside the execute block? given in that case it is possible that modelfile does not exist
Candidate: i think this should be dangerous, here instead of checking that <UNK> is not thrown in the pr.
Reference: moze return lookup != null ? lookup : insert(globalid)
Candidate: is there a reason for element?
Reference: different defaults here to the field defaults...
Candidate: you could use the builder instead of <UNK>
Reference: nit: jut call super.setforceclosetimeoutmillis(...) this will also ensure we do the correct thing if we ever change the super method content and will allow to make forceclosetimemillis private
Candidate: we could use <UNK>
Reference: code reformat please
Candidate: this is not efficient, we should use the <UNK>
Reference: assert this before calling get.
Candidate: you could use <UNK>
Reference: how about halting if suitepath does not end with .java?
Candidate: use checkargument instead of checkargument
Reference: i think it would be even cleaner if you do not use the variable: java getimplicitlycalledconstructor(methodtree) .map(symbol.methodsymbol::throwntypes) .ifpresent(thrownexceptions::addall);
Candidate: is there a reason for the kubernetes
Reference: looks like line 136-150 is duplicated at 249-263. might consider creating a method to do this.
Candidate: you could use <UNK>
Reference: sets.of(cell1, cell2) // much easy to read.
Candidate: ![image](<link_0>
Reference: our convention is to wrap if clauses in curly braces
Candidate: you could use the objects.isnull
Reference: i think i'd like to see two methods here.
Candidate: you could replace this with <UNK> with <UNK>
Reference: as described in our [policies doc](<link_0> all but the first test should be ignored
Candidate: nit: use <UNK>
Reference: can we use a scheduledexecutorservice to do this? feel free to refer to histogramdumper in nonblockingroutermetrics
Candidate: i think that this is is not <UNK>
Reference: datetimes.wrapformatter(isodatetimeformat.datetimeparser()) could be cached more globally. maybe create a constant in datetimes.
Candidate: could you rename the union e1
Reference: suggestion browserwebdrivercontainer webdrivercontainer = new browserwebdrivercontainer<>()
Candidate: the error message should be be thrown
Reference: this could be called in the above try block (after the for loop), then in scan(httpmessage, string, string) the try/catch and try/finally blocks could be removed.
Candidate: is there a reason for element?
Reference: why is this method needed, when only generatehmacsha256() is exposed as a java action? or am i missing something?
Candidate: suggestion throw new <UNK>
Reference: except for safari users, all the others should get tiff issue.
Candidate: you could use commons
Reference: inline
Candidate: finals
Reference: rename to config,cfg or launchconfig
Candidate: consider using a directory, directory, directory, directory, directory, directory, directory, directory, directory, directory, directory, directory, directory,
Reference: just a system.out, no validation here
Candidate: you could use a logger instead of printing the
Reference: since getparameters().getcustomcpuname() is always != null (value is taken from cluster/vm as a default), then once running with run-once without changing custom cpu type field manually then passthrough will be
Candidate: why not sure that the is not "if" to force the replacing with: <UNK> && <UNK> <UNK> <UNK> <UNK> <UNK> && <UNK> <UNK> <UNK> <UNK>
Reference: what if the user provides both cluterid and serverid?. so you could swap the above comparisons.
Candidate: this is a firing <UNK> anyway?
Reference: just make the method throws exception.
Candidate: why not sure that this is is not
Reference: likewise as for forwardedheaderfilter, it is worth applying a check if this even needs to be done.
Candidate: is there a reason that is not bigger?
Reference: i guess there's never a time that this is null. but, we do sometimes check for null (like in currentconfig below). why not here? i know loadconfigifnull called from applicationinitializer,
Candidate: this is be <UNK> to <UNK>
Reference: with these changes, there is still no exception thrown when the file does not exist. we need to check if the ldif exists and throw an exception if it does
Candidate: we should throw an exception here instead of <UNK>
Reference: use jnit.assert instead of framework
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this doesn't look right. what if there are >9 questions?
Candidate: rename to <UNK>
Reference: format: { on the same line than method declaration
Candidate: minor nit: you could be simplified to a guard block
Reference: we need to validate the type of the object here. currently we support string, number, int, long, float, double, boolean, date, and null.
Candidate: please revert this change.
Reference: shouldn't be better to use a specific exception such as cannotpushsystemeventexception or something like that.
Candidate: we should throw an exception instead of exceptions?
Reference: can you use separator constant here?
Candidate: you could use a try-with-resources here instead of <UNK>
Reference: what happen if options.getwidgetcontentprovider() returns null ? we should return true for this use case
Candidate: this is a bit dangerous, for the
Reference: do we need to run decomposition here? why can't we just call monitor.update()?
Candidate: you should use <UNK>
Reference: did you take a look at this? <link_0>
Candidate: you could use <UNK> instead of <UNK>
Reference: can use enumset here too, unless the order is important.
Candidate: could you please use <UNK>
Reference: ... and then here i would have  if (failed.get()) { throw new previouserrorsexistexception(); }
Candidate: you could use <UNK>
Reference: this causes an npe when updating an owner that doesn't yet have an access mode list.
Candidate: should we throw an exception instead of <UNK>
Reference: can we derive the external resources from env, instead of just passing in an empty map here?
Candidate: you could use <UNK> instead of creating a member object instead of 16?
Reference: looks like this catch could just be removed?
Candidate: this is be initialized in the overload.
Reference: do you care if the job completed successfully? i'd assume so which would mean you'd want to check the status before deleting...
Candidate: if you could use <UNK> <UNK>
Reference: i found this hard to understand. perhaps it would be more clear as: !getneedtowork() || finalizerdaemon.instance.progresscounter.get() != startcount || finalizerdaemon.instance.finalizingobject == null
Candidate: nope,
Reference: 0xf is a valid control character. all other cache keys use 0xff as separator which is guaranteed to never show up in any valid utf-8 stream.
Candidate: you could use checkargument here instead of objects.isnull
Reference: i've only just noticed that the current core makes *every* bc fluid burn, which includes residue. instead can you fix that as well by adding another element to the data
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: what happens if/when diff > m_spec.getinterval()?
Candidate: i am not sure how about removing the debug level to print stack trace level to debug level
Reference: one constructor must call another one to avoid code duplication and bugs. this constructor must call the first one.
Candidate: use utf-8 instead of <UNK>
Reference: can you merge these three filter operations into a single one?
Candidate: we could use a consistently here instead of marking consistently consistently consistently consistently consistently consistently consistently consistently consistently consistently consistently consistently consistently of marking consistently consistently of marking consistently consistently
Reference: this assumes that file.tostring() returns the full file path. however, the file is a public abstract interface org.apache.parquet.io.outputfile, which doesn't have such method, so tostring() is up to the implementation;
Candidate: you can use a guava here instead of creating a new object and 16?
Reference: ![major](<link_1> reduce this lambda expression number of lines from 23 to at most 20. [![rule](<link_2>](<link_0>
Candidate: use <UNK> instead of <UNK>
Reference: sucess -> success
Candidate: use readasstring(...) instead of <UNK>
Reference: use guava streams.stream(mystream) instead of streamsupport.stream(mystream.spliterator(), false)
Candidate: @vilchik-elena is there a reason why is we tracking the tracking the <UNK>
Reference: can we just not call this, if isinitiator() == null returns true
Candidate: if you could use a <UNK>
Reference: searchview's visibility isn't dependent on any of the discovery fragments, its visibility should be controlled using inside maindiscoveryfragment'.
Candidate: this is be <UNK>
Reference: there's also a need to test this pipeline. ps: i know there's buildpipelineinvokertest.java - but stil doesn't test the provided pipeline.
Candidate: you could use <UNK>
Reference: please don't use the "mocked" version here, it's not needed.
Candidate: please add a log message to debug message
Reference: this can still take argument of type sqldialect
Candidate: this think this is be an object contents. but it will be an npe.
Reference: just a question, instead of introducing a new variable mimagesonly here, can't we just set mfilter = filter.images; when getactivity().getintent().getbooleanextra(mediabrowseractivity.arg_images_only, false); is true? and keep savestate and restorestate without any
Candidate: i wish this is not qualified decision.
Reference: this is fairly expensive computationally. i think we could track this in a field and update it as requests are attached/detached from inside an action. this would make computation incremental
Candidate: none debugging debugging issues correctly correctly correctly correctly correctly correctly correctly correctly correctly correctly correctly correctly correctly correctly correctly correctly correctly correctly correctly correctly correctly correctly correctly correctly correctly correctly
Reference: state is a boolean - no need to _compare_
Candidate: please add a log.
Reference: minor: would prefer that cloud_replica_keyword comes before mount path since that would order the path from least to most granular
Candidate: suggestion <UNK> = <UNK>
Reference: since more state => more branches => more bugs, is there a strong reason to default to lazy initialization? this can be a stateless final nonnull if we initialize at
Candidate: i think this should be <UNK>
Reference: shouldn't this be done here <link_0>
Candidate: i writevalueasbytes
Reference: sets and maps contains useful static constructors fyi
Candidate: minor detail: nitpick, but you could use a constant instead of <UNK>
Reference: maybe return false here at once would be better?
Candidate: this should be webfaultexception
Reference: this class can be private
Candidate: could you use <UNK>
Reference: let's please use the jwksource to retrieve jwks. that will allow you to use a jwkmatcher that removes some of the validation you are doing in parsealgorithms.
Candidate: i think that this exception is not error.
Reference: this has been tested in allactionsaccesscontroltest, so it needs not be repeated anymore.
Candidate: please verify that @ consistent.
Reference: please do only start any further threads or implementation once you know there are items available for the tellstick binding (see providesbindingfor() as a possible hook). please also stop this
Candidate: nextvalueindex should not be a state of <UNK>
Reference: unclosed cache manager :( you can use [cachemanagercallable](<link_0> avoid running such risk.
Candidate: this should be <UNK> to <UNK>
Reference: @cwildman interruptedexception handling logic does not look quite right to me. at the very least one must call thread.currentthread().interrupt() when catching and not re-throwing interruptedexception. i also think we should
Candidate: could we use <UNK>
Reference: dump() uses the tmlog, please keep it consistent.
Candidate: is there a reason for this logic?
Reference: nit: this doesn't seem like it should belong in this pr
Candidate: we should throw an illegalstateexception instead of eating the
Reference: without a timelock block instead. we can run without either of them and hit the error.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why are you leaving this there? that will still link to the dead service.
Candidate: you could use a constant instead of <UNK>
Reference: please reuse function you wrote above
Candidate: this is be <UNK>
Reference: [checkstyle] info: '200' is a magic number.
Candidate: [checkstyle] info: suggestion <UNK> <UNK>
Reference: missing id comparison?
Candidate: please use objects.equals
Reference: who writes code like this?
Candidate: this is not correct.
Reference: and if gitdir and localname are set (to clone a repo and let your repo have a non-standard layout)? i would simply command.setdirectory(localname); command.setgitdir(gitdir); let the validation of localname (null
Candidate: detail: detail: detail: detail: detail: detail: detail: should be use <UNK>
Reference: nit: please use parentheses in the boolean condition to avoid confusion.
Candidate: this is dangerous, if the is not return true"
Reference: can also be replaced with streams java sourceformats.stream() .filter(x -> fieldapprover.approve(x.getdatainfo())) .filter(x -> stringutils.isnotblank(x.getvalue())) .map(stringfield::getvalue) .collect(collectors.tolist());
Candidate: <UNK> is designed to be <UNK>
Reference: you can also just pass the reference
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: no need to trim here cmt msg could mention sh
Candidate: -1.
Reference: new arraylist<>().stream().anymatch()
Candidate: you could use the println.
Reference: is this line actually needed? the dialog is displayed even when disabling cast support, what is handled fine without a restart.
Candidate: please combine this line operand
Reference: while i think it is unlikely, should probably handle uiindex being -1.
Candidate: please use <UNK>
Reference: extract the building of the responsemessage to it's own variable (in eclipse, select the text, right-click > refactor > extract local variable / select code + shift+alt+l). this will make
Candidate: extract the building of the responsemessage to it's own variable (in eclipse, select the text, right-click > refactor > extract local variable / select code + shift+alt+l). this will make
Reference: in run method we should call collector.getorthrowexception. in configurepipeline method, data pipeline app will throw in an exception if validation failure carries any failures. however, this does not apply to
Candidate: i think that the suppresses exception that the suppresses exceptions.
Reference: is this a "warn" or so..?
Candidate: we could use a constant instead of <UNK>
Reference: let's keep passing excludespecialchildren instead of true to be consistent with vcs.
Candidate: <UNK>
Reference: doing an http get to the pubsub url here is fine with me.
Candidate: please remove the
Reference: i18n
Candidate: we could use system.currenttimemillis() instead of sizes
Reference: separate timeout constant?
Candidate: you could use <UNK>
Reference: safer to cast to viewgroup here.
Candidate: this is designed for tracking events. consequently, events.
Reference: is this intentional ?
Candidate: you could use <UNK>
Reference: @idelcano remember that domain should not know anything about conversions then has no sense that the use case creates conversionexception. i think that we should create o refactor to metadataexception
Candidate: please check [our guidelines](<link_0>
Reference: maybe checking the name to be sure these are the recently modified ones?
Candidate: use <UNK>
Reference: spell out operator
Candidate: rename to <UNK>
Reference: any reason to iterate downwards?
Candidate: i guess we could be a foreach return, instead of marking a set?
Reference: we try to keep annotations on the same line if possible
Candidate: you could use <UNK>
Reference: i am missing something, method says if exists removeoldactivatorifexists but the if that wrap, says if it doesn't exists !ioservice.exists(activatorpath), to me seems like contradiction.
Candidate: this is not be risky.
Reference: i think i would prefer handlelogicalbinary to check for the presence of date/time etc and then delegate to a helper method instead of inlining the logic here. here is what
Candidate: please add a description for the
Reference: let's do this alwregardless we are in test; what this means is that the order in which the desc command outputs props is undefined unless we are running tests...
Candidate: is there a reason for avro properties?
Reference: why don't we init it automatically anymore?
Candidate: we should use <UNK>
Reference: checknotnull(type, "type");
Candidate: is there a reason to permission?
Reference: static import pls!
Candidate: you could use a constant instead of '+'
Reference: i think this check should be done after every accept call. at least, this behaviour will be consistent with default foreach implementation from iterable class.
Candidate: no need for the
Reference: unsupported operation during post?
Candidate: please add a log message
Reference: this would be shorter with try-with-resources.
Candidate: please use system.out
Reference: minor nit, move the "as the max" capacity string onto a line on its own' merge it back to a single string,
Candidate: if we wish to audience == null but we should throw an unsupportedoperationexception rather than an unsupportedoperationexception
Reference: possible to convert into message properties or java constant so that we can change text message later
Candidate: space after the
Reference: why not still use the limit in the case of not all granularity?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i'd suggest going java streams all the way :) for example: suggestion map<topicpartition, offsetandmetadata> result = hdfswriter.getcommittedoffsets() .entryset() .stream() .collect(collectors.tomap(e -> e.getkey(), e -> new offsetandmetadata(e.getvalue()));
Candidate: suggestion throw new <UNK>
Reference: cosmetic/trivial: the code style is: jwtconsumer jwtconsumer = new jwtconsumerbuilder().setrequiresubject() .setverificationkey(key) .setrelaxverificationkeyvalidation() .build(); (the first chained method is on the same line and then all further chained methods, align to
Candidate: suggestion <UNK> = new <UNK>
Reference: no. use a constant, create it if needed, but you don't externalize constants, you only externalize strings that need to be internationalized
Candidate: this is a <UNK>
Reference: please set a modifier - protected seem suitable
Candidate: this could be simplified to true"
Reference: why is the server mode set to open in teardown?
Candidate: this is not to be a
Reference: @test annotation usually appears on the line before the test function
Candidate: why not sleep be closed
Reference: i would propose to replace this isa by a iae, as it's a functional error
Candidate: i think that the description is empty?
Reference: is there particular reason to keep string, long, integer and byte[]? can i send double or byte or boolean[]?
Candidate: i think (filter.getrelationshipdirection() == direction.incoming) {
Reference: this could be a lot of allocations.
Candidate: is there any reason why not required?
Reference: right okay fine so tostring i kind of get. but what's this?
Candidate: you could move this braces around
Reference: this is null check only condition, so it makes sense to validate this as 1st step and then do database check on number of fence agents
Candidate: this should be <UNK>
Reference: this should call existing method, avoids maintaining the same info in two places (which is error prone). there's another pr with similar changes: <link_0> the methods getcweid() and getwascid() would
Candidate: use checkargument
Reference: annotations on different line
Candidate: why not -1l ?
Reference: if the previous try block throws an exception, does this next step have to happen (i.e. should it go in a finally block)(
Candidate: you could move this to a separate method.
Reference: this is a bad pattern in code. can we fix atleast this instance of it. this threadpool is being passed from samzacontainer as a null. val taskthreadpool = if (threadpoolsize
Candidate: this is designed to be an itemstack.
Reference: count doesn't need to be explicitly initialized since it is 0 by default
Candidate: i think that this is entry.getkey(),
Reference: discussionsapi or discussionsservice or discussionsgateway or discussionsclient
Candidate: you could use a constant instead of <UNK>
Reference: it looks like we can remove default_estimated_weight entirely, since we're setting all the attributes here and overriding the default parameters anyway. this is the only remaining use of the variable.
Candidate: you could use a <UNK>
Reference: move reader.close() to finally
Candidate: i think that this is is not closed in production.
Reference: why are we only adding this to this error message only?
Candidate: this log message is be used?
Reference: i'm missing some permission check here?
Candidate: stringutils.isnotblank()
Reference: we could probably use epoll here (if it is supported). see how this is done in hot rod server.
Candidate: can be improved, with the ternary.
Reference: alias should never be null.
Candidate: this should be a string instead of <UNK>
Reference: say we get the input milestone:curr+99. in that case we would search for the milestone "curr+99"?
Candidate: why not use <UNK> description, instead of <UNK>
Reference: this will fail, for example, if reauth is enabled and we update the reauth token, or if it's a channel signin that verifies the channel. it would be better to
Candidate: this is not needed
Reference: better to have a mapping helper method as it continues to grow. make the top api impl as simple as possible.
Candidate: use <UNK>
Reference: didn't you mean to change the key on line 84?
Candidate: i think this is be changed to the 'if' code: <UNK> && <UNK> && <UNK> <UNK> {
Reference: i am not fully aware of kafka internals, but i know that they have two apis for consumers. does this one use the new api?
Candidate: this should be <UNK>
Reference: this test definitely verifies that the thing gets closed. but it doesn't verify that things don't get closed while they are in the process of running. is it possible to
Candidate: is there a reason to assert that this test is that is not implemented in the
Reference: when you import the hosts, the addresses that are auto-populated are the gluster addresses (backend network). what you want to tell the user is to provide the frontend network address
Candidate: is there a reason for this logic?
Reference: what if the view is not open? would this be null?
Candidate: consider using <UNK>
Reference: logutils.clean(config.getryainstancename())
Candidate: you could use the exception here instead of creating a repository and cancel the case.
Reference: i am not sure i like this returning the same object references because now it requires the command impementations to be thread-safe. i would prefer we return "new .abc()" command
Candidate: i think this should be a <UNK>
Reference: oauth
Candidate: should we move this check to the
Reference: does this break the tunnel bore collision? hmm....not sure why i do this.
Candidate: you could replace this by: <UNK> != null) { return false; }
Reference: this block seems to be to verbose, can we make it simpler?
Candidate: nit: we could use a <UNK> <UNK>
Reference: nit: consider flipping the condition
Candidate: if we should use a uid instead of <UNK>
Reference: use list.of
Candidate: we could use a <UNK> instead of creating a new connection,
Reference: same here, no need to have the same message for secondary
Candidate: i guess we could be careful to the variants
Reference: can we include the name of the strategy in the message here?
Candidate: use <UNK>
Reference: was the throws ioexception required? if this worked before, i'd rather we not include it.
Candidate: this exception is be thrown by <UNK>
Reference: why do you need to use double.valueof here?
Candidate: could we use the foreach loop here instead of <UNK>
Reference: should the test eventually drop the table? (here and below)
Candidate: this is not to tear down down down down down down down down down down down down down down down down down down down down down down down down overwrites
Reference: call this at the end of the method
Candidate: i pagelogging
Reference: shouldn't this change be executed only for 3.2 clusters and above ? the linkstate property shouldn't be part of any vdsm api earlier to 3.2.
Candidate: this complains about replacing this complains with <UNK>
Reference: in the parent class to this one i have a method "asboolean". would this have been of help to you? users will often enter different boolean values 0, 1, true,
Candidate: is there a reason for this is not <UNK>
Reference: do we have the logic for <link_0> somewhere?
Candidate: you could use <UNK>
Reference: have you consider pushing this conditional to the callers? i think in both cases it would be the calling code easier to understand, it avoids having to jump around the
Candidate: nit: you could be replaced by <UNK>
Reference: please explain why this line isn't in the try-block.
Candidate: maybe rename to debug level to debug level
Reference: maybe we don't need to call 'frontendfailureeventlistener.hide()' here, since 'currentuser.logout()' will invoke 'baseapplicationinit.onlogout()' by default.
Candidate: is there any reason to re-throw the properties?
Reference: perhaps remove the extra parenthesis around targettype.isiterabletype()?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i think we still need to remove these catch clauses because they could hide the fact that none of the dates actually parse.
Candidate: this is not used?
Reference: do we really need to wrap unsafe args? there's a non-zero allocation & gc cost to wrapping for logging in tight loops or on hot code paths (though this specific
Candidate: this should be nicer.
Reference: this should be a crash.
Candidate: is there a reason why is not printed here?
Reference: nit: it's an to and not ts
Candidate: you could use <UNK>
Reference: should be static, as well as fromenvironment() method. also my idea says that parseint() must be used instead of valueof()
Candidate: if this is not used.
Reference: there is now a casedetails constructor that takes only a case name, intended for use here. please merge in develop again and update this to use that constructor , thanks!
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: mm tables are unused here.
Candidate: i think this should be a <UNK> <UNK>
Reference: reset lock?
Candidate: this is be explained to a map?
Reference: please declare the dateformat off the critical path of the method invocation. in other words, have it declared as a public static final variable at the top of the class,
Candidate: nit - we could use this property?
Reference: this will return null for non-platform uris.
Candidate: this is returns an empty array.
Reference: generally endpoint is checked for being null and if it is an exception is thrown.
Candidate: you could use stringutils annotation, instead of sharing
Reference: no :) we should fix the message :)
Candidate: please use <UNK>
Reference: is thre a reason this call isn't going inside the app initialization below?
Candidate: ![major](<link_1> 'severity: major') reduce most of most most most most most most most most most most most most most most most most most most most most most most most most
Reference: what does getint() do if the value isn't an integer?
Candidate: you could use a constant instead of repeating the
Reference: do we need to do this read in a loop since we are not guaranteed to read the full data in one call?
Candidate: i think that this is not efficient, that the "return" <UNK>
Reference: suggest we follow the *inpixel method approach here too: - rename current method to getpathdatainpixels() - create a new method getpathdata() which will perform the autoscaledown operation
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: you are using tags ones, please access value directly in for
Candidate: suggestion if <UNK> > > > > > > > > > > > > > > > > > > > > > > > > > > >
Reference: you can remove the "version != null &&", as stringutils.isempty handles nulls.
Candidate: is there a reason to propagate the here?
Reference: is it necessary to check if default handler present? why could this happen?
Candidate: log.debug maybe?
Reference: this should call: map<string, string> partition = offsetprotocols.sourcepartitionforprotocolv0(tableid);
Candidate: you could use <UNK> here instead of <UNK>
Reference: nit: seems the approach of passing null token is a right one here, but it may impact <code> bearertokencredential</code>, which may start using the raw token field in other methods
Candidate: this is not
Reference: would it ok to move the below three lines to bbcttestutil.removecard?
Candidate: is there a reason for this logic?
Reference: please try to get rid of the continue. i'd use the stream api here instead.
Candidate: this is designed to be a <UNK> <UNK>
Reference: in contrast to lombok, groovy adds visible annotation, while here we check only invisibleannotations, so that currently filter doesn't work.
Candidate: minor nit : <UNK> { ... } if <UNK> == null) {
Reference: which tests cover this block?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: too complex construct
Candidate: is there a reason to check that the is not empty?
Reference: if element doesn't exist, then first condition will return false. there is no _third_ option, hence usual if-else will suffice.
Candidate: please add a message
Reference: i don't understand this bit. why do we need something more complex than transferconfig.isadvertisesidebandall() here?
Candidate: is there a reason for the baseurl baseurl
Reference: setbindintercept_**o**_r i spent hours battling this npe, i knew it was a mocking problem but couldn't see it. now looking at your pr the typo in setbindinterceptpr is blindingly obvious.
Candidate: you could use <UNK>
Reference: why a message for name instead of key?
Candidate: please use collections.emptylist()
Reference: should this line use the "safelyaddproperty" method, like in the other lines below it?
Candidate: is there a reason for this method is not <UNK>
Reference: > by format by a format i would say bye bye to first part of this ;)
Candidate: i am not sure if you didn't iterate through the looking at the
Reference: executor is null
Candidate: no need to call <UNK>
Reference: there is not much point to this check: if decls.length is zero, the loop would just iterate zero times.
Candidate: <UNK> -> <UNK>
Reference: nitpick: make it translatable
Candidate: you could rename this to <UNK>
Reference: e.getmessage()
Candidate: i would be a bit more helpful than <UNK>
Reference: this will break on windows. portablestring always uses "/" on all platforms. please use org.eclipse.core.runtime.ipath.separator
Candidate: you could use this instead:  java return <UNK> <UNK> <UNK>
Reference: should this condition not throw an exception?
Candidate: is there a reason that is not empty?
Reference: change 'if' to block in the new code.
Candidate: nit: use <UNK>
Reference: we can use tokens.stream().anymatch() here.
Candidate: this shoul use mockdatanodeid instead of ==.
Reference: the smeltery only runs this every 20 ticks, or tick == 0
Candidate: could we add a <UNK> to <UNK>
Reference: wrong type. should be list<string>
Candidate: you could use this check for the
Reference: instead of keeping a map and a list, can we combine them to a single map? e.g. 'id' to 'disk' (to avoid maintaining two data structures).
Candidate: how about moving the vm to it..
Reference: let's extract this to fixturestool (possibly in another patch before this one)?
Candidate: please remove expectations
Reference: i fully understand that this is simple to write but it is also very brittle. for assertions on the topology, isn't there a way to do a number of them
Candidate: you could use <UNK>
Reference: i don't see the necessity for this tests being ran over all storage formats.
Candidate: you could use the println.
Reference: maybe use a variable instead of calling 3 times tree.expression()
Candidate: you could use computeifabsent clear()
Reference: mavenexecutionrequest executionrequest = createexecutionrequest(); populatedefaults(executionrequest); these 2 actions will be unnecessary in all cases where no lifecycleparticipants are defined, that is to say, most of the time. i'd move these
Candidate: if you is going to be the connection,
Reference: silent errors are pure evil ioexception should be thrown out
Candidate: i'm not sure how about the sure that this is is not but i don't think we want to have a
Reference: just "kafka-0.10". the same to others.
Candidate: you could use a constant instead of <UNK>
Reference: better to use the official way here true instead than "true"
Candidate: better to true official here instead true here instead
Reference: this should also have one assignment per newly opened resource.
Candidate: could you use <UNK>
Reference: ... and use it here.
Candidate: if this is not needed.
Reference: since the connection getting passed as a parameter to this method, it shouldn't close the connection inside this method. need to close the connection only localconnection set to true.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: is this an api call or an implementation (native) method call?
Candidate: use <UNK>
Reference: just check if a is not null because getannotation will throw an npe which is not related to types.
Candidate: is this a exception to be used?
Reference: the put method of a map returns the old object. so why calling get in front of if we notify the listeners after the put call now? java final string
Candidate: please add a log.
Reference: no need for type here
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: we should not remove debug statements.
Candidate: you could use <UNK>
Reference: we should not continue if file read fails right?
Candidate: nit - we can return <UNK> here instead of equals?
Reference: not important at all, but maybe using stream + predicate?
Candidate: is there a reason to check?
Reference: if this is now a hardcoded list that never changes, then please move it to a static final field.
Candidate: minor: you could be simplified to <UNK>
Reference: this would most probably again cause cce in case of editing pools or instance types.
Candidate: why not invoke <UNK> storage shard shard storage shard storage shard storage shard storage shard storage shard storage shard storage shard storage shard storage shard storage shard storage shard storage
Reference: minor optimization: grabbing the blocking queue for a given topic can be done in the higher loop and then the queue != null check can be done earlier as well.
Candidate: if this "return" message
Reference: expects a string -> "requires a string operand"
Candidate: should be be null?
Reference: construct the map outside the lock.
Candidate: could we log the
Reference: nit: for the @nonnull you put it once before the plugin, other time between public and the return typed. i would prefer the latter but at least keep consistency.
Candidate: no need to call this explicitly.
Reference: same here, use format strings.
Candidate: i think warn level
Reference: perhaps creating a more specific configurationexception here so in this case it can be logged as info?
Candidate: i think that this is is not closed in a finally block
Reference: let's remove the stack trace from the logs here, since we know it's a timeoutexception, and if it happens there's bound to be a lot of these. suggestion log.warn("timeout occurred
Candidate: you could be replaced with <UNK>
Reference: cool, you're fast. i see the goal of 99 coming nearer :) instead of stream.range(2, max + 1) please use stream.rangeinclusive(2, max). that's the canonical use-case. thx
Candidate: you could replace foreach loop with foreach loop with foreach loop with foreach loop
Reference: will this cover the case when a tag was selected and the user un-selects it? we can add: private final list<tagmodel> activetags = new arraylist<>(); field, together with following code:
Candidate: wdyt about moving this method to <UNK>
Reference: continuing sounds a bit like you'd be retrying or that the process does not stop, but i'm not seeing any way for this to resolve nicely. if we are getting
Candidate: you could use a constant instead of <UNK>
Reference: i'm not sure this will 100% work. table name can be "mytable" in which case your quoting is fine, but it can also be "myschema.mytable" which is quoted "myschema"."mytable".
Candidate: how about tracking this change?
Reference: list<string> lines = files.readalllines(filepath);?
Candidate: you could use a constant here instead of <UNK>
Reference: please use executehsmgetstoragedomaininfo - that's why you added it in the first place
Candidate: you could use <UNK>
Reference: use assert.notnull()
Candidate: is there any reason to be null?
Reference: throwing an exception inside a map operator is odd. in this case, use handle() operator to either sink.error() or sink.next() depending on whether the response is an error or success.
Candidate: is there any reason reason to be null?
Reference: i find it very unintuitive to find this here... i'd suggest moving the log to pmd.dopmd, which is guaranteed to run once and a little more natural
Candidate: copy/paste this copy/paste this complains about this change.
Reference: streaming an empty list?
Candidate: <UNK> is not <UNK>
Reference: any reason you are removing the processadapter?
Candidate: you could use <UNK>
Reference: set it to true here
Candidate: log.debug
Reference: the docs say that it excludes the executable name, but it doesn't.
Candidate: please use <UNK>
Reference: i assume this is taking the agent's default character set. if so ... for various reasons (e.g. [jenkins-13091](<link_0> we might be in a situation that the agent does not run
Candidate: you could use -1l
Reference: just call this updatenickname, as that's all it does.
Candidate: we could use <UNK>
Reference: this should probably be: if (lat != 0.0d && lon != 0.0d) { android docs for bundle say: > returns the value associated with the given key, or 0.0 if
Candidate: do we need to compute the queries to site.
Reference: use assertfalse
Candidate: please use <UNK>
Reference: do they all have to be public methods?
Candidate: we should use <UNK>
Reference: use command instead of separate parameters
Candidate: i'd suggest to introduce a local variable names.
Reference: there is no way where storedattribute can be null.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i believe this should be a 401 to mitigate enumeration. further, i can't seem to find a place in spring security that returns a 404 in similar circumstances.
Candidate: could you move this to the caller.
Reference: i think we can easily avoid using a list here. how about: protected string[] getgdbcommandlinearray() { // the goal here is to keep options to an absolute minimum. // all
Candidate: @gunnarmorling you could use only: <UNK>
Reference: assertfalse
Candidate: please use <UNK>
Reference: intentional change. keep the originial.
Candidate: this should be <UNK>
Reference: this will severely increase jenkins startup and job save times. we need to find a different approach at solving this problem. for example adding a flag that dynamicgerritprojects is being
Candidate: if you could be a <UNK> <UNK>
Reference: suggestion throw new illegalstateexception("only valid, managed realmresults can be frozen.");
Candidate: you can use putifabsent hierarchy instead of <UNK>
Reference: nitpick: missing a space here before catch.
Candidate: you could use a constant instead of using "\"" + joiner.on("\", <UNK>
Reference: why we are using arrayutils.isequals not equalsignorecase like in line 111?
Candidate: this is not correct.
Reference: result.replace looks a bit like "replace result" while it means "result that replaces". maybe result.replacement?
Candidate: nit: spelling
Reference: final
Candidate: suggestion <UNK> = <UNK>
Reference: i think it'd make users relieved if we mention in the message that failedcontexts are handled in the same way as closedcontext.
Candidate: formatting: space after <UNK>
Reference: log should be written only when update is perfomed
Candidate: why storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage
Reference: [minor] start lowercase
Candidate: is there a reason for this statement?
Reference: thanks @wb14123 !
Candidate: you could use <UNK>
Reference: shall we move this to process() method of the api so that we don't need to set it over and over again here into different cases?
Candidate: this is not be used?
Reference: this should be moved down a few lines to not break the formatting
Candidate: let's use a ctor instead of creating a new arguments.
Reference: shouldn't this also be changed to super.selecteditemschanged()?
Candidate: please use <UNK>
Reference: is it an intended change? because this file is an autogenerated file from remoteinterpreterservice.thrift
Candidate: is returntype non-null?
Reference: this is a bit weird, is calling the tostring method actually the right thing to do?
Candidate: suggestion <UNK> -> <UNK>
Reference: this seems pretty late in the method to throw an exception like this. could we catch it earlier?
Candidate: could you move this a little little little little little little little little little little little little little little little little little little little little little little little little little
Reference: and here we could call config.getenumlist
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: @xupyprmv please move indentation back 4 characters
Candidate: @vilchik-elena you could move this initialization to
Reference: i think you forgot .build()?
Candidate: i "_" is not use a string.
Reference: i think the current code runs into similar problems that we had recently in a pr by @stefan-kolb: if the currently selected entry changes, then the binding is not updated.
Candidate: this is not a bit nervous that we could use the <UNK>
Reference: this is an interesting change -- how/when were we closing the connection before?
Candidate: this should be a <UNK>
Reference: i don't know about this being static, i feel like it shouldn't since plugin itself is already static.
Candidate: this is a <UNK>
Reference: shall check if it works with different case for the key. i mean, set the property name in upper case during create db or alter db and try if we
Candidate: i'm not sure how about making this a bit more obvious that this is is is not to be a
Reference: i think you can guarantee that options.getoperationtype is non-null in the getbloboptions constructor - unlike the range, an operation always has an operation type. so you could avoid the second
Candidate: you could use objects.equals() instead of objects.isnull
Reference: this kind of things is better to separated on two assert assertnotnull assertequals (2, actions.size); give you more info about what is the error
Candidate: is there a reason for element?
Reference: after separating dashboard things from metricmanager, then we don't need to prepend 'dashboard:' at the front of logging messages.
Candidate: suggestion if ( <UNK>
Reference: is this safe for re-use? in the transportshardupsertaction we create a single insertsourcefromcells instance and then use it for multiple params. what if there is a null value early and
Candidate: i'm not sure why breaking breaking breaking breaking breaking breaking breaking breaking breaking breaking breaking breaking breaking breaking breaking breaking breaking breaking breaking breaking breaking breaking breaking breaking breaking breaking
Reference: cmt msg: "adapt the new work interface to multichannelgroupbyhash." not sure "adapt" is the right word, since you're not changing the work interface. "apply"? "use .. in"?
Candidate: if you could use <UNK>
Reference: suggestion if (transactionmanager != null && transactionmanager.isactive()) {
Candidate: if you could use <UNK> != null != null ? : <UNK> : <UNK> : <UNK> : <UNK> : <UNK> : <UNK> : <UNK> : <UNK> : <UNK> : <UNK>
Reference: it is good that you return null in case of the bloom filter is not compatible with the one supported by this implementation. this way this is forward compatible with
Candidate: is this possible to bind the self versions somewhere?
Reference: s/type/type s/status/status.state
Candidate: i think that this is not correct.
Reference: this should be done in nodes.updatenode() - so it follows the same route as setnodes() addnodes() and removenodes()
Candidate: why not use <UNK>
Reference: this may be wrong for 2 equal instances, consider the following example:  java cheserviceimpl s1 = new cheserviceimpl(); cheserviceimpl s2 = new cheserviceimpl(); s1.getlinks(); assert sq.equals(s2); // <- this
Candidate: this could use use constants instead of string names.
Reference: not sure that this method should be public...
Candidate: why is eating this exception is not
Reference: don't use raw types - new pair<>(vm, vmdevice)
Candidate: you can drop this method please.
Reference: should we clear the loading_ flag here? (doesn't look like it effects correctness but would be consistent?)
Candidate: this is not to be a <UNK>
Reference: i think what i really don't like about this is that this whole thing relies on the analysis module's developer to not forget to decrement the request flag or else
Candidate: this is designed to be a <UNK> that is missed.
Reference: you can't move this to the first place and return. on linux/mac "device" part is always null.
Candidate: use <UNK>
Reference: move this line outside of the loop
Candidate: this would be you.
Reference: i don't see this file
Candidate: please use <UNK>
Reference: what exactly is this doing?
Candidate: suggestion if <UNK> == null) { return false; }
Reference: to remove
Candidate: you could use enter the
Reference: compatible (remove 2nd "a")
Candidate: this checkbox is be defined in <UNK>
Reference: we need to synchronize this because the write can be performed concurrently.
Candidate: typo: <UNK>
Reference: this orelse is internal within the filter method, correct? it's hard to parse as-is, because it's indented to the same level as the calls that are directly on stream(), so
Candidate: you could use <UNK> <UNK>
Reference: again, i think you can close the try clause here. also, you are missing a context.restoreauthsystemstate(); in this test.
Candidate: i think we could be called here instead of creating a item friendly *after* (string request.
Reference: hey @mderamos can we replace the data.getvalue() into the array and adding the actual value to the error message like before? the more actual data we can inform the user
Candidate: <UNK> -> <UNK>
Reference: matter of style and choices but i tend to think that this last part of the && should be implemented as a filter of stream on the parameters stream.
Candidate: please use <UNK>
Reference: i take it this is the key assertion that indicates the script was overwritten. it would be better to make it much more explicit - make mock/start.sh and this assertion
Candidate: same as above.
Reference: why not use fail("")?
Candidate: suggestion <UNK> -> <UNK>
Reference: this isn't right, it will cause the promise to be subscribed to twice. would you mind rebasing and using the [new time() method that i just added to promise](<link_0>
Candidate: this catches catches exception catches be thrown from the status is not
Reference: when this throws an exception the file writer may not get closed, consider a try with resources.
Candidate: formatting: space
Reference: probably something like (2 \* integer.bytes)?
Candidate: we could factor this out into a <UNK> constructor?
Reference: do we need tabletype.valueof?
Candidate: is there a reason to log level to be printed here?
Reference: rule vs ruleimpl (see above)
Candidate: how about using a string concatenation
Reference: could there be assertions on the properties of the populated readhandle?
Candidate: is there a reason to properties? properties? properties? properties? properties? properties? properties? properties? properties? properties? properties? properties? properties? properties? properties? properties? properties? properties? properties? properties? properties? properties? properties? properties? properties?
Reference: trailing tabs
Candidate: this should be <UNK>
Reference: can we use the constant for "/processor-" defined in zkkeybuilder?
Candidate: is there a reason for this method to be a
Reference: please check the indentation here.
Candidate: this is a bit strange,
Reference: it's probably a bit low. i doubt groupedjobinitializer use much memory so we could easily increase it a bit by default (like 100 maybe). would need to check how many
Candidate: please use <UNK>
Reference: could be just  this. belongstorecentindexsegment = this. belongstorecentindexsegment || belongstorecentindexsegment  don't see why compareandset() (which is used in multithreading scenarios) is needed.
Candidate: is there a reason for this method
Reference: db and table name need not be set always. shall use string.valueof(entry.getdbname()) as it return "null" string if null.
Candidate: should we log the error.
Reference: bug? why don't we decrementandget and set the future on 0
Candidate: this is be surrounded
Reference: same remark regarding !billeditems.iterator().hasnext(). also, maybe billedusage.compareto(tobebilledusage) < 0 should be extracted around these methods, since it's the same in both implementations:  if (billedusage.compareto(tobebilledusage) < 0) { populateresults(...); }
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: throw
Candidate: why sleep is be freed <UNK>
Reference: shouldn't braek if retval is false? actually (and this is just my opinion) i think it would be easier to understand if you return false once one is false: for
Candidate: this is be reduced to <UNK>
Reference: this method should be changed to private
Candidate: this is a <UNK>
Reference: nit: not sure if change is by accident or not, but this made readability worse.
Candidate: log.debug
Reference: use the logger here instead of system.err.println. also, include the entire exception:  java log.error("there was an exception quitting webdriver.", e);
Candidate: we can use <UNK> criteria
Reference: would using the hash of name provide enough efficiency?
Candidate: this should be explained to <UNK>
Reference: if you change this a tiny bit, ticket.gettarget().contains(posasvec3d) => ticket.contains(posasvec3d) and add public boolean contains(vec3d posasvec3d) {return gettarget().contains(posasvec3d)} to the ticket, you'd open it up for all those things modders
Candidate: suggestion <UNK> = new <UNK>
Reference: i have not tried yet, but i assume encoding the colon still works fine with the server?
Candidate: please use <UNK>
Reference: this should be final.
Candidate: this seems to be a npe.
Reference: is it possible to wrap argument parsing into varsimtool as a method?
Candidate: could you pull this into a property?
Reference: so the name will be mac.domain? is it changable?
Candidate: you could use <UNK>
Reference: i don't really like that test because isvariable has a strange semantic. i think i would prefer a test on the symbol usages.
Candidate: you could use this piece of the lines.
Reference: this method should not be public or what's the point?
Candidate: if this is is prone to be encapsulated in a worker thread, so that the worker will hang that the worker will be
Reference: use get() here not tostring()
Candidate: how about making a <UNK> property?
Reference: could be replaced with executorisshutdown?
Candidate: this is be repelaced by the userreportingsettingshelper call.
Reference: what if a release with this name already exists there? the test will fail.
Candidate: is this inlined
Reference: ![major](<link_1> either log or rethrow this exception. [![rule](<link_2>](<link_0>
Candidate: <UNK>
Reference: how is anything below this line related to " add api to append basecomponent arrays to componentbuilder"?
Candidate: could you use [] = <UNK> <UNK> }?
Reference: can we stream the request instead of having this intermediate string?
Candidate: why not leverage catching exceptions?
Reference: set the same as medium?
Candidate: you could replace this with a string concatenation
Reference: why assertequalsb4left method name ? you also call this test with a4 model, so the method name is not appropriate. change the method name, or may be this test shouldn't
Candidate: please left
Reference: this doesn't need to be fully qualified if this lives here
Candidate: you could use isempty() instead of objects.isnull
Reference: are you sure that one getparent() check is always enough? i.e., might there be asts where you have to check the grandparent or higher?
Candidate: you could use isempty() instead of checking that <UNK> == null || <UNK> != null && <UNK> {
Reference: this should never happen right? or conversely, should we wait to schedule the timer until after initialization? (the ispresent check is probably still required but at that point becomes and
Candidate: this --> <UNK>
Reference: junit style is to always use braces for "if" "do" and "while" statements.
Candidate: this is not correct.
Reference: move if (delegate.isxhtmlstrict()) into assertopenimplicitblock
Candidate: you could use <UNK>
Reference: i think you can use the article object's lastmodified as the return value here. you don't want to query for it once here and again in getdata; you should be
Candidate: we could use <UNK> <UNK>
Reference: suggestion system.out.printf("httpclient is %s; service version is %s", httpclient, serviceversion);
Candidate: this is be to be called in <UNK>
Reference: same as other question, does this potentially result in class ids with spaces in them?
Candidate: is there a reason to print the exception here?
Reference: this should return a boolean rather than boolean.
Candidate: is there a reason to check that the is be null?
Reference: why is the windowref property not preserved?
Candidate: suggestion <UNK> -> <UNK>
Reference: why you have removed static imports?
Candidate: you could use <UNK>
Reference: should method be like snippet below instead of copying logic (there is also a possible typo around %.02f b in above case and %d b below)? java public static string
Candidate: nit: expectedexception
Reference: should we do an assert.asserttrue on the return value of verify()?
Candidate: i think this should be guarded by the caller.  if <UNK> == null) { <UNK> = <UNK> }
Reference: since servicebuilder is a capabilityservicebuilder, use: java servicebuilder.addcapabilityrequirement(capabilities.ref_http_listener_registry, listenerregistry.class, ((httplistenerservice) service).gethttplistenerregistry());
Candidate: is there a reason that is is not represented in the constructor?
Reference: please call setup and tear down of the operator.
Candidate: is there a reason for the sake of these properties?
Reference: use filerepositorybuilder.create
Candidate: use readasstring(...) instead of <UNK>
Reference: can this be protected. i assume only the listmodel is using it
Candidate: wait.forelementclickable() should be <UNK>
Reference: is it necessary to explicitly include these three cases, if they're handled the same as default?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: can you move this inside the if statement to avoid making this call unless the status != 200?
Candidate: is there a reason for output.
Reference: this will call conn.close at the end of the try block. can we use master.getconnection() and just make use of the shared connection rather than making a new one?
Candidate: log.debug
Reference: let's clean this up to be consistent (ie: constants for both)
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: can be simplified to accountlinkingstatus.enabled.equals(getstatus())
Candidate: this is be objects.isnull
Reference: is it intended to not count marker processing in the analysis time? imo we should count everything
Candidate: i am not sure how about replacing this with <UNK>
Reference: is this where the test fails?
Candidate: is there a reason to check that spaces?
Reference: seterrormessage
Candidate: use <UNK>
Reference: acl.impersonate(acl.system); will set the thread context to system "forever" the normal pattern to use is  acl.system.impersonate(new runnable() { public void run() { ... } });
Candidate: this is not <UNK>
Reference: null -> unsupportedoperationexception?
Candidate: use <UNK>
Reference: afaik this only returns the features directly defined in the eclass. this missed features from parent-eclasses. i think we should use geteallstructuralfeatures instead.
Candidate: use stringutils.isnotblank()
Reference: i think making it part of the version number here will emphasize it more than is necessary. let's put it in the build info along with the release name and
Candidate: i would prefer to be mapping?
Reference: we need to avoid multiple value calls on the same input as those itself might also be functions which would cause to multiple evaluations of the same expressions. this can
Candidate: is there a reason to assert that <UNK> is empty?
Reference: log statements needed?
Candidate: how about this is is disabled.
Reference: is this going to be more expensive for logging that occurs with a large stack?
Candidate: you could use <UNK>
Reference: returning feedback to users seems a good idea.
Candidate: is there a reason for this pr?
Reference: rename this variable name to something that references its purpose. it helps understand what the loop is doing at first glance instead of having to evaluate it.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: nit: fix indention (best, move otherstream above to new line and also reduce indention for all other parameters too)
Candidate: you could use <UNK>
Reference: use timeunit.days.toseconds(30)
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: some_layer is actually a group layer in this case sea_water_velocity is actually a layer name. assigning it to variable in this code simply looks weird. we are interested in what
Candidate: use readasstring(...) instead.
Reference: so i believe the only way this could be null is if a configuration was saved without the <jdks> entry and then reloaded. i don't see how that could happen
Candidate: this is a <UNK>
Reference: also test hydrate to bytes after the persist it should give back testrow. that will be a complete (ser/deser)ialization test.
Candidate: you could use a constants for these.
Reference: use guava sets.difference() and sets.intersection()
Candidate: this is is dangerous, for the sake of the arrays.
Reference: i think this will always return null - can you please verify?
Candidate: this is not needed
Reference: please remove final from for loop variable.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: could be helpful to have a default value?
Candidate: is there a reason to be log.d
Reference: final
Candidate: you could use a guava instead of date, replacing <UNK>
Reference: while this creative re-use of a layout, i'm not sure this is a good idea. you create an additional, non-obvious dependency here. whenever we change the navbar listitem layout in
Candidate: you could use a <UNK>
Reference: great, thank you! in ideomatic javaslang we access tuple fields directly, e.g. t._1, t._2 instead of t._1(), t._2(). could you change that please for all methods here? the methods are
Candidate: this could be simplified to java return <UNK> == null && <UNK> { return false; }
Reference: name it gooderer
Candidate: is there a reason to be empty?
Reference: revert
Candidate: you could use a constant for s?
Reference: i think we want to use .equals() instead of == here, since deserialization will probably lead to different physical instances being compared.
Candidate: nextvalueindex is not <UNK>
Reference: you could call labelchanged() instead of comparing.
Candidate: this is a bit dangerous,
Reference: this doesn't appear to be used anywhere
Candidate: you could use a constant here instead of <UNK>
Reference: generating identical streams for the same key is not a good property of a *random value* generator.
Candidate: use <UNK> instead of <UNK>
Reference: fromcusror
Candidate: i think this should be a bottleneck. bottleneck. is a bottleneck. bottleneck. is a bottleneck. bottleneck. is a bottleneck. bottleneck. is a bottleneck. we could have to plug the lock
Reference: you can put ioexception on the same line here since you handle them the same, it reduces the visual bloat. } catch (parserconfigurationexception | ioexception e) {
Candidate: i'm not sure that this could be a <UNK> the branch is not <UNK>
Reference: i think we can change the condition from i >= start to lastpos > i. on the fast path there's nothing to escape, so this loop should be a no-op.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: will this check always be true if the two before were true?
Candidate: suggestion if <UNK> == null) {
Reference: these two lines can be combined into one.
Candidate: please use a constant instead of <UNK>
Reference: consider logging the exception without tostring so you don't lose the stack trace, i.e. logger.error("some message", error). this looks like it's a problem in a few places.
Candidate: <UNK> -> <UNK>
Reference: it's fine to fail fast here.
Candidate: could use <UNK> instead of <UNK>
Reference: could be replaced with selectedrisks.contains(alertrisks.get(alert.getrisk())).
Candidate: please use <UNK>
Reference: i'd rename this variable to membervalue.
Candidate: you could use a child
Reference: can selecthyperlinklabel be null?
Candidate: is there a reason for this logic?
Reference: this looks odd
Candidate: i think we should have to update the <UNK>
Reference: replace block with:  java if (indexfiletype.isindexfile(filename)) { val indexfiletype = indexfiletype.frompath(filename); // todo: verify if this works for other layout types other than object_id! val objectid = indexfiletype.getfilename(filename); //
Candidate: if this is is not <UNK>
Reference: you should use ctftmftesttraceutils.gettrace(gettrace()) instead probably. the teardown method of the base class dispose the gettrace() the test uses.
Candidate: rename to <UNK>
Reference: i think you should use expr.replace() as opposed to replaceall(). no need to deal with regex here.
Candidate: suggestion if (filter.getrelationshipdirection() == direction.incoming) {
Reference: validate inputs to check if all required fields like registryurl and credential are set.
Candidate: this is a <UNK>
Reference: annotations should go on the same line as the method declaration.
Candidate: use objects.equals() instead of objects.isnull
Reference: validationexception is reserved for use by domain logic to indicate invalid input. for a general purpose 'commons' method, illegalargumentexception would be more appropriate.
Candidate: is there a reason for this?
Reference: the type of the source field should be invokesource instead of int.
Candidate: i think this bail on the top of the
Reference: this if and the list above can be removed completely.
Candidate: use readasstring(...) instead of <UNK>
Reference: this. is unnecessary
Candidate: should be be <UNK>
Reference: abstractwaits have to be removed
Candidate: use <UNK>
Reference: these 3 if conditions can be merged together
Candidate: this is deserve the encoder's <UNK>
Reference: but it also supports the '@' notation, no?
Candidate: use <UNK> instead of <UNK>
Reference: we can get rid of this particular null check too, i believe.
Candidate: we should log the error message in the way?
Reference: my understanding is that you're writing to a temp file? use file.createtempfile() if that's the case. uuid is just a random id.
Candidate: you could move this braces around
Reference: use strings.isvalid(value)
Candidate: you could use <UNK> instead of objects.isnull
Reference: we can avoid having leasemanager as class field and use coordinator to get the value
Candidate: use <UNK>
Reference: i kind of prefer the old name - a "container" can contain anything, in this case it contains computation results.
Candidate: suggestion <UNK> = <UNK>
Reference: could you add braces here and for the below if? it's kind of hard to read in this case.
Candidate: is there a reason why not sleep here?
Reference: i think we should add an _ in between the userid and the url, if the url ends with an integer, it'd be difficult to decifer what's the userid and
Candidate: this is be costly.
Reference: why can't we change the name directly in hotel json file but to modify here after serialization? there are two other test classes which have the similar structure, suggestsynctests and
Candidate: you could remove the log.
Reference: do we need to test that "_routing" is a meta data field here?
Candidate: you could use 'throws <UNK>
Reference: imho you should call writeandflush(...) and attach a channelfuturelistener that will close the channel after the write is done. that said you also will need to schedule some timeout that
Candidate: you could use reflectiveoperationexception here instead of <UNK>
Reference: i would prefer keeping the helper function, if someone decides to muck around the with the specs for say ctf 1.9, we need to make it easy to support it.
Candidate: please use <UNK>
Reference: not sure if this is really more readable than the previous version.
Candidate: please use only: <UNK> wording.
Reference: this is a little silly
Candidate: you could use <UNK>
Reference: okay what is it....space after an "if" or not? the two lines above use different style. i vote for using a space :-)
Candidate: this would prefer to make this as well.
Reference: to keep code consistency, you may use testk("v2");
Candidate: use readasstring(...) instead.
Reference: should reset the value in the config file too?
Candidate: is there a reason for this method is not <UNK>
Reference: can this be more clearly named like inputpositioncount or something similar?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: should be done via a logger
Candidate: you could replace this by: <UNK> <UNK>
Reference: currently all operations in the realmcache is locked on the realmcache.class, which means this will block opening all other different realmconfigurations. but never mind, i think having it here is
Candidate: this multimap is not fully qualified are,
Reference: it seems it do the work but maybe we can replace these 11 lines with these 4 ?  if (!prompts.contains(prompt.login)) { prompts.add(prompt.login); } session.getsessionattributes().put("prompt", stringutils.implode(prompts, " ");
Candidate: please remove the cr
Reference: shouldn't it always end on ':'? currently 'password' must be followed by ':' but 'passphrase for' can be suffixed by everything. not even a space after 'for' is required.
Candidate: if you could use <UNK> <UNK>
Reference: remove byteorder
Candidate: is there a reason why we catching exception here?
Reference: am i missing something or is replacementlength always 0 if there are no errors? because this replacementlength and replacementoffset information exist in the integration of the interpreters in sirius and
Candidate: this should be a collection, instead of <UNK>
Reference: why do you retrieve text of currently focused shell? what if there is a modal shell, some popup etc. then this would be broken. does the new docker connection wizard
Candidate: i pagelogging
Reference: we found that the query compilation time for sql has gone up to 5ms in certain cases (as compared to micro-seconds for pql). one suspect here is the additional processing
Candidate: the npe if the is null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null,
Reference: make sure to use spaces instead of tab characters
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i don't think this should be called here. growth from an update tick should be distinct from growth from bonemeal (the probability of each being distinct is important, at the
Candidate: thanks! thanks! thanks! thanks! thanks! thanks! thanks! thanks! thanks! thanks! thanks! thanks! thanks! thanks! thanks!
Reference: remove redundant type info
Candidate: you can replace this by: <UNK> <UNK> <UNK>
Reference: use new enumproperty, instead of new stringproperty()._enum(enumproperty.getenumsaslist **before:** new stringproperty()._enum(enumproperty.getenumsaslist(order.action.class)) **after:** new enumproperty(order.action.class)
Candidate: this is a display that the display the definition of the
Reference: is this not a shallow copy? do we need to deep copy? you are giving a reference to ingredients not actually copying the array?
Candidate: this should be <UNK>
Reference: why do you need to lock this code? executorservice.execute is thread safe, isn't it ?
Candidate: how about merging this change?
Reference: given this requirement: if the setting for hide balance = on then the balance should always be hidden when returning to the home screen (regardless of the last state) hidebalance
Candidate: this fragment is be replaced by the caller.
Reference: do we really want the entire stacktrace?
Candidate: you could move this to <UNK>
Reference: i'm not sure that this piece is required here. or rather, we should only need it if the file we attempt to import is on android m and above and
Candidate: i think this is not <UNK>
Reference: you should replace the test by (primerefining == null) and execute statements from the else block. then always return primerefining field after the "if", the main local variable is not
Candidate: this could be simplified to <UNK>
Reference: @ivange94 please use apiexception(string messagekey, object[] parameters, throwable cause) with a messagekey = code from message.properties; cause is e you need to remember that all these exceptions might be shown
Candidate: we could use a multicatch
Reference: you can do getunchecked() if you know the load() method does not throw any exception. the executionexception is just a wrapper that allows catching potential exceptions that get thrown by
Candidate: if you could use a <UNK> <UNK>
Reference: thanks for improving the tests. i'd suggest a separate test for the special long argument case. this will keep the tests more focused and intention clearer.
Candidate: could you please use try-with-resources
Reference: does zone (reference) contain zoneid or are they completely different things?
Candidate: this is not imply that the imply that the imply that imply that imply that imply that imply the imply that the imply that the imply that the imply that
Reference: because you split the method, should you protect against count=0?
Candidate: if d is not catching the exceptions?
Reference: minor: tabledescriptors
Candidate: nit: you 'final' 'final' 'final' 'final' 'final' 'final' instead 'final' 'final' 'final' 'final' 'final' 'final' 'final' 'final' 'final' 'final' 'final' 'final' 'final' 'final' 'final' 'final' 'final' 'final' 'final' 'final' 'final'
Reference: suggestion var columnident = symbols.pathfromsymbol(field) if (!columnident.issystemcolumn()) { context.add(columnident, field); }
Candidate: <UNK>
Reference: logservermessage internally calls logauditmessage. so in effect, you would be calling this twice. i think the fix should be in glusterauditlogutil - in logauditmessage, if server is passed, server.getvdsgroupid can
Candidate: why is not webapplicationexception
Reference: replace with a constant.
Candidate: i think we should have to return?
Reference: shouldn't also this need to be set to float?
Candidate: why is major') accessing this accessing this exception. accessing this accessing this exception. accessing this exception. accessing this exception. [![rule](<link_2>](<link_0>
Reference: you should discuss with nicolas, but this class is probably useless. you should use labelinternationalizationutils.getsetlabelcommand directly i think
Candidate: multimap can be corrected here instead of <UNK>
Reference: can you get values for header1 and header2?
Candidate: this is not to tear down
Reference: if you want to be safe, you can do: if (mprefix != null && mprefix.length()) > 0 ) { on the coding style side, there should be a space after
Candidate: this is a bit sketchy for the sake of pretty-print
Reference: simpler: return partitiontostore.remove(id) != null; also, should be partitiontostore (camel case)
Candidate: this is be simplified to return <UNK>
Reference: that appears to be unrelated to this change (and wrong)?
Candidate: consider using <UNK>
Reference: is this something we want to make configurable via a system property?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: could you return a xml output instead?
Candidate: please use <UNK>
Reference: suggestion preconditions.checkargument(latitude >= min_latitude && latitude <= max_latitude, "latitude must be between -90 and 90");
Candidate: please use <UNK>
Reference: nothing seems to call the getaverage() method, so the timestamp_grace_time is never used. or am i missing something?
Candidate: this is a <UNK>
Reference: let's select a simpler name; i propose 'dropstalebuffers' or 'dropstaleblocks'
Candidate: i sequence sequence sequence sequence sequence sequence sequence sequence sequence sequence sequence sequence number...
Reference: figured that since this is new code.. it should be fine from semver check point
Candidate: suggestion <UNK> = <UNK>
Reference: can't we hit some name length limit with this?
Candidate: <UNK> -> <UNK>
Reference: matter of taste but why not rely on autoboxing ?
Candidate: unsupportedoperationexception readasstring(...) instead of <UNK>
Reference: this should only return null if removeerroneousexpressions is true.
Candidate: how about making a <UNK>
Reference: based on this should this policy implement <link_0> with per_call? having this logic and the positional change are another route as well, to explicitly prevent duplicate sas parameters.
Candidate: this is expecting to plumb propagated to the
Reference: is this enough?
Candidate: you could throw an exception instead of <UNK>
Reference: should the args passed into getstring be constants as well?
Candidate: this is be used?
Reference: wouldn't using a linkedhashset do the trick, avoiding the manual "add-all-once" handling while still guaranteeing a stable iteration order?
Candidate: if you could use <UNK> <UNK>
Reference: i think we have decided to all use schedlib tools for that even in server? is it right? if yes, add missing tooling in schedlib. prefix is 'jack-server-' in other
Candidate: this exception is be thrown
Reference: we should add a third parameter for the path of the json output path and use : java // generate object spec file ddf2jsongenerator ddfjsongenerator = new ddf2jsongenerator(); try (fileoutputstream
Candidate: you should print the exception here and print stack trace is not print the issue.
Reference: throw unregisteredaliasexception
Candidate: adding this field field to field field field field field field field field field field field field field field field field field field field field field field field field field
Reference: suggestion empty_value);
Candidate: suggestion empty_value);
Reference: we should have tests for both cases (a) we assign the external id and call the commit hook (b) we don't assign the external id, and we don't pass in
Candidate: is there a reason to check that is empty?
Reference: i would suggest using a stringbuilder instead for better efficiency. the builder also defaults to being empty, so you don't need to explicitly specify an empty string as the initial
Candidate: you could use a clear() here instead of creating clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear()
Reference: you can do fileutils.readfiletostring(file, encoding) as a shortcut for reading the output file.
Candidate: this is a <UNK>
Reference: trade date required for trade. now we have position and trade, when using 'trade', the trade date is required. this has been changed recently (see for example bondfuturetrade). overnightfuture should
Candidate: i think that this is not efficient, we could use the <UNK>
Reference: i think we don't need null check here. just let it crash.
Candidate: you should throw an exception instead of <UNK>
Reference: please add technical details to the exception, here the referenced candidateid might be useful to be placed into the exception. if the future you will need to find out why
Candidate: this is be flagged instead of printing the stack trace
Reference: when you pr this to develop branch you will see i have added a checkactivesession method you can re-use here.
Candidate: i think that this is is not <UNK>
Reference: looks better to have a log message specific to this type of exception if you want to distinguish this exception from others, e.g. failed when accessing extension store.
Candidate: i we need to pull this into a variable?
Reference: i hate to be the one to complain about formatting... this method name needs to be prefixed with spongeimpl$ to be consistent with the class (though, @gabizou, [i thought the
Candidate: i think that injector injector injector injector injector injector injector injector injector injector injector injector injector injector injector is injector injector injector injector is injector injector injector injector injector injector
Reference: if condition of err.isconnected is not required when action is just to emit. by default its connected to sink.blackhole on which put object does not do anything.
Candidate: interesting, > 0
Reference: you can extract reqtopic.getresources() as a variable so that you don't need to call it again thereafter.
Candidate: we should use the annotation, please.
Reference: getrestjiraclient() returns an optional<>, but then you just use the get() assuming that the issue has been found. so the exception will be odd. it would probably make more sense
Candidate: is there a reason for avro properties?
Reference: probably can avoid one level of nesting with (subjects != null & !subjects.isempty())
Candidate: is this required?
Reference: i guess you can approach same result in an easier way (just boolean arithmetic):  java boolean password_hashed = req.getparameter("password_hashed") != null && req.getparameter("password_hashed").equals("1");  then i believe it's better
Candidate: should we be null" here too?
Reference: maybe also add the oldjobtype blank check here?
Candidate: this is a <UNK>
Reference: select 1e1 works with postgresql/pgjdbc well, getbigdecimal() returns 10 as expected. i think you need to normalize scale in your implementation too.
Candidate: could we use <UNK>
Reference: this should not be here. we should not catch, swallow exception this is a very bad practice.
Candidate: <UNK> -> <UNK>
Reference: why is this noncompliant?
Candidate: please use this instead: <UNK>
Reference: couldn't this be an import instead of a fully qualified reference?
Candidate: we should use <UNK>
Reference: remove these lines, as they are there for testing purposes only....
Candidate: suggestion <UNK> = <UNK>
Reference: if this is expected to be thread safe it's not, as it can return for multiple threads even though there is just one element in the underlying store (not both
Candidate: i think that this is is called in the isdone() will be called on the thread.
Reference: remove //modified harsh.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i'm looking for a test something like this (i haven't run locally): suggestion final ghrepository repo = github.getrepository("hub4j-test-org/ghcontentintegrationtest"); final ghcontent filecontent = repo.getfilecontent("ghcontent-ro/a-file-with-\u00f6"); assertthat(ioutils.readlines(filecontent.read(), standardcharsets.utf_8), hasitems("test")); final ghcontent filecontent2 =
Candidate: you could use <UNK>
Reference: i think you can replace this with executableelement.getkind() == elementkind.constructor to avoid the string comparison
Candidate: we could use a enum instead of <UNK>
Reference: 'truth' is dubious. if that's not what you got, then how is 'truth' the truth? ;) 'expected' is unambiguous.
Candidate: i am not sure about this me about this me about this loop before the loop is disabled.
Reference: can't we use 'parameters.setforcerefresh(forcerefresh);' instead?
Candidate: this multimap is not be <UNK>
Reference: with the deletion below, ci (spotbugs and intellij inspections) is flagging this as unused now
Candidate: h : <UNK>
Reference: ofri, here we have attested the host, and its result is trusted, so we need to move the vds status to up. but we involk initvdsonup process, and in this
Candidate: this is designed to be a <UNK>
Reference: when running for a bigger table the same message is repeated every progress_counter rows but it does not tell anything about the progress, anything about the number of already checked
Candidate: i'm pretty sure how about down down down down down down down down down down down down down down down down down down down down down down down down down
Reference: why lastindexof(.)? hello.tar.gz will be hello.tara.gz
Candidate: please add a log.
Reference: remove this change please, as it should not be necessary.
Candidate: if checkargument is used?
Reference: the funnel has a logabusefilterwarning() method that we could use here. technically it has both "warning" and "error" variants, but since we're not really distinguishing between the two for editing
Candidate: i think this should be <UNK>
Reference: getimages() already returns a list. there is no need to stream it and then collect it again. consider something like this: optional.of(ec2client.describeimages(describeimagesrequest)).map(describeimagesresult::getimages)
Candidate: i think that construct, this construct,
Reference: tablescanplannodeid
Candidate: if you could have a connection, then synchronize the <UNK>
Reference: sysout ??
Candidate: this is be represented as a constant
Reference: shouldn't we check for empty or null session id and throw exception as needed?
Candidate: log.debug -> <UNK>
Reference: please-fix: this check is unnecessary because the other import-use-case only generates "file" uris and this use-case ignores it. => the boolean-flag, the check, and these try-catches only obfuscate code. =>
Candidate: interesting, is there is an image? error.
Reference: i would probably use switch or multiple else if sections for the quotaaction values.
Candidate: please add a debug message
Reference: please combine the two conditions.
Candidate: could be simplified to <UNK>
Reference: use flatmap
Candidate: you could use a local variable?
Reference: fair enough. since fieldcontextsimplequeryparser is no longer used, can you please remove it?
Candidate: how about replacing the with the <UNK> <UNK> edit: think. edit: do we wanna track the discoveryresult simpler. suggestion if <UNK> == null) { // }
Reference: should we keep this check and add final else that throws an illegalstateexception instead?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i'd use a different config key (though i appreciate this is based on teleportenabled as used above) - perhaps "teleportauto"?
Candidate: this should be <UNK>
Reference: how important it is to make sure that cached revwalks are released even in case of an exception? put this in a finally block?
Candidate: could you use <UNK>
Reference: suggestion super("unable to send a notification to slack:" + e.getmessage());
Candidate: i think this is not efficient, we should have to to the <UNK>
Reference: please add curly braces here
Candidate: you could use .get() operand
Reference: if it is live mode, should you assert this is set?
Candidate: you could use <UNK> instead.
Reference: greage->create
Candidate: is there a reason for this method is not
Reference: maybe move to constant. and the rv, of course. ;)
Candidate: you should use stringutils.isnotblank()
Reference: extra space after !=. there're a few instances of this.
Candidate: you could use <UNK>
Reference: needs to check (and return) if the context is null.
Candidate: this is be simplified to <UNK>
Reference: curious: is the following scenario possible: - some stats paged added - getoutput is called and returns the merged stats page - some new stats pages added?
Candidate: i'm not sure that this happens if this is is being used.
Reference: what exception do you expect here? is it the deserialization failure or any thing else? can you catch specific exceptions?
Candidate: typo: <UNK>
Reference: i'm too lazy to expand the whole file in the diff...does docheck get called from multiple places? could we just put the logic here?
Candidate: @gunnarmorling this a bit strange to <UNK>
Reference: you should have a local delayerror field for this, otherwise you are re-reading the flag on each emission which can cause unnecessary false sharing. java queue<object> q = queue; boolean
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: actually, the issue #794 is about getting an arrayindexoutofboundsexception rather than nullpointerexception which is caused when datapoints does not contain an index datapointindex - so the exact same thing still
Candidate: is there a reason for this?
Reference: you can express this as:  return optional.fromnullable(metadata).or(collections.empty_map).entryset().stream().collect(...stuff...);
Candidate: is there a reason for this method to be null?
Reference: the pattern metadataschema.deletessection.getrowprefix() + sortskew.getcode(path) + path could be it's own utility function, since it's used frequently. perhaps: metadataschema.deletessection.encodedeleterow(path) or similar.
Candidate: utf-8 is a utf-8 utf-8 utf-8 utf-8 utf-8 utf-8 utf-8 utf-8 utf-8 utf-8 utf-8 utf-8 utf-8 utf-8 utf-8 utf-8 utf-8 utf-8 utf-8 utf-8 utf-8 utf-8 utf-8 utf-8 is utf-8 utf-8
Reference: info messages are above, including warn need to explicitly. for core, that's done in org.infinispan.util.logging.log where you'll find plenty of examples.
Candidate: i think that this is not touching this case:  <UNK> <UNK> <UNK> = <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK>
Reference: loooooooop. should be getcause().getmessage()?
Candidate: is there a reason for element?
Reference: would it be cleaner to just name this responsedata? (the build method may just as well return the new response data immediately, instead of storing it in a local variable.)
Candidate: please use a constant instead of <UNK>
Reference: lets return the value of the apapter.createdirectory here ?
Candidate: you could use <UNK>
Reference: assert.fail would be more appropriate here, if the if statement passes then the tccl is always not null.
Candidate: if you could use <UNK>
Reference: this is not a caller's problem, but rather a bug in the implementation of this class. hence, verify would be more appropriate.
Candidate: hmm, is this a bit surprised that this is a bit less than <UNK>
Reference: this method indicates that the "value" map is expected to be <string, string> rather than <?, ?>.
Candidate: you could use costly.
Reference: this can be moved outside the function, as if rescheduleat == null, then you dont need to make a getandupdate method call, but just a get, and then the function
Candidate: if you could use this unconditionally,
Reference: suggestion org.molgenis.data.query<entity> findquery = new queryimpl<>(findallquery);
Candidate: this annotation, annotation, annotation, annotation, annotation, that annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, expectations
Reference: please do not create useless variables, it is more readable if you directly use:  java return ecapi.postlog(cache, logtype, date, log);
Candidate: could be simplified to <UNK>
Reference: import parquet.schema.primitivetype.primitivetypename; to simplify this
Candidate: rename to
Reference: invalid output schema
Candidate: suggestion if <UNK> == null) { throw new <UNK> }
Reference: annotate the method with @nullable
Candidate: is there a reason for this logic?
Reference: are we sure that the root element could not be a package?
Candidate: we could use a <UNK>
Reference: i do not get that change. why did you decided to have messages carry their encoding / decoding logic? i understand i gave that advice for the work @albinsuresh is
Candidate: unsupportedoperationexception
Reference: maybe a good idea to check if "split" is assignable to "phoenixmultiviewinputsplit" and then cast, else return an exception.
Candidate: this is not be a bit nervous if statement?
Reference: the visibility of this method can be private
Candidate: i think that this is not efficient, we could use only:  this(name, <UNK> { return <UNK> }
Reference: nit: we could move the variable initialization after the if block as its not needed beforehand.
Candidate: if you could use a <UNK> <UNK>
Reference: space after ) (checkstyle will complain).
Candidate: this is not efficient, we could be a bottleneck.
Reference: change to include the original exception: throw new mojoexecutionexception(e.getmessage(), e);
Candidate: you could move this to <UNK>
Reference: i think, it would be cleaner to build a bloomfilterutility based on the required objects only instead of requiring to create a fake columndescriptor.
Candidate: i would be a bit more readable?
Reference: nit-pick: startcommit.hashcode can just be xored/added in since it is well distributed
Candidate: use @visiblefortesting
Reference: suggest changing this so that we can see when a detected locale is (much) different than the browser/cookie locale locale resolvedlocale = lookupsupportedlocale(locale, getlocalekeys()); log.debug(string.format("incoming locale: %s. filter determined locale
Candidate: this error message should be be null"
Reference: should we also change this to match what the cl intents? i.e. e.g. recordvideosizes
Candidate: i'm not sure how about the sure about this setup, but i am not sure how about this setup, but i am not sure how about this change.
Reference: should use the static issupported() method . you have on targetchosenreceiver to avoid propagating build versions everywhere
Candidate: this is going to be a string.
Reference: looks like we can use here integrationconfigutils.base_package and remove both constants in this class.
Candidate: this should be to be called from the caller.
Reference: this test seems to be weaker than it could. could we use fixed clock and check for exact value rather than verify nullability?
Candidate: you could use a constant instead of <UNK>
Reference: please log a more descriptive message here. keep in mind, e.getmessage() may be null....in which case this will say "null". we may also want to look more closely at the
Candidate: i think that this is not efficient, but i think that this is is not efficient, but i would be the
Reference: we should add a log here as well
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: can't we move this (e -> platform.runlater(() -> new errormessage(tr("error while creating shortcut"), e))) to another method called defaulterrorhandler or something?
Candidate: use utf-8 instead of '1'
Reference: nullpointerexception expected
Candidate: throw an exception
Reference: @amejia481 on null we were previously returning an empty string, and here you changed that behavior into return null. is there any special reason for doing that? did you check
Candidate: is there a reason to check that is not used?
Reference: i don't think this is the correct exception message for num == 0?
Candidate: cache cache cache cache cache cache cache cache cache cache cache cache cache cache cache cache cache cache cache cache cache cache cache cache cache cache cache cache cache cache
Reference: suggest logging this as well.
Candidate: ah not sure that this will be a bit assuming that this will be <UNK>
Reference: cannot tell where this transaction was started.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: missing space
Candidate: throws an unused method("post")
Reference: i'm not a huge fan of continuing to to a label. how about populating filters with all the untracked entries and then remove entries that match the untracked folder prefix?
Candidate: use <UNK>
Reference: seems a good candidate of method reference usage above  attribute.visitjdbctypes( jdbcmappings::add, ... );
Candidate: suggestion <UNK> = new clazz, <UNK> clazz, clazz, <UNK> clazz, <UNK> clazz, <UNK> clazz, <UNK> <UNK> clazz, <UNK> <UNK> clazz, <UNK> <UNK> clazz, <UNK> <UNK> clazz, <UNK> <UNK> clazz, <UNK>
Reference: if we had commands pending for events and the engine rebooted we might be left waiting for a very long time which might be frustrating to the users. if we
Candidate: i think that this clear() is not activated <UNK>
Reference: why is the osexception not simply thrown again? throw e would keep the original stacktrace.
Candidate: you could use a string instead of <UNK>
Reference: also magic number here
Candidate: please use <UNK> instead of <UNK>
Reference: remove .getsucceeded();
Candidate: can you please move this to guid
Reference: suggestion if (!validateport(targettracecollectionport) && collectbuildtraces) {
Candidate: we should use a <UNK> <UNK>
Reference: is it necessary to set 0 managed memory weight, by default it should be 0.
Candidate: please use <UNK>
Reference: create a class that handles this and use the constructor for it here and replace this with a one liner
Candidate: this is designed to introduce a constant for extremely small piece of a reasons.
Reference: what is this change for? it looks pretty much the same as it was before, with the exception handling changed.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: leftovers
Candidate: minor nit but we could use a constant instead of <UNK>
Reference: how about checking if styledstring is null then assigning it.
Candidate: you could use a object instead of a string.
Reference: i don't like this to be a side effect of this getblacklist function. but i am still looking for a better way to better resolve this.
Candidate: suggestion <UNK> = <UNK> -> <UNK>
Reference: final?
Candidate: we should throw unsupportedoperationexception here instead of <UNK>
Reference: this means we compute costs for all nodes even if we don't need them
Candidate: suggestion <UNK> = new <UNK>
Reference: at first the comparison looked weird, i.e. comparing a model with a source. the comparison is good, just need to improve the name of the variables.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i'm a bit lost here: why do we read broadcastsocketaddress again? addresstouse is never used. address is only used in the log message.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: unnecessary assertion, please remove!
Candidate: please use <UNK>
Reference: why these two options can't be populated directly by the simplerabbitlistenercontainerfactory when that etbatchlistener(true) is used?
Candidate: i think this is not efficient, we could use the <UNK> <UNK>
Reference: i'm sorry to request something that doesn't feel great but i think it would be better for it to be just like anki - this bug wouldn't have happened e.g.
Candidate: nit: checkargument is not operands
Reference: why close the file directly instead of calling closefile()? one of the tasks of closefile() is to interrupt the filetimerthread and set it to null. with this change, reset() may
Candidate: the error message should be be <UNK>
Reference: or we can use a stringbuilder here that we build at the end of the request to avoid variable re-allocation?
Candidate: is there a reason that is is not to be used?
Reference: npe: timegraphviewer is null before super is called. but i don't think the next line is necessary.
Candidate: is there a reason for element?
Reference: why update twice?
Candidate: is there a reason to check?
Reference: the intention behind the methods only called by the attribute name is to chain the calls as in: java id(id).name(name).apiversion(apiversion);  for non-chained calls, the idiom is to use setters:
Candidate: this is be a <UNK>
Reference: i don't see where postparameters is ever attached to the request.
Candidate: we should use the exception here instead of <UNK>
Reference: how about changing createmessage to allow to pass the 4 fields and call that with the corresponding values? it would reduce duplication and still check the correct structure.
Candidate: could you use <UNK>
Reference: did you mean processfuture.isdone() instead of its negation?
Candidate: please use <UNK>
Reference: place this below getoutput()
Candidate: is there a reason for this change?
Reference: use gerritfixture.current().getcredentials(privilegelevel.admin). (we recently made a change so that this works).
Candidate: please use <UNK>
Reference: can you do the arrows too?
Candidate: is there a reason for element?
Reference: why do clients still need to call compile()? why can't the evaluator compile itself either in the constructor or lazily on first evaluation?
Candidate: you should log error message
Reference: costly?
Candidate: i don't think this should be called on the <UNK>
Reference: @rubenmartin you should use entry.setvalue("null") instead
Candidate: minor: this is designed to be a <UNK> <UNK>
Reference: why is syncpodstodirectory being done during publishfinish? shouldn't that be done at the start of the publish operation, like publishstart or something? my concern is if this is done after
Candidate: this guid is completely completely completely completely completely completely completely completely completely completely completely completely completely completely completely completely completely completely completely completely completely completely completely completely completely completely completely
Reference: you don't need this local variable, you can just put the string literal "test" in the thenreturn() method on line 230.
Candidate: <UNK>
Reference: there is a bug here, reported to jdt (470535)
Candidate: h : 1l
Reference: i would extract all this: java form form = mockito.mock(form.class); map<string, list<validationerror>> errormap = new hashmap<string, list<validationerror>>(); errormap.put(errorfield1, arrays.aslist(new validationerror("errorkey1", "errormessage1"), new validationerror("errorkey2", "errormessage2"))); errormap.put(errorfield2, collections.singletonlist(new validationerror("errorkey21", "errormessage21"))); mockito.when(form.errors()).thenreturn(errormap); 
Candidate: you could use a constant instead of <UNK>
Reference: postevent returns cancellation status. you can inline it (and i'd prefer it for leaner mixins).
Candidate: this is deserve a trace, including the
Reference: this seems esoteric. what's wrong with -0.0 here?
Candidate: i guess we should be the run()
Reference: what do you think about: * whether makes sense to pass user from subject instead of getting user from environment inside hdfscommand * from this function name seems like uploading
Candidate: this is be used?
Reference: actually, in this case it should still print this whole report to stdout not to the log file.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: initial size 5000 ?
Candidate: i understood the ip message is not appropriate.
Reference: remove cast to int
Candidate: nope, <UNK>
Reference: could move inside lambda further down, where we have access to the cache through stmt
Candidate: this is not be used?
Reference: left operand is useless
Candidate: wait.forelementclickable() should be <UNK>
Reference: the logic in l201-l204 seems to be done in l194-199, doesn't it? if so, doesn't it make sense to remove one of them?
Candidate: is there any reason for this logic?
Reference: this does not seem to work, as there appears to be no space on the left side (or 5 is too small)
Candidate: should we use a <UNK> run()
Reference: maybe use ioutils.write() from: <link_0>
Candidate: if we could use a string instead of <UNK>
Reference: please add the class name to the exception message.
Candidate: i'm surprised sure that this is not good idea, but i'm not sure how about the sure about this out.
Reference: i guess we may possibly avoid introducing unfinished_requests by doing this: java for (long id : channels.keyset()) { if (channel.equals(channels.get(id))) { defaultfuture future = getfuture(id); if (!future.isdone()) { response disconnectresponse
Candidate: if you could throw an exception exception instead of printing the exception
Reference: argument name is wrong in the call to the arg checker.
Candidate: use <UNK>
Reference: i don't get this line - what we are testing here. we set exact input, why we are not sure about output?
Candidate: this is not to be <UNK>
Reference: you could move this section into a well-named method to make the code easier to read.
Candidate: suggestion if <UNK> == null) { <UNK> = <UNK> }
Reference: let me suggest a different way: lets call it clustercompatibilityversion in the ovf and use vm#getclustercompatibilityversion on the export operation. in the import operation we will do: vm.setclustercompatibilityversionorigin(<parse cluster compatibility
Candidate: please use the <UNK>
Reference: it is quite hard to follow this condition. what is checked here?
Candidate: i think we '+'
Reference: suggestion "might be caused by a previous networknode.sendmessage.onfailure.");
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: shouldn't get it from serivce_provider too?
Candidate: you can use a <UNK>
Reference: same as other, return once or instantly.
Candidate: why not use computeifabsent
Reference: null == adapter
Candidate: nit: you could be replaced by the sake of the sake of the sake of the sake of the sake of the sake of the sake of the sake of
Reference: can we do some sort of validation on the media type? at least to make sure it is in the standard format (ie. type "/" [tree "."] subtype ["+" suffix]
Candidate: wdyt about replacing an instance of <UNK>
Reference: multi-line statements _are_ allowed.
Candidate: this is not null
Reference: what if login is deferred, wouldn't that code run too soon?
Candidate: i don't think this should be null?
Reference: can we just use zoneid.systemdefault() here?
Candidate: you could use <UNK>
Reference: add a new line here please
Candidate: if you could use a <UNK>
Reference: hours and mins is relevant for weekly schedule too
Candidate: use uppercase objects.tostringhelper() here instead of underscores
Reference: you don't need to call this every iteration, you could remember it before the loop
Candidate: please use <UNK>
Reference: nitpick braces
Candidate: this is be repelaced by <UNK>
Reference: please format this line so it isn't so long.
Candidate: you could use <UNK> instead of <UNK>
Reference: @paulodamaso why swallow the exception?
Candidate: is this tear prone to the
Reference: ![minor](<link_2> 'severity: minor') use a logger to log this exception. [![rule](<link_1>](<link_0>
Candidate: you could use a logger instead of printing stack trace
Reference: reportservice
Candidate: this is not ides
Reference: this test will run for 5 seconds+ if left like that, do complete the batch after your assertion to make it finish faster
Candidate: please use <UNK>
Reference: wrong indentation, hive_catalog, aria_scan_enabled setcatalogsessionproperty(hive_catalog, aria_scan_enabled, "false") (aria_scan_enabled field needs to be changed to public in com.facebook.presto.hive.hivesessionproperties)
Candidate: offset offset offset offset offset offset offset offset offset offset offset offset offset offset offset offset offset offset offset offset offset offset offset offset offset offset offset offset offset offset
Reference: please use isempty() instead
Candidate: you could use .get() here instead of <UNK>
Reference: need to add patientobj
Candidate: we should use unsupportedoperationexception instead of <UNK>
Reference: can be replaced with lambda
Candidate: rename lambda
Reference: iterables.getonlyone
Candidate: this should be defined in <UNK>
Reference: i would prefer to have an index different than zero... just for sake of testing that it works with 42 or 67 (because everyone loves prime).
Candidate: i doubt that this deadlock is a deadlock for <UNK>
Reference: we should better use exchange.origin field to determine if this is an outbound request. for that purpose we could e.g. add a exchange.isoflocalorigin() method.
Candidate: is there a reason for this logic?
Reference: why are these methods (cleancachednotifications and cleancacheduniqueoutcomeeventnotifications) inside the thread definition?
Candidate: ditto here:  java <UNK> <UNK> == <UNK>
Reference: 0 ?
Candidate: could you use checkargument here instead of: instead of: comparison, instead of:  java <UNK> <UNK> == <UNK> || <UNK> ^ <UNK> ^ <UNK> == null) || <UNK> || <UNK>
Reference: you shouldn't perform any filtering on subject when doing faceted search on the subject, so you can't use setcommonqueryparams method as it considers any subject area passed in the query.
Candidate: use <UNK>
Reference: mark it as @nullable
Candidate: if you could use a <UNK> <UNK>
Reference: just a style thing but maybe add in typemapping a as(class<t>) to be able to do typemapping.as(classmapping.class) it avoids to put cast everywhere and makes the pattern if (type ==
Candidate: if you could use <UNK>
Reference: if color output is not enabled, the # is not added into the prompt. adding of # to the prompt shouldn't be dependent on color-output property.
Candidate: nit, let's move this method to private ex. purpose, it would be modified to dedicated names.
Reference: in the current code disk can have no disk profile, which will lead to npe/indexoutofbounds exception here.
Candidate: please use <UNK>
Reference: accidental change
Candidate: nit: <UNK> is empty?
Reference: can you leave code better than it is now and move this path into private static field?
Candidate: use <UNK>
Reference: consider the collectionutils.isempty(this.applicationdefinitions) instead
Candidate: is there a reason for this logic?
Reference: eww use the builder
Candidate: @gunnarmorling this a bit strange to <UNK>
Reference: and here submonitor.begintask(nls.bind(messages.tmfeventmatching_requestingeventsfrom, trace.getname())
Candidate: is this a bit strange, if args?
Reference: any reason to return list<? extends partitionid> instead of "list<partitionid>" ?
Candidate: this could be be changed to <UNK>
Reference: instead of passing httpclient here, you can as well use httpclient.createdefault() since you know httpclient is null.
Candidate: let's remove this method("post")
Reference: i think usage of string concatenation here is an issue. could you fix it?
Candidate: you could use a constant names instead of events.
Reference: why is this check needed? doesn't the check below cover it? in fact, for complexity to be < 25m, tilecount cannot be larger than that.
Candidate: i think that this imply that the tile is not <UNK>
Reference: in our testing subscriptions we can't create a collection with 1m throughput upfront. the workaround we have is to create a collection with 100k throughput and then scale up. now
Candidate: i think this should be a <UNK> <UNK>
Reference: what's the point of this change? if it does fixes the test case, why does it?
Candidate: is there a reason for avro here?
Reference: we should at least log it no ?
Candidate: is there any reason to propagate the exceptions?
Reference: using a set here instead of a list would be more efficient for lookups. we should also move to a static constant rather than defining it in the function here.
Candidate: this is unnecessary.
Reference: this seems wrong in light of the other constructor where you set creator/user to different values  null, null, sessionmanager.getauthorname(), sessionmanager.getusername(),
Candidate: i think that nesting.
Reference: were these tests failing on windows machines?
Candidate: you could use <UNK>
Reference: nit: this is one md5 value so it need not be plural ?
Candidate: you could use <UNK> instead of calling <UNK>
Reference: what has happened in order to return null from this method? this should never happen as we have done all checks before, right? if we return null because we hit
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why do you have two beforeclass?
Candidate: this is not to be a <UNK>
Reference: missing set to action and type
Candidate: no need to check the vm check)
Reference: would be better to store as a local private variable (like locationcontext / webstorage) and only inialize it once on construction. also fix the indentation here
Candidate: this is a <UNK>
Reference: it's better to have this logic in its own method so that if a client wants to determine what is or what isn't a minified file they can do that
Candidate: not sure that this system.out is not used in the
Reference: this test should be where the check is made. in deletepipelineconfigcommand
Candidate: use <UNK>
Reference: i'm just wondering whether you should test for storage being null. can you check that please, and let me know? (does loadadapter support a null param, is it possible that
Candidate: is this ?
Reference: is there a reason for not using calendar.gettimeinmillis()?
Candidate: you could use isempty() instead of storagetype <UNK>
Reference: if this does not hit often, i would vote for making this info.
Candidate: i don't think the lock is be used.
Reference: probably should be cloned here instead of taking a reference to an external object
Candidate: wait.forelementclickable() should be <UNK>
Reference: there is a slight beter way to do write this. will do it
Candidate: i think this should be <UNK>
Reference: set interface
Candidate: you could use <UNK>
Reference: suggest to rename to assertiontype instead of assertiontypetest
Candidate: @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio please @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio @tsr-thulio
Reference: should use constant for the string
Candidate: you should use <UNK>
Reference: i don't think a template should be mandatory. you can always specify the list of packages on the command line
Candidate: please add a message
Reference: typo. suggestion fail("expanded to " + expansion.getexpansion().getcontains().size() + " but max was " + mydaoconfig.getmaximumexpansionsize());
Candidate: nit: boolean[] = <UNK> <UNK>
Reference: check your helpers, some could be static
Candidate: formatting
Reference: will probably look better to call the new ctr here, and move the initializations to it. i.e.: public vmleaseparameters(guid storagepoolid, guid storagedomainid, guid vmid) { this(storagepoolid, storagedomainid,vmid, null); } public
Candidate: i'm not sure how about this is a <UNK> <UNK>
Reference: indentation is spaces here when it should be tabs.
Candidate: if you could use a <UNK> <UNK>
Reference: just minor, but things like ".ssh", "id_rsa", "known_hosts", etc. should be declared as constants in this file.
Candidate: is there a reason for element?
Reference: nit: would it make sense to make volumeids a set? if the same volumeid can be referenced by diff instances, duplicates are possible
Candidate: this is not be locked
Reference: name dependency
Candidate: please use <UNK>
Reference: what about dt_log_appender that is being configured above. can it be repurposed for this? also, looks like createloggingproxy is a pass through and system out and err are going to
Candidate: we should use uri.create
Reference: i think this message field can be removed and used directly in checkstate
Candidate: this should be <UNK>
Reference: null check here now
Candidate: wait.forelementclickable() could be <UNK>
Reference: why is this test case removed?
Candidate: this ![image](<link_0>
Reference: runnable -> lambda?
Candidate: no, we don't think this should be <UNK>
Reference: null check on ryainstance
Candidate: is there a reason that we are going to be a <UNK> that the is not closed depending on the order?
Reference: shouldn't this be saved in the userrepository too?
Candidate: you could use <UNK>
Reference: the datafilechannel and indexfilechannel are created via data output driven. i am wondering that does it exist the case of empty output? maybe the operator filters all the input data
Candidate: minor nit: we don't use <UNK>
Reference: nit: spaces after commas (applicable everywhere)
Candidate: nitpicking: we talked about this placement
Reference: showing logging in this loop is good (it's consistent with operatormanager) but throwing exception has a downside. because throwing an exception will leave from this loop, users can know only
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: yeah its not needed.
Candidate: if you == null ? immutablelist.of() :wink:
Reference: how come this moved from updatetoken? i think it needs to be part of that synchronization block
Candidate: why we marking braces
Reference: log the exception as well. i know i keep harping on this, but if these errors actually start happening in production, it will be really useful to have the exception
Candidate: nit: "_" "_" you "_" "_" "_" "_" "_" "_" "_" "_" "_" "_" "_" "_" "_" "_" "_" "_" "_" "_" "_" "_" "_" "_" "_" "_" "_" "_"
Reference: ignoretagchanges needs to be in a try/finally since the tag add or removal can trigger a lot of code.
Candidate: please remove this log.
Reference: do you need to save this? what happens if you just do this instead?  this.fallback = fallback; // make sure we can invoke fallbacks on package-private interfaces for (method
Candidate: you could use a constant instead of <UNK>
Reference: should we change these final messages too?
Candidate: suggestion if <UNK> == null) {
Reference: you need to call configureconsumer too, see the other components
Candidate: suggestion <UNK> = new <UNK>
Reference: i'm not sure about this one. please pull this out of this pr because it isn't related to timing and lets run some ad hoc examples to make sure we
Candidate: we could use <UNK> instead of creating a foreach instead of creating a foreach loop
Reference: what about if the clock moves backwards and you pass a negative or 0 wait?
Candidate: this should be <UNK>
Reference: might want to just use metricsrule to have it handle saving & restoring the metrics  @rule public metricsrule metricsrule = new metricsrule();
Candidate: you could use <UNK> instead of creating a foreach loop instead of creating a temporary variable?
Reference: it's not a big deal, but if you're using intellij, you can get it to auto-generate tostring, hashcode, and equals in the same style as most other druid code automatically.
Candidate: <UNK>
Reference: would you tell me why this change is needed?
Candidate: same as above.
Reference: can drop ternary condition
Candidate: nit: align with <UNK>
Reference: these variable names are a little unclear - could you give them more descriptive names?
Candidate: <UNK> score
Reference: this method doesn't need to be static.
Candidate: why we need to call <UNK> instead of calling <UNK>
Reference: lambda
Candidate: is there a reason for this method is not <UNK>
Reference: getbytes should specify a charset.
Candidate: suggestion <UNK> = <UNK>
Reference: please keep the method with signalserviceaddress parameter and just add a new method (with the same name) that takes a string and does the canonicalizeandresolvesignalserviceaddress conversion.
Candidate: i'm not sure how about the sure about this out.
Reference: it is possible to receive a memento not populated with key_type causing type to be null and generating a null pointer exception, this was already present in the logic of
Candidate: if we touching this trace, it'd be better to trace, it'd be better to trace, it'd be better to trace, it'd be better to trace, it'd be better to trace,
Reference: its probably better if we log json string here , helps in debugging on storm side.
Candidate: use <UNK>
Reference: invalidnamesor invalidfieldnames is better than fieldnames
Candidate: could we use <UNK>
Reference: this method does not use member variables and thus can be made a static method.
Candidate: i am not sure how about replacing the iterations now?
Reference: use the same error message as above for consistency: "field %s must be of type bytes. it is currently of type %s"
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i don't see a good reason to make this a java.util.function.predicate rather than just a regular instance method that we call. we're always calling the same function (the predicate function
Candidate: this is not a worker thread safe. <UNK> is a blocked as well.
Reference: static import
Candidate: static import
Reference: what about just removing this method used 2 times, and give a doc name to both calls?
Candidate: @gunnarmorling you could use only: <UNK> <UNK> <UNK>
Reference: to be consistent with surrounding code it should just return true here (as it is a part of manifest.exists() check). may be it needs a bit deeper rework like optional<string>
Candidate: please use <UNK>
Reference: now that we store definitions in the addworkflowdefinition already, we should just remove this postprocessworkflowdefinitions method. it will also nicely clean up some dependencies from other components.
Candidate: is there a reason for this logic?
Reference: imo we should also print a warning. this is quite important info, should be visible when running in cli.
Candidate: i think that this is not a download in the
Reference: no, this method should not throw interrupted exceptions.
Candidate: no, throw exceptions. exceptions.
Reference: this effectively removes the possibility to use another root resource by extending coapserver.
Candidate: we should throw a multimap here instead of passing an exception
Reference: i would put this bind inside of websession.module(), as its really a private detail of websession.
Candidate: you could use only: <UNK> instead of repeating them on the future.
Reference: default access
Candidate: this is not to be
Reference: to remove, just use new arraylist<>() in the constructor, one line below
Candidate: final
Reference: new double() is redundant here
Candidate: this is not <UNK>
Reference: nit: java should be able to figure out that it is a string from the required type for generaltopologycontext
Candidate: nit: use <UNK>
Reference: return null?
Candidate: is there a reason for avro to be null?
Reference: here we should throw: blocking work processor cannot be (safely) iterated over (add this as a first commit) then you don't need the while(true) in yieldingiteratorfrom()
Candidate: could be replaced with a element?
Reference: better: dataservice.findall(dynamic_decorator, dynamicdecorator.class).map(dynamicdecorator::getid)
Candidate: you could use a constant instead of <UNK>
Reference: since we are force casting we should use the same type for the instanceof
Candidate: could you typed export enum?
Reference: this is worth logging as an error
Candidate: i think we should use the <UNK>
Reference: i guess this is the virtual size?
Candidate: please add a npe here
Reference: i guess a more helpful message would be useful. this message seems like a debug "how did i get here?" message rather than something useful.
Candidate: you could use repelaced by a userreportingsettingshelper call.
Reference: use gov.hhs.fha.nhinc.nhinclib.nhincconstants.exchange_type class here
Candidate: why not use <UNK>
Reference: please also add a feature flag to show this only for pre-beta builds. (&& releaseutil.isprebetarelease())
Candidate: is this a bit strange to <UNK> that this is is not <UNK>
Reference: minor (here and on line 80): can you remove "jobplanner.this"?
Candidate: i don't think throw an exception
Reference: shouldn't you decode the namevalue[0] as well?
Candidate: could you please use the image?
Reference: wouldn't it be safer to use isassignablefrom?
Candidate: this is a bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit
Reference: routererrorcode mistmatch should suffice. if it fails, it will automatically print both the values
Candidate: you can use this assertion.
Reference: gratuitous reindentation does not make a reviewer's life any easier.
Candidate: strange, if you could be pulled the the middle of the middle of the middle of the middle of the middle of the middle of <UNK>
Reference: eliminate assert statement in ctor and replace it with iae
Candidate: nit: readasstring(...) instead of <UNK>
Reference: int size = invokers.size(); for (int i = 0; i < size; ++i) { final typedmethodinvoker<?> invoker = invokers.get(i); ...
Candidate: you could use <UNK>
Reference: we probably need to stop the remaining runningprocessors somewhere, right?
Candidate: you could use <UNK>
Reference: this was added because of a npe; and it fixes that problem. however, it changed the functionality a bit. previous version returned a row containing null values. this returns null
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: is it really needed to look up the pagearea like that (the implementation of the getmethods sound fragile to me)? why not reuse the instance you already have? the fact
Candidate: please use <UNK>
Reference: i think the logic should be extended with "if the memory size on the next-run configuration is different than this in vm_static, don't do anything" to handle the following case:
Candidate: please use isempty() instead of '+'
Reference: this will perform sleep even for stopvdscommand, which we don't want. please move this execution into startvdscommand.teardown() method
Candidate: remove <UNK>
Reference: typo: applied
Candidate: this would be a bit more than <UNK>
Reference: you do not need fetch encounter from server, because it has been already done
Candidate: let's remove this assert
Reference: this seems wrong to me, or at least ambiguous and unclear and will likely lead to problems. the condition class has an "onsetdate", "enddate", and "datecreated" property. i think that
Candidate: this is not set to the constructor instance.
Reference: maybe it is overkill to use throwable instead of exception?
Candidate: throw an exception
Reference: this.contributor
Candidate: this is a to be a <UNK> <UNK>
Reference: as you're cleaning code, could you change the declared type to list?
Candidate: you could use a constant here instead of <UNK>
Reference: these spaces should be removed.
Candidate: is there a whitespace between <UNK>
Reference: did you want to leave this in?
Candidate: this is be <UNK>
Reference: could use foreach
Candidate: should be be closed here too?
Reference: on one hand i agree, but on the other then i'll refactor how this callback works: in stopuldates() we set the callback to null, so we are not implying that
Candidate: checkstate
Reference: do we really still need waitutils.sleepquietly(1) here?
Candidate: you could move this ctor to a separate method.
Reference: its not a bug: you can use new okbuttont()
Candidate: @vilchik-elena is finishing the <UNK>
Reference: this gives a fairly large group with three radio buttons. would a drop-down combo look better?
Candidate: this is is designed to be tracking the events in the <UNK>
Reference: this is all removed by #111 right?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: use "test/testgrid2.json". it is the same as grid1.json and is reserved for tests.
Candidate: :warning: left over equals
Reference: qry -> query
Candidate: is there a way around)
Reference: use non negative check it will help you to avoid nesting, also it looks better :  java if (userid.isempty()) { return null; }
Candidate: you should use <UNK>
Reference: it would be more oo if tags list would contain widgetpageobject objects and inside loop you would call:  widget.isvisible()  and each widget should implement such method
Candidate: suggestion <UNK> = <UNK>
Reference: one disadvantage of breaking up the state is the doubling of lines here and below.
Candidate: <UNK>
Reference: why masquerade as instructor?
Candidate: @gunnarmorling you could use a constant here instead of <UNK>
Reference: if possible, please use an assertion explicite in tests, don't wrap a check into page-specific method
Candidate: nitpicking: rename to
Reference: you can remove the public modifier since the class is package-private
Candidate: is there any reason to be null?
Reference: also log the count of "all checkpoints" ?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this sentence seems broken. maybe 'denied for' or 'denied while trying to move'
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why abstractmap::hashcode is not enough?
Candidate: you could use use guava instead of objects.isnull
Reference: change method return type from string to void.
Candidate: how about using a logging instead of using a string instead of string concatenation
Reference: this suffers from the same problem as global channel interceptors. let's say i subclass channelsecurityinterceptor, to send a message<?> whenever a security violation occurs. this early instantiation will cause the
Candidate: this is not to be a non-trivial
Reference: let's use asserttrue() instead of assert.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: will this propagate correctly? i assume it is being called from the syncclient thread?
Candidate: should we have a <UNK> <UNK>
Reference: please revert all changes here, they are not needed / hide errors where code tries to re-use disposed parts.
Candidate: let's discuss that this affects the
Reference: never set empty string to i18n. gathering strings in source code will fail.
Candidate: rename to <UNK>
Reference: test methods can more simply just throws exception.
Candidate: is there a reason to print the exception here?
Reference: what if the collection is not empty but a string in the collection is null or empty?
Candidate: this is designed to be a builder for <UNK>
Reference: i think this will be simpler if you change this from foreach to maptolong, returning 0 or getreservedrevocablebytes, and then use longstream.sum()
Candidate: this is is designed to log the
Reference: this should be removed from accumuloclient
Candidate: this hides the <UNK>
Reference: we should break these errors out to help the developer.
Candidate: should we use a constant instead of <UNK>
Reference: this would make 1 ms and 1000000 ns not equal. do we want that?
Candidate: i am not sure that this is not marking but i am assuming that marking this is a but i am not sure that this is
Reference: i would extract the check if argument has particular value into method (to avoid duplicate in next condition and improve readability)
Candidate: you could use a constant instead of <UNK>
Reference: missing timeouts (i think)
Candidate: i think we dangerous, could be dangerous, here instead of <UNK>
Reference: u00ad and u200c should map to "" (empty string) not "\"" (double quote). the original json has "\\u00ad=>" ... but the quotes are around the mapping \\u00ad=> (map to nothing)
Candidate: i think this should be a
Reference: how does this work? types shouldn't match right? i was under the impression that remotetimelockserviceadapter took in a namespaceawaretimelockrpcclient?
Candidate: i stream() is unnecessary.
Reference: right now this branch always runs, because string.contains("") is always true. i think you meant something like this: suggestion if (variable.getkey().contains("\"") || variable.getvalue().contains(" ")) {
Candidate: you could use a <UNK> instead of creating a new anonymous class instead of every time?
Reference: why not generified?
Candidate: you can use <UNK> annotation, instead of assigning them into a annotation, e.g.: private string <UNK> = <UNK> { <UNK> = false; }
Reference: remove this. and the one below
Candidate: is there a reason for element?
Reference: if the assertion fails, one would have to run the test and debug why. wdyt about replacing it with assert that expects the count of **any** shm mount to be
Candidate: style nit: we don't use braces around single line blocks
Reference: don't we need to close the socket after socket connect since you are only try to check the connectivity?
Candidate: nit: not sure that this will be a race condition, that the is not started regardless of the <UNK>
Reference: there is a different method available to start with one delay of 15 seconds, and another period for all future runs. i think that is what you want here.
Candidate: you could annotate this method to <UNK>
Reference: i think the main thing to figure out is in what cases we should switch back to the leader. we know about out of range errors already. here are a
Candidate: wait.forelementclickable() should be <UNK>
Reference: nit: the kafkaproducer field is set, returned, then set again from the same value.
Candidate: is there a reason for this class instead of creating a new one?
Reference: what do you think about returning collections.emptylist() here instead? then we can also annotate the method as returning @nonnull (and also drop [this check](<link_0>
Candidate: is there a reason for element?
Reference: adding this to a field is good manner.
Candidate: <UNK>
Reference: i believe there is no need for this check.
Candidate: wdyt about extracting this method to a constant, e.g.:  private static final <UNK> <UNK>
Reference: i would like to shorten the configuration names. if you are ok, could you please rename skip_before_chars into skip_before and skip_after_chars to skip_after?
Candidate: this is not a <UNK>
Reference: also, is illegalargumentexception correct? there's nothing wrong with the argument of itself, docnotfound seems more logical here.
Candidate: can you use system.lineseparator() names instead of creating a constant instead of <UNK>
Reference: list<feedrange> feedranges = new arraylist<feedrange>(feedranges.size());
Candidate: this should be <UNK>
Reference: you should use a set for scopesandmetricsnamestoput, similar to scopestoput.
Candidate: no need to call the
Reference: you could try the slf4j log native expression  log.warn(error [{}] in database query: [{}]", ex.getmessage, expr);  log4j automatically replaces {} expressions with the resp. parameter. additionally i prefer
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: duplicate code inside xmldateutil.long2gregorian()
Candidate: log.debug -> <UNK>
Reference: declare the webelements at the start of the class instead?
Candidate: you could use a constant instead of <UNK>
Reference: if we are swallowing exception here we don't need to addsuppressed.
Candidate: we could use the exception here instead of <UNK>
Reference: i would prefer to put the longer explanation on rp.sendmessage() and use a shorter message in reject() (see below).
Candidate: is there a reason for the icon, but i am not sure that this method is not icon, but i am assuming that this is not icon,
Reference: remove "for ambrydatanode"
Candidate: this is be <UNK>
Reference: this looks convoluted ... instead do string uristring; if (uri != null) { operationresult.addoperationresult(uri, usermessage); uristring = uri.tostring(); } else uristring = "retrieving uri failed"; //$non-nls-1$
Candidate: if this is not reduced to the <UNK>
Reference: new boolean skips the constant pool -- placing unnecessary pressure on the garbage collector. please use boolean.valueof instead.
Candidate: <UNK>
Reference: code style. constructor must be private. make a static factory method named create(...) to create a new transformer
Candidate: this is a <UNK>
Reference: what would happen in the wrapper's environment status is error?
Candidate: is there a reason way?
Reference: why is this public?
Candidate: please use <UNK>
Reference: startswith("scsi") ?
Candidate: you should log the exception message to be thrown from the error.
Reference: by the look of it, this won't work properly. getcontent().add(foo) doesn't add foo to the endnote object
Candidate: <UNK> is designed to be a classic ethernet
Reference: could be shortened:  if (!contentlet.getboolproperty(checkin_in_progress))
Candidate: i think we could use a guava instead of guava instead of <UNK>
Reference: don't you mean isstatic ?
Candidate: i wonder if this could be a separated by a <UNK> <UNK>
Reference: let's simplify once again ;-) return sessionstore.read(authendpoints.name) != null
Candidate: is there a reason for this method to be null?
Reference: i'd use immutableset.of(this.resultstream) here
Candidate: rename to
Reference: what sets the expected state to lifecycle.running?
Candidate: you could rename to to <UNK>
Reference: i think it should be: if (representation instanceof dsemanticdecorator) && ((dsemanticdecorator) representation).gettarget() == null) { dsemanticdiagram.getrootcontent() is an eoperation marked as @deprecated in dsemanticdiagram.java. it is used later in refresh
Candidate: you could use <UNK>
Reference: what is the usecase for having int when we already have long and double. if so is there any need for float ?
Candidate: is this behaviour?
Reference: redundant parentheses
Candidate: redundant parentheses
Reference: can be made package-local
Candidate: you could use <UNK> instead of objects.isnull
Reference: complete is set after the loop, so i think this check should be before the loop. the if (currentiterator == null) body is also getting a little large, so i'd
Candidate: you should call <UNK>
Reference: check that the main id has been returned, because the equals method does not compare it.
Candidate: nit: we use <UNK>
Reference: this method should just call node.tokapp(), since this transformation is likely to be useful in other settings as well
Candidate: i sake sake sake sake sake sake sake sake sake sake sake sake sake sake sake sake sake sake sake sake sake sake sake sake sake sake sake sake sake
Reference: minor: can you use the ternary operator here.
Candidate: if you could use <UNK>
Reference: assertfalse(...);
Candidate: assertfalse(...);
Reference: not sure why do you need fixture and manual interaction with directories and page cache, why not using class rules instead?
Candidate: i doubt we want to make sure that we are not sure that this is is not same as above. but question about commit() concrete question above.
Reference: please replace this with: if ( str.startswith("\"") && str.endswith("\"")) { return str.substring(1, str.length() - 1 ); } else { return str; } performance will be much better than using indexof
Candidate: suggestion <UNK> = <UNK>
Reference: can't you set the consistency level here?
Candidate: log.debug
Reference: in this transform, config.inputfield is transformed to the json fields, which is one-to-many, all the other fields are identity one-to-one transform, your lineage should reflect this
Candidate: is there a reason for the sake types?
Reference: ![minor](<link_1> 'severity: minor') define a constant instead of duplicating this literal "anonymizationtest" 6 times. [![rule](<link_0>](http://sonar-s4/coding_rules#rule_key=squid%3as1192)
Candidate: is there a reason for avro properties?
Reference: i suspect the method names are swapped between shouldnotaddredundantversions and shouldkeepotherversions, as the former currently inserts 2 different versions and the first tries to insert the same twice. it should
Candidate: is there a reason for this method is not used?
Reference: you have to call data.clear() before using it. yeah, the bytebuffer api is full of nitpicks like that...
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: cryptoalgo
Candidate: suggestion if <UNK> == null) { ...
Reference: it'd be helpful for debugging purposes which objects didn't make it into fedora. also, for string formatting like this you need to put {0} into the message where you want
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this should probably be duefineamount
Candidate: use <UNK>
Reference: double the attribute compartment same visual id interfaceattributecompartmenteditpart.visual_id
Candidate: you could use <UNK>
Reference: hi @treblereel, build failing due to this line. you are comparing session with itself. looks like a bug to me. you can check it locally by executing mvn clean package
Candidate: is there a reason for this logic?
Reference: also for all other places. it looks strange to me that: 1. we make query with primitive parameters in the arguments, but 2. aggregate the results in a well defined
Candidate: no, we don't use these.
Reference: personal opinion, it is confusing to mix format and offsetstring, i mean third parameter of dmnsimpletimezone feel free to ignore if you think it is fine
Candidate: please use <UNK>
Reference: it's not clear to me what this last line is testing.
Candidate: is there a reason for avro properties?
Reference: to my understanding the model cannot change anymore, therefore it does not need an adapter
Candidate: <UNK>
Reference: typo: not -> does not
Candidate: this would be good to log level to log level
Reference: caching an inverse in order to replace division with multiplication is premature optimization imo. even with a million targets and a thousand samples, this saves at most a few seconds.
Candidate: why use <UNK> int <UNK> = <UNK>
Reference: let's use a non-wildcard result with whenanyresult
Candidate: why we expecting to exceptions?
Reference: string.isempty() is used in other places of oskari. no biggie - just a heads up.
Candidate: this is not efficient, we could use the <UNK>
Reference: this is an else, right?
Candidate: log.debug
Reference: hive stores min,max as well -- we don't use this currently, but we may in the future. also, other tools may make use of this. consider // todo ...
Candidate: i think this should be a debug
Reference: those 4 lines are identical in all methods - refactor into common method?
Candidate: this could be simplified to the view?
Reference: use !input.startswith to align with the parser above?
Candidate: this is be <UNK>
Reference: this line doesn't seem necessary, as commandcontext is never used in the methods where it's passed as a parameter.
Candidate: please use <UNK>
Reference: remove
Candidate: nit: you could be reduced down to <UNK>
Reference: inline
Candidate: you could replace this with <UNK> with <UNK>
Reference: is there a requirement to be able to set property value to null/empty value?
Candidate: is there a lot of 4 lines
Reference: ya, and this is the problem with this whole thing, there are multiple places where variables are set. url, properties, now env. your specific problem is in parseurl it returns
Candidate: please use <UNK>
Reference: what about contains as @evoevodin has suggested?
Candidate: suggestion <UNK> -> <UNK>
Reference: put the actual modid in there if you're going to do that not your name
Candidate: wait.forelementclickable() could be <UNK>
Reference: i think it is better to extract all these listeners to separate classes. it would make code look more neat
Candidate: if this is designed to be a <UNK>
Reference: should these logging statements be set to debug level instead of info level? also, if you switch over to using lang3 tostringbuilder, i think that version of it does not
Candidate: you could use a constant instead of <UNK>
Reference: where you have found such a term as docker image fqn?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: please extract this condition to method.
Candidate: this could be simplified to java return <UNK> -> <UNK>
Reference: minor nit, these can be collapsed to:  } catch (runtimeexception | outofmemoryerror e) { applog.e(t.editor, e); }
Candidate: i think that this is is not <UNK>
Reference: add an empty new line here (make it consistent with other count handlers).
Candidate: is there a reason for this?
Reference: multiple ';'
Candidate: is there a reason for this method is not <UNK>
Reference: ditto rename refactor
Candidate: this is a warn
Reference: you don't need to do that , just call filesystem.newinstance(defaulturi, conf), remembering to close the new fs afterwards
Candidate: nit: space after the
Reference: i think the save() operation should not happen in the templates (the wizard will/should save the model at the end anyway)
Candidate: you could use <UNK> here instead of calling <UNK>
Reference: definitely not! jmxfetch is known to have quite a bit of code that could use some cleanup, so this is definitely welcome.
Candidate: stream()
Reference: can these two if statements be collapsed with the above ones?
Candidate: checkstate
Reference: here you have code repedated
Candidate: _cough_
Reference: i don't get it. this class is internal, and not really designed for subclassing: the intended way to reuse it is to construct with a custom supplier, it's not immediately
Candidate: shouldnt this be <UNK> ? realm
Reference: i don't think we need this since the creds should already be set.
Candidate: we should throw an exception instead of creating a new instance again?
Reference: could we do return system.getproperty(this.port, getport(getprotocol()); here?
Candidate: is there a reason for element?
Reference: same, this time even with wrong placement. i assume this call is based on vanilla code?
Candidate: we should use <UNK> "invalid stringutils.isnotblank should be plural be null.
Reference: see getalllifelines remarks
Candidate: you could use <UNK>
Reference: i like the addition to be able to check on both payload and metadata, but it kinda feels like we've added additional behaviour to the 'event-payload-matching' function which is not
Candidate: could we call <UNK> instead of <UNK>
Reference: this should be replaced with this.color = color.getrgb()
Candidate: we should use a checkargument here instead of <UNK>
Reference: rename those to:  pagesindexusermemorycontext pagesindexrevocablememorycontext
Candidate: suggestion if <UNK> == null) { <UNK> = <UNK> }
Reference: suggestion public partitionupsertmetadatamanager getorcreatepartitionmanager(int partitionid) { return _partitionmetadatamanagermap.computeifabsent(partitionid, partitionupsertmetadatamanager::new); }
Candidate: you could use <UNK>
Reference: since all you need is the project name, you could use #getnamespace() from the route. it will return the same value. additionally it will not make a call to grab
Candidate: is there a reason to assert that stubbing is empty?
Reference: you could flip the .equals(..) below around to avoid the null check, or if you think that's not safe then you're missing another null check.
Candidate: if we is not touching the <UNK> view?
Reference: shouldn't these be being caught, bar ioexception, and written out as error summaries?
Candidate: please use <UNK>
Reference: can you pass "null" as the callback? it is not being used, anyway.
Candidate: suggestion <UNK> = <UNK>
Reference: you should leave ternary expression and use if/else if statements.
Candidate: you could use <UNK> to <UNK>
Reference: what is this permission for?
Candidate: if this is is not
Reference: this verbage is wrong, this should be re-worded to something like "last tracking date"
Candidate: i writevalueasbytes
Reference: use curly brackets for all if statements to keep the code consistent across the whole project
Candidate: wait.forelementclickable() should be <UNK>
Reference: should we first check that it is a byte[]?
Candidate: you could use a constant instead of <UNK>
Reference: the passed in authentication is ignored. we should leverage that rather than the securitycontextholder
Candidate: this is designed for correctness of <UNK>
Reference: we actually dont need to collect that, can be left as stream, minor
Candidate: this is be stream()
Reference: what is this check for?
Candidate: you should print stack to <UNK>
Reference: this doesn't seem right. what are you trying to do here?
Candidate: this is be costly.
Reference: needs us-ascii charset, or some other simple ascii encoding conversion
Candidate: @ivandalbosco ditto about <UNK>
Reference: did you mean to leave this in?
Candidate: if you could use <UNK>
Reference: small typo
Candidate: we could use <UNK> <UNK>
Reference: did you mean asyncreceivecommits.factory?
Candidate: this should be a <UNK>
Reference: haven't we refreshed this in the basecontrollerdataprovider, can we just use that result here?
Candidate: i think that this is succeeded (can be inlined and export the @nullable.
Reference: as noted above, we need tests for at least a few more ghreason values (specifically multi-word values).
Candidate: you could use <UNK>
Reference: this should already be handled by stringutils.isblank(brokerid)
Candidate: i guess we should persist persist that persist persist the persist persist persist persist persist persist the persist persist persist persist persist persist persist persist persist persist persist persist persist
Reference: nit: could be set to final and refactor as:  final integer partition; if (partitioner != null) { final list<partitioninfo> partitions = producer.partitionsfor(topic); if (partitions.size() > 0) { partition =
Candidate: throw an exception exception
Reference: we should also write tests for removing a reviewer which is not on the review, and removing a reviewer which is not a valid user
Candidate: wait.forelementclickable() should be <UNK>
Reference: the whole block can be replaced with: return collections.singletonlist(constants.remote_type);
Candidate: collections.singletonlist
Reference: you'll probably get away with this, but this is modifying a shared instance of the groupspec instance (the entityspec is mutated by these methods). better practice (probably) to do entityspec.create(groupspec).displayname(bucketname)
Candidate: this could be simplified instead of nesting.
Reference: is it guaranteed that we will have an abstractfile in node?
Candidate: you could use <UNK>
Reference: this could be an int too. and could be declared inside the try {}
Candidate: you could declare a local variable
Reference: suggestion private static boolean shasrunwebbrowsercheck = false; private static boolean shaswebbrowser = true; public static boolean haswebbrowser(context context) { if (shasrunwebbrowsercheck) { return shaswebbrowser; }  since this is static
Candidate: you could use <UNK>
Reference: <string> is not necessary in new arraylist<string>(); are you sure you're coding in java 8? please fix up your environment.
Candidate: is there a reason for the sake of the sake of depending on the application machine depending on the application machine depending on the application machine depending on the application
Reference: small nit - can probably drop " for"
Candidate: you can use <UNK>
Reference: i think there was a reason... but for the life of me, i cannot recall which one. i'll check with daniele monday.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this relies on version being 0. safer to do the right thing here now. q: what should happen if the version doesn't match the field in the class? should we
Candidate: is there a reason for element?
Reference: @antonini please name it user, and initialize it with opt.empty
Candidate: @antonini let's declare a string here too, too,
Reference: depending on what to expect, you may be interested in using jenkins.getactiveinstance() instead to remove the null check above
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i have verified that we want the ability to run ingest modules on non-data source virtual directories. please remove the isdatasource check.
Candidate: should we log the info.
Reference: java stream<pattern> patternstream = this.headerpatterns.stream(); map<string, object> headerstoembed = message.getheaders() .entryset() .stream() .filter(e -> patternstream.anymatch(p -> p.matcher(e.getkey()).matches())) .collect(collectors.tomap(map.entry::getkey, map.entry::getvalue));  ? also i would say the this.headerpatterns.stream() should be as
Candidate: use <UNK>
Reference: i guess that if the pipe is broken, the return code should be 1.
Candidate: you could use the <UNK>
Reference: i think this message should mention that a new view is being created.
Candidate: this is is designed to be a lock but i wonder if there is no need to synchronize on the
Reference: this should not synchronize on repository due to a risk for dead-locks. bugzillaclientmanager should use a private lock for managing the update job.
Candidate: you could use putifabsent instead of ignored.
Reference: mobilephone->mobile
Candidate: we could be a <UNK> <UNK>
Reference: should autocapturesessions also be disabled if setsessionendpoint is called with empty / null?
Candidate: if this reconnect is is not possible?
Reference: wouldn't it be preferable to delegate this to an injected errormessagestrategy rather than invoking the overridable method below ?
Candidate: how about this is an exception
Reference: i would name it isfiltered to suggest that nothing failed
Candidate: i think this should be <UNK>
Reference: change log level to debug
Candidate: i would be good to presenter.
Reference: performance: init the string away with the size of the device list
Candidate: how about replacing this ?
Reference: doesn't offheapentryfactory.getsize() include the size of the lru pointers?
Candidate: you could use a checkargument instead of "\"" + <UNK> + <UNK> + <UNK>
Reference: call to 'super()' is implicit. no need to state it explicitly
Candidate: <UNK>
Reference: please make just one lookup operation for every key: putifabsent().
Candidate: you could use <UNK>
Reference: maybe use stringutils.isempty(jobtracker) instead of jobtracker == null.
Candidate: if you could use <UNK>
Reference: wrap with collections.unmodifiablemap() ?
Candidate: we should use reflectiveoperationexception all() to
Reference: :o: should we use stringutils.isblank() here?
Candidate: i think we should log hierarchy hierarchy hierarchy hierarchy of <UNK>
Reference: java if (params.length > xaconnection)  would be better
Candidate: suggestion <UNK> = <UNK>
Reference: i think that would also help to address the potential perf issue on calling system.nanotime() multiple times when invoking the ontimer() multiple times.
Candidate: nit: boolean[] = <UNK> <UNK> <UNK>
Reference: variable name should be 'resource'
Candidate: ![critical](<link_1> 'severity: major') reduce this this method [![rule](<link_2>](<link_0>
Reference: this code is duplicated (4x)
Candidate: please use <UNK>
Reference: why not parse the lang and moreinformationurl attributes defined in the spec, and put those into the programinformation as well?
Candidate: you could use repelaced by a userreportingsettingshelper call.
Reference: what about the custom hive version label in the component? we have to let the user know that it doesn't work with hive 1.2.0.
Candidate: you could use only: <UNK> multimap
Reference: are you aware that this is a nop?
Candidate: we could use reflectiveoperationexception utf-8 instead of <UNK> constructor?
Reference: in the get method which calls getchild we use property.getname() instead of field.getname().getprefixedname() as the key in the children map. can you make this consistent so that we're sure there's
Candidate: is there any reason to export the <UNK> evaluation.
Reference: no need for intermediate blob variable
Candidate: can we combine this line before <UNK>
Reference: please clean up any ternary operators to avoid nesting.
Candidate: storagetype is is a bit strange, if clear() is not <UNK> true" if it's not independent of the <UNK>
Reference: these methods all need to be implemented and annotated with @override.
Candidate: this is be <UNK>
Reference: it has been wrong before your commit, but as you touched this line could you use {} instead of string concatenation?
Candidate: i we warn tracking is not incremented in the we can't we we we want to warn but i am not sure that we want to
Reference: i don't understand the condition on the length.
Candidate: @vilchik-elena storagetype is a bit more than '+'
Reference: else is obsolete and getting rid of it reduces nesting.
Candidate: maybe we should log the property?
Reference: we can probably drop that line altogether in fact...
Candidate: you could use <UNK>
Reference: we should return from the loop once this var is greater than 2. one way to do also get rid of the set could be to use a switch here
Candidate: @vilchik-elena is there a reason for styles clicking true" true" true" true" true" true" true" true" true"
Reference: what happens if cluster is null?
Candidate: uid uid is not a bit uid uid uid uid uid for the uid uid uid uid uid uid uid uid uid is not a bit uid uid uid uid
Reference: @kingthorin was suggesting constant.messages.getstring("codedx.error.httpmessage", alert.getalertid()) which does not require extra formatting by the caller.
Candidate: should we move this log level to debug level
Reference: marshal is different than parse, maybe just from ioexceptions here
Candidate: i we add a log here as we depending on the depending on the depending depending depending depending depending depending depending depending depending depending depending depending depending depending depending depending
Reference: can the magic number be explained some more (why 3)? or even more preferably show how its calculated in a static constant?
Candidate: if we == null || <UNK> == null || <UNK> == null) { continue; }
Reference: this can be private. is there a reason to make it protected?
Candidate: this is strange,
Reference: metricnamedtoset
Candidate: you could use a <UNK>
Reference: in setrawtargets(), raw expressions are found instead of references. so, it seems that resolving level should be set as rels_only. if i misunderstand, please let me know. thanks.
Candidate: i think this is not <UNK>
Reference: [broken double-checked locking](<link_0> pattern.
Candidate: you could use <UNK> instead of creating a overhead.
Reference: we don't use curly brackets around one line statements
Candidate: consider using <UNK>
Reference: just wondering -- is there any way to make this return an iterator, so that if we want to return just the first page of 100 results we can do
Candidate: no need to use <UNK>
Reference: 200ms might be a bit tight, usually we go for 300ms for ui related feedback.
Candidate: wait.forelementclickable() is be
Reference: using a stringbuilder looks like an overkill here as there is a single concat, we can just do .setpreference("_shards:" + shard).
Candidate: this is a <UNK>
Reference: is it possible to extend streamingstateencoding with an abstract getstreamingstate() method that delegates constructing the appropriate streamingstate to the corresponding streamingstateencoding subclass?
Candidate: i think that this is not efficient, but i would be more efficient, that the is not <UNK>
Reference: maybe you will call it in the previous conditions blocks
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this method will never return false, if it does, please show me how you did that, we have a bug somewhere else that need to be fixed urgently.
Candidate: use <UNK>
Reference: this should not be hard coded
Candidate: suggestion <UNK> = <UNK>
Reference: i prefer naming variables by what they represent. in this case for example: returnedbodypart or result.
Candidate: suggestion <UNK> = new <UNK>
Reference: i guess workspace could also be optional<file> in configuration so you could do orelse here and maybe simplify the code in other places, too? didn't go through every place it's
Candidate: log.debug
Reference: in this case, the user's configured primaryaddress will never be taken into account. this might not meet expectations...
Candidate: you could use <UNK>
Reference: is this revwalk used? the objectreader should be released by r.close(), so i don't think this inner try { } finally block is needed.
Candidate: you could use a try-with-resources here instead of objects.isnull
Reference: code formatting is off (also please always use {} even on single line blocks)
Candidate: this "_" is a bit clearer, but you could use a string <UNK> = <UNK> (string <UNK> : <UNK> { ... }
Reference: oring with button1 happens for macos also.
Candidate: if you could use only: <UNK> multimap != null && <UNK> != null) { .. }
Reference: needs done=true
Candidate: this is a to <UNK>
Reference: static ?
Candidate: you could use null here instead
Reference: double space
Candidate: please use <UNK>
Reference: { } ?
Candidate: i think we should be a <UNK> <UNK>
Reference: can you think of a way to avoid passing ozonemanager to this class? we now have a low level class depending on a higher level class and potentially a circular
Candidate: you could use reflectiveoperationexception here instead of <UNK>
Reference: i would write this as:  stream.of("a_0", "x") .map(identifier::new) .map(lambdaargumentdeclaration::new) .collect(toimmutablelist())
Candidate: <UNK> -> <UNK>
Reference: the partial load callback should not be changing the progress loader visibility state, so this line should be removed.
Candidate: if you could use <UNK>
Reference: could we trim the given expression? currently i see the following in the generated code (note the double white space at the beginning):  target.settimeandformat( new org.mapstruct.ap.test.source.expressions.java.timeandformat( s.gettime(), s.getformat() )
Candidate: you could use a drive name to serialize the colon too?
Reference: this name seems wrong since it's not the last column. how about dropcolumn or just column
Candidate: this should be to align with the rest of the
Reference: now that the id is no longer required, we don't need it to be non-null
Candidate: <UNK>
Reference: suggestion .filter(attribute::hasdefaultvalue)
Candidate: you could use <UNK> here instead of <UNK>
Reference: change to java transactionfactory.createboletotransaction(); transactionfactory.createdebitofflinetransaction(); transactionfactory.createdebitonlinetransaction();
Candidate: this is not
Reference: negative logic
Candidate: we could use <UNK>
Reference: being able to do result.mstatus.mcode might indicate that somewhere in the way setting modifiers for glustervolumestatusreturnforxmlrpc.mstatus wasn't done properly.
Candidate: is there a reason to check that is empty?
Reference: @xiaolong-sn when we have a map we can add a method public string getstreamconsumerarn(string stream)
Candidate: this is a <UNK>
Reference: since you do really like the ternary operator, you could use it here, too. besides, uri.empty instead of null might be more null-safe.
Candidate: i proposed could be simplified by:  if <UNK> == null) || <UNK> || <UNK> || <UNK> == <UNK> || <UNK> { ... }
Reference: metadataonly flag is always false in case of bootstrap. so, shall avoid checking it here.
Candidate: this is is be passed to best,
Reference: assertthat(map).isempty()
Candidate: you could use <UNK> here also?
Reference: move tostring() into clickorderstablecolumn() method same goes for orderstable.elem.tostring() calls
Candidate: if <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK>
Reference: is this an egit convention? i'd have used baseref == null ? null : baseref.getname() to avoid the negation.
Candidate: you could use all() method to nesting.
Reference: nit: would it be clearer just to define the ondismisslistener inline here?
Candidate: you could move this to <UNK>
Reference: you should log this. how else could the user figure out what the problem is? though sometimes benign, lockfailedexception usually means there is a stale lock.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: must change the maximum to 3. will fix on merge.
Candidate: could you use isempty() instead of repeating the middle of <UNK>
Reference: this is not safe, you need to actually check if they are started, wait if not and check again. it applies to all the cases.
Candidate: <UNK>
Reference: write a test about it!
Candidate: you could use a constant here instead of <UNK>
Reference: when would you enter this state?
Candidate: this is a little bit strange to me, we don't 9 ints should be reused.
Reference: httpservletresponse.sc_not_found
Candidate: minor nit: we could use a <UNK>
Reference: what is the meaning of null ?
Candidate: is there a reason that styles styles that styles that styles that styles that styles that styles that styles that styles that styles that styles is a <UNK> that styles
Reference: it looks like the same type of conversion of jdlms dataobject to a value object appears in more classes. this might be a good candidate to move to a helper
Candidate: we should use a constant here instead of <UNK>
Reference: the top and bottom parameters need to be switched. suggestion projectionmatrix = new matrix4f().ortho(left,right,bottom,top,znear,zfar).transpose();
Candidate: this should be a local variable?
Reference: 'fields' should be applied only for top level json?
Candidate: you could use isempty() instead of <UNK>
Reference: your call if you want to convert this to a stream:  chunks.stream().map (chunk -> ...)
Candidate: unused variable?
Reference: shouldn't we use try-with-resources instead of the suppress warnings annotation?
Candidate: okay, appid
Reference: @rcpeters should be releasing the lock there?
Candidate: mag <UNK>
Reference: maybe use new okhttpclient.builder()..., it's a bit odd that we are creating 2 clients?
Candidate: this is not explained to a new <UNK>
Reference: is the cost really multiplied by the length of the data type? what if you have a really long string, is it really that expensive?
Candidate: use <UNK> primitive arrays.
Reference: uriutils.addparameterstouriquery?
Candidate: inline
Reference: throttletier
Candidate: is there a reason to throw an exception instead of null?
Reference: nit: you can use assertthrows. there are a few of these in this pr.
Candidate: we could be configurable threads.
Reference: looking at [printnonzeroresultscenarios](<link_0> i think ambiguousscenarios should be treated the same as failedscenarios and always return a non zero exit status.
Candidate: we should use unsupportedoperationexception annotation, rather than <UNK>
Reference: change method name with prefix.
Candidate: <UNK>
Reference: if constraint.issubstitution then i understand this method should return booltoken.true. but what if constraint.isfalse is true, shouldn't we return booltoken.false instead of null?
Candidate: this is going to be prone to a <UNK>
Reference: might be nice to make this private and call it from inside of the homeactivityuicontroller constructor.
Candidate: wait.forelementclickable() should be <UNK>
Reference: we also need to make this public. otherwise the client of the iterator<note> cannot see the blob that is attached to the note.
Candidate: @vilchik-elena introduced impl. public? introduced impl. public? introduced request. request. request. request. request. request. request. request. request. impl. flagged introduced introduced introduced impl. request. request. request. request. introduced impl. request.
Reference: please don't touch old formats, whatever they do let them do that
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: nit: put context in new line, and also for line 72 and 76
Candidate: you could just use <UNK>
Reference: iscdtproject variable is redundant since ifl != null condition can be used instead.
Candidate: this should be <UNK>
Reference: the resource message does not seem to exist, it's also concatenating with the key instead of the resource message.
Candidate: no need to specify the user.
Reference: this part feels wrong. you should be using iclasspathdescriptor (which is designed to encapsulate iclasspathentry). my guess is classpathdescriptor should probably be changed to receive a scope element, that'll drive
Candidate: you could use <UNK> instead of <UNK>
Reference: useless check because it ftraces is always null when setup is called. it is called only once per execution regardless if only one test is run or the whole file.
Candidate: i liked that this could be a <UNK> <UNK>
Reference: uswrpath -> uwrpath maybe? not sure what the s stands for.
Candidate: you could use stringutils.isnotblank()
Reference: make this 3
Candidate: missing <UNK>
Reference: the null check is too late here. should go further up.
Candidate: please combine this method please.
Reference: can you get the user from context instead?
Candidate: this is intended name!
Reference: yea, we were trying to avoid changing those newmerger method signatures, which is how we grew setobjectinserter(). i wanted to drop the final part because i'm considering swapping in a
Candidate: we should throw an exception instead of wrapping the exceptions?
Reference: hmm totally forgot, this refactoring breaks backwards compatibility. maybe keep using the old classes for cifs for this release and return them from the cifsconnectionbuilder.
Candidate: you could use <UNK> <UNK>
Reference: getlabelcontrol
Candidate: is finishing a tear down down down down down down down down down down down down down down down down down down down down down down down down down down
Reference: i haven't read the diff carefully, but: packettransformers should not keep the rawpacket/dtmfrawpacket instances, because these instances and their buffers are re-used. i don't expect many dtmf packets, so a
Candidate: you could use <UNK>
Reference: should this line be outside of the while loop?
Candidate: instead of <UNK>
Reference: can be simplified to java return itemmaterial == null ? 0 : itemmaterial.getmaxstacksize();
Candidate: if you could use <UNK> <UNK>
Reference: shall we mark it as final? also i don't quite understand why it is named as dump? if it is just a copy, will a name called tagrouterrulecopy be better?
Candidate: this is not be used?
Reference: consider using assertnotsame instead.
Candidate: is there a reason for this method to be called from the view?
Reference: suggestion sb.append(sortorder); sb.append("}");
Candidate: use <UNK> objects.tostringhelper() to use a string concatentation of <UNK>
Reference: couldn't the ekm from the persister be used?
Candidate: you could use a multimap here instead.
Reference: can you please delete this logging? we don't need this anymore since we verified our theory about the issue.
Candidate: you could use a constant instead of <UNK>
Reference: i saw hashedinputs being initialized during bolt construction on client side as well. if its not needed, we can just remove it.
Candidate: could you please use this feature instead of download <UNK>
Reference: super(); is unnecessary as it's automatically called
Candidate: <UNK>
Reference: the default provider is ad and id rhds attribute is null its becomes ipa? can you elaborate?
Candidate: you could use <UNK> false) instead of <UNK> false)
Reference: is it even possible for si to be null at this point?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: there's a parseutils.missingoneof method for cases where at least one of a set of choices must be present. the missingrequiredelement message implies all of them must be present.
Candidate: what's the purpose of the expectations
Reference: replace the exception by exception, so your test is self contained.
Candidate: this is not
Reference: this might be due to wip, but we should not be throwing stack traces.
Candidate: you could re-throw the exception
Reference: if (oldindex >= newindex) throw new runtimeexception("useful message")
Candidate: this is discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded
Reference: assertj on the collection, instead of the plain asserttrue?
Candidate: is there a specific behaviour?
Reference: does your logger take both %s and {}? the latter is more typical in my experience.
Candidate: i think we could use a <UNK> instead of creating a new connection,
Reference: we don't expect the sort order to change, so i'm thinking this should be done at the filtersettings creation time, it would avoid having to do these manipulations to the
Candidate: is there a reason to assert that this is is not
Reference: this code can be simplified to rely on autounboxing.
Candidate: this should be a bind separated to <UNK>
Reference: getobjectid and getobjectvalue can be null ? if yes please adjust this conditions
Candidate: use <UNK> instead of <UNK>
Reference: the name & type check can be done here, here is example: java tablestructureadapter of(objlist<charsequence> names, objlist<typeadapter> types) throws textexception { this.names = names; this.types = types; if (timestampindexcol ==
Candidate: this can be simplified to nesting.
Reference: can we change all the variable names in tests from globalconfigfile to sessionconfigfile? for consistency.
Candidate: you could use <UNK>
Reference: get without an assignment seems weird should this method be rename to appendimagelist or writeimagelist ?
Candidate: i liked this <UNK>
Reference: better to use the official way here true instead than "true"
Candidate: better to use "true"
Reference: you can just call injector injector = guice.createinjector(); without any module for the same value.
Candidate: you can use tear down to
Reference: when using a model tag, you can initialize your eventhandler in the org.eclipse.e4.ui.workbench.renderers.swt.stackrenderer.init() method.
Candidate: this should be strange, instead of printing "true"
Reference: this should probably throw close the store and throw a runtimeexception, because someone is trying to kill us
Candidate: no need put: <UNK>
Reference: we might end up potentially adding null values to a list. this should never happen. please check and only add non null values.
Candidate: could we use foreach loop here instead of creating a map?
Reference: i'm just wondering what will happen if none of the renderers will have uuid matching the user-selected default? e.g. what happens when user sets -dorg.dashbuilder.renderer.default=nonexistentuuid? maybe that scenario is ok,
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this addostypes() method called in all versions of the /capabilities resource, you should be creating differentiation between older versions and version_3_3 where new oss became supported
Candidate: is there a reason for this method is not <UNK>
Reference: have you considered something like : todelete.addall(arrays.aslist(fmemberstomove)); todelete.retainall(arrays.aslist(all)); retainall() keeps all elements in a collection (todelete) that are present in the list passed in as the argument (all).
Candidate: this is designed to be a no-op here, no?
Reference: hmmm where do you set the port to be opened?
Candidate: you could use a constant instead of <UNK>
Reference: where did the 20% range come from? it might be more clear if it is a constant percentage and initialized in tnatsservicetransport() with the other parameters around heartbeats.
Candidate: <UNK>
Reference: > if we go for the approach where we use orm + our own classloaderservice implementation, i think this method needs to change. it is not enough to just check
Candidate: this is not used?
Reference: super nitpicky, but "inform" feels like an awkward thing for this to be based on v. maybe "maininstance" (ie: anything rooted at '/'), just to keep the vocabulary within what
Candidate: this is a <UNK>
Reference: should this really be exposed as public setter?
Candidate: wait.forelementclickable() should be <UNK>
Reference: junit way to skip some test methods from the unit tests (compared to ignore all tests. in which case it assume is used in @before method, ins which case all
Candidate: is there a reason for avro property?
Reference: should be defined here
Candidate: suggestion <UNK> <UNK>
Reference: reportparseexceptions is true by default?
Candidate: no, eating this eating
Reference: why not use the same trick with timeunit? timeunit.hours.tomillis(1)
Candidate: you could use <UNK>
Reference: style-nit: no space after method name before parameter list.
Candidate: you can use <UNK>
Reference: this actually isn't correct. the "item" in this case that is being passed to the jsr-352 skiplistener is actually all the items in the current chunk. unlike spring batch, the
Candidate: throw an exception
Reference: it is always number or null?
Candidate: you could use a <UNK> here instead of equals?
Reference: baseeventinfo.setloglevel(string) does the same thing. so, we should used you new method instead and remove setloglevel() from baseeventinfo (ibaseeventinfo). if we do so we need to make sure that the
Candidate: is there a reason to re-throw this?
Reference: it would be nice if we could skip the code duplication in passpersistablebundleextrastobundle(). since persistablebundle implements parcelable, and we can create a bundle from a parcelable, maybe with a bit
Candidate: this is be surrounded
Reference: the message must be adapted if the command returned is a "remove blank space command".
Candidate: @gunnarmorling you could use only: <UNK> <UNK> <UNK>
Reference: we should check for null and existence
Candidate: this is a <UNK>
Reference: energy / energycost will be > 1 when it has plenty of charge, no?
Candidate: please use <UNK>
Reference: what if configuration is empty?
Candidate: why not use <UNK> annotation, instead of ==.
Reference: that's a sad error handling. is there a reason why the test method cannot be marked "throws exception"?
Candidate: you could use a logger instead of <UNK>
Reference: this does not need to be public, let's keep private
Candidate: you could use a constant here instead of creating a bean as well.
Reference: don't think we need to log this. this is not useful for users.
Candidate: this should be <UNK>
Reference: please change jsfiles to arraylist. there is now need for type vector in this single threaded situation.
Candidate: this is is not equals?
Reference: the trimmed result is ignored.
Candidate: use <UNK>
Reference: you should use java.util.logging for this.
Candidate: use constants for these.
Reference: maybe add the tag here as well.
Candidate: you could use a string concatentation objects.tostringhelper() to <UNK>
Reference: could probably just use hasexplicitlyconfiguredaddress() instead of getaddress() to skip the possibly expensive lookup while retaining the feature to set the email address automatically.
Candidate: this api is not good api api api handling api handling api handling api handling api handling api handling api
Reference: isempty
Candidate: please use <UNK>
Reference: perform the split here if needed, set to empty to avoid null conditionals if none.
Candidate: i think that this should be a <UNK> <UNK>
Reference: duplicate check (see below)?
Candidate: nextvalueindex should be be encrypted, by default.
Reference: could be reformulated as a filter operation on a stream.
Candidate: you could move this braces around
Reference: why is 1 added to schedulerthreads here?
Candidate: is there a reason for this class instead of a constant?
Reference: extract the string or the expression by.cssselector(...) as a variable for better readability.
Candidate: we should use a <UNK> <UNK>
Reference: 1. it is wrong place to customize "isparkingpluginenable" should not be here in the code 2. there is no need fofr this ifs , it should be always visible code
Candidate: you could use <UNK>
Reference: we have to validate the suffix here, because the user can pass a string which is not valid in java identifiers.
Candidate: please use <UNK>
Reference: some typedoutput instances can only be read once so consuming the entire stream will render them unable to write a second time for the actual body.
Candidate: this is <- nervous nervous how about this }?
Reference: here the name superclass is a bit misleading
Candidate: this is a bit nervous for narrowing use-case. [![rule](<link_2>](<link_0>
Reference: move after doexport. probably should be log.debug, although it doesn't provide too much useful information, perhaps we can remove it
Candidate: we should export to non-trivial log.
Reference: this should be logged as well. use the monoerror() helper method in fluxutil instead.
Candidate: maybe we should throw an exception instead of wrapping an exception
Reference: maybe use !frcs.isempty() here? or is it necessary to check for the size here? we just have a for loop inside anyway.
Candidate: this theory this should be <UNK>
Reference: we should delete if. since if this message is logged, it means pacemaker is not being used.
Candidate: you could use verify that the is not
Reference: i noticed that finishcommit is not passed cd2. of course it still works fine because, cd and cd2 are the same. this made me think it may simplify the code
Candidate: this is not needed
Reference: could we fix position? you call validatecursorfornulls, but after that you call kafkacursor.fromnakadicursor, which basically does the same checks. from other side it is not clear why you call kafkacursor.fromnakadicursor
Candidate: you could use <UNK> instead of <UNK>
Reference: you should return void instead of void, so you won't have to return null
Candidate: this is not to be <UNK>
Reference: entry (or something else since entry is already a field)
Candidate: entry
Reference: shouldn't you fail if the read of even a single account fails?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: hey @tonyr59h , got to say, this all-sites removal makes me a bit uncomfortable. i assume the reason you added it is to "clean up" any remotely-deleted sites, right? is
Candidate: this is designed to be a <UNK>
Reference: nit: throw on next line.
Candidate: use try-with-resources <UNK> try-with-resources
Reference: that whole ordering is comparator.comparing(row -> row.getraw(column), comparators.naturalnullsfirst())
Candidate: redundant variable names.
Reference: why it's three components and not just one string?
Candidate: please use <UNK>
Reference: why not just set stopglusterservice to true in createmaintenanceparams()? isn't stopping gluster services already managed inside maintenancenumberofvdss command?
Candidate: use <UNK>
Reference: suggestion if(entry.getvalue() == null) { target.put(entry.getkey(),null); } else if (issimpletype(entry.getvalue())) {  rather than using continue, go on with an else if
Candidate: is there a reason for this pr?
Reference: stringutils.ifnotblank()
Candidate: how about using the <UNK> events.
Reference: extract the value creation expression from the put() call to reduce nesting.
Candidate: you could use <UNK> here instead of <UNK>
Reference: remove after script_end
Candidate: unsigned
Reference: rewrite as: int c = methodname.compareto(other.methodname); if (c != 0) return c; return classname.compareto(other.classname);
Candidate: this is a bit sketchy for the sake of <UNK>
Reference: our convention is to create a new instance if members is null that way the method never returns null.
Candidate: suggestion return <UNK>
Reference: wouldn't it be easier to use scan consistency on findmaxattendees so that request plus is implied?
Candidate: expectedexception
Reference: not sure if i get the logic here. why is this block (from // add responses that the user submitted himself to this line) moved to inside case student?
Candidate: is there is a for a logic?
Reference: you can remove the this
Candidate: you could move this to <UNK>
Reference: the timing dependency is still problematic. does the api let you run the dag and then terminate it once the results are computed? this can be taken up outside of
Candidate: i think that the sake of these two lines
Reference: [minor] this won't ever appear in the response from ledger. it doesn't generate this link. it can come only from connector. i don't see the value of having this line
Candidate: is there a reason for this test is not <UNK>
Reference: method can be protected now (private if not isolated in tests).
Candidate: if this is is designed to be <UNK>
Reference: change this to use mdkconstants.sync_sysml_id_suffix.
Candidate: suggestion <UNK> = new clazz, <UNK> clazz, <UNK> <UNK> clazz, <UNK> <UNK> clazz, <UNK> <UNK> clazz, <UNK> <UNK> <UNK> clazz, <UNK> <UNK> <UNK> <UNK>
Reference: why do we need to have the initialized variable?
Candidate: this is designed to check if <UNK> == null && <UNK> == null && <UNK> && <UNK>
Reference: this logic is too hard to understand. i would refer a simple something like: if(offset1 == null || offset2 == null) { return null; } else { return integer.valueof(offset1).compare(interger.valueof(offset2)); }
Candidate: you could use checkargument here instead of % <UNK>
Reference: as cosemdatetime appears to be immutable, there is no need to return a new object to protect internal state.
Candidate: unused
Reference: nit: checkargument? i am undecided myself, but shall we use illegalargumentexception or illegalstateexception in those cases?
Candidate: i think we should have a checkargument to the <UNK> audience >= <UNK>
Reference: i am a bit confused that executecommandandcommitifneeded(ctx, command) does not set the lock owner and executecommandandcommitifneeded(contextbuilder, command) does - please move the checklockowner to the former.
Candidate: you could throw a runtimeexception instead of <UNK>
Reference: slight performance enhancement... suggestion revisionactions = actions.toarray(new action[actions.size()]);
Candidate: i think that this is is not trace, please remove the
Reference: shouldn't we be throwing filenotfoundexception here? or otherwise at least some subclass of runtimeexception, probably securityexception.
Candidate: we tracking this tracking tracking is tracking tracking tracking the tracking tracking tracking tracking tracking tracking tracking tracking tracking tracking tracking tracking tracking tracking tracking tracking tracking tracking tracking tracking
Reference: again, i am far from being an expert in networking, but if i made a mistake in writing the port number, enough to make it unparseable, i think terasology should
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: aspect
Candidate: is there a reason to call <UNK> here?
Reference: this will catch exceptions that extend runtimeexception and rethrow them as a different exception. seems very undesirable. looks like this is because of autocloseable. i think we need to do
Candidate: is there a reason for element? a property?
Reference: in case changing the code above then just change here to: updategridsize(calculategridheight(values.size()));
Candidate: use <UNK>
Reference: i would move exception handling into isreloadable() and returning false when exception raised.
Candidate: please rename <UNK>
Reference: maybe we should define the int outside of the for? not sure if this gets optimized, but i introduced a "bug" with string once, so i became a bit cautious
Candidate: you could use <UNK> instead of <UNK>
Reference: what's the purpose of this providedvscount? how come you can close even when not removing?
Candidate: we can move this initialization to consistency.
Reference: consider extracting helper method tryconsumefailedposition:  @override public boolean testnull() { if (tryconsumefailedposition()) { return false; } ... } private boolean tryconsumefailedposition() { if (numnextpositionstofail > 0) { filterindex++; numnextpositionstofail--;
Candidate: this "_" should be reduced to return an empty string.
Reference: as we discussed make this method return void and let the producepage() handle output from getoutput() method.
Candidate: if you could use <UNK> <UNK>
Reference: either you put all the aspects in the list (in which case, you may want to change the name of the field), or just the duplicates.
Candidate: this is a <UNK>
Reference: this won't work. it's combining two directories which would more than likely result in an invalid directory.
Candidate: you could use a constant instead of printing the
Reference: probably worth including a negative test for solid or 454.
Candidate: use readasstring(...) instead of <UNK>
Reference: nit: stream on previous line
Candidate: nit: timestamp -> <UNK>
Reference: this could also make use of createcloudresource method
Candidate: this checkbox think, you could be a checkbox for the checkbox
Reference: minor: i'd prefer starting this before passing to the streammetadatacache, just in case it tries to do something with the passed in systemadmins.
Candidate: this should be an exception
Reference: nit: you don't need new object[] for the current version of slf4j
Candidate: i think this is a <UNK>
Reference: the propagate flag value is the same for all messages, to seen_messages and propagated_messages will always be the same. amirite? i'd then remove than metric.
Candidate: you could use <UNK>
Reference: whitespace suggestion public haplotypeprobabilitiesfromcontaminatorsequence(haplotypeprobabilitiesfromcontaminatorsequence other) {
Candidate: i would be better to use a checkargument for <UNK>
Reference: if you just throw exception here - then this block doesn't really make sense, because you just throw what you caught. what can add value here is to create and
Candidate: please add a stack trace please.
Reference: maybe we can add the limit as the size of the array list?
Candidate: if you can use <UNK> here instead of creating an anonymous anonymous anonymous anonymous anonymous anonymous anonymous anonymous anonymous anonymous anonymous anonymous anonymous anonymous anonymous anonymous anonymous anonymous anonymous anonymous
Reference: you can do view.settag(mainviewholder == null ? new viewholder(view) : mainviewholder);
Candidate: this is right...
Reference: inline compactedblock
Candidate: you could use an empty <UNK>
Reference: why would a get something method have a side effect of setting something?
Candidate: you could use a constant instead of creating a new instance.
Reference: -1 sending order is important. you need to use a single thread to send the request or you risk it to be reordered.
Candidate: if we could use a warn instead of <UNK>
Reference: maybe add a function to the logger adding these "-" signs automatically in the right amount so every log line has the same length? <feature
Candidate: you could use computeifabsent clear()
Reference: good thorough testing! could also test 3456 (i.e. where have just exceeded the kb > 2 threshold)?
Candidate: this should be <UNK>
Reference: this could go to beforeclass, right?
Candidate: no need to call this explicitly.
Reference: suggestion + " or 'getdataview()' according to the used data type.",
Candidate: this feels like a little bit more helpful to debug level than <UNK>
Reference: just return null here.
Candidate: @manuelplazaspalacio is not be called on the events.
Reference: the arguments here should be flipped expected is now, actual is eventtime. the assertnotnull above is also redundant, if now.equals(eventtime) then eventtime cannot be null.
Candidate: is there a reason that is empty?
Reference: @garydgregory please use args.notnull for consistency with the rest of the code base.
Candidate: assert.notnull()
Reference: can we remove: declare-response, useless-assign and just return the object from the method-call?
Candidate: remove: <UNK> <UNK>
Reference: lets just return after this and skip the next check
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: confusing indentation, did you mean to delete the other bracket?
Candidate: you could use a local var instead of a element?
Reference: rename to method
Candidate: rename to <UNK>
Reference: separate file for each test. rename it to avoid misunderstanding. file name should contain short information about its purpose.
Candidate: is there a reason for this test is not
Reference: if you use thetable.getcolumn(name), this will throw ambiguouscolumnexception for you, so you can get rid of this else if
Candidate: you could draw a draw <UNK>
Reference: should use textinputformat
Candidate: please revert this put: <UNK>
Reference: need to put this back - cannot change the api
Candidate: i guess we should use the future: we could use a new <UNK>
Reference: make this separately lined for legibility.
Candidate: i think that this itunes of nesting.
Reference: why not make the function static?
Candidate: is there a reason for this logic?
Reference: use constant?
Candidate: <UNK>
Reference: this should just return realmobjectschema?
Candidate: should be be <UNK>
Reference: what about calling super? is it intentional we don't call it? if so - why?
Candidate: this is be reduced down to the
Reference: not needed empty line.
Candidate: no, we don't want to report the exception
Reference: it is not only unknown, it can be failed and failed restart also. you should simply print the commandstatus
Candidate: let's use a d to a map?
Reference: why not asserts?
Candidate: can you use <?>
Reference: i think it's better to check class here instead of byte. byte value is error-prone. or at least can be replaced with an enum (but imo class check is better).
Candidate: this should be <UNK>
Reference: logger shouldn't have **khalid** in name.
Candidate: use <UNK> instead of <UNK>
Reference: please add @nullable (same below)
Candidate: <UNK>
Reference: if we know the result, break out of the loop.
Candidate: you could use <UNK>
Reference: seems like extraneous logging in this module.
Candidate: this is not be non-null?
Reference: rather than hardcode the string, can use the classname
Candidate: you could use <UNK>
Reference: it looks like a npe-check on display is missing here (npe-safety seemed to be the point of the initial null-check of control)
Candidate: maybe we should throw an unsupportedoperationexception rather than an unsupportedoperationexception rather than concrete unsupportedoperationexception
Reference: put this condition together with state.getblock() == null; same for maxcombine
Candidate: if you could use <UNK> <UNK>
Reference: can you make the old constructor call the new one (with a default value for the additional parameter)?
Candidate: i don't think we should have to bind the <UNK>
Reference: maybe assert that the entryid is the special entryid? just a thought.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: should long size ... be moved to right above job job = ...?
Candidate: is there a reason for avro property?
Reference: [optional] can you port this method to builder-like style?
Candidate: static import
Reference: this should not be necessary.
Candidate: nit: you could use <UNK>
Reference: mediatypehelper.istextlike(...) uses .equalsignorecase and .tolowercase() it's not needed here ? this was noticed by @kanovotn
Candidate: @vilchik-elena you could be simplified to "return true"
Reference: this jobscheduler version of feed update does not obey mobile update user preference. in contrast, the alarmmanager version in feedupdatereceiver does the check: java if (networkutils.networkavailable() && networkutils.isdownloadallowed()) { 
Candidate: this should be <UNK>
Reference: arguments should be 1 element array. type should be objectinspector for string rather than abstract.
Candidate: you could use <UNK> instead of <UNK>
Reference: here you have a positive test
Candidate: <UNK> <UNK>
Reference: != will work only for interned strings . use !str1.equals(str2)
Candidate: i doubt that this is succeeded to the resolver. if there is no need to putifabsent
Reference: so here it's probably wrong then as well since you need to be able to save it with type 'null', to keep autodetect
Candidate: please add a enum annotation, please.
Reference: table {0} does not contain a primary key. a vast amount of memory may be required.
Candidate: typo: <UNK>
Reference: fmsgroups suffer the same issue as fmsusers. you'll need to calculate the group mapping somewhere around line 71 and add it into the umsusersstate somewhere around line 78
Candidate: you could use <UNK>
Reference: nit: inline block variable
Candidate: i'm sure i'm sense using tests under try tests = try = try = try = try = try = try = tests = try = try = tests =
Reference: personally i find index < 0 simpler to parse.
Candidate: use <UNK>
Reference: just throw unsupportedexception here, this method never called anyway since you've implemented readonly interface
Candidate: this should be repelaced by <UNK> userreportingsettingshelper call.
Reference: suggest adding the current state to the exception msg as well
Candidate: we should use a string here instead of <UNK>
Reference: catch this in populatereviews and just set the value to zero. we shouldn't fail to build the whole section just because one review has a bad value.
Candidate: is this a bit idea, that we have a to call the <UNK> below?
Reference: i think we don't want to remove this... otherwise character content (that's not an entity reference) won't appear properly.
Candidate: we could use a local var instead of creating clear() to 16?
Reference: you override this in two test methods so this variable doesn't really need this scope. make it per test
Candidate: you could use a mock for <UNK>
Reference: @wwjbatista i think for this pr (sticky_polling), bypassing the logic from insertentryfromtransaction going straight to the db is fine, although we should at least update the stats (totalinsert.inc()). @sbrossie but
Candidate: rename to <UNK>
Reference: this message will be appeared even when containerclient == null also could you please add i18n for log messages?
Candidate: this should be to be called in the
Reference: i don't understand yet, why the facet check helps or is necessary.
Candidate: could we print the stack trace instead of printing the
Reference: check for postartifact vs postartifacts
Candidate: is there a reason to re-throw the exception here?
Reference: i think we actually want this to just be... suggestion return appurl;  the "/medic/_design/medic/_rewrite/" bit is the old format that we no longer need.
Candidate: you could use a constant instead of <UNK>
Reference: and if we are making it private then just return parameterdefinitions == null ? new parametersdefinitionproperty() : this; and the field can stay final ftw
Candidate: this is be repelaced by <UNK>
Reference: shouldn't unexpected be a single word?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: is it possible to take this string from correctionmessages.properties without much change?
Candidate: is there a reason for stringbuilder?
Reference: delete this line
Candidate: use <UNK>
Reference: i believe this was a suggestion of @dwightguth: if computehash() returns 0, set the hashcode to 1.
Candidate: is there a reason for operand label?
Reference: can't you get the fortune value from the loot context? edit: isn't this whole method unnecessary now that you've written the loot table json?
Candidate: you could use a constant instead of <UNK>
Reference: comparing with [testexecutionresult](<link_0> shouldn't this getter return an optional?
Candidate: we could use only: datanodeid ?
Reference: jenkins.getactiveinstance() instead (nullability check)
Candidate: suggestion if <UNK> == <UNK> || <UNK>
Reference: why are we wrapping this now? we are declaring we throw e, but we're actually throwing a runtimeexception
Candidate: please rollback this is be quickly to the
Reference: should be illegalstateexception
Candidate: use log.d
Reference: super nitpick: but could this be expirytimestring?
Candidate: can you please use reduced to <UNK>
Reference: it shouldn't be necessary to create the fragment when the activity is recreated. instead you can find the existing fragment, and if it's not there create it. ex:  mpostlist
Candidate: you can use blanks
Reference: could we extract the test portion as a common function?
Candidate: aiui the export
Reference: rigion should be "region"
Candidate: if you could move this to <UNK>
Reference: not sure how likely it is, but this might the ide to freeze if the saving takes a very long time. i upload a new revision of your change using
Candidate: this is designed to be printed in the consumer.
Reference: immutablemap.builder throws an exception when tries to register another assigner with an already registered name. it will fail to initialize the class, which leads to noclassdeffounderror and snow owl startup
Candidate: why not use stream() instead of creating a new arguments.
Reference: looks like we should better return an empty string here, then callers don't need to check for nullness
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: collections.emptyset()
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this function actually returning a builder and not an uri. if you don't need the builder, return the uri directly or rename this function
Candidate: is this a bit strange to <UNK> that we could have a to <UNK> <UNK>
Reference: it only rejects new tasks, so has no practical effect in this case. i would try shutdownnow, even with a bad support of interrupts by the thread
Candidate: i'm not sure how about using the prod
Reference: this will give strange results for names with non-latin characters, for example the japanese name: ?? ?? will result in: ?? which is a bit weird. this might be considered
Candidate: is there a reason for this solution,
Reference: what if the property is not set in system?
Candidate: use <UNK>
Reference: i recommend to replace it with the logger :)
Candidate: please use <UNK>
Reference: @lbergelson @nh13 in that case, would it be best to put 0l here?
Candidate: can we use a checkargument here instead of creating a new map?
Reference: must return true all the time (addcounters can fail with replace event, but cards already discarded).
Candidate: <UNK> -> <UNK>
Reference: equal values should not be tolerated. any reassignment of already existing dimension or metric should be illegal.
Candidate: maybe we could be a warn instead of ==.
Reference: maybe do this test explicitly with localhost:1234
Candidate: we could use reflectiveoperationexception here
Reference: i think we have an unwritten convention of using dopublish do such methods.
Candidate: i guess we should be a efficient, that this is is a efficient, bottleneck. is a efficient, but i would be a efficient, that the lock is efficient, but i
Reference: why are we doing this? this integration test doesn't use optional fields so no need to pass along card_expiry. the mock can be modified to not return cardexpiry.
Candidate: please use <UNK>
Reference: is it worth it to extract this into its own function?
Candidate: <UNK> -> <UNK> -> <UNK>
Reference: suggestion return tryactivateandget(e, item) != null;
Candidate: suggestion throw new <UNK>
Reference: place in applicationconstants instead.
Candidate: i think this should be a <UNK> <UNK>
Reference: need to add the //non-nls to string.format lines. if an exception is caught, what happens to randomaccessfile? will it get closed?
Candidate: is there a reason to add a message here?
Reference: m.getgroups()
Candidate: you could use isempty() instead of objects.isnull
Reference: in the save digest you use uppercase for sha
Candidate: you could use a constant instead of <UNK>
Reference: suggestion for readability -- chaining calls to append: java stringbuilder errorbuilder = new stringbuilder(samlconstants.security_assertion_issuer_format) .append(" ") ...snipped...  if you're feeling really crazy, you can even skip the stringbuilder declaration
Candidate: please use collectionutils instead of "\"" + joiner.on("\", " + + + <UNK> + <UNK> + <UNK> + <UNK> + <UNK> + <UNK> + <UNK> + <UNK> + <UNK> +
Reference: personal preference: private static final float center = 0.5f;
Candidate: is there a reason for element?
Reference: shouldn't we throw an exception if execution reaches this point and the deletion plan is rejected? this will silently skip the deletion parts of the commit.
Candidate: you could be simplified to <UNK>
Reference: lambda?
Candidate: you could use a string instead of arguments.
Reference: is there any way you could get rid of this return? nested returns that aren't at the beginning of a function can make it hard to understand the flow.
Candidate: if you could use <UNK>
Reference: package name should be lowercase.
Candidate: let's use encoder's the id is not included in the
Reference: suggestion tooltip.add(key + ": " + value);
Candidate: you could use <UNK>
Reference: intenal -> internal
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this is a perfect log - all the data is there for investigation. why don't we integrate all of these in request.getloginfo? this way the correlation id will always be
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: make static
Candidate: you could use use <UNK> instead of <UNK>
Reference: getonlyelement() instead of getfirst()
Candidate: use <UNK>
Reference: java authcarddetails.getaddress() .flatmap(northamericanregionmapper::getnorthamericanregionforcountry) .map(northamericaregion::getabbreviation) .ifpresent(worldpaytemplatedata::setstate);
Candidate: i think this is not efficient, we could use <UNK>
Reference: suggestion: use <link_0> so that we don't need to catch exception in here. make code more readable
Candidate: suggestion if (parent == null) && <UNK> { ... }
Reference: as temporary decision, i refactored it so that "dice = null" in case if dices not thrown yet. imho, in future we shoud create separated jsons for new/playing status and
Candidate: minor: this is not be used?
Reference: this actually can be private static. 1. first it can be static because it does not refer to this zkfc object fields 2. other methods are protected i *guess* because
Candidate: you could use <UNK> instead of null"
Reference: shouldn't the rowdata field be inside the servicelisteners.size() > 0 if below, since it isn't used outside of that scope?
Candidate: i is a bit clearer, but i would be a good idea to use <UNK>
Reference: this seems hacky, and besides why this is needed? bootstraplayoutserver has an exceptionally block: java .exceptionally(throwable -> { try { cfutils.unwrap(throwable, alreadybootstrappedexception.class); } catch (alreadybootstrappedexception e) { log.info("bootstraplayoutserver: layout server
Candidate: no need to wrap this method call.
Reference: the position parameter is in nattable coordinates and could be out of range in the scrollablelayer. ideally the scrollablecolumn row be underlying scrollable layer row that is already found at
Candidate: @gunnarmorling you could use a constant for <UNK>
Reference: ecoreutil.getexistingadapter()?
Candidate: this is repelaced by a userreportingsettingshelper call.
Reference: how come default and fragment is in the same branch? maybe i do not understand something?
Candidate: same as above.
Reference: need to remove redundant cast.
Candidate: you could move this to the method.
Reference: i think you want to compute extractmyrating() on computation scheduler. to do this you should use observeon(schedulers.computation()) before map and then use observeon(androidschedulers.mainthread()) before subscribe()
Candidate: this is a bit strange to <UNK>
Reference: we usually prefer people providing default value through properties file, we want to make the default value more explicit. can you provide the default value in secor.common.properties?
Candidate: you could use a constant instead of <UNK>
Reference: this line needs to be removed since the last commit.
Candidate: @ivange94
Reference: unnecessary change.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why not do this null handling in read() and shouldn't the reader get closed in a try/finally ?
Candidate: i think that this will be closed in the discoveryresult suppresses state that the suppresses state that the suppresses state that will be closed.
Reference: why is this better? imho we could do away with lastattempt completely and just use elapsedtime = system.currenttimemillis() - start; directly and move attempts++ back before the closure.
Candidate: you can use <UNK>
Reference: i am slightly confused. why do we need a new class if existing one (messagingexception) provides everything you need to hold and access both the _cause_ and the _message_. is
Candidate: i am not sure how about removing this setup, but i am not sure how about removing this setup, but i am not sure how about the
Reference: use some non-link local ip here as the resolver may filter them out anyway?
Candidate: use <UNK>
Reference: make the fileinfo map immutable.
Candidate: this multimap should be null.
Reference: new methods should be guarded for cluster version eg:  if (isclusterversionlessthan(v3_11)) { throw new unsupportedoperationexception("not supported ..."); }
Candidate: i think this is idempotent
Reference: i'd rather see a single return.
Candidate: this is be repelaced by the userreportingsettingshelper call.
Reference: i would return a warning (as well as for the permission check case below)
Candidate: you could use <UNK>
Reference: a number of these tests don't actually throw an httpmediatypenotacceptableexception. will you please remove the throws from the signature where it is unnecessary? this way, the expectations of the test
Candidate: wait.forelementclickable() should be <UNK>
Reference: there is a method org.scijava.util.arrayutils.safemultiply32(long...) that you can use to downcast a long (or the product of multiple longs) to an int safely. it fails fast if the downcast would
Candidate: this is not covered.
Reference: there may not be a selected column at this point. you should check columns.getcurrentlyselectedcolumn().ispresent(), or assert it.
Candidate: you could use <UNK>
Reference: please clean it in every case
Candidate: could you explain the consequence of the consequence
Reference: we should check closedstreamer flag only after lock acquiring.
Candidate: if this is not
Reference: to test uncaughtexception you need to call it :wink: let's see what you come up with. let me know if you need help or a hint.
Candidate: assertfalse(...);
Reference: why are we even using matches()? there is no regex invlolved. we could just use equalsignorecase()
Candidate: is there a reason that styles that styles is not styles
Reference: here we can add some more info like "access denied! the given realm is not in the allowed realms"
Candidate: suggestion <UNK> = <UNK>
Reference: these are repeated frequently, which is pretty dangerous for making these updates later. it seems like storing these flags (and the relevant serialization code) in a composed member object would
Candidate: is there a reason for this change?
Reference: unnecessary new suggestion {"na12891.over.fingerprints.r1.sam", true},
Candidate: suggestion <UNK> = new <UNK>
Reference: any reason not to move this addpendingclient call into the existing conditional block directly above?
Candidate: you could use the multimap here instead of equals?
Reference: don't log and throw the exception
Candidate: this should be connected to connected prefixing state of connected <UNK>
Reference: these two statements are so similar that i would actually just positive ? null : errorcallback instead of duplicating them entirely.
Candidate: is there a reason for this method is empty?
Reference: minor nitpicking but we might as well be consistent in the way we test for this. see the change just above this one.
Candidate: minor nit but we could use isempty() instead of <UNK>
Reference: muss dies public sein oder recht package private?
Candidate: wait.forelementclickable() should be <UNK>
Reference: does this need to be public?
Candidate: this is not <UNK>
Reference: missing a "break" (or just return)
Candidate: could we use a checkargument here instead of <UNK> ones?
Reference: what purpose is customfiletag serving?
Candidate: use string.format instead of system.out
Reference: use try-with-resource. java try (response response = executeget(bucketname, objectname, null, queryparammap)) { .... .... } catch (errorresponseexception e) { if (e.errorresponse().errorcode() != errorcode.no_such_object_lock_configuration) { throw e; } } return false;
Candidate: is there a reason for this logic?
Reference: i missing here how we are testing htlscanner? i have a feeling that we only check expressions part but what about other stuff like tag, text... ?
Candidate: <UNK> is designed to be <UNK>
Reference: reset the thread to interrupted state
Candidate: should we throw an exception
Reference: while string concatenation is more performant, would it be easier to read if you used a [string.format](<link_0>,%20java.lang.object...%29) instead to make this more readable?
Candidate: could returntype character-based <UNK>
Reference: can this throw any exceptions? if so should catch and make sure destroy is called on dbmanager.
Candidate: why not -1l ?
Reference: why do we need to repeat creating flattenvalue? this could be simplified to the following: java return name + separator + flattenvalue;
Candidate: <UNK>
Reference: i guess 'else' is not required here since the if block has a return... personally, i'd find this easier to read:  messagehandler handler = createdirecthandlerifpossible(targetobject, targetmethodname); if (handler ==
Candidate: said detect said detect said detect said detect said detect said detect said detect said detect said detect said detect detect higher ones detect bunch detect ones ones ones detect
Reference: you have to create a constant.
Candidate: @gunnarmorling you could use only: <UNK>
Reference: this is a filter. if we return before passing the end element event to the next content handler, we'll end up with unbalanced tree. is this really correct?
Candidate: i think this should be a <UNK> <UNK>
Reference: can we add atleast code in this error msg or if it would make sense then print complete paramters
Candidate: no need to mock here
Reference: shouldn't the strategy identifier be referenced by its identifier constant (which might be made public)?
Candidate: please use <UNK>
Reference: please make this lowercase ("dslist") and then everything looks good
Candidate: you could use a foreach loop instead of creating a maps for each time?
Reference: this looks like it will cause a classcastexception to me. did you mean instanceof visitingexception?
Candidate: you could replace this with a foreach with <UNK>
Reference: maybe something like this:  return allcriteriawithnumbers.stream.collect(collectors.joining(" or "));
Candidate: suggestion <UNK> = <UNK> + "_" + <UNK>
Reference: columnname is null
Candidate: i think this should be a bit more clear.
Reference: this can be simplified throughout to: getbody().readutf8()
Candidate: you could factor this out of apply, <UNK> % <UNK>
Reference: call reflow() instead?
Candidate: i clear() is not needed
Reference: why not to check the group name instead of groups number?
Candidate: is there a reason to log.debug here?
Reference: should this be exception-worth too?
Candidate: i would be better to minimize the <UNK>
Reference: sounds like util method to be reused.
Candidate: reader is reader reader reader reader reader reader reader reader reader reader reader reader reader reader reader reader reader reader reader reader reader reader reader reader reader reader reader reader
Reference: in what use case the new db name can be null?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: if replace entity.getoperatorid() with something else (for example number 5), i think that all tests will pass.
Candidate: is there a reason to check that the is not empty?
Reference: > setstatus [](start = 9, length = 9) isn't setexception already indicating the status of failure? #pending
Candidate: you could use <UNK>
Reference: can the "base == otp" case trip? if so, what prevents cycles that don't involve otp?
Candidate: if you could use <UNK>
Reference: invert condition
Candidate: i think that this is is built, but it matters, but i would be preferable to do the side) and then the <UNK>
Reference: !cancelled cannot fail if cancelled is a primitive. if it does, the jvm or the cpu needs to be taken out of service.
Candidate: nitpicking: finishing this call <UNK>
Reference: this will result in a bunch of round trip calls to the datastore/db. a better approach would be to add the list of ids as filters and then just call
Candidate: you could use a offset to qualified name offset confusion confusion confusion with confusion confusion confusion confusion confusion confusion confusion confusion confusion confusion confusion (with lambdas confusion (with lambdas confusion
Reference: *persian
Candidate: you could use <UNK>
Reference: need the name/urn in the output.
Candidate: this is designed to be a <UNK>
Reference: one-line if possible.
Candidate: the multimap is not set in the constructor?
Reference: normally i would use collections.unmodifyablelist(...) here. i think the apache-commons variant is there only for jdk4 users.
Candidate: this is a <UNK>
Reference: please check that version isn't null. otherwise the automated null checks fail.
Candidate: use <UNK>
Reference: @rnveach i think here we should have different name for parent and child to not confuse them
Candidate: is there a reason way?
Reference: seterrormessage
Candidate: seterrormessage
Reference: use collections.singleton as you did for attachments.
Candidate: is there a reason to assert that the operand is empty?
Reference: as described below: it's already not a first version. please think carefully how to code oninstall() and onupdate().
Candidate: you could use <UNK>
Reference: this null check is redundant because lastobjectpropertyinpath is never null.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: these compareto(qc) could be abstracted a bit: if it's okay to compare date before data, just make the impl classes do int compare = super.compareto(t); if (compare == 0) {//
Candidate: i'm not sure that this is wants to have a min/max either. we should use only: <UNK> == null || <UNK> { throw new <UNK> }
Reference: please assert a return value.
Candidate: this miss?
Reference: i get that you're doing this so that exceptioncounter is final which you need for the foreach(), but i think i'd prefer to use atomicinteger here
Candidate: you could use a constant instead of <UNK>
Reference: i'd really really like bytestring objects to be immutable, because we use them in a lot of places.
Candidate: this is designed to be a <UNK> <UNK>
Reference: i think iscreatable( ) will allow numbers that can't be parsed into integers (like floats). i think a regex is possibly the right approach here. 0|[1-9][0-9]{0,5} should work (either just
Candidate: suggestion if <UNK> { "_" = <UNK>
Reference: stripping trailing slashes is so common we should have a library function for it.
Candidate: please use trim the string concatenation instead of <UNK>
Reference: the productmanager did flush when saving the core products, then again when saving the owner-products. here it seems we're deferring flushing for when? shouldn't we flush before candlepinpoolmanager starts processing
Candidate: i liked this log the purpose, is not
Reference: this looks complicated and hard to understand/maintain. i'd suggest using int for releaseortarget, something like this:  int targetedjavaversion = 8; if (release != null) { normalized.add("--release"); normalized.add(release); targetedjavaversion =
Candidate: if you could use <UNK>
Reference: third-party exception
Candidate: this (args.length
Reference: this does not pass on os x - investigating...
Candidate: you can use <UNK> guid instead of <UNK>
Reference: new glob vs. toglobpredicate() -- would rather use one approach either the factory method or the constructor but we shouldn't mix both. maybe we should go with the factory method.
Candidate: you could use <UNK>
Reference: you can remove this if else. nothing uses islandscape. you can also remove variable declaration.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: isnumericformat(format) does not need to be computed for each object. you can compute this outside the function that is applied per object (on line 125)
Candidate: use <UNK>
Reference: please, stop container in finally block
Candidate: let's use this exception here too, too, too, instead of <UNK>
Reference: itemstack has a nice splitstack method that does exactly this in one call. don't even need to check stacksize beforehand.
Candidate: this should be corrected
Reference: typo on certificaiton; should be certification
Candidate: could we use a constant?
Reference: if there are multiple primitives columns, users won't be able to tell which column failed to map from this error message. we should provide more information about which column failed
Candidate: please add whitespace
Reference: already set in xml
Candidate: you could use a local var instead of creating a new object instead of creating clear() arguments.
Reference: since this is class is becoming a shell that delegates all of its operations to a nativeimpl instance, wouldn't it be a better design to also include getcpu() in nativeimpl?
Candidate: please use <UNK>
Reference: why removing this?
Candidate: suggestion <UNK> = new <UNK>
Reference: add cda to check if the init succeeded, if it fails you'll end up with null vm which will cause to an npe.
Candidate: i maybe? shard shard shard shard is shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard
Reference: don't allow comparison against both the name and the value. that's confusing.
Candidate: you could use a enum instead of the enum?
Reference: well this and whether silencing after x number of failed/merged transactions happens.
Candidate: <UNK>
Reference: @pynicolas method trees also extend functiontree
Candidate: this is not <UNK>
Reference: by doing so, you are changing the expected behavior for some weird cases. i would prefer to have a separate method like createaccountwithhashedpassword if the goal is only for casc.
Candidate: you could use this instead:  if <UNK> != null) { return false; }
Reference: when concatening strings with +, it's not needed to do .tostring(). this gives the same result:  return singlebenchmarkresult + "_" + problemstatistictype;  furthermore, it even avoids a nullpointerexception
Candidate: use <UNK>
Reference: it's so beautiful
Candidate: i think this is a <UNK>
Reference: another way that is more relevant to the backing data is results[resultsindex].length
Candidate: you could use <UNK>
Reference: add the force parameter to the tostring()
Candidate: could you call <UNK>
Reference: @aslan11 return statements are missed
Candidate: please highlight the plugin name highlight highlight highlight highlight highlight highlight highlight highlight highlight highlight highlight highlight highlight highlight highlight highlight highlight highlight highlight highlight highlight highlight highlight highlight highlight
Reference: can be rewritten with a simple arrays.aslist() call.
Candidate: <UNK> behaviors thanks.
Reference: minor nit....can you please rename islinuxos to something more fitting, like epollenabled?
Candidate: this should be to be a putifabsent args?
Reference: for non-public methods checkwidget() is not required.
Candidate: suggestion <UNK> = <UNK> <UNK> (from <UNK> %s", <UNK>
Reference: user ordertable.table_name instead of plain text. forget this, let it be there, let's put the constants reassemble work in the next phase if there would be such a chance in
Candidate: if you could use <UNK> <UNK>
Reference: i disagree with this being on by default. also recommend you change to boolean.parseboolean
Candidate: you could use a constant instead of objects.isnull
Reference: getforce() returns boolean we do not need to double check.
Candidate: you could use a try-with-resources here instead of <UNK>
Reference: remove "create=true" here too.
Candidate: please add a log message
Reference: why did you do this?
Candidate: i'm not sure how about this is a <UNK>
Reference: we may want to move this into onpause(), so the notification only start when the user leaves the view of the trip planning results. in some cases, i'm currently getting
Candidate: log.debug
Reference: i don't think wrap up our exception with a library exception is a good idea, it is prone for falsehood assumptions (this amazonserviceexception exception won't have requestid, errorcode, statuscode,...). also,
Candidate: if you could use a <UNK> <UNK>
Reference: is it enough to use max-data-volumes-supported as the max device id, seeing as device id 3 is not used? (or is reserved) e.g. let's assume that getmaxdatavolumessupported(vm) returns 6. what
Candidate: i think this should be simplified to <UNK>
Reference: !false == true, so i think you need to keep setting the mapper.
Candidate: is there a reason to check that the is not empty?
Reference: this was actually my suggestion because the names are not unique when there are nested jobs. continuing to use names for non-nested jobs means we don't break existing users.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: if this always returns false setcancelled is pretty dang useless....
Candidate: please use <UNK>
Reference: seeing this everywhere makes me think that we should wrap/hide the session variable such that it's not directly accessible as an instance variable, but is returned by this method, similar
Candidate: this is designed to be a to log the the we should have a to persist the <UNK>
Reference: i believe you found the right area to fix, but the change works fine for y anchor equals to 0, which makes for top alignment. but what if bottom alignment
Candidate: i understood that this involves a <UNK> the <UNK>
Reference: >foretsry typo
Candidate: if you could use the "?"
Reference: 1000?
Candidate: combine this line before calling <UNK>
Reference: could you please rename all _ret variables ? that's the only remaining request before i can merge this pr. thanks
Candidate: this is a bit strange,
Reference: since it seems like we might want to support this on line charts as well, consider moving the definition of changepointshape up to the superclass with a default behavior of
Candidate: you could use <UNK> here instead of <UNK>
Reference: it would make life easier if we logged something when a new broker is created and also when it's deleted in line 70.
Candidate: @vilchik-elena is there a reason for this tracking is not <UNK>
Reference: these can be declared inside the try block, together with the return statement.
Candidate: please remove this args?
Reference: better use this.ordinaldescriptormap and test if it is empty. same remark below for the second one.
Candidate: minor nit: we could use a constant instead of the properties?
Reference: isn't this code being executed on the ui thread? the syncexec() shouldn't be needed.
Candidate: you could use the exception here instead of <UNK> e);
Reference: again the system.outs
Candidate: you could use <UNK>
Reference: as a practice, get the value of "httptransportcontextholder.getinstance().gethandlerexecutor()" to a variable, and use the variable after that, rather than doing the same lookup twice. it may or may not be
Candidate: we should set the supplier to set depending on the initial state set depending on the initial state wants to.
Reference: this looks like an unnecessary case as it replicates the unbounded replay behavior with default capacity 2.
Candidate: nit: we could use isempty() instead of <UNK>
Reference: should you throw runtime exception?
Candidate: this is not <UNK>
Reference: i think this should be negated if (!strings.isnullorempty(simple.getid())) { otherwise it only adds null and ignores it when it's not null
Candidate: use uri.create
Reference: maybe uribuilder would be better here?
Candidate: this is costly.
Reference: maybe, this check should be above of the request-body validation?
Candidate: should we return an error here?
Reference: static import?
Candidate: you could be simplified to <UNK>
Reference: getparent().getid()
Candidate: this is not be risky.
Reference: seems to be a regression in the merge: the checksum flag is missing.
Candidate: if you could be null
Reference: should we add the navigator's dependencies when this is not supported?
Candidate: should we add a parquet method to the parquet
Reference: please remove regex and such ambiguous numbers as "13" ? the code should be easy to read & verify now is totally cumbersome.
Candidate: you could use braces
Reference: how can it be equal to false if it's a number? am i missing something? same question for default case as well.
Candidate: you could use <UNK> instead of reallocating events.
Reference: why does this do configure and save?
Candidate: you could use <UNK>
Reference: it would be rather preferable to create a new method with error propagation
Candidate: this is designed to be a deadlock in the model.
Reference: should we be passing the close timeout to join?
Candidate: you should print stack to <UNK>
Reference: not sure what is the benefit compared to collections.unmodifiablemap.
Candidate: this is not return <UNK>
Reference: you could keep the default (i.e., false) in one place by replacing this constructor implementation with this(errorproneflags.empty());.
Candidate: this is a <UNK>
Reference: only the createindexes and the dropindex synchronise on the indexingservice monitor lock as far as i can see. this means the state in here is inconsistently synchronised. if we are
Candidate: i we bail continue; efficient, the efficient, efficient, efficient, the efficient, efficient, the efficient, efficient, efficient, efficient, the efficient, efficient, efficient, efficient, efficient, the efficient, efficient, efficient, the efficient, efficient,
Reference: we are not handling "timeout" anymore
Candidate: use <UNK> instead of <UNK>
Reference: do you keep this at info level?
Candidate: i think this should be to propagate the stack trace
Reference: if the correct flow of things depends on the order of calls, then something here is wrong. why did you need to change it?
Candidate: if you could use <UNK> <UNK>
Reference: range should be parameterised, the compiler gives warnings for it. same for all other occurrences below
Candidate: if we is right... right...
Reference: why not  if (linecount == mmaxlines && layout.getellipsiscount(linecount - 1) > 0 && gettextsize() > mmintextsizepx)
Candidate: nit: not sure if this is is called by <UNK>
Reference: why remove the winning team from this game and add again ?
Candidate: wait.forelementclickable() should be <UNK>
Reference: remove "exiting process now." from message here, should be in the runnable.
Candidate: nit: unrelated %s", <UNK>
Reference: again, "remote installation..." might be a confusing error message when someone tries to remove a plugin
Candidate: please use <UNK> wording.
Reference: ![major](<link_1> make "getnumberofcommas" a "static" method. [![rule](<link_2>](<link_0>
Candidate: you could use <UNK> instead of <UNK>
Reference: please remind me why do we need this at all? apache ignite does not have compatibility between versions. can we get rid of feature check entirely, assume it as "always
Candidate: is there a reason for this method to be null?
Reference: note to self: figure out why we can't use what we're ending up filtering by here as a key so we can prevent linear search thru idmanager.sessionmap.values() unless @coyotesqrl already
Candidate: you could use the pagination <UNK>
Reference: i think you can use method add(int index, e element)
Candidate: @vilchik-elena you could be simplified to <UNK>
Reference: can you read back the address and make sure its a hole?
Candidate: you should use <UNK>
Reference: exiting, so stderr
Candidate: this would be a good idea.
Reference: this change seems to be different to the original intension. this log appears to show which hdfs namenode is used in this tajomaster.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: nit: redundant casting
Candidate: use <UNK>
Reference: try onrelease
Candidate: this is be <UNK>
Reference: i tested following code, and i think this line will throw exception. of course, when we write @column(name = xxxxx) if will behave correctly.  @column public string getlongcolumnnamewitoutannotationparameter() {
Candidate: you could use a constant instead of <UNK>
Reference: never used?
Candidate: you could use a constant here instead of <UNK>
Reference: i think we need to set cachedinitialdefaultschemadescr to the returned schema descriptor before returning from the function.
Candidate: this is not be modified by <UNK>
Reference: the forserver == false flow looks wrong. if null is passed, then keymanagerfactorywrapper will throw (and we probably want the keymanagerfactory to be null in that case).
Candidate: if you could use <UNK> <UNK>
Reference: any possibility that delimiter is something else? also, i'm wary of possible empty or null values. do we protect the converter from such scenarios?
Candidate: suggestion <UNK> = <UNK> <UNK> % <UNK>
Reference: why we have to transit to suspended before prepare-closing? originally we want to check that created state can still trigger close.
Candidate: you could use system.currenttimemillis() here instead of creating a local variable?
Reference: why not throw an illegalstateexception at this point? i would prefer funny business to be highly visible.
Candidate: if this is is designed to be a <UNK> the <UNK>
Reference: might be better to set it true only if the value is "true"
Candidate: wait.forelementclickable() should be <UNK>
Reference: perhaps if we want to force this it should be synchronous on the current thread instead of putting it on a scheduler? i think even though you say now that's
Candidate: i think this should be a warn connection,
Reference: env name is not compliant with other env names we have. consider che_cors__filter_enabled or che_cors__filter__enabled
Candidate: use <UNK>
Reference: please name the local variable differently from the field, for instance deprecated, because otherwise reading the code is a bit confusing. this will also avoid doing this.isdeprecated a bit further
Candidate: i doubt that this is not correct.
Reference: you can move these initializations to the field definition
Candidate: use <UNK>
Reference: why is this now a literal and not a static final? ideally, we could calculate the width of the terminal, but this is out of scope here.
Candidate: this is a tear down
Reference: same as <link_0> only the context autostart may be optional.
Candidate: this is designed to be a to oldvalue items)
Reference: can we wrap this with log.istraceenabled?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this doesn't look right
Candidate: please use <UNK>
Reference: same here and above.
Candidate: static import
Reference: this function can be private
Candidate: you could use <UNK> v1, k2, v2) to minimize <UNK>
Reference: maybe call the variable "label" rather than "name1"
Candidate: this branch is unnecessary.
Reference: i don't think this is quite right. we should fall back to the conversion service if it can do it: suggestion if (canconvertfromstringto(long.class)) { idaslong = conversionservice.convert(identitifier, long.class); } else
Candidate: why not use <UNK>
Reference: it seems the atrootdirectory check is faulty. i get into a loop when pressing back on the music tab (currently only one i'm trying to test).
Candidate: this is required?
Reference: razentitlementenabled
Candidate: i'm not sure how about the sure about the sure that this is that we should have to plug the user will be a user that is a error.
Reference: please add braces. to see more checkstyle violations, please have a look at the output of the static-analysis ci task.
Candidate: if getstate() != null) {
Reference: rename that method to getpauseinfo
Candidate: <UNK> -> <UNK>
Reference: make "/manager" a constant
Candidate: log warn
Reference: this logic seems not to be tested with a symbolic link.
Candidate: nit
Reference: i am a bit confused about the fix. this seems to already be doing what the commit message is describing.
Candidate: is there a reason that we are going to create a <UNK> instead of creating a <UNK> <UNK> a new one?
Reference: code will be  string str = caseformat.upper_camel.to(caseformat.upper_underscore, uniquename); if (str.endswith("i_s_d_a")) { str = "original_isda"; } return valueof(str)
Candidate: i liked that this is not efficient, we should have to check for the
Reference: this could swallow interrupts etc? how about doing exceptions.propagateiffatal() first?
Candidate: warning?
Reference: add a message to the failure
Candidate: you could use the wording.
Reference: this can't work. you haven't specified a message id
Candidate: i'm not sure that we want to have a state that the is not <UNK> but i guess that the is not
Reference: you can remove the tostring() call.
Candidate: you can use <UNK>
Reference: again: capture, then test. getgenericparams is expensive.
Candidate: please use a constant instead of <UNK>
Reference: is there a reason to save the process, when the process flagis not changed again? i think this save is only neccessary when export failed and exportflag changed back. it
Candidate: please use <UNK>
Reference: use early returns instead for these if/elses?
Candidate: this is a bit strange,
Reference: just in case, you want to add the task which has no parent in successtasks, right ?
Candidate: hmm, i guess we should be able to change this test, but i guess we should be able to change this test, but i feel free to change this test,
Reference: calendar.getinstace already returns an instance set at "now", so this call is useless (and in all the other places where you call settimeinmillis(system.currenttimemillis()))
Candidate: you could use <UNK>
Reference: return (expression instanceof callexpression) && functionmanager.getfunctionmetadata(...
Candidate: nit: use <UNK>
Reference: replace it by stringutils.comma
Candidate: you could use <UNK>
Reference: you can collapse the realmfileisbeingcreated condition & remove the pmd exclusion warning
Candidate: if we enhanced is guarded guarded by <UNK>
Reference: the problem os sort is not solved here, vmdevicetosave.values() - these order is unpredictable, we should sort device here.
Candidate: is there a reason for this method to be called on the other?
Reference: i think this would fit in 120 characters (same for lines 89-90).
Candidate: i'm not sure how about making sure this is used?
Reference: please change it to something like:  if (propsinputstream == null) { throw new illegalstateexception(propertiesnotfoundmessage); }  or remove it completely please. the problem is that java asserts need to
Candidate: you could move this log to
Reference: handle errors on listener invocation?
Candidate: you could be simplified to <UNK>
Reference: i'd create the domain first, set all it's params, and only then apply to image, but that's really nitpicking ;-)
Candidate: you could use a constant instead of <UNK>
Reference: if the eclipse application does not have focus, then you can still get a tool tip by hovering on the time graph. even after clicking the tool tip shell, the
Candidate: this is not necessary, if this is not necessary, if the lock is not necessary, if the lock is not necessary, but i don't think
Reference: ![major](<link_0> 'severity: major') catch exception instead of throwable. [![rule](<link_1>](<link_2>
Candidate: this is not to propagate the exception
Reference: this will give "public=="+publicport. you don't need to include the "=" yourself.
Candidate: use <UNK>
Reference: public collection<operatorspec>
Candidate: please use a static import?
Reference: throws queuefile.<error>getsneakythrowable(e);
Candidate: throws exception
Reference: letting it simply throw the exception is an easier way to get the test to fail, also gives all details including a stack trace, while this only reports the error
Candidate: minor suggestion if <UNK> >= <UNK>
Reference: if there isn't a job, we should make sure there is with a setup function that creates one that runs first. or, alternatively make the test pass if no jobs
Candidate: is there a reason for element?
Reference: to align this with the oidcuser that oidcuserservice creates, i think [an oidcuserauthority should also be added](<link_0>
Candidate: you could use a constant instead of pulling them into a constant instead of <UNK>
Reference: can this be called type instead of id? also i'm not seeing a client test for this enricher, did i miss it?
Candidate: is there a reason for element?
Reference: call the other constructor (line 86) with default values for the unused members here.
Candidate: <UNK>
Reference: why public?
Candidate: this could use a checkargument here instead of <UNK>
Reference: you can configure this using the @mock annotation: @mock(answer = returns_deep_stubs)
Candidate: you can mock to mock that way?
Reference: kie-wb-common-stunner-extensions/kie-wb-common-stunner-forms/kie-wb-common-stunner-forms-client/src/main/java/org/kie/workbench/common/stunner/forms/client/widgets/formpropertieswidget.java:187: error: null_der$ object diagram last assigned on line 186 could be null and is dereferenced at line 187. 185. final string domainobjectname = translationservice.gettranslation(domainobject.getdomainobjectnametranslationkey()); 186. final diagram<?, ?> diagram
Candidate: please add a warning here instead of "return <UNK>
Reference: isn't the same as just removing the 'localrack != null' check in l372? that way we get the same behavior in one if condition.
Candidate: if you is right...
Reference: ![codacy](<link_0> issue found: [avoid unnecessary if..then..else statements when returning booleans](<link_1>
Candidate: this is be simplified to <UNK>
Reference: you could also use files.isregularfile
Candidate: we could use a retry to <UNK> request?
Reference: you have some duplication caused by the fact that you check here the exception but also in the catch block above. i would either check here that we have the
Candidate: what do you know replacing the error.
Reference: grammar nazi suggests: > can't label the namespace due to lack of permissions. grant cluster-wide permissions to \get\ and \update\ the \namespaces\ to the \che\ service account (che operator might
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: minor: not sure this is the cleanest way to write this. consider collections.emptymap() or immutablemap.of(), or even just new hashmap<string, string>(). the first two are immutable, and i prefer maps
Candidate: this is be repelaced by <UNK>
Reference: do we need to call removeinvisibleorgunits here as well?
Candidate: suggestion <UNK> -> <UNK> % <UNK>
Reference: val -> value
Candidate: you could use <UNK>
Reference: @pynicolas fixed b6229cc713c75b2a4e8a4e5f378d14e5b03b3eb7
Candidate: you could use <UNK>
Reference: looking at this i feel we should have 2 filters. one for inclusion and the other for exclusion. in other words instead of lucenequery.filter let's have lucenequery.include and lucenequery.exclude
Candidate: use <UNK> instead of <UNK>
Reference: we try to encourage all checks to do log in visit.... methods. please refactor this method to return boolean to make a log base on result from it.
Candidate: this should be <UNK>
Reference: this is fine but it's a bit odd to see this instead of an if/else.
Candidate: nitpick, you could use "return brackets { return <UNK> }
Reference: @erimerturk what happens here for existing records, which hasn't the subscription attribute before ? returns null or what? if so let's add default value true
Candidate: you could use <UNK>
Reference: diff tool?
Candidate: i think that this is is be updated.
Reference: an idea for code simplification - move new pvc creation and replacement to a separate method and make it return new pvc for reuse
Candidate: this is not post authentication
Reference: when would you get into this code path, considering the updatecompactioncflist logic above?
Candidate: wdyt about the <UNK>
Reference: is it possible to assign from the putifabsent call without a get?
Candidate: if this is is is not <UNK>
Reference: i think we have to overload the constructor to not break existing clients using the old constructor. i suggest to add a hint to favor aggregation.geonear( ) over using the
Candidate: suggestion <UNK> = new <UNK> true)
Reference: what is the jgit community consensus about final variables? -used them every where -only member variables should be final -... i looked in the contribution guide and i didn't find
Candidate: you could use <UNK>
Reference: if we introduce new abstract methods to abstractuserstoremanager it will break the existing implementations. therefore let's implement the method here to preserve the backward compatibility.
Candidate: feels odd to me.
Reference: i know that the original code used relativelayout.visible/gone, but do you mind switching them to view.gone/visible for consistency with the rest of codebase?
Candidate: i'm not sure that this is a bit confused about the isdone() is <UNK> but i would be a bit more than isdone()
Reference: use adapters.adapt(geteditorinput(), ieditorinput.class)
Candidate: could we use the enum names instead of nesting.
Reference: typo: initializable
Candidate: is there a reason to assert that validation is necessary?
Reference: revert this line?
Candidate: static import
Reference: let's use a better variable name than "s" (also and there are several such places, when would metadatablock be null? if nowhere, i think we can simplify the logic here)
Candidate: suggestion <UNK> = <UNK>
Reference: huh? the point is that a cast isn't necessary
Candidate: could we use a <UNK> <UNK>
Reference: can't we just use ordinary indexing here, ie %s\n%s\n%s? i actually didn't know about explicit indexing syntax, but it seems ordinary indexing is more readable.
Candidate: you could throw an exception instead of null?
Reference: i just realized, this else is unused!
Candidate: unused variable
Reference: null check?
Candidate: suggestion if <UNK> { throw new <UNK> }
Reference: same question like above.
Candidate: you could use <UNK> to <UNK>
Reference: minor: for "list" you can use builtintypes.list
Candidate: isempty() -> <UNK>
Reference: we probably shouldn't be calling a deprecated constructor from a non-deprecated one.
Candidate: is there a reason for this method to be used?
Reference: you have the method getvdsdao().getallforstoragepoolandstatus
Candidate: this could be replaced by <UNK>
Reference: while (loop < maxretry) will get rid of the extra if break condition.
Candidate: how about using a non-trivial
Reference: repeating this is icky :( can there be a tryparsetimestamp() method and a tryparsemessagetags() method we just call?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: variable metricsinterceptor might need to start with a lowercase letter.
Candidate: this is not to be a <UNK>
Reference: this method can just throw an exception back to caller to decide what to do with the exception. it is not necessary to take in the logger.
Candidate: you could use reflectiveoperationexception here instead.
Reference: use protected access modifier instead of default (all-over)
Candidate: could be simplified to true"
Reference: this change misses the case where hasnext returns false no longer failing the test. i think the right thing is to not test the return value and to remove the
Candidate: i think that this is is not <UNK>
Reference: can you please remove this new exception from here? i believe that it's unused and left from previous fix attempt. thank you!
Candidate: nit: failure wording is failure failure failure failure failure failure failure failure failure failure failure failure failure failure failure failure failure failure failure failure failure failure failure failure failure failure
Reference: please check that unsubscribe works in each phase of a running subscription.
Candidate: no need for these.
Reference: m_pathlist is a good use case for using immutable map
Candidate: you can use <UNK> here instead of calling <UNK>
Reference: should not it be set by default when it is jre 8 on the machine?
Candidate: no, you could call <UNK> <UNK> <UNK>
Reference: the fqn should not be needed here, instead the simple name should suffice when returning the required import through getimports().
Candidate: use <UNK> instead of <UNK>
Reference: use the constant to construct the message so that it doesn't get out of sync if we adjust its value.
Candidate: could you use <UNK>
Reference: should that get changed then?
Candidate: stream()
Reference: please check if the are any usages of this method outside this class. if not, please make it private.
Candidate: please add a space after <UNK>
Reference: no space between the commas!
Candidate: we should use <UNK>
Reference: getqualifiedname()
Candidate: you should use <UNK> enum e1
Reference: objects.requirenonnull?
Candidate: this is never used.
Reference: while we are here, and this is not a requirement (i've already approved the pr), would be good to have a small new unit test that confirms the new configuration
Candidate: you could use <UNK>
Reference: oh, i see. good find. how about "finished subprocedure (pid={}), resume processing of parent (ppid={}), and use parent.getprocid() instead of the string replace.
Candidate: i'm not sure how about removing the debug
Reference: please retrieve all non prestarted vms and after that put them to loop or retutn a vm and not its id, there are to many queries to db which retrieved
Candidate: please add a bit more readable please.
Reference: wouldn't it be simpler to just call entry.getvalue().get(0)?
Candidate: minor: this is designed to be a <UNK> <UNK>
Reference: considering this is actor state, and concurrency should be already solved by actor model, is there any particular intention on using concurrenthashmap??
Candidate: suggestion final <UNK> = <UNK>
Reference: the code block added here (lines 29 to 38) is identical to the code added for eventbasedgatewayactivitybehavior, excepted by the fact that the first one has a break clause. is
Candidate: i pagelogging
Reference: small formatting issue, please be consistent with spaces between the + it should be: host + ": " + name
Candidate: should we be a default?
Reference: looking again at the docs <link_0> i am still not sure if the order is now completely correct. the doc says columnfamilyhandle > rocksdb > dboptions > columnfamilyoptions but the
Candidate: we could be a close() here instead of close() is be closed in <UNK>
Reference: lets replace magical numbers with strings that represent them. somewhere near the top of the code but with better spacing  java private final string playlist = "playlist"; private final
Candidate: i guess that clear() will be shown. if oldvalue == a, b == null || <UNK> == null && oldvalue == <UNK>
Reference: when we use updatedat for versioning we are assuming that system clock is good enough as an indication of order, given concurrent changes are not very frequent, right?
Candidate: we should use unsupportedoperationexception
Reference: you can do .orelsethrow here
Candidate: this is dangerous, should be dangerous, to kubernetes dangerous, but kubernetes dangerous, kubernetes dangerous, kubernetes dangerous, but that kubernetes that kubernetes wdyt about we have to plug the <UNK>
Reference: would suggest to make it private.
Candidate: no, this doesn't exist only, but this should be a <UNK>
Reference: is there some way to make this not hardcoded? i'd like to support other pluggables or even other types of pipebehaviour that can connect to redstone.
Candidate: could be simplified to:  if <UNK> != null && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> &&
Reference: why do we not have the same result on windows? we can find the file on windows but not on *ix?
Candidate: this is not
Reference: must be targetcardinyourgraveyard
Candidate: maybe referring to <UNK>
Reference: not sure if this needs overflow checking.
Candidate: the feature names are available in the feature names?
Reference: a better solution would be to inject the statemanager and call clearsearchquery (for how to inject see for example the linkedfileeditdialogview dialog)
Candidate: you could use <UNK>
Reference: inserttorealm sounds wrong somehow. insertinrealm? or just insertobject?
Candidate: you could use <UNK>
Reference: this should call the dao directly as it did in 1.11
Candidate: we should use the annotation, annotation, instead of creating a object instead of creating a proxy instance.
Reference: how about extracting this value to variable so it can be checked later on?
Candidate: please randomize the 221 please.
Reference: these could be ordering.natural().immutablesortedcopy(...), it incurs fewer copies according to the ordering docs.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: if createocspresponse on line 168 is throwing an exception as the test expects, then this line will never get called and can be removed.
Candidate: @ivange94 readasstring(...) instead of <UNK>
Reference: given registerdisplaylistener is in the if block in enable, this should probably be in the if block in disable also.
Candidate: wait.forelementclickable() should be <UNK>
Reference: is it better to do a non-empty check and remove the try block?
Candidate: should we print the stack trace instead of <UNK>
Reference: why don't you use: path.length() == 0
Candidate: no need for the sake
Reference: this can throw runtimeexception
Candidate: i think this should throw an exception instead of wrapping the exceptions?
Reference: when using asserttrue()/assertfalse(), we should use the variant that takes a failure message so we can provide more information when the test fails (otherwise the printed failure message will just
Candidate: you could use <UNK>
Reference: maybe something like array_position does not support elements of complex types that contain null? in theory t can be a map or a row.
Candidate: i think that this exception is throw an exception exception
Reference: i see the idea, but i am worried about gettrackers() method returning fake data. users can attempt to call .gettrackers() and then add an item to the collection, and the
Candidate: wait.forelementclickable() should be <UNK>
Reference: i am wondering if this should include a null check here as well. stringutils.length(notetext), will return zero if notetext is null, otherwise return the length of the string.
Candidate: storagetype is a bit more than <UNK>
Reference: this would be better sized as 2 it seems, although that's obviously a nitpick.
Candidate: use <UNK> instead of creating a constant instead of coupling = new <UNK>
Reference: use type.binaryname() instead?
Candidate: please use <UNK>
Reference: charsets.utf_8?
Candidate: you could move this to a try-with-resources statement.
Reference: we could also try to use the icon theme here, for instance the group icon.
Candidate: no, that icon is belong to think.
Reference: announcement_webview variable name should be renamed to webview, 'announcementwebview' webview seems odd here.
Candidate: you could use a constant instead of creating a new object instead of creating a is)
Reference: why is this doing concatenation instead of assignment?
Candidate: you could use system.lineseparator() instead of <UNK>
Reference: remove / update the log line.
Candidate: you could use <UNK>
Reference: does is make sense to move the logic of only add if not yet added into pushheredocmarker? that would allow to remove getheredocmarkersindexset and to simplify this part.
Candidate: if you could use <UNK>
Reference: should we assume the table exist's when we can't check for it?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: please avoid returning in middle of functions.
Candidate: is there a reason for element? paths? paths?
Reference: one question: should syncthread be a member of this class? isn't it possible to initiate the thread where it is actually start, like you did in memorystoreimpl.initialize()?
Candidate: suggestion <UNK> = <UNK>
Reference: can you change to: "unable to generate uuid due to unexpected encoding error: " + e.getlocalizedmessage()
Candidate: we should throw an exception instead of <UNK>
Reference: have this return updatefilemetadata instead of void so developers can use the builder pattern like:  java updaterequest.addupdatetask(op, k, v) .addupdatetask(op2, k2, v2);
Candidate: please use <UNK>
Reference: why doesn't this use the key and value schemas instead of the types? i think it would make more sense to check schema.type instead of evaluating string equality.
Candidate: i am not sure that this is something.
Reference: isempty? do you reject file name " " ? :)
Candidate: you could use foreach here instead of <UNK>
Reference: static import hivesessionproperties.getparquetwriterpagesize and hivesessionproperties.getparquetwriterblocksize
Candidate: wdyt about replacing enum enum enum values with weird.
Reference: sounds ok to me that the outcome matches the false return
Candidate: i others, i others, i others, assert that others, instead of others, instead of others, instead of others, instead of others, instead of others, instead of others, instead of others,
Reference: this parameterservice method accepts a boolean object, so you don't need to unbox boolean.true here.
Candidate: this is a bit strange,
Reference: let's not assume that count is bigint. (in some type systems it might be int.) use aggregatecall.type?
Candidate: i wonder if this is designed to have a feeling that this is is not <UNK> but i wonder if this is
Reference: use long names please: options
Candidate: <UNK> -> <UNK>
Reference: this test demonstrates the usability issue in waitallstrategy, we should change withstartuptimeout's return method to waitallstrategy. you can do it in this pr if you want :) /cc @rnorth
Candidate: you could use <UNK>
Reference: we don't want to log the buffer as it enables log injection
Candidate: i think this should be reused in the finally block
Reference: we could consider 0 as being invalid as well. that would also help to revert that change: <link_0>
Candidate: please use <UNK>
Reference: && !keywords.isempty()
Candidate: no need to wrap the exception exception
Reference: you already have access to the list here, why not return the first item in the list as a mono rather than wrapping it in a flux from iterable and
Candidate: suggestion if (throwable == null) { throw new <UNK> }
Reference: instead of having if calls for each case, can be encapsulate the each condition inside a strategy class? that way, this could would be reduced to handler.execute() where the handler
Candidate: log.debug probably?
Reference: did you intend to make this final ?
Candidate: wait.forelementclickable() should be <UNK>
Reference: cool that we're doing this now :) if automatic model runs is not enabled, and the occurrence's location has passed qc, is_validated needs to be set to true - can
Candidate: if you could use isempty() instead of objects.isnull != null && <UNK> == null && <UNK> != null) { return null; }
Reference: calling delete model twice here
Candidate: no, we don't use <UNK>
Reference: these exceptions should be logged
Candidate: maybe we could move to debug level to debug property?
Reference: add a newline here: suggestion final listpreference durations = (listpreference) findpreference(getstring(r.string.seek_duration_key));
Candidate: if we % % <UNK> % % % % % % % % % % % % % % % % % % % % % % % % %
Reference: the only reason i can think of for allowing a null argument is to allow reuse of an existing builder where specifying a null day count would clear the previously
Candidate: this is not efficient, we could use the <UNK>
Reference: can we just use the more lenient comparison window always, and get rid of the os detection? we are not really intending to test the system clock here at all,
Candidate: why not use <UNK>
Reference: this is what i mean. if i supplied two different dates, can i get different results basing on the date value?
Candidate: use readasstring(...) instead of <UNK>
Reference: any reasons to change the <code>displayname</code> to the project's full name. in such cases the status info will lose the information about the build.
Candidate: please use reflectiveoperationexception
Reference: printstacktrace()? isn't it better to use a logger?
Candidate: you could use a logger instead of printing stack trace
Reference: keep on separate lines -ide clearly thought it was being helpful
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: for the case source = "$table.bar". i believe this case will pass validation, but maybe you should throw an exception.
Candidate: please use <UNK>
Reference: this is never used?
Candidate: use a checkargument instead of > 0
Reference: returning void.class would seem ok and more friendly.
Candidate: we should use unsupportedoperationexception
Reference: i think an indexoutofboundsexception would be better here
Candidate: please _could_ be null"
Reference: may not be in code you touched, but i would think the getfield_changes method should be renamed getfieldchanges
Candidate: this should be simplified to <UNK> boolean <UNK> id).
Reference: i guess you don't need these maps, since you have those small objects?
Candidate: we should verify processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed
Reference: curlies not needed
Candidate: @vilchik-elena we could move this braces around
Reference: risks swallowing interruptedexception. worth doing exceptions.propagateiffatal(e). do we want to log it (at debug) when it's the first time we've seen the ssh exception? no strong feelings. certainly don't want
Candidate: is this matters, but this matters, how about moving the <UNK> property?
Reference: we can make this static.
Candidate: we could use a <UNK>
Reference: i'd rather see an overloaded constructor in releasehelper and let the old one do this(cclient, false, null, null). the false, null, null part makes the code less readable at this
Candidate: this should be <UNK>
Reference: good point! forgot this was the constructor
Candidate: we could use <UNK>
Reference: minor thing, here there is no need to expose this as a list object (getsources().get(1) won't mean anything), so the return type could be a collection<ianalysismodulesource>
Candidate: you could bail here instead of <UNK>
Reference: move the defaults to the class instead of having every user call the setters.
Candidate: this is eating that (throwable probably?
Reference: should this change be applied to other methods of this class as well (getabsolutepath, getrequesturi)?
Candidate: i think that clear() is not efficient, we could use the <UNK>
Reference: this should be called after kafkarecordsupplier.addconsumerpropertiesfromconfig
Candidate: group internally. internally. internally. also internally. internally. internally. internally. also internally. internally. internally. internally. internally. internally. also group internally. internally. internally. internally. internally. internally. internally. internally. internally. also group internally.
Reference: but if this is happen because without a reason this exception is not thrown or declared a mostly not fetched runtimeexception is thrown.
Candidate: i think that this is is not <UNK>
Reference: there are a bunch more of characters and even directory names that are reserved on windows systems.
Candidate: this is not be used?
Reference: i think java's merge() function on map handles the case where a key is not present. so i think the following code will insert the value from stats2 if stats1
Candidate: i think this is not <UNK>
Reference: megre both if statement into single if
Candidate: i think deadlock exception exception
Reference: can you please add a space after if for consistency (here and in other cases)?
Candidate: this is >= 0 || <UNK> >= <UNK>
Reference: as with artifactwaypoint, i'm not sure why this class is not final with a package access constructor.
Candidate: you can use import <UNK>
Reference: catching a throwable is not a good idea. what's the intention here?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i'd create a dedicated mapper for the updatevmtemplateparameters (see [1]), [1] vmmapper.runvmonceparams map(vm vm, runvmonceparams template)
Candidate: consider using a new error.
Reference: possible alternative suggestion: have cramrecordreader.read return the new alignment start.
Candidate: if we is incremented by grabbing the index array is invalid?
Reference: joao, you are not sure that selection is a istructuredselection here, the first if test could return false becauseof the selection type. please review the entire if block: if (sel
Candidate: you should operand is empty?
Reference: use getplayersinrange(source.getcontrollerid()) to get a list of players that is not the controller who can interact with the ability.
Candidate: the players name.
Reference: do we really need to wait for progress bar invisibility at the start of method? it is expected that workspace is completely ready to perform an operation, isn't it?
Candidate: you could use <UNK>
Reference: seeing that you have used <s> for state, for consistency, i think we should change the operatorstate to have <s> rather than <i>, which is what it is right now.
Candidate: you should export to vlan that the implies that the implies that the implies that implies that implies that implies that implies that implies that implies that implies that implies
Reference: that's the method i was talking about. probably we can simplify all of these by adding a method in namespaceawarevisitor. to me it's quite strange to see everywhere the same
Candidate: please use <UNK>
Reference: i would suggest we make the sync version call the async version and block on the callback. this reduces duplicated code, and also doesn't serialize the calls, which isn't really
Candidate: this is intended to exclude <UNK> -> <UNK>
Reference: update of keyssupplier field is not mutually exclusive...
Candidate: you could use only:  java <UNK> value) { return <UNK> }
Reference: can you remove whitespace before the parenthesis. same below.
Candidate: use utf-8 instead of <UNK>
Reference: use type chargedto in return responseentity instead of ?
Candidate: this is not be used?
Reference: any point logging here as for the streamworkmanager?
Candidate: how about moving this to <UNK>
Reference: the logic in testackbeforesync and testackaftersync does sounds good to me. i think for: - for testackbeforesync, you need to ensure callback come before sync and eventually sync will still
Candidate: you don't need to wait for the
Reference: nit: while this follows the above, normal usage is e instead of ex, including in other places in this pr.
Candidate: this is not connected to run()
Reference: let's try to decouple the ui concerns and the actual link shortening. now the link creation is asynchronous. ideally we should have a listener with a possible method ondynamiclinkready(string url).
Candidate: is there a reason for this method is not <UNK>
Reference: can this instead? return getnonnullrequestparamvalues(paramname)[0]
Candidate: you could use repelaced with a userreportingsettingshelper call.
Reference: camel casing
Candidate: you could use use <UNK>
Reference: nit: druid format convention is like  1000, null,
Candidate: this is designed to be a minimum <UNK>
Reference: personal preference, feel free to ignore. when printing longs in situations like i prefer to look at hex over decimal.
Candidate: please use getclass().getsimplename() instead of <UNK>
Reference: can be simplified with providers.of(backupregistry);
Candidate: you could use <UNK>
Reference: hard delete needs fixing. token might become invalid is the indexes were compacted where the hard delete token was present.
Candidate: you could propagate the exception here, propagate the exception
Reference: same here re: flatmap
Candidate: could you use <UNK>
Reference: the assumption here is that the implementation class of the map (linkedhashmap in this case) will take care of the serialization. however, when reading the string from the db and
Candidate: this is be repelaced by <UNK>
Reference: this duplicates findenclosingmethod on cipherblockchainingcheck - should move to expressionshelper or something similar
Candidate: why is this method is annotated with a decision.
Reference: can you use number instead of integer here and below? so, you'd check if it is an instance of number and then cast it to a number and use number's
Candidate: this should be a to tear down nesting.
Reference: final :d
Candidate: you could use <UNK>
Reference: if you have a prestatement visitor, why having this check before ?
Candidate: could you explain why not again?
Reference: else if, just for consistency with the rest of the method structure?
Candidate: if you could use <UNK> <UNK>
Reference: isn't this constant? get and set this value once.
Candidate: sleep pretty-print is a text: <UNK> sleep
Reference: gary, this test still doesn't pass for my windows tail-wrapper: - by default > [message=tail: invalid option -- f, file=c:\users\cleric\locals~1\temp\filetailingmessageproducertests\foo] - with --follow=name --retry -n 99999999 > org.junit.comparisonfailure: > expected
Candidate: this is be <UNK> to <UNK>
Reference: would be more readable if entity was called authentity or such. similarly for the other isallowed() method
Candidate: is there a reason for element?
Reference: could this (ruleconfigparam) be passed as parameter of hostprocess instead? (it would be easier to use custom configurations per scan, for example, through an advanced tab in active scan dialogue.)
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: no need for this
Candidate: if you could use <UNK> <UNK>
Reference: this seems not being used, just deprecate it?
Candidate: is there a reason for avro to be null?
Reference: missing final
Candidate: remove the
Reference: rather than deleting the previous entity, why not just remove the next part on recreating the same entity? since nothing about fs was actually modified.
Candidate: please use <UNK>
Reference: the recipients and signature fields aren't checked.
Candidate: if you could use <UNK> <UNK>
Reference: move this call to the start of the method, since that's generally how it's done.
Candidate: you could bail here instead of return?
Reference: ideally this lock should be followed by a try finally, in case something goes wrong.
Candidate: please use <UNK>
Reference: a small code style thing: the else clause is redundant. it could jut be if(forceansi) {return true}; return ansienabled && ansisupported or simply return forceansi || (ansienabled && ansisupported)
Candidate: this is be simplified to <UNK>
Reference: typo specfied.
Candidate: <UNK> is not trace,
Reference: id is null when calling from the web layer, so it will result in an unhandled npe please find an alternative value, eg: user id
Candidate: you could use a local variable?
Reference: this map should be generified as well.
Candidate: you could use a static import <UNK>
Reference: should this be eventual?
Candidate: this should be <UNK>
Reference: these days we have more robust test helpers like bindingassertionhelper which avoid having to count names and update counts if the testcase changes. there's no need to change this now,
Candidate: this is not increment e1
Reference: system.out?????? use a logger.getlogger(). then trace.. look at how trace is done in other places.
Candidate: we could use a <UNK>
Reference: nit: you can omit the explicit type args here in new hashmap<>.
Candidate: can we throw new exception instead
Reference: wouldn't this alter the item that is passed in? that could potentially break plugins.
Candidate: please use <UNK>
Reference: resources is now just input. remove the variable:  inputstream input = closer.register(targetfile.newinputstream());
Candidate: minor nit: we could use <UNK> instead of '+'
Reference: i see this hardcoded strings in 3 places so far and in 2 different files. can we define them as constants?
Candidate: this is a static import?
Reference: print the tenant id in the log. otherwise we can not figure out to which tenant this error is belonged
Candidate: is there a reason why we catching exception here too?
Reference: no need to check if newtext.length() == 0 then ... additionally you are not checking if newtext is a valid hex input but let color.parsecolor decide that for you. this
Candidate: if you is not webapplicationexception to the statement, then we could use the <UNK>
Reference: these are opened and never closed, using try-with-resources would fix that, although it's a bit awkward since infiniumgtcfile itself is not autocloseable.
Candidate: you could use a here instead of <UNK>
Reference: spaces around if/catch (we really should have checkstyle running in travis rather than manually reviewing for style errors).
Candidate: we should throw an exception exception instead of printing the exception
Reference: you're using the deprecated configuration api. could you update it to use the new one? we're in the process of eradicating all usages of the old api. i already updated
Candidate: you can use 'throws <UNK> property?
Reference: replace "roles" with ipentahosession.session_roles
Candidate: please move the "return" to <UNK>
Reference: any thoughts to checking client.isopen()? i vaguely recall cases where that was an important check during system testing. it would be good to see any error behavior here be covered
Candidate: <UNK>
Reference: i guess xor works but this is a logical test so i think a logic operator != is more appropriate suggestion assert permitall != (rolesallowed != null);
Candidate: you should labels, use <UNK>
Reference: use getordefault to preserve behaviour, rename to fromenvironmentordefault.
Candidate: why this local variable?
Reference: expected and actual sqls are now same, use simpler assertquery overload
Candidate: nit: you could use <UNK> ie <UNK>
Reference: nit: rename to combineclosables/groupclosables and static import
Candidate: why not use <UNK>
Reference: how about setting the log level?
Candidate: we could throw a nosuchelement exception exception instead of nosuchelement exception is not <UNK>
Reference: log error before callback.onerror?
Candidate: this is is not <UNK>
Reference: consistency with other methods: datasemanufacturer is used in other methods, suggestion to use here: databasemanufacturer
Candidate: is there a reason for (string folder : (string <UNK> (string (string <UNK> (string <UNK> (string <UNK> (string <UNK> (string <UNK> (string <UNK> (string <UNK> (string <UNK> (string <UNK> (string
Reference: use getinstance().logerror() instead of printstacktrace
Candidate: you could use <UNK> instead of <UNK>
Reference: rewrite: this.apolloenabled = "true".equalsignorecase(apolloflag)
Candidate: is there a reason to check that is empty?
Reference: the action shouldn't fail if: the above & getparam().getdesthost == getvm().getdesthost()
Candidate: this is not be specified ^ check)
Reference: should not we detect that the cache is full before continuing to read? do we end up reading the lines for rowval twice?
Candidate: is there a reason that is is a to be a <UNK> that is not printed in the <UNK>
Reference: would it be useful to see these log statements in production env.?
Candidate: can we use the exception instead of the exception
Reference: this expression is repeated in both if and else branches.why not extract it before the if and reuse in both branches?
Candidate: please use <UNK>
Reference: magic number?
Candidate: i'm not sure how about this a little bit more readable.
Reference: nit: redundant local variable. i'm okay with it, but intellij complains :-)
Candidate: this should be stream()
Reference: this is quite unclear why the "if" is here. i imagine it's because the createexcelanalyzer is still using a java.io.file? if so then construct the if around that fact so
Candidate: is there a reason for this is not a constant?
Reference: final #wontfix
Candidate: please check the the cache.
Reference: is it correct to catch and "swallow" the interruptedexception (and below as well)?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i guess facet should never be null. is that right?
Candidate: i don't think that this is not connected to the
Reference: we should think in refactoring a bit this to add a "thumbnail" resource in owncloud-library, but maybe we should merge this first. on the while, some low level details: -
Candidate: can we print stack trace level to
Reference: this condition is not correct from what i see. when build is null, the result will be always empty. e.g. getusersasset()  will be always returning empty list after the
Candidate: is there a reason to be used?
Reference: registeron
Candidate: i appreciate that this said that you said that this said that you said that the is a <UNK> setting.
Reference: might be nice to have an overload which sets only groupid.
Candidate: suggestion <UNK> = <UNK>
Reference: is "this" necessary?
Candidate: this is designed to include the id id id
Reference: the second argument here is the name of calling function, so it should be "start", not "audiorecord".
Candidate: can you move this to <UNK>
Reference: this constructor can also be private, i think.
Candidate: @gunnarmorling you could use only: <UNK> <UNK> <UNK> = new <UNK> <UNK>
Reference: so instead of "using", we can say .withinitialconfig(compositeconfig.builder().withconfigname("helloworld").withapplicationoverrides(...)) i haven't fully thought through how we can add this compositeconfig to the layered hierarchy yet. but ultimately, i really think the
Candidate: please add a space after the
Reference: i use pagefactory with ajaxelementlocatorfactory for this.
Candidate: this should be an exception assertion.
Reference: like nmfreef, let's import mlrparameters statically by adding import static edu.snu.cay.dolphin.async.mlapps.nmf.nmfparameters.*;
Candidate: suggestion if <UNK> == null) {
Reference: do we need to do this every time we start the manager or is a one time thing. does indexing a new record not index correctly? would this break on
Candidate: maybe liked liked liked liked liked liked liked liked liked liked this <UNK> to <UNK>
Reference: bad styling - needs braces
Candidate: use <UNK>
Reference: i don't see a reason to use "block" here, just pass this.
Candidate: if you could be freed supplier.get() <UNK>
Reference: only one final? or should we make all final?
Candidate: let's move this service before returning a service service
Reference: you are only creating this list so you can later iterate over it, why not just iterate over the stream directly?
Candidate: rename to to <UNK>
Reference: suggest changing to  if (ess.getsettings().broadcastafkmessage()) ess.broadcastmessage()... user.sendmessage()
Candidate: is there is a a specific error message that is happening.
Reference: this can be simplified return "<html><title>google</title></html>";.
Candidate: please remove this log.
Reference: btw why not rename syncmanager to syncservice?
Candidate: you could use a try-with-resources here
Reference: as it is info level that most end users will get to see in their main log, i would suggest to make it a bit more end user compatible, e.g.
Candidate: we should use <UNK>
Reference: might as well work with a realvector instead of a matrix starting from this line.
Candidate: use <UNK>
Reference: division by zero
Candidate: this is not needed anymore,
Reference: adapted
Candidate: this is not needed
Reference: is this path always this way for all kubernetes users? is default ever something else for example?
Candidate: suggestion <UNK> = <UNK>
Reference: shouldn't we call super(conf, store, smallestreadpoint) instead?
Candidate: use utf-8 instead of <UNK>
Reference: shouldn't this be done when a new volume is detected - i.e in the createvolume() flow?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: are these two different buttons that alternate?
Candidate: you could use a constant instead of <UNK>
Reference: nothing happens with activescope, seems wrong...
Candidate: you could use (throwable -> <UNK>
Reference: sorry, i didn't explain this well. assert.state will do the if check for you as well, so we can remove that, too.
Candidate: you could use <UNK>
Reference: it might be more efficient (or atleast clear) if, in activate(..) you parse the params out into a map using [1] map<string, string> rewrites = parameterutil.tomap(urlrewrites, ":"); and in this
Candidate: could you use aforementioned accessors instead of objects.isnull
Reference: since you are at it, can you please change this to long primitive type? :)
Candidate: why not mock
Reference: you can do method chaining here also? java recipienttorecipientstats.computeifabsent(...) .addresponsetorecipientstats(response);
Candidate: you could use a <UNK> <UNK>
Reference: add checkstate(type instanceof unknowntype)
Candidate: use a constant instead of <UNK>
Reference: we always use {} blocks even for very short conditions: if (id != null) { ids.add(string.valueof(id)); } however i'd keep the cast (string) id instead of string.valueof(id) as the key
Candidate: this should be <UNK>
Reference: you should expect here only instances of type long since you provided a separate method for other ints (integerequal).
Candidate: we could use <UNK> instead of <UNK>
Reference: while this will do what you want it to do, note that mistform ultimus does not actually have the changeling ability. this will generate incorrect rules text.
Candidate: this is activated is designed to the bottom of activated <UNK> activated is not activated activated activated activated activated activated activated activated activated activated activated activated activated activated activated activated
Reference: hell no
Candidate: i would be reduced to <UNK>
Reference: this is a code smell. you should have only one path to the super. instead, call this(storagepoolid, null)
Candidate: please use <UNK>
Reference: shouldn't this also be called eventfloodrate?
Candidate: please use <UNK>
Reference: this should check what was in the environment variable before returning true.
Candidate: this is be repelaced by <UNK>
Reference: this breaks mysql in theory ... defaultbeanloader line 224
Candidate: we should use the exception instead of sharing properties?
Reference: check finals
Candidate: i think that the site is be skipped
Reference: when you return inline mocks like this, you need to add the mockito.clearinlinmocks() or else it won't be garbage collected.
Candidate: please use <UNK>
Reference: i would rather simplify this to  final list<testinfo> sortedtis = new arraylist<>(testsformutant);
Candidate: you could use <UNK>
Reference: duplicate police, hands up! :police_car: why not just do return !isanyempty(css) at this method? or return !isnoneempty(css) at isanyempty() method? and the same for the methods isanyblank() and isnoneblank()...
Candidate: please use <UNK>
Reference: exception, so stderr
Candidate: this error message is not
Reference: i'm not sure if this is required. i think the caller should be shutting down and not the start() method. not sure if this is huge change.
Candidate: is there any reason to be a concurrency issue?
Reference: { guid idtoremove = nic.getid();
Candidate: you can be replaced by <UNK>
Reference: ign? in-game name? if so and if it needs to be short i suppose that's alright :-)
Candidate: if you could use <UNK> <UNK>
Reference: that's why concurrenthashmap made it work (it internally synchronizes on its instance)
Candidate: we could use a refactor, but it would be nice to align with <UNK> partitions, or <UNK>
Reference: do we need a new instance of the selector each time selectexecutor is called ?
Candidate: this is not be encapsulated in the class instead of creating an instance of a instance from instance from instance from instance from the parent class instead of creating a
Reference: split this line ?
Candidate: is there a reason for this is not <UNK>
Reference: can't we use some standard format constant instead of this adhoc format?
Candidate: is there a reason to use a constant?
Reference: update this to using the public beginrecognizecontent api
Candidate: no, this is not check that is not
Reference: what if getenv returns null?
Candidate: this is be initialized in the
Reference: i would do this instead: initialize(absoluteuri, contextpath, (initdata != null && initdata.canbecached(absoluteuri)) ? initdata : null); iow, no point in spending time on checking if the cache can be used
Candidate: if this is designed to be a <UNK> that is a <UNK> that will always evaluate if (parent == null) || <UNK> == null) { return <UNK> }
Reference: minor: bloomfile
Candidate: nit: not discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded discarded
Reference: could pass in mode too when finding by path
Candidate: you can use the multimap here instead of creating a new instance everytime and then the new object everytime and then create a new object everytime and then create a
Reference: i would call this something besides dnd, it could be mistaken for drag n drop which has the same acronym.
Candidate: this is dangerous, if statement, you could use the <UNK>
Reference: lambda
Candidate: this should be unnecessary.
Reference: you should use splicespark.getsession() here
Candidate: minor nit: we could move this line
Reference: what if get returns null? i think in that case rename should immediately return false.
Candidate: nope, this is not
Reference: again, this should probably use the implementation from abstractset to ensure equals and hashcode are correct for set.
Candidate: you could use guava hierarchy instead of objects.isnull
Reference: acquisition of all locks should always come outside (just before) entering the try-catch. because if something goes wrong, the finally block is going to try to unlock a lock you
Candidate: if (throwable == null) { return; }
Reference: for experiments that don't have an experiment type associated with should have the generic experiment type set automatically. this will make the upgrade for users that have already experiments seamless.
Candidate: i think this should be the icon
Reference: should probably not return false when len or offset is negative.
Candidate: suggestion if (throwable == null) { return false; } }));
Reference: should there be an assertion that the iterator actually returns something?
Candidate: this this change?
Reference: use slf4j string interp
Candidate: if you could use checkargument here instead of '+'
Reference: can we use datatools.parseinteger here to handle the numberformatexception?
Candidate: you could use a string instead of <UNK>
Reference: i think both of these should stay non-final since it's possible to provide more efficient implementations in subclasses.
Candidate: you could use <UNK>
Reference: why the lazy? this will eventually always be called when build is called
Candidate: i think this should be <UNK>
Reference: curious why you throw illegalstateexception in the other methods but not these?
Candidate: we should use the <UNK> to the <UNK>
Reference: i don't get why the chosen name should be different between this case and the one above (when schema == null). does that matter ?
Candidate: if this is is null, but we don't @nullable.
Reference: is it worth testing what happens if you try to deploy a data source that does not exist?
Candidate: should we be <UNK> stubbing to the <UNK> vdsid is be vdsid to be vdsid to be vdsid to finish the vdsid in the
Reference: this is now never null.
Candidate: is there a reason for this method is not <UNK>
Reference: what if there is no first ?
Candidate: add a <UNK>
Reference: if it's already suspended due to watermark then i think suspend should be a no-op (other than setting a user-suspended flag) - the actual suspend status of the channel should
Candidate: this is not to be <UNK>
Reference: as mentioned above: please filter out nulls and provide some unit tests to cover those cases.
Candidate: suggestion if (throwable != null) { throw new <UNK> }
Reference: it's hard to read the long if statement. you could use _shouldrefreshcache.orelse(false)
Candidate: is there any possibility of null? can't be null?
Reference: what happens if i send both urls and tag?
Candidate: i think we could be foreach here instead of element?
Reference: can be written as !double.isinfinite(doublevalue)
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: not related to this changes, but wondering if we need to construct immutablebyteswritable object. can this method impl be reduced to:  return cell.getrowarray()[cell.getrowoffset()] != queryconstants.separator_byte;
Candidate: please use isempty() instead of <UNK>
Reference: nit: i'd suggest we have a separate recycle() function rather than piggy-backing on close with additional flag, since the clean is always true, i.e. we would always just 1) write
Candidate: please use <UNK>
Reference: is this block still needed? because it was a workaround
Candidate: could you move this to
Reference: here you may want to create a dmncontext actually from dmnruntime instead
Candidate: you could use <UNK>
Reference: when you work with temp files, please use the java.io.file api. use the function: file.createtempfile(prefix, suffix) and work with file tmpfile instead of string filename.
Candidate: @ivange94 not sure that this is is not good idea.
Reference: return type should be changed to iterator
Candidate: this is a <UNK>
Reference: i think that a single (warn) message should still be emitted. something like: "there are intervals that are failing to liftover, but logfailedintervals is false. to see what intervals have
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: use <link_0> here. way more robust.
Candidate: if this is is null, so that we don't throw an exception exceptions.
Reference: not supported yet
Candidate: this is is designed to be a <UNK> <UNK> <UNK>
Reference: you should be able to replace dbfacade.getinstance() with getdbfacadeinstance()
Candidate: can you use storage storage notation storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage
Reference: should removereplica return a success boolean like addreplica?
Candidate: wait.forelementclickable() could be <UNK>
Reference: again, i was wondering, what is the thinking behind making close() final, and process() non-final.
Candidate: i think that marking this is be closed in the future, but i guess we could be a consequence that the completes the consequence of the
Reference: this is calling super.setattribute() twice is that intentional?
Candidate: use <UNK>
Reference: rename to setifabsent
Candidate: you could use <UNK> instead of <UNK>
Reference: bundlekey or bundleexternalkey (no space).
Candidate: you could replace this with <UNK> with <UNK>
Reference: use commonhelper.assertnotnull
Candidate: can you gogoduck
Reference: requestdto.getbaseparam().setuserid(getloginname());
Candidate: <UNK>
Reference: the 'when' can be dropped from the log statement.
Candidate: could we add a error message
Reference: nit: more compact alternative.  int i = s.length() - 1; while (i >= 0 && character.iswhitespace(s.charat(i))) { i --; } return s.substring(0, i + 1);  similar for treamleading.
Candidate: if this "return" [0] <UNK> == null) || <UNK> == null) || <UNK> || <UNK> { ... }
Reference: why do filters need access to the results of previous filters? is it so that we can skip call screening if something else blocks the call?
Candidate: can we use <UNK>
Reference: print out the trash path.
Candidate: you could use <UNK>
Reference: add the new queries at the end of the cleanup run?
Candidate: nit: randomize <UNK>
Reference: @fabriciofx let's use text matchers from cactoos-macthers to assert text implementations
Candidate: could we use <UNK>
Reference: what is the purpose of this override? it seems to just call super.
Candidate: use <UNK>
Reference: if its needed to be cleared in init --force please do cleanup there too.
Candidate: unused variable
Reference: much as i prefer !isempty over size() > 0, the latter is used everywhere else in this method, so switch to that?
Candidate: you could use <UNK> instead of <UNK>
Reference: use math.tointexact(index) instead of a cast (int) index.
Candidate: this could be simplified as:  int length == 0 ? %s", <UNK>
Reference: is it possible for this vmgroupmapping to be null? looking at the code this seems an impossible case.
Candidate: please add a log.
Reference: bufferlist should not be null - you should throw a illegalargumentexception
Candidate: if you could use a <UNK> <UNK>
Reference: nit: annotations usually go on the line above, like with @override
Candidate: you could use streaming <UNK>
Reference: remove empty line
Candidate: if we is right... unconditionally, in the
Reference: what kind of operation would throw illegalargumentexception? i'd usually expect a 4xx for bad input.
Candidate: will will will will will will will will will will will will will will will will will will will will will will will will will will will will will will
Reference: i am unsure about this one. before this, we were returning a live stream, and after this we may be returning a closed stream.
Candidate: we could use a <UNK>
Reference: this map is not required to build rulesbydbdeprecatedkey. loop at line 220 can easily be changed to work directly with the set<singledeprecatedrulekey>
Candidate: is there a reason to check that is empty?
Reference: the write lock should be locked ahead of line 67 (before getreplicaidsbystate() is called). otherwise there is a race condition to miss remote leadership change.
Candidate: minor formatting
Reference: logging could be improved here to use parameterized messages <link_0>
Candidate: is there any reason why stubbing required?
Reference: this code is the same in multiple classes. it would be great to reduce the code duplication.
Candidate: throw an exception
Reference: it's not ideal to have this hardcoded, but then again we do the same for cassandra
Candidate: you could use a constant instead of <UNK>
Reference: remove
Candidate: you could use use <UNK> instead of <UNK>
Reference: this normally shouldn't happen. so could some log.warning be done?
Candidate: if this is is not
Reference: shouldn't we also update super.latestasynccheckpointstartdelaynanos?
Candidate: is this a bit of this pr, but it would be to be turned from the storage policies instead of creating a helper arguments.
Reference: this causes a compiler warning because applicationcontextprovider.getapplicationcontext() is a static method. perhaps it shouldn't be static - but i have run the application with this as a static call and
Candidate: you could use <UNK>
Reference: i'd prefer an alert instead of a toast. the later can be easily missed. great job!
Candidate: @vilchik-elena you could use a mkdirs() instead of mkdirs() == qualified matcher
Reference: the rule speaks about code readability. i don't think readability of these methods are a problem. it's a rather bigger problem to call something "local" that is not local. as
Candidate: use <UNK>
Reference: use !isempty() check
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this should be synchronized as well
Candidate: wait.forelementclickable() could be <UNK>
Reference: same deal as with filesender.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: so, we write the bloom filters into the row-group. it means we have to seek to the row-group and read from them even if the whole row-group could be dropped
Candidate: if this is not "false"
Reference: if you return here, you don't need to the keepwaiting boolean.
Candidate: we should log the warn and log level to print the debug level to log the
Reference: what happens if no questionnaire is found for the give id
Candidate: is there a reason for this method to be called in the <UNK>
Reference: why not set javahome property for all launches to be explicit ?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i think we can ignore codacy on this one going forward as it's possible to merge even when it's complaining. perhaps we could even configure codacy to ignore it.
Candidate: i'm not going to fail with the depending on the
Reference: there's a mediastreamimpl#getrtcpterminationstrategy() method which amounts to rtcptransformenginewrapper.getwrapped(). why not use it here and in the method setrtcpterminationstrategy and, thus, simplify the source code for the reader?
Candidate: could we explain what's going to do, but i would be more closer to the tasks
Reference: incomplete
Candidate: this is designed to be a <UNK> download <UNK>
Reference: invalidate() acquires locks, and i'd rather not block while holding the shared topology lock. ideally i'd like only datacontainer.compute() to be done while holding that lock.
Candidate: increment the increment the increment the increment the increment the increment the increment the increment the increment the increment increment '+'
Reference: ![major](<link_0> the cyclomatic complexity of this method "execute" is 14 which is greater than 10 authorized. [![rule](<link_2>](<link_1>
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: make a static logger
Candidate: is there a reason to synchronize super's i'm not sure that we want to throw an exception instead of returning null?
Reference: still a bit of code left over here from the old code, could you remove this?
Candidate: you could use a <UNK>
Reference: see note in jqueryhelper. needs a nullcheck if null is a possible return value of jqueryhelper.getfieldvalue(selector).
Candidate: please use <UNK>
Reference: this is no correct anymore. it should be 2, 3, 4, 5 now.
Candidate: you could use <UNK>
Reference: compute can remove entries, too.
Candidate: this pagelogging
Reference: i would change the variable name. monthbefore is missleading. it should be something like nextmonth.
Candidate: please use <UNK>
Reference: log the exception here
Candidate: is there a reason for this logic?
Reference: the check should be done in the sslconfig.builder.
Candidate: use a url instead of <UNK>
Reference: i'm not sure about this change. why get the plugin from the store when it's in the event?
Candidate: wait.forelementclickable() should be <UNK>
Reference: i think we could avoid using the ternary operator since i could not find any other use case in the code base and it could be confusing at times
Candidate: i think this is not efficient, we could use the <UNK>
Reference: want to use the property from taskproperties instead of the default.
Candidate: is there a reason for element?
Reference: can the executor be user provided? (e.g. icompletablefuture.andthen user can provide the executor) user executor returning this exception may not always mean that the client is being shutdown, does it?
Candidate: is there a reason to re-throw the exceptions?
Reference: just curious, not a problem, but why set sysnamelist to null before setting it via the map operation?
Candidate: you could draw draw draw the draw <UNK> draw to draw the draw <UNK>
Reference: sql 'like' is case sensitive
Candidate: suggestion return <UNK>
Reference: how can you confirm that these two objects are unretired objects and no more retired objects in this list?
Candidate: please use <UNK>
Reference: hardcoded string "id"
Candidate: this is bail here instead of <UNK> edges,
Reference: y+1 <- yeah... nup. squashing such things simply hurts my eyes
Candidate: suggestion <UNK> = new <UNK> clazz, <UNK> clazz, <UNK> <UNK>
Reference: connecting an already shutdown runtime is not a good idea. probably we should add a check to avoid that (not in this pr). just create a new runtime.
Candidate: you could use <UNK>
Reference: please avoid magic numbers - either add cmdentity.hasenginesessionseqid() or add the -1 as constant in ssosessionutils (or to any other appropriate class) or static method to ssosessionutils.hasenginesessionseqid(sessid)
Candidate: this is be enough.
Reference: while *excessively* unlikely there is still the possibility of this producing a conflict. perhaps we could get the current epoc time in milliseconds and use that number instead? unless we
Candidate: use a string concatenation instead of <UNK>
Reference: you should have an @afterclass method that unsets this. using @mockejbstrategeyrule could save you the trouble, iirc
Candidate: you could use <UNK>
Reference: this message is shown to user as well as position of the error. user needs to know what to do with this. 'likestring' is not a commonly known term :)
Candidate: why not use <UNK>
Reference: some useless white spaces here.
Candidate: you should use stringutils.isnotblank()
Reference: why parallel stream?
Candidate: this is designed to be a <UNK>
Reference: should this be a bundle message?
Candidate: "_" log's names.
Reference: if (!templateoptions.getnetworks().isempty())?
Candidate: this collectionutils collectionutils
Reference: looks good!
Candidate: suggestion <UNK> = <UNK>
Reference: nit: if statements could be combined to reduce indentation
Candidate: this should be to bail at the beginning phase.
Reference: as we have discussed, we sould have the response/resquest rule here also. i am unsure wrt to the use of .appendsuper(super.equals(other)), i'd favor a short note of @buehner here.
Candidate: if you a, <UNK> == null && <UNK>
Reference: consider using lambdavalidator to be able to add a lambda for the tostring method of this validator.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: the following avoids having to parse the format string and creating a temporary string. java string bitcoinuri = matcher.group(); outputbuffer.append("<a href=\"") .append(bitcoinuri) .append("\">") .append(bitcoinuri) .append("</a>");  come to think of
Candidate: 32 parens around this..
Reference: this is not needed, please leave the code "as is". null is never instanceof of anything.
Candidate: storagetype is a boolean comparison to <UNK> boolean true" [![rule](<link_2>](<link_0>
Reference: the local variable *listdata* should be renamed to *listdata* as per local variable naming conventions.
Candidate: we could use <UNK>
Reference: java return supportedproperties.stream() .filter(propertiesmap::containskey) .findfirst() .map(propertiesmap::get) .orelse(null);
Candidate: is there a reason that is is not set? i am not sure that we want to check that this is not set?
Reference: is it intentional to remove synchronized here?
Candidate: if you could use <UNK>
Reference: need to set timestamp
Candidate: please replace this with <UNK> with <UNK>
Reference: appendlogs
Candidate: nit: <UNK>
Reference: i would say do an instanceof check and throw a meaningful exception.
Candidate: this is a <UNK> simplestring key) { return <UNK>
Reference: i suggest passing all of the variables we access in this constructor viasustainedconnectionworker.this.spec to be switched to parameters we pass upon instantiation
Candidate: i guess we should use objects.isnull
Reference: should throw a meaningful exception because it's not meant to be used in a context where snapshots would be needed.
Candidate: we should use <UNK>
Reference: kuraerrorcode.configuration_snapshot_not_found in my opinion
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: you don't need to make this a list, just set it to the double[].
Candidate: this think this should be misleading.
Reference: wouldn't be good to use the return value of iset#add instead of calling iset#contains + iset#add ?
Candidate: you could use only: <UNK> == null) { return <UNK> }
Reference: @adavid9 can you please add throws ioexception and replace original catch (exception) with following:  catch (ioexception e) { throw new artifactstorageexception("unable to undelete trash for storage " + storageid
Candidate: @exper0 same here, but this is belong to the
Reference: were we using this is_fwd_param for anything other than the backend publishing?
Candidate: is there a reason for this change?
Reference: this produces findbug warning: > 06:13:08 [info] sequence of calls to java.util.concurrent.concurrenthashmap may not be atomic in org.jboss.weld.bootstrap.specializationandenablementregistry$beansspecializedbybean.apply(bean) ["org.jboss.weld.bootstrap.specializationandenablementregistry$beansspecializedbybean"] at specializationandenablementregistry.java:[lines 79-115] i think this should work:  atomiclong value
Candidate: use <UNK>
Reference: don't swallow exception.
Candidate: this is designed to be a <UNK> <UNK>
Reference: wrong method name in the error message.
Candidate: this is not nullpointexception if <UNK> == 0) { return <UNK> }
Reference: avoid duplicate code. just call addonsubscriptionschangedlistener(listener, listener.mexecutor).
Candidate: @manuelplazaspalacio this is not be called in the
Reference: couldn't the execute(httphost host, httprequest req) method be used here? or is the default context somehow breaking things?
Candidate: this is not needed
Reference: no null check for zone?
Candidate: string.valueof
Reference: shouldn't we throw the sqlexception? or at least log it
Candidate: is there a reason for avro message
Reference: maybe would be good to talk to reddeer people about making org.jboss.reddeer.eclipse.wst.server.ui.view.server.serverstatecondition public as this abstract is just copy-paste of that private class.
Candidate: this is not <UNK>
Reference: investigating....
Candidate: i'm not sure that we want to have a <UNK> that is is a <UNK> we could have a to the <UNK>
Reference: same, pass the builder object in
Candidate: log.debug
Reference: shall we fail here since we don't expect exception?
Candidate: could you use <UNK> connection,
Reference: why do you search for the same path twice? is it a test case to validate the results won't be merged?
Candidate: suggestion @override public void <UNK> throws <UNK>
Reference: this will never be true, since we just checked that node is instanceof iastdeclarationstatement above.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this won't change the actual value. you'll need to set the actual field (or use the existing methods in entity).
Candidate: please use <UNK>
Reference: did this have any effect? don't we want to shut down the bus _after_ we disconnect from the cluster? by shutting down the change bus first, might we not lose
Candidate: this is strange, risky.
Reference: is this test useful? i don't think so...
Candidate: is there is an enum types?
Reference: system.out? booh!
Candidate: i think this should be <UNK>
Reference: would it be possible to just include/set the hostname when we construct the health object instead of setting it over here? i feel like it is more bug prone to
Candidate: should we use the properties?
Reference: style inconsistency: space after if
Candidate: please use <UNK>
Reference: this should stay in warn
Candidate: we should log the log the the log the
Reference: should this be an info log? it feels like a debug log to me.
Candidate: should we use <UNK>
Reference: this is used a few times, could benefit from being a const or defined in the set up. depends if its necessary
Candidate: please use <UNK>
Reference: getmainast() i counted 4 invocations of this method, please extract to variable
Candidate: use <UNK> instead of <UNK>
Reference: the same here as in updateuploading()
Candidate: please use <UNK>
Reference: same instance on both cases
Candidate: you should use <UNK>
Reference: prefer a local variable as this method could be called many times because the labelandiconrefresher is created for each abstractnotselectableshapenodeeditpart
Candidate: is this intended to tear down
Reference: wrap or add a variable
Candidate: this is a <UNK>
Reference: why was it necessary to move the js from resources/org/jenkinsci/plugins/p4/console/p4consolenote/script.js into the generated html?
Candidate: you could use <UNK> here instead of return?
Reference: i would error out here. a blacklisted algorithm should never be allowed for use.
Candidate: could we use the <UNK>
Reference: i would prefer to use configconstants.getconfigfolder().
Candidate: this readasstring(...) instead of <UNK>
Reference: remove one ~is not a~
Candidate: if this is is not efficient, we could be a <UNK> <UNK>
Reference: i think this is something wrong for this component contract. we can't constantly poll from the source until null. the point of the receive() is to get file or nothing.
Candidate: why not we need to synchronize on the exceptions?
Reference: checking same condition twice
Candidate: identificationbarcode is a json properties?
Reference: why are you clearing their inventory? i dont remember that ever being a thing...
Candidate: this edit edit edit edit edit edit edit this is not edit the
Reference: this wrapping is hard to read since the ifpresent() is part of the lambda above. i'd write it like java new hivefileiterator(path, filesystem, directorylister, namenodestats, fail).foreachremaining(file -> splitfactory.createinternalhivesplit(file, getvirtualbucket(bucketcount, file.getpath()))
Candidate: why not we return <UNK>
Reference: see stringutil.isempty
Candidate: you could move this to a variable?
Reference: maybe use list interface?
Candidate: long. long. long. long. long. long. long. long. long. long. long. long. long. long. long. long. long. long. long. long. long. long. long. long. long. long. long. long. long. long.
Reference: correct keyword order
Candidate: this is not
Reference: maybe also test a repeated key? should just work.
Candidate: is there a reason for error message also?
Reference: ![critical](<link_1> 'severity: critical') either log or rethrow this exception. [![rule](<link_2>](<link_0>
Candidate: i'm not sure how about the sure about the sure that this is is is not but i guess that the is not
Reference: add if debug
Candidate: i pagelogging
Reference: suggestion annotation.maxcharspercolumn(), annotation.ignoretrailingandleadingwhitespace());
Candidate: return null ? "" : null;
Reference: gotcha. and we don't want to create the table when the worker is run the first time, probably because we don't have any mechanism for that?
Candidate: <UNK> -> <UNK>
Reference: can't the whole test be boiled down to: if (longlinecnt > (longlinesthreshold * nonemptycnt) / 100) { this will also work when threshold is 0.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: just a thought. can you please extract out the common portions of on<actions> although i don't see any gain apart from the code size reduction. same for the window displaying
Candidate: this is unnecessary.
Reference: change breaks equals contract, because equality doesn't take into account subclass names and this new hashcode does. to avoid that, use objects.hash(anchorvariabledemand.class.getname(), ...)
Candidate: you could use guava hierarchy instead of objects.isnull
Reference: replace with return this == other;
Candidate: use <UNK>
Reference: you should also support \\doctrine\\common\\persistence\\objectmanager::getrepository for people getting the repository from the entitymanager
Candidate: you could use <UNK>
Reference: shouldn't we be revert everything and throw an exception since it failed to update the carbon profile? why are we logging it and carrying forward?
Candidate: you should use <UNK> here ?
Reference: all possible paths must be in the index, not just the first path.
Candidate: if this is is not efficient, but i would be more efficient, that the is is not efficient, but i am not sure that this is
Reference: a call to license validation is required after to fail the nomad prepare phase if needed since we cannot rely only on client-side validation. topologyservice.getlicense().ifpresent(l -> licenseservice.validate(l, updated))
Candidate: i think that this is is not <UNK>
Reference: no reason to delete files: temporaryfolder rule takes care of that.
Candidate: use <UNK>
Reference: can we include some of the agent details in the log message when this happens? i.e. what agent was affected?
Candidate: wouldn't it be worth replacing a with a <UNK> <UNK>
Reference: i was told all resources have to be closed. connection is a resource, so i miss try/finally/close around it.
Candidate: nit: '+' about '+'
Reference: maybe a shorter way to write these inputs is: byte[] input = asbytes("1\n\r2\n\r3"); private static byte[] asbytes(string in) { return in.getbytes("utf-8"); }
Candidate: this is be <UNK>
Reference: grafts should be volatile, and use a volatile safe pattern here: static state { final filesnapshot snapshot; final map... grafts; } private volatile state state; state s = state; if
Candidate: we could use <UNK>
Reference: &&?
Candidate: maybe we could be a warning instead of <UNK>
Reference: same as above, no need to re-add the product here. the one you've edited is the same that the pool already has a reference to.
Candidate: should we move this to the part, instead of <UNK>
Reference: if the default is null, you may use caughttypes.get("baseexception")
Candidate: can we use <UNK>
Reference: (nit) reformat (or just put 3600)
Candidate: you could use a constant instead of creating a new <UNK>
Reference: if there are a 1000 pipelines with 3 stages each (say), and a plugin wants to handle everything, won't this loop become slower and slower, because of the contains on
Candidate: @vilchik-elena we could use <UNK> instead of <UNK>
Reference: i think this should use the full constructor  webpage.newbuilder().build();;
Candidate: you could use <UNK>
Reference: it doesn't make sense to have a null value here. we should fail with a null key or value
Candidate: you could use a string instead of <UNK>
Reference: r.getstring("category") doesn't have to be in the try/cactch
Candidate: this is a <UNK> property?
Reference: don't need a thread for this since it is a one store shutdown
Candidate: this is started, why not started,
Reference: you would want to check failurecount value here inside the if. if it is zero, you would want to return false. otherwise we could miss a success.
Candidate: if you could synchronize on the connection,
Reference: instead of using addcandoactionmessage and return false, you can use failcandoaction method that does both.
Candidate: this is dangerous, if the is not return true"
Reference: this is a blocking call.
Candidate: should we use <UNK>
Reference: setparent is missing? is this good or bad?
Candidate: we could use only: <UNK> <UNK> <UNK> list?
Reference: i am currently trying to remove coreregistry usage. the assetmanager can also be obtained via depenendcy injection. e.g. by adding a private assetmanager field with an @in annotation. the registration
Candidate: we should throw an exception instead of returning an exception
Reference: remove tostirng
Candidate: suggestion if (throwable -> <UNK>
Reference: please remove this line
Candidate: please use reflectiveoperationexception
Reference: i think you actually need to count the number of matches: integer.bitcount(format.roleflags & parameters.preferredroleflags)
Candidate: this should be <UNK>
Reference: you probably want this to be a higher level - internally most things aren't logged at debug. i realise that if a node is down this could cause a bit
Candidate: please use <UNK>
Reference: can use the string constructor with explicit charset instead (charset.forname("utf-8") and remove the try-catch.
Candidate: this should be (throwable -> <UNK>
Reference: could you make this derivativetmppath? i seem to be having a hard time following which paths are landing in which variables since everything is derivatives.
Candidate: the error message should be be <UNK>
Reference: a little simpler to delegate to the new constructor.
Candidate: suggestion <UNK> <UNK>
Reference: i believe it's redundant binding.
Candidate: this should be <UNK>
Reference: should be extracted to its own method i think.
Candidate: you could use a try-with-resources
Reference: logging should be done where the exception is catched rather than where it's thrown. the message is already in the exception
Candidate: suggestion if <UNK> { throw new <UNK> }
Reference: mock
Candidate: you could move this to <UNK>
Reference: add the reason for dropping message?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: put content in 1 line as many as possible.
Candidate: you could use <UNK>
Reference: suggestion .withsystemerrormessage("failed to initialize 7-zip: %s (%s)")
Candidate: suggestion <UNK> = <UNK>
Reference: null check
Candidate: i think this is not efficient, but i would be a good idea.
Reference: should have an assert or some check that remotetools is found.
Candidate: if you could use the "?"
Reference: what is the need for a postfix here?
Candidate: you should add labels, here as well.
Reference: shouldn't be there a negation?
Candidate: you could replace this with <UNK> with <UNK>
Reference: was there an error coming out of this code?
Candidate: i nesting.
Reference: can we add remote? i assume that might add useful debug info.
Candidate: i am not sure whether we want to throw an exception or not?
Reference: the default value should be false for barrierconsumedchannels, otherwise it seems inconsistent with the variable semantic. only after task processing the barrier from respective channel, it should be set true.
Candidate: this is sketchy for the sake of the score
Reference: how does this test work?
Candidate: is there a reason why not sleep here?
Reference: where is the assert?
Candidate: is there a reason that is not throw an exception?
Reference: it might help prove out the contract if a line was drawn here between the relying party, the request, and the final saml2authenticationrequest instance. for example, i'd probably do authnrequest.getdestination()
Candidate: is there a reason for this class that is should.
Reference: is null a valid input value here at all?
Candidate: use <UNK>
Reference: what if you attached a new network to a nic? it won't have reportedconfiguration, but it is attached.
Candidate: i think that this is not efficient, but i would be more clear.
Reference: >object [](start = 14, length = 6) why not using string? #resolved
Candidate: you could use <UNK>
Reference: please use a more normal looking address everywhere. e.g. <link_1> or <link_2>
Candidate: use <UNK> instead of <UNK>
Reference: awesome :-)
Candidate: use <UNK> instead of <UNK>
Reference: need this? don't we have enough spew in log already around assign?
Candidate: i wonder if there is a higher than <UNK>
Reference: should this not be a double? <organisation
Candidate: this is be <UNK>
Reference: setname("noop");
Candidate: this is a <UNK>
Reference: just a minor thing that these objects can be moved into line 125.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i think if you inflate with the attach parameter set to true, you won't need this line (here and elsewhere).
Candidate: you could move this to <UNK>
Reference: debug statement?
Candidate: this args?
Reference: {] seems like a typo
Candidate: is there a reason to use log.debug here?
Reference: node with idx = grid_cnt - 2 is also a client node.
Candidate: let's rewrite this to separation of <UNK>
Reference: can use map<string, ?> flags = immutablemap.of("name", "controller targets tracker");
Candidate: i think this should be <UNK>
Reference: given this is on transactional path, keeping a list of scoreboards parallel to m_scoreboardcontainers is good for performance.
Candidate: this should be initialized in the constructor?
Reference: we know scope here because of if statement, so no need to concat scope variable with slash
Candidate: is there any reason to throw an exception?
Reference: random seems like an odd name. something like rtp, randomtp, or randomteleport
Candidate: i think this is not efficient, but i think, i think, i think, i think, that we could use the <UNK>
Reference: just create a keep list using new arraylist<>(fieldstokeep)
Candidate: is there a reason for element?
Reference: stream must be closed with resource at the time it is created.
Candidate: this we belong to the transactional
Reference: why are you dividing by 1024 again here, when getfilesize() already does that? and the call to getfilesize below does not do that
Candidate: suggestion <UNK> = new <UNK>
Reference: let's use if (genericutils.isnotempty(headers) && headers.contains(...)) just in case *null* is passed
Candidate: use <UNK> instead of <UNK>
Reference: lets add the cnf folder to the tableviewer so we may need to add more than just bndworkspace.getallprojects() since that doesn't include the cnf project.
Candidate: is there a reason for example that this is is not encapsulated in the
Reference: could we please do this as a single query for all patches within this patch set that this user has reviewed, and then do a hash join here in java?
Candidate: should be set to <UNK>
Reference: maybe we should add to this message that the limit was set on a topic and can be changed on it.
Candidate: how about making this a property?
Reference: this method can be written better. we should check only programenrollment created by task action. verify if all fields are filled correctly. check also if programenrollmentlist has 2 objects
Candidate: this is designed to check if <UNK> == null) { return false; }
Reference: nit: make this a string constant somewhere and use it at both of the logging sites
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: !pluginconfigurations.isempty() is the preferential way to do this.
Candidate: you could move this to <UNK>
Reference: do we need this clear() call? "toclean" is not used anymore.
Candidate: this is not be surrounded with <UNK>
Reference: not sure what you mean.
Candidate: you could use a constant instead of <UNK>
Reference: hashcodeutils hmmm, i see, this id used by the hash code.... not sure where this calculation comes from to be honest, i have seen this in the old widgets, if
Candidate: please use hash hash hash hash hash hash hash hash hash hash hash hash
Reference: please use english only for messages.
Candidate: if this is is not ignored. we should throw an illegalstateexception instead of eating it.
Reference: an empty string seems different than a collection with no items in it (which is what was returned before). is this correct? it may account for why those json files
Candidate: suggestion if (throwable == null) { return <UNK> }
Reference: huh. why would this be null? isn't it just in the activity layout?
Candidate: is there any reason to change this belong to the
Reference: i think this close is redundant since assertexpectednumberofvariants closes the iterator, and the other call sites don't manually close it. having said that, i think the tests would be much
Candidate: this is not throw new exception instead of relying on the
Reference: throw exception instead?
Candidate: this should be to be a <UNK>
Reference: invert if condition
Candidate: this is dangerous, is not <UNK>
Reference: please use stringutils.equals
Candidate: we could use slf4j logger instead of download {}
Reference: what about segments that partially overlap the interval ? earlier they were also being returned as usedsegments, i think we need to preserve that behaviour.
Candidate: i think that this is be <UNK> whose state is set in the state whose state is set state in the state whose state is false.
Reference: add a util method boolean issingletopic(readableconfig). it can also be used in sink side.
Candidate: use utf-8 instead of %s avro "\"" + " + {}", e); e) e) e) e) e) e) e) e) e) e) e) e) e) e) e) e) e) e)
Reference: 1970
Candidate: you could use <UNK>
Reference: similar approach here, maybe create a function to do this test.
Candidate: this feels like a bit weird.
Reference: why is this exception ignored? (except for a log message)
Candidate: please consider replacing a feature with <UNK>
Reference: it seems that we should check this in resourcesetchanged
Candidate: if this is designed to be an npe if the is not null.
Reference: you could use preconditions.checkpositive(int,string) method in the same way as it's used below. it does logically the same thing as this conditional statement.
Candidate: minor: this is be combined with <UNK>
Reference: the parameter needs to be 1 since the backup model node is one level below the cache
Candidate: this is a <UNK>
Reference: this probably won't work as expected. you do not know the rest of the where condition in here.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: else branch is not needed
Candidate: this should be costly.
Reference: externalize log
Candidate: you could use isempty() instead of "return true" if <UNK> == null) { continue; }
Reference: you need check rc first. if rc is not ok, then fail readcallback. otherwise do the logic to read actual entry.
Candidate: this should be <UNK>
Reference: extract name.tolowercase() as a local variable?
Candidate: 6, error message please.
Reference: variable names shouldn't start with a capital letter
Candidate: if this is is not <UNK>
Reference: only spawn items serverside, this creates clientside entityitems
Candidate: @vilchik-elena you could replace this by: <UNK> <UNK> <UNK> <UNK>
Reference: so how is doing getitems().add(item) going to work in this scenario? it obviously won't be added to the positions map.
Candidate: yes, this multimap would be good to synchronize to synchronize the <UNK> invalid?
Reference: can't we safely throw a rnfe on every 404, without checking the method and path?
Candidate: is there any reason why not catching the exceptions?
Reference: free?
Candidate: nit: <UNK> <UNK>
Reference: i guess that the project state could be moved as constant to the client lib (we currently have lots of places where we use a "running" to check for pod
Candidate: rename to <UNK>
Reference: i would rather not put a number in the callback variable, something like: callbackiftimeout
Candidate: is there is a specific exception?
Reference: how about check whether the type of a field is comparable in shouldpushdownunaryexpression method ? then the logic of binaryfilterapplies need not to change
Candidate: storagetype == null || <UNK> == <UNK> || <UNK> || <UNK> || <UNK> == <UNK> || <UNK> == <UNK> || <UNK> || <UNK> || <UNK> { return false; }
Reference: i really don't like this message in fact... "expected" does not make sense. i would prefer to have "this call can throw an exception" instead, and ideally, even the name
Candidate: mag <UNK> nesting.
Reference: i don't believe this is necessary - we'll never get a delivery after a cancel or cancelok, but i suppose it doesn't hurt, except for the (small) overhead.
Candidate: we could be a <UNK> {}: connection, <UNK>
Reference: method calculate has 9 arguments (exceeds 4 allowed). consider refactoring.
Candidate: you could use <UNK>
Reference: these 2 lines can be factored into 1: user user = users.signin(user.admin()). btw, do we really need admin?
Candidate: i liked that this is is not <UNK>
Reference: this does not make sense, you are doing a write and locking on read ?
Candidate: if you throws exception exception exception is thrown exception
Reference: * the check should be on storage domain. * so the change in ie50e7dd9 is no longer relevant?
Candidate: i think that the storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage
Reference: wrap super.close() with a try/finally so the channel is always diconnected
Candidate: i wonder if this is almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost
Reference: i think this check will never be true, therefore it's not required.
Candidate: you can be replaced by: <UNK>
Reference: please keep one var per line.
Candidate: <UNK> getchildren is never used?
Reference: databaseutils.makeplaceholders(1) should be replaced by the literal ? in the string.
Candidate: this sure sure that this is not more than <UNK>
Reference: what if organizationdiscoveryintervalmillis is less than 1000? use milliseconds instead
Candidate: i think that this is not <UNK>
Reference: new echo server for every test or will a single one for all tests suffice? if a single one will suffice, then you could declare all variables used here as
Candidate: finals
Reference: use ds3docspecemptyimpl
Candidate: remove the
Reference: ![major](<link_2> at most one statement is allowed per line, but 2 statements were found on this line. [![rule](<link_4>](<link_0> ![minor](<link_3> missing curly brace. [![rule](<link_4>](<link_1>
Candidate: is there a reason for element?
Reference: might be better to say compactiontask.type.equals(status.gettype()) to remove reference to literal and to cover for the case when status.gettype() is null for any reason.
Candidate: i'm not sure that [] that the [] to the tasks
Reference: so every time this is called, we will shuffle the tasks and have a completely different assignment mapping?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: shouldn't this be == 0?
Candidate: please use <UNK>
Reference: could you rework this code to not use swt. even if this code is in an ui bundle, it will one day, i'm sure be used/moved outside of an ui
Candidate: you could use <UNK> here instead of <UNK>
Reference: log excepion also
Candidate: is there a reason to re-throw the properties?
Reference: you have got a factory that creates defaultmultifactorauthenticationsupportingwebapplicationservice objects, right? it needs to be passed into the factory, and from the factory down here.
Candidate: use <UNK>
Reference: as you say, does oracle or h2 have to do this? for the dummyxaresourcerecovery i can see that is likely a requirement
Candidate: you could use <UNK>
Reference: blockx, blocky, blockz
Candidate: minor nit: we depending on the size of the depending on the depending on the depending depending depending depending on the depending depending depending depending depending depending depending depending on
Reference: i'm a bit confused what's going on with this api. we first wait on the aggregate future and then we wrap it in another future. that seems wrong, right? the
Candidate: minor nit: we could use <UNK> instead of marking the
Reference: i'd argue that  java import static pl.allegro.tech.hermes.integration.test.hermesassertions.assertthat; assertthat(publisher.publish(topic.getqualifiedname(), avrouser.asbytes()).hasstatus(created);  would be more verbose and clear at this stage than having it tested inside the publisher.
Candidate: you could use <UNK>
Reference: i know this is a tiny thing, but the mis-match of uppercase sql and lowercase sql things is odd to me. i don't care about which one we use, but
Candidate: you could use <UNK>
Reference: empty return isn't needed
Candidate: you could use <UNK>
Reference: i would call the new addnewmodelelements directly
Candidate: this should be a reference to <UNK>
Reference: proxyports.stream().map(proxyport -> "localhost:" + proxyport).join("terracotta://", stripe_separator) or something similar
Candidate: we can print the exception here too?
Reference: chanelling nils... spaces between ) and { and between if and (
Candidate: i doubt that this would be a little strange, but i am missing something?
Reference: assertions has a method to handle collection size. use that, test fail messages will be much nicer.
Candidate: you could use <UNK>
Reference: why executing so late? shouldn't we execute that as soon as possible after backend?
Candidate: we should move this to the try-catch block
Reference: why introduce ra = cp?
Candidate: if this is is never used.
Reference: why not map this and then collect it as a list?
Candidate: ![major](<link_1> 'severity: major') either remove this [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0>
Reference: would you please invert this if as well?
Candidate: system.currenttimemillis() instead system.currenttimemillis() calculator system.currenttimemillis() system.currenttimemillis() system.currenttimemillis() system.currenttimemillis() system.currenttimemillis() system.currenttimemillis() system.currenttimemillis() system.currenttimemillis() system.currenttimemillis() system.currenttimemillis() system.currenttimemillis() system.currenttimemillis() system.currenttimemillis() system.currenttimemillis() system.currenttimemillis() system.currenttimemillis()
Reference: objects instead of values here too if you are doing in the provider
Candidate: you could use <UNK> instead of system.out.println
Reference: seems only one test is failing, we can first convert the key to path and then use getpath instead of getrawpath in uribuilder. something like this worked for me -
Candidate: can we use a gson here instead of creating gson gson gson gson gson gson gson gson gson gson gson gson gson gson gson gson gson gson gson gson gson
Reference: raw type, needs <?>
Candidate: this is not a <UNK>
Reference: does not compile on neon, prefer: autoscalediagramcheckbox.addselectionlistener(new selectionadapter() { @override public void widgetselected(selectionevent event) { autoscalediagram = autoscalediagramcheckbox.getselection(); } });
Candidate: is there a reason for this method is not empty?
Reference: again you're concatenating strings instead of using the api as provided. how about java final path confpath = paths.get("target", "test-classes", "hbase-site.xml");
Candidate: you could use use <UNK> instead of <UNK>
Reference: what happens if the folder plugin is not installed and the class is not available?
Candidate: this is designed to be a <UNK> <UNK>
Reference: have you merged master? i thought i fixed this to include the exception in the message... i might've just not pushed it yet, but let's make sure that we have
Candidate: you could use <UNK>
Reference: i was assuming a different syntax for this:  values("id", "name") .row(k(1), k("ana")) .row(k(2), k("fred")) .row(k(3), k("manuel")) .row(k(4), k("rita"));  does it make sense? or is it trickier to use?
Candidate: you could use <UNK>
Reference: maybe we can be a little more conservative and avoid creating the new type timestampedserializedkeyvaluestore, and therefore avoid changing the decorators at all. i'd like to avoid any reasonable possibility
Candidate: you could use <UNK> here instead of <UNK>
Reference: why is this public, when exponentialmovingaveragerate's is private ?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: first i would make intervaltoindexmap final and give it a size estimate in the constructor as you know how many elements it is going to have.
Candidate: <UNK> -> <UNK>
Reference: i don't think the intent can be null in the normal course of things, so this check is not needed.
Candidate: i encoder's encoder's lineseparator coupling from id id id id id id id id id id id id id id id is not <UNK>
Reference: this should follow the normal exception handling path and let the caller handle the printing of the exception.
Candidate: throw an exception exception
Reference: this logic is not same as per branch-2 patches. what is different here? why?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: getvalue needs only to be called once (nitpick):  return string.format("byte@0x%1$x=0x%2$x (%4$d)", pointer.nativevalue(getpointer()), getvalue());
Candidate: please use underscores
Reference: doesn't stringutils.isnotblank already compare for null?
Candidate: you could use <UNK>
Reference: not just the size, but also the contents of the list can be useful.
Candidate: if you could use <UNK> here instead of creating a temporary somewhere, and the clear() will always be a performance branch somewhere, and the clear() will be
Reference: this feels like it'll implode, let's see
Candidate: @vilchik-elena you could use a constant instead of <UNK>
Reference: just wondering...is it worth putting the rc == fmt check first for a short-circuiting efficiency improvement?
Candidate: this is not efficient, but i would be more efficient, but still, i am not sure how about the <UNK> completes
Reference: shouldn't this be return totalexternalaccounts > 0?
Candidate: this is be explained to the use-case.
Reference: why is the compareandset() necessary? why would this method be called more than once?
Candidate: this is not to tear down to the
Reference: no need, you can simply use : if (destdomain.isbackup()) {
Candidate: rename to
Reference: <link_0>
Candidate: we could use a constant instead of creating a new <UNK>
Reference: suggest retaining untranslated strings and translating during rendering.
Candidate: you could use <UNK>
Reference: no need to check isenable() here. its checked in identityprovidermanager before invoking the listener. that's the contract of the interface - to say whether the listener is enabled or not.
Candidate: this is a bit strange,
Reference: is the coupon automatically redeemed? or should it be applied to the subscription explicitly?
Candidate: @orhan89 this readasstring(...) instead of <UNK>
Reference: would be better to not turn off, this affects all tests.
Candidate: suggestion <UNK> = <UNK>
Reference: remove setting location
Candidate: this is not saving the the initialization.
Reference: selectors cannot be fetched from the database
Candidate: if you could move this to <UNK>
Reference: looks like the specific instrumentation method that classpathagent uses can be used with java 8 and below. why not just use that there?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: will create a constant with a meaningful string.
Candidate: i think that this is is not <UNK>
Reference: code style: just wording, "completed" sounds a little bit misleading, imo "retry limit exceeded" would be easier to understand from the logs.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i would have liked to see another file to get another value for cognitive complexity here, showing that it is now indeed computed on whole file/project and not only at
Candidate: please use <UNK>
Reference: same here, not sure this construct buys us much.
Candidate: suggestion <UNK> = new <UNK>
Reference: must be "replace"
Candidate: suggestion <UNK> = <UNK>
Reference: i don't think this is correct. the explain interface wants to explain _only_ this entity projection. the getquerytext function is returning everything to date that has happened with this projection.
Candidate: this should be <UNK> plural to be null.
Reference: i'd replace that by just !invert.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: should this method be final?
Candidate: is there a reason to assert that this is not throw an exception?
Reference: we should log this exception. it is ok to continue, just make sure the error goes into the log.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this is not a good assertion, it should instead check that the count you get back when you call getordertypes(true) has increased by 1 and that the new item has
Candidate: is there a reason for this method is not implemented in the <UNK>
Reference: exception should be logged also for debugging purposes?
Candidate: we could use a <UNK> <UNK>
Reference: what if the session is closed remotely before the producer is able to close it? won't closelatch be uninitialised?
Candidate: <UNK>
Reference: labels must be externalized and internationalized (by creating a class which extends nls and using a messages.properties)
Candidate: please use <UNK>
Reference: useless cast from long to double.
Candidate: is there any particular reason for this logic?
Reference: all single characters can be represented as ','. might make it slightly easier to read.
Candidate: i am not this architecture is architecture architecture architecture architecture architecture architecture architecture architecture architecture architecture architecture architecture should be architecture architecture architecture architecture architecture architecture architecture architecture architecture architecture
Reference: also here we can print some warning message or something for us to know its not yet persisted.
Candidate: this should be <UNK>
Reference: please use the closequietly methods at dbutils
Candidate: is there a issue?
Reference: i assume this function must only be called if the service is activated. eventpublisher is a mandatory reference, so no need to check for nullness.
Candidate: i think this should be called here instead of calling <UNK> true)
Reference: i think logger was legitimate in this case, because it is not related to slave logs
Candidate: this miss?
Reference: change this to typeconstants.java_lang_record
Candidate: this is not a bit nervous that we could use <UNK>
Reference: please remove the same set on 1065.
Candidate: this is designed to be <UNK>
Reference: suggestion if (!chatchanneluser.getavatar().isempty()) { return; }
Candidate: you could use <UNK>
Reference: we still need to pass the blockchainstate here so the notification will be updated with the sync state.
Candidate: you could use a broadcast here instead of <UNK>
Reference: looks like displayheight is 0 when running in api 10. we'll still need to fall back to the original method of getting the height.
Candidate: you could use <UNK>
Reference: i think you would also need to teleport the passenger after dismounting, no?
Candidate: this should be <UNK>
Reference: here, you should add some assertions. i would set a variable to the result of saveuserlocation, then assert that an id and a uuid are assigned.
Candidate: is there a reason for the <UNK>
Reference: instead of creating a gridlayout here, use a gridlayoutfactory at the end of the method.
Candidate: you could move this to <UNK>
Reference: i was thinking of keeping it, just making it less verbose.
Candidate: i think that this will be a <UNK> that will be tracking activated to <UNK> that will be squashed to the <UNK>
Reference: why did you remove the statedata?
Candidate: is there a reason why not empty?
Reference: this results in a rather ugly label - i would reduce it to product.getname()only. for the address, you can use 'discoveryresultbuilder.withrepresentationproperty()' - this makes sure, that the address is also
Candidate: should be be <UNK>
Reference: static import max (similarly to min in this class)
Candidate: i think that this should be a to <UNK> the <UNK>
Reference: please remove the done boolean as explained above.
Candidate: log.debug exception
Reference: i would just close the if and don't use the else --> way too much code for an else branch. i think, using the if as guard here is ok.
Candidate: i think that this is not <UNK>
Reference: need to revise to trace() for the final version.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: we are to ensure all other attributes from both sources are still here.
Candidate: you could use a constant instead of <UNK>
Reference: we use assertj library, our assertions look like assertthat(something).isequalto(expected)
Candidate: you could use a mock here instead of creating a new object object and 16?
Reference: this should use getindexid()
Candidate: is there a reason for this?
Reference: merge with the previous line
Candidate: no need for the
Reference: might be ok to assume the tuple elements are not null.
Candidate: use objects.equals() instead of objects.isnull
Reference: it seems not to be a good idea to open the same file for reading and writing at the same time. if you move the output stream back down, it
Candidate: you could use reflectiveoperationexception instead.
Reference: should this class and its methods be package-private instead of public?
Candidate: i think this should be a <UNK> <UNK>
Reference: config file has glusterfs storage enabled in 3.3, should this be changed here too?
Candidate: please use <UNK>
Reference: can this be part of the entity class instead? e.g. public static string primary_key_name = "googleid";
Candidate: this should be a <UNK> github
Reference: this doesn't appear to be working -- that is i have stuff that i can resolve in an editor, bvut i'm not seeing an icon.
Candidate: this should be a npe here
Reference: there is one more place we check emittedeventdao.hasbeenemittedbefore(event);  <link_0>
Candidate: @manuelplazaspalacio we could move this to <UNK> tracking the layout view?
Reference: i don't think this change was intended.
Candidate: this is is not organization
Reference: this should be registered to the "standard" special paths, imo.
Candidate: you could use a constant for s?
Reference: remove copypast
Candidate: typo: <UNK>
Reference: this won't get called in situations where system.exit() succeeds. <link_1>
Candidate: i think we could use <UNK> instead of creating a new instances of apply, strategy.
Reference: so we are adding a new top-level element to ejb3 subsystem configuration. how is the version and namespace evolved? do we need to bump it from 5.0 to 6.0, or
Candidate: wdyt about "return <UNK>
Reference: why do we need to check bound here? wouldn't min be null if we only ask for maxtime?
Candidate: you could use a foreach method instead of repeating <UNK>
Reference: since connectionstage is initialized with completedwithnull, this connectionstage == null check can be removed or checked against completedwithnull.
Candidate: maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe something like
Reference: put a <code>list.size()</code> into a variable, before the for statment, its best for perfomance
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i wouldn't prefix with 'qe-' to make this shorter - the data-ouia prefix of attribute says it all - for use during testing.
Candidate: this is a <UNK>
Reference: i'm curious how we decided that 1h is the recommended value for monitor interval, and why a smaller value, say, 30min can cause pressure on metastore?
Candidate: rename to <UNK>
Reference: export ld_library_path= doesn't seem to be necessary with my distribution of bitcoind. also, config.bitcoinpath seems to expect to be pointed to the bin sub-directory of bitcoin-core's home (the one that
Candidate: this should be helpful thanks.
Reference: you are ignoring the sync parameter. the recipients can be replaced with a single address (it doesn't change since it is assigned in the constructor)
Candidate: you could use a <UNK>
Reference: point outside of image
Candidate: you could use <UNK> <UNK>
Reference: why move this before clearallerrors()? the tracking call should probably be performed at the end.
Candidate: is there a reason for this logic?
Reference: nit: one liner: this.features = objects.requirenonnull(features, "provided features can not be null.");
Candidate: i think we should be a here instead of: picky in a pr, but i am not sure that this is correct.
Reference: tissueoriginimpl.unsaved_id if we're being pedantic.
Candidate: if you could use <UNK> <UNK>
Reference: what happens if a task finishes in this block of code?
Candidate: style nit: no braces around single line blocks
Reference: changes in 3 tests above don't seem relevant either.
Candidate: nit: readasstring(...) instead of <UNK>
Reference: since you intend to resolve the property by its name, you should be aligned between this value to the property name as defined in the enum itself, the resolution of
Candidate: i think we should use a <UNK> <UNK>
Reference: typo: unsupported pool type...
Candidate: remove the
Reference: you can skip this peek and add requirenonnull(columntype, "columntype is null"); in createcolumnstatisticsforemptypartition instead
Candidate: static
Reference: unnecessary
Candidate: this should be <UNK>
Reference: i think that this condition is not sufficient. we end up creating an ambiguous symbol in the following case and i suppose we should not:  x = 42 x
Candidate: could you use objects.equals()
Reference: check for null - someone might be calling createchannel() while someone else is calling destroy().
Candidate: this is a bit deeper but i would be reduced to <UNK>
Reference: i am totally fine with this, but do you think it makes sense to just have all of our resources return a common exception class with a code and a
Candidate: is there a reason for this method to be called in the <UNK>
Reference: why not to prefet it to return the value of the inner method ? so line 134-135 would look like: return failvalidationcannotplugpassthroughvnicnosuitablevf (...); ?
Candidate: you could use <UNK>
Reference: newstory
Candidate: you could use a string instead of <UNK>
Reference: use a simple setter (notice that the setwaterlevelincrementratio doesn't have this side effect) and have either the acceptorconfig set the default value, similar to how it sets 400 for late
Candidate: wait.forelementclickable() should be <UNK>
Reference: i think this may have been white for a reason...
Candidate: this is not be a
Reference: possibly add this for safety to prevent an infinite loop, wasn't sure about adding it in the while loop condition as he may want it for the first exception, and
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: how does success/failure information get back to the callee?
Candidate: suggestion throw new <UNK> "invalid " + <UNK> + " + " + " + e, + ".
Reference: it's more readable to just close it - especially when using java7 try-with-resources.
Candidate: you could use <UNK> here too?
Reference: rename to launch
Candidate: you could bail here instead of <UNK>
Reference: this kills the app. no seriously, keeping a reference to the activity as the context is a bad thing. use getapplicationcontext to make sure you dont get activity leaks (not
Candidate: you could use checkargument here instead of <UNK> edges,
Reference: the call to super() is superfluous and can be removed. the compiler will take care of this.
Candidate: <UNK>
Reference: isn't the offset the frequency of the cron job?
Candidate: should we throw exception here instead of printing the exception
Reference: sysout
Candidate: you could use this unconditionally, as well.
Reference: you can remove this line
Candidate: we should synchronize on the
Reference: can we reorder this if-then-else? to:  if (stringutils.isblank(consoleproxyurldomain) { // blank config, we use the proxy ip sb.append(proxyipaddress); } else if (consoleproxyurldomain.startswith("*")) { sb.append(proxyipaddress.replaceall("\\.", "-")); sb.append(consoleproxyurldomain.substring(1)); // skip the
Candidate: use utf-8 instead of <UNK>
Reference: a proper float epsilon should be used here. flow-math has a value in genericmath.java that can be used for this, just copy paste it.
Candidate: this is be simplified to ==.
Reference: please not here. this is not a standard swt table.
Candidate: this is not <UNK>
Reference: why zeros?
Candidate: you can use iterators instead of creating a iterators instead of creating iterators instead:  <UNK> <UNK> = new <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK>
Reference: if deprecated, do we wanna just not add it ?
Candidate: use <UNK>
Reference: fwiw, in case you were unaware, outputsettings supports the builder/fluent idiom so you could chain these calls without referring to a local variable over and over. in fact, i suspect
Candidate: suggestion <UNK> = <UNK>
Reference: ts -> typespec
Candidate: you dont need this check for the
Reference: why not : hostjobsinfo = (map<string, object>) temp;
Candidate: you could use <UNK> here instead of <UNK>
Reference: one minor nit, would you mind add check for other distinct functions? coz we don't support sum distinct yet.
Candidate: if you could use <UNK> <UNK>
Reference: will this always split after first comma (or at index 70), also for commas e.g. in version ranges ? i was thinking maybe to reuse manifestelement.parseheader() instead of this low-level
Candidate: suggestion <UNK> = <UNK>
Reference: why is this necessary?
Candidate: you can use <UNK>
Reference: rather than directly accessing these instance variables from the metrics class, it would be clearer if you have a method such as: reporthourlyrunnerstarttime(string topic, string hour, long starttime)
Candidate: you could use <UNK>
Reference: should this catch the more generic exception instead? if there's any kind of exception thrown from the plugin, it won't be caught here. also, gopluginframeworkexception might not mean no support
Candidate: should we throw a exceptions?
Reference: i would rename it to analyzedbefore => it's a project search, it doesn't make sense to search for project having been analyzed in the past : i would not put
Candidate: you can use a <UNK>
Reference: returning boolean type is useless here because it can only return **true**, or throw timeout exception.
Candidate: we should throw an exception instead of returning null?
Reference: you need to change the text on the effect because you're changing the filter text
Candidate: costs
Reference: seterrormessage
Candidate: @ivange94 readasstring(...) instead
Reference: add a class like gerriteventkeys to gerrit-events then use it.
Candidate: if you could use <UNK> <UNK>
Reference: now it can be simplified to set<set<schedulingexecutionvertex>>.
Candidate: <UNK> -> <UNK>
Reference: need a default case?
Candidate: i think we should be "invalid the error message is not
Reference: would call it only 'buildimage' as the potential autopull of the base image is more an implementation detail.
Candidate: you could move this to the property?
Reference: use fragmentutils:isfragmentuiactive
Candidate: this is not <UNK>
Reference: one general question that is not in your code change. why do we use nanoseconds instead of milliseconds here?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: you have this same line in every case. how about moving it after the switch.
Candidate: is there a reason for this logic?
Reference: since you now have access to the page.listkeys() property here, maybe you could add a check to update the delete button label to name the specific list the page is
Candidate: this is designed to be added to the <UNK>
Reference: instead of replacing, can you escape the quotes?
Candidate: >= <UNK>
Reference: nit: rename this variable to filteredchildren
Candidate: you could use get() instead of creating a object instead of the
Reference: maybe: private static <t> list<t> extractlist(map<string, object> xmlrpcstruct, string propertyname, boolean returnnullonempty) { object[] items = (object[]) xmlrpcstruct.get(propertyname); if (items != null && items.length != 0) { return arrays.stream(items).map(item ->
Candidate: i would be a bit more than <UNK>
Reference: @ankritisachan correct.
Candidate: wait.forelementclickable() should be <UNK>
Reference: concepts are cached, so it's not a big deal if the conceptconnector is called twice.
Candidate: this is required?
Reference: the defaultpluginmanager was almost a "runtime view of/access to plugins". it didn't really know about plugin locations and the filesystem, till now. are you sure you want it to know
Candidate: if you could use a local variable instead of creating a copy of 16?
Reference: no space after ! (several other instances below)
Candidate: i doubt that this is not correct.
Reference: arrays.aslist?
Candidate: please move this to <UNK>
Reference: scala.collection.javaconversions -> javaconversions
Candidate: we could use <UNK> instead of <UNK>
Reference: this assumes that the order of your expectedlanguage is the same as actuallanguagelist. what if they returned "es", "en" rather than "en", "es"? your test would fail.
Candidate: could be replaced with <UNK>
Reference: and this one too.
Candidate: is there a reason for this test?
Reference: hmmm, this changes the semantic of what we do significantly as we now replace every occurrence in the query. there's no risk at doing that?
Candidate: we could use only:  <UNK> -> <UNK> <UNK> -> <UNK> <UNK> <UNK> -> <UNK> <UNK> <UNK> <UNK> -> <UNK> <UNK> <UNK> <UNK> -> <UNK>
Reference: why do you need this? is this the case when cluster is down and cant get connection? also should this be only when auto connect is enabled?
Candidate: is there is a waiting for waiting for a waiting ?
Reference: we shouldn't require the ?test param
Candidate: we should use the logger to <UNK>
Reference: i think this set of conditions is a bit hard to read, can you change it to something like: if (child != null && child.getextractiontype() == extractiontype.many_to_one) { return extractiontype.many_to_one;
Candidate: you could use <UNK>
Reference: why is this public?
Candidate: i think this should be a <UNK> <UNK>
Reference: any tests to show the interaction of the 2 holiday calendars?
Candidate: you could use <UNK> to <UNK>
Reference: seems a little repetitive wrt. the method above.
Candidate: i'm assuming that this is going to have a classcastexception if someone tries to classcastexception costs is not return an illegalstateexception or something.
Reference: getemailaddress can return null.
Candidate: wait.forelementclickable() could be <UNK>
Reference: this needs an assertion that the operation was retried
Candidate: you could use <UNK> here instead of <UNK>
Reference: - how about replace the other fields (i.e. domain, path)? they can also have variables. - does it really need to create new cookies? (it could use the setters.)
Candidate: i liked that this will be printed on the
Reference: why does this need getcallermoduleloader? i realize the previous code was doing this, but there are better ways to obtain a module loader. (getclallermoduleloader use stack crawling which is quite
Candidate: you could use a checkargument here
Reference: is it possible that this query will still return more than one broadcast? if so, is there a way to be sure that we're getting the intended livechatid? for example,
Candidate: if this "return" stringutils.isnotblank()
Reference: fix cyclomatic complexity sonar issue
Candidate: please use <UNK>
Reference: this should use a stringbuilder.
Candidate: if we is a unconditionally, but i would be a bit more obvious that the is not <UNK>
Reference: forgot something?
Candidate: you could move this to a separate method.
Reference: conditions -> breakpointconfiguration
Candidate: same as <UNK>
Reference: does this have to be after the above line? seems like it may as well be right before. or you could just check that the returned list is empty. or
Candidate: use <UNK>
Reference: the message is slightly confusing and should be "contains duplicate ch profile:" (?)
Candidate: suggestion if <UNK> == null) { <UNK> = new <UNK> }
Reference: dont you need to check for exceptions here too.
Candidate: if we are going to have a refactor, but we could have a lock (because the lock will be skipped due to a lock
Reference: check for null artifact before using?
Candidate: is there a reason for this method is not <UNK>
Reference: i would expect the compiler to optimise it but still, how about moving this line after the check below so it would be more clear that this field is not
Candidate: i'm not sure how about sure about about about about about about about about about about about the cluster check)
Reference: those functions are confusing because they may return null but under our assumption pdb should always has at least one segment. maybe assert(entry != null) is more readable.
Candidate: please use <UNK>
Reference: the isempty() test is redundant. you can just call itemstoremove.foreach(item -> thir.remove(item))) directly without testing for emptiness. if it's empty no item will be removed in the foreach, which is
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: thanks. will change it.
Candidate: you can use foreach here instead of stringbuilder?
Reference: can you rename any local vars that have used ns - otherwise could get confusing.
Candidate: is there a reason for element?
Reference: this is a long lambda; would it make openeventstream() easier to read if it was granted private-method status?
Candidate: let's pull out this property?
Reference: would it be better to use explicit values instead of random? for example, we know all the corner cases would be around bits being split across read boundaries. we can
Candidate: you could use system.currenttimemillis() instead of <UNK>
Reference: given/ execute/ assert sections.
Candidate: you could use system.currenttimemillis() please.
Reference: this doesn't have to be public. just use default package access since only thee cache impl in this package has to see it.
Candidate: this is a <UNK>
Reference: nit: save math.log(mlogbase)) as a constant since we need this frequently?
Candidate: you could use <UNK> instead of storagetype <UNK>
Reference: i think we need to add first themonitor.begin("refreshing", 1);
Candidate: i guess we should be <UNK> to <UNK>
Reference: can be simply replaced by:  organizationdto organization1 = db.organizations().insert();
Candidate: is this ok to a test that this is is not used?
Reference: add newline before return.
Candidate: add newline before return.
Reference: enclosing the ipv6 address in [] is not needed with the uri constructor you use at l248. otoh, networkutils.formatpossibleipv6address() does more than just add the [], it also does the
Candidate: i'm not sure that this is wants to retry more.
Reference: maybe remove the first 2 :?
Candidate: i'm not sure that we want to have a state that is is not set in the <UNK>
Reference: since the method removeappender(string) will have to internally call getlogger(string), what about changging to logger.appender(loggername) to loger.removeappender(appender)?
Candidate: use <UNK> multimap instead of <UNK>
Reference: if it's null it's invalid? if it's null, shouldn't it be valid (and default to 1 basically)?
Candidate: please use <UNK>
Reference: casting would be faster...
Candidate: if you could use <UNK>
Reference: can be done on 1 line
Candidate: use a string instead of creating a string
Reference: this returns the expression, you can combine this line and the next
Candidate: this doubt this is not used?
Reference: i would choose another name for the property name, the term version being probably widely used in existing databases. ideally it would be configurable by the user.
Candidate: could you please use <UNK>
Reference: instead of checking a concrete class consstring that's tied to rhino implementation, check a common class instead: if ( source instanceof charsequence)
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: ![info](<link_0> 'severity: info') do not forget to remove this deprecated code someday. [![rule](<link_1>](<link_2>
Candidate: this is designed to be an organization of the
Reference: why is the overlapsinterval part needed in the filter? won't that always be true due to the query?
Candidate: i'm not sure how about removing the <UNK>
Reference: remove this
Candidate: suggestion throw new <UNK>
Reference: i know it's a pita but i really think interruptedexception should be dealt with specially here to reset the interrupted status.
Candidate: you can use putifabsent instead:  java return (throwable == null) { return false; } }));
Reference: add final keyword.
Candidate: final
Reference: final?
Candidate: use <UNK>
Reference: there should be added a break;
Candidate: please move this to getparameters().getstoragedomainid()
Reference: could you update this to also add a logger.warn statement if we ever do this? i want to work through updating these flows. thanks!
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: - did you checked if return value of this method is used in calling methods? - did you checked if previous thrown exception is handled in calling methods?
Candidate: this is designed to be a dedicated constants for them, instead of readability
Reference: is this even possible?
Candidate: this is not null
Reference: do we need this to be public? i only saw it's being called in handleauthentication.
Candidate: is there any particular reason why this constructor?
Reference: is this the same as system.currenttime in milliseconds?
Candidate: you could use <UNK>
Reference: @tarun0 why don't you use this <link_0>
Candidate: use <UNK> <link_0>
Reference: best make this private method.
Candidate: no need to instantiate this class is already initialized in the model.
Reference: reformat code
Candidate: i think this is a <UNK>
Reference: assertnull ?
Candidate: wait.forelementclickable() should be <UNK>
Reference: 1. i would expected this kind of code to be in the parent component. 2. at first sight, it seems that the **basegridwidgetkeyboardhandler** may handle operation that happens on a
Candidate: wait.forelementclickable() should be <UNK>
Reference: this needs to be mapping.gettargetannotationvalue() instead of mapping.getsourceannotationvalue(). this property is actually not used in java 8, but it is used correctly under java 9, and not because of us,
Candidate: is there a reason for the query types?
Reference: interface appended to variable name
Candidate: use <UNK>
Reference: nit: empty -> null here and in other places
Candidate: this is is never thrown.
Reference: discarded non null all the time. you must use !isempty() or ignore it here.
Candidate: same as above.
Reference: i am concerned about this synchronized code piece, since this will be called on every request. my concern is this will slow down things. do we need synchronized block here
Candidate: we should throw an exception instead of callers
Reference: don't really like the "continue" keyword but why not. but can you use brackets, i'm not sure it is 100% true but we prefer to not have if without them
Candidate: you could use a log.
Reference: i personally would prefer to use a dedicated type for the return value. fiddling with multi-dimensional arrays makes the code unreadable and unmaintainable, from very beginning.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: just minor q - if you remember, from some last task, we updated the [resourcetype](<link_0> to add the bpmn-cm extension as well as the bpmn/bpmn2 already existing ones, you remember?
Candidate: please use stringutils.isnotblank()
Reference: why did default change?
Candidate: <UNK>
Reference: i don't think this is the reported issue; the problem is result.getreturnvalue() can return null, which is not allowed by the handleresult contract.
Candidate: use <UNK>
Reference: superinjectiontarget.injectionmap.isempty() always false
Candidate: i think, you could use a <UNK> <UNK> paths?
Reference: technically bind has exactly the free variables that are in the "toreplace" part. the inexpr can use varname, and nothing else.
Candidate: @manuelplazaspalacio is a bit confused free to use 'final' 'final' near 'final' 'final' near 'final' 'final' near 'final' 'final' near 'final' 'final' near 'final' 'final' near 'final' 'final' near 'final'
Reference: setted is typo
Candidate: this is strange, deadlock
Reference: is 30 correct here?
Candidate: could you please use this feature here instead of <UNK>
Reference: actually this prevents passing durable=false to any binder, including rabbit.
Candidate: is there a reason for this logic?
Reference: similarly to the static enum thing, i subjectively like to make enum constructors explicitly private even though there's no practical difference. any particular rationale for this change?
Candidate: please use <UNK> % <UNK>
Reference: you shouldn't need .tostring() here...
Candidate: if you could use <UNK>
Reference: p3: "jenkins tfs plugin" -> "tfs plugin for jenkins" ?
Candidate: if this is is not efficient, but i guess that this is is false, but i guess we should delete.
Reference: why boolean, not boolean?
Candidate: <UNK>
Reference: you should return the object returned by the saveandflush method here.
Candidate: @ivange94 is not good idea.
Reference: if there is no particular reason to make anything public then it should be private (or package-private in case)
Candidate: <UNK>
Reference: we can remove this soft assert as well as this path will definitely get hit for someone using this functionality,
Candidate: no need to check for null : <UNK>
Reference: shouldn't this use one of the guard methods?
Candidate: you could use <UNK> instead of <UNK>
Reference: remove "this."
Candidate: you could use <UNK>
Reference: can this method be private?
Candidate: this is be repelaced by <UNK>
Reference: did you just mean to use loggerrule? or are you doing it the hard way specifically to capture agent logs?
Candidate: please use <UNK>
Reference: nit: you can use collections.emptymap() here.
Candidate: static import
Reference: delete the file afterwards
Candidate: you could use the <UNK>
Reference: again i would prefer systemutils.is_os_mac_osx
Candidate: you could use the constants instead of <UNK>
Reference: i think this doesn't need to be checked. circuitbreakerregistry create or get when you request a circuitbreaker. therefore, it cannot be null, and it must be the same as the
Candidate: this is explained to <UNK>
Reference: shouldn't be here null instead of string relating to the name of violation?
Candidate: you could use stream() here instead of <UNK>
Reference: prop: i would not add the client if it is already contained in the set.
Candidate: is there a reason that is not to be a <UNK>
Reference: with this change, the put order is not guaranteed any more. let's say a sequence of put event: 1. put(1, 10) 2. put (2, 20) 3. put(1, 5) the 1st
Candidate: minor: you could use a property?
Reference: should we just always cast to mutableyamlmapping without instanceof?
Candidate: if this is is designed to be <UNK>
Reference: what about collections.emptylist(); which don't need to create new instance
Candidate: you could use computeifabsent
Reference: maybe use zlog so that we receive the error in crashlytics? this might be too noisy tho :)
Candidate: <UNK>
Reference: is it possible for this token to be an instance that is not assignable from baseauthenticationtoken at this point? should its class be checked first?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: you need to take into account that the default is fs, and can be omitted. so having 2 entities with one of them pointing to local-heap, would cause only 1
Candidate: objects.isnull
Reference: redundant else
Candidate: is there a reason for this change?
Reference: omit assert. ?
Candidate: this is not needed for the
Reference: could we please use field instead of f to be consistent with line below?
Candidate: you could use <UNK>
Reference: suggestion double[] offsets = getoffsets(minrange, maxrange);  might be a better name?
Candidate: you can inline the args?
Reference: why initial? does 1 work? 1 should be the default (i.e. opaque) value of opacity.
Candidate: wait.forelementclickable() should be <UNK>
Reference: static import
Candidate: you could use operand instead of <UNK>
Reference: is there a reason we wouldn't fix this one also? or is it not possible?
Candidate: this is be to be <UNK>
Reference: as far as i remember, stream.append is an o(n) operation, so the whole op will be o(n^2). i believe you should use two java's arraylist objects to partition.
Candidate: i would be clearer to the iterator also.
Reference: this would continue to attempt to lock regardless the lockacquisitiontimeout (if any): i suppose it would be more robust if you will check the timeout anyway. there are tests that
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: suggestion system.out.printf("requisition import triggered asynchronously for url: %s\n", url);
Candidate: i think we should be a string instead of <UNK>
Reference: speedcontroller not customspeedcontroller
Candidate: typo: <UNK>
Reference: remove blank line.
Candidate: <UNK>
Reference: passing in this looks ugly.
Candidate: we should use the <UNK> constructor?
Reference: this method and logic seems to assume that the list that's being passed in meets the following criteria: * the list is never smaller than previous invocations * the new
Candidate: could be simplified here instead of null?
Reference: do we need a null check here?
Candidate: this is not <UNK>
Reference: remove
Candidate: please use <UNK>
Reference: make this an else-if instead checking that it is a charelement. then add an else case that logs an error and returns some itohex that doesn't do the conversion (like
Candidate: you could use <UNK>
Reference: maybe we should refactor it . i mean... it seems little complicated :) i mean this big stream pipeline.
Candidate: i we assuming that tracking the size.
Reference: this code looks chaotic. please simplify. boolean result = verifier.verify(); boolean timeout = (system.currenttimemillis() - start) > timeout; if (result || timeout) { if (timeout) { log.error() } return result;
Candidate: i'm not sure how about removing this change.
Reference: it is preferable to use something like : manifest manifest = new manifest(is); attributes attributes = manifest.getmainattributes(); string eeversion = attributes.getvalue("bundle-requiredexecutionenvironment"); instead of a bufferedreader that reads each line...
Candidate: you could use <UNK>
Reference: we should add also persistcommandifneeded() to keep the parameters update
Candidate: you could use <UNK>
Reference: remove whitespace
Candidate: this could be replaced with <UNK>
Reference: (nit) the wording of the exception may mislead some end users into thinking that they have forgot to do something when in fact this is an error on the developer's
Candidate: static?
Reference: nit: final here. and the following variables.
Candidate: you can use a jdk contents. instead of <UNK>
Reference: besides just checking whether the exception is thrown, is it possible for you to check the error message? this is because even with actionfactory.java, there can be actionmappingexception thrown for
Candidate: i'm not sure how about the sure about the sure that this is is not
Reference: indentation (and rest of pr)
Candidate: log.debug
Reference: a note here about why the exception is being swallowed and null returned would be useful to the reader.
Candidate: is this <UNK>
Reference: can we report this to the ui in a more ux way: i'm thinking about reporting an info status to the databinding framework would be more user friendly
Candidate: <UNK> -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e ->
Reference: if we want to limit maximum percent of heap to be used for the cache, it should be done in the preference page, not here.
Candidate: you could use a static final int align <UNK> 6, 6, int <UNK> = 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
Reference: use a constant
Candidate: could we print the stack trace instead of printing the
Reference: what was the bug here ? can you file it in issues and separate out from this pr ?
Candidate: you could use a try-with-resource here instead of creating a new <UNK>
Reference: this would look more readable to me as return isgenotypeintransition(g, transition) || is genotypeintransition(g, transition.complement()).
Candidate: suggestion if <UNK> == <UNK> && <UNK> { ... }
Reference: i do not see such test which especially covers the zk case
Candidate: if you could move this to <UNK>
Reference: this is the only usage of the repowalkscache and it show that we only need the revwalk object (not the repowalk). change the return type of repowalkscache.get to revwalk?
Candidate: @manuelplazaspalacio this is designed to be called in the ctor
Reference: final
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: should put a null object in the cache if the model was null. otherwise repeated cache misses will result in going to file system again and again.
Candidate: could we use <UNK>
Reference: this will be needed in all binder tests. create a base test class for all binder tests that initializes the injector variable in a @beforeclass method, so tests can just
Candidate: you could move this to <UNK>
Reference: the space on the following line should be added to this append. it will be cleaned up by the trim at the end in the current code, but the space
Candidate: you could use a dates.
Reference: is it guaranteed this method is going to be called only once? imho it would be safer to perform clear on mocklocationproviders first
Candidate: if you could be a <UNK> <UNK>
Reference: add here: string contributorname = "<unknown>";
Candidate: i think warn level
Reference: ![major](<link_0> 'severity: major') use "java.nio.files#delete" here for better messages on error conditions. [![rule](<link_3>](<link_4> ![minor](<link_1> 'severity: minor') do something with the "boolean" value returned by "delete". [![rule](<link_3>](<link_2>
Candidate: i think that this is be used?
Reference: the idea here is to wait for at least 1 second. 2000ms is used to be safe. is at most 2 seconds safe here?
Candidate: you could move this to a local variable?
Reference: this variable isn't being used anywhere, is this db access requires then ?
Candidate: what about the <UNK>
Reference: can it happen here that null is returned when current scene = null and project = null? can this be a problem?
Candidate: this should be null
Reference: this might throw nullpointerexception. we don't want unnecessary crash if we can avoid.
Candidate: we could use a <UNK> <UNK> <UNK>
Reference: maybe it would be more robust to check just by ids, to reduce possibility of bugs
Candidate: i'd suggest to use the <UNK>
Reference: i think a try-with-resources would be better, in case we raise an exception for instance.
Candidate: use <UNK>
Reference: why did we change it on 1? it doesn't work with multiple partitions?
Candidate: i think that this is not <UNK>
Reference: this should either be a **protected/private/or default** constructor, and the **list** should be copied so the pointer can't be modified outside of the class.  java this.reftokens = reftokens.clone(); 
Candidate: this is a <UNK>
Reference: trace this one?
Candidate: this is be <UNK>
Reference: this api is deprecated. i would just rely on the onconnected callback which duplicates this logic anyhow.
Candidate: you could use a constant instead of creating a tabs.
Reference: i think this will fail if the field is nullable. you will need to check and get the simple type. an example can be found here: <link_0>
Candidate: this should be <UNK>
Reference: nit picking here, but why wrap all of these exceptions in runtimeexception if the method is throwing exception anyways?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: in rw, key serializer, value serializer and transform serializer can be evolved.
Candidate: i think that this is not efficient, we should have to <UNK> <UNK>
Reference: **usb**
Candidate: i think this should be a conditional.
Reference: the properties from the base are null even before the mapping. to show what you want i presume they need to be non null before the mapping?
Candidate: i liked liked liked liked liked liked liked liked liked liked liked that liked that liked the is not liked that the is not liked that the is not liked
Reference: the cyrillic letters should be removed from the message.
Candidate: suggestion <UNK> = <UNK>
Reference: new arraylist<>(numtrainingdatainstance);
Candidate: @vilchik-elena could use <UNK> instead of <UNK>
Reference: why not use constructor drepresentationquery.drepresentationquery(drepresentation, session) and directly call drepresentationquery.getrepresentationdescriptor()?
Candidate: this is not throw.
Reference: when logging, the format should be "some_message: " + ... notice the colon, and the space after that. this must be consistent, fix in all the places.
Candidate: log message
Reference: channelcount -> decodedblocks.length for consistency with the next loop
Candidate: is there a reason for element?
Reference: there is no need to be explicit with these type arguments. jvm can infer them so they can be omited. java collections.emptyset()
Candidate: this is a bit weird.
Reference: commons:deletion_requests seems to be used multiple times throughout the code. perhaps a there should be a constants file defining these strings.
Candidate: suggestion <UNK> = new <UNK>
Reference: rather than catch the exception, you can add an annotation which tells junit to expect an exception and fail if it isn't thrown.
Candidate: we could use the exception here instead of <UNK>
Reference: it would be better to wait for "table properties" modal
Candidate: wait.forelementclickable() should be <UNK>
Reference: why wouldn't we want to be able to follow renames for a pair of files? i might be able to live with the restriction if there is a good reason
Candidate: you could use <UNK> instead of <UNK>
Reference: this should probably also check for active proxy support and fetch the uuid if it's enabled using glowserver.getproxysupport().
Candidate: this is not to be the println.
Reference: you don't really need a list here. you can just update it as context = context && node.istypeonly() assuming context is boolean.
Candidate: you could use <UNK>
Reference: could we rename to something like isfirstpacketofnewframe maybe? also, if we initialize it to false we can get rid of the else block below
Candidate: i think this should be a bit misleading.
Reference: :scissors:
Candidate: you could use <UNK>
Reference: getactivity().findviewbyid(r.id.tabs) should work here.
Candidate: i would be a bit more than <UNK>
Reference: sometime, idps uses samlp2 and saml2 as prefixes instead of samlp and saml, we should be compatible with that fact.
Candidate: this is designed to be a <UNK>
Reference: @ikhvostenkov you shouldn't leave the parameter in the same line as ( if ) is not there. so this line should be more like:  pslinkedin.parse( this.luserjson.fetch( new href( "...
Candidate: formatting:
Reference: should be all instance config. even it is not live, we will calculate the baseline with the instance config.
Candidate: why interact interact interact interact interact interact interact interact interact interact interact interact interact interact interact interact interact interact interact interact interact interact interact interact interact interact interact interact interact
Reference: windup/discover/java ?
Candidate: wait.forelementclickable() should be <UNK>
Reference: that's a bit unusual approach for testing data to use stringbuilder. typically we rely on the atomicreference. but let it be.
Candidate: i wonder if this is correct.
Reference: this is a little roundabout, right? the conditions where ids == null is where either !endpoint.equals("followers") or !endpoint.equals("friends"). really the preconditions should be checking _that_, and throwing a more verbose
Candidate: <UNK>
Reference: for now we should keep this method package visible only
Candidate: if you could use <UNK> <UNK>
Reference: again: missed math.abs() and {} arround procedure.appy(...).
Candidate: you could use <UNK> here instead of objects.isnull
Reference: you should use the getpropertyastype method to get a boolean <link_0>
Candidate: please use <UNK>
Reference: you should agree with me that the casting here is a redundant silly work...
Candidate: use <UNK>
Reference: do we need arraylist or an empty list ?
Candidate: <UNK> -> <UNK>
Reference: this if should not depend on webdav vs. dokany. windows drive letter selection should always be possible
Candidate: please use <UNK>
Reference: the ones that you just moved here (from being defined as constants) don't have the line break indentations. don't forget to add them.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: consider renaming splitedurl to spliturl
Candidate: we could use a <UNK> <UNK>
Reference: style nit: no braces here
Candidate: style-nit: i doubt that marking this unconditionally, but i would be a bit more complicated than to the variants. it seems like a bit strange to me.
Reference: will take a look at it today
Candidate: is there is no nodes, 1. no need 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2.
Reference: this requires that an export decoder is only used for one stream which is the current behavior of e3 but was not the original implementation so this a good limitation
Candidate: i think this should be <UNK>
Reference: if two threads call update with different bytes, but the same path, there is a race condition here where they both might end up calling announce(). we can either make
Candidate: is there a exception that exception is thrown in the exception
Reference: i'd correct also the local variable name
Candidate: you could use <UNK>
Reference: it would be great if we could stick the messages to the original location that led to the creation of the forged method.
Candidate: you could use <UNK>
Reference: we should either do this check for all updated limits or none.
Candidate: why is a <UNK>
Reference: why did the name change to "gmsmember" here? it was "memberdata" which kinda made sense because gmsmemberdata isa memberdata. i could see leaving it alone or maybe making it gmsmemberdata.
Candidate: appending to append the timestamp
Reference: please rename the setter and the datamember too
Candidate: how about using a constant
Reference: these properties had better go into a default instance of config implementation. sqltoconverter constructor without config should use the default config instance. this(viewexpander, validator, catalogreader, cluster, convertlettable, default_config) move line
Candidate: use readasstring(...) instead
Reference: warning: sometimes in the existing code there is a check of getmodelaccessor() != null .
Candidate: this is not sure that this can be reduced to <UNK>
Reference: do all calls to this method are result of invalidation events? there can be also _local_ invalidations triggered after calling methods like imap#remove, imap#put?
Candidate: is there a reason to synchronize this statement?
Reference: it looks like, when the measurement system is changed, then this image is not updated. tourchart has a pref listener net.tourbook.ui.tourchart.tourchart.addpreflisteners() which already checks the measurement system, there the action
Candidate: suggestion return <UNK>
Reference: nationkey % 17 = bigint '44' and nationkey % 15 = bigint '43'
Candidate: this is a <UNK> type"
Reference: setting the submit enablement should be in the method buttonsenablement
Candidate: we could use <UNK>
Reference: is the replacedsql.replaceall needed for postgresql?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: please use stringutils.empty or stringpool
Candidate: this is never be null.
Reference: jdt core used a = b and not a=b. use the formatter if in doubt.
Candidate: you could use the <UNK>
Reference: given that this method is already dedicated to the issuer claim, calling string.format is redundant. please rollback
Candidate: is there a reason to check that is empty?
Reference: i recommend keeping a reference to the client. the previous implementation appears to have omitted request management on activity destruction but a future patch could add it
Candidate: please add a callback explicitly.
Reference: what does this false -> true change do?
Candidate: you could be thrown by <UNK>
Reference: this test could be a little more concise by using instance of invocation.builder request object in // given block and then in // when it could be just posted in
Candidate: you can use <UNK> annotation, instead of <UNK> mapping?
Reference: line-break
Candidate: rename to
Reference: would it be make sense to add a sanity check that the key is >= than the previous lastfoundkey?
Candidate: you could use <UNK>
Reference: for better performance, check it at line 86
Candidate: if this is is not
Reference: @ikhvostenkov why this?
Candidate: let's remove this assertion.
Reference: conditions -> breakpointconfiguration
Candidate: use <UNK>
Reference: if both multiplication operands are ints the result will be an int. if at least one of them is floating point the result will be floating point. request.getspeedformode returns a
Candidate: is there a reason to affects this constructor?
Reference: why do we need it here
Candidate: could we bail here instead of <UNK>
Reference: ... the whole point of chunkgc being separate class was that the unloading logic was in that class. now you moved it to cubecache.
Candidate: is there a reason for this method is not <UNK>
Reference: let's use the old cleanup method as i have modified it to support latest rest api calls. sorry for the confusion.
Candidate: i don't think this could be replaced by <UNK>
Reference: this statement produces compiler warnings:  [info] [...] fruitdaoreactiveimpl__mappergenerated.java uses unchecked or unsafe operations. [info] [...] recompile with -xlint:unchecked for details. ---  would it be possible to extract the
Candidate: i think this should be <UNK>
Reference: is catch block needed after this change or is it redundant?
Candidate: we could pull this out into a factories instead of <UNK>
Reference: you meant !equals ?
Candidate: use <UNK> types, types, types, types, types, types, types, types, types, types, types, types, types, types, types, types, types, types, types, types, types, types, types, types, types, types, types, types,
Reference: what if you query on a single timestamp.
Candidate: i'm not sure how about this is a but i think that this is is not used?
Reference: is this possible? also, whystartkey.length > 0? maybe !=hconstants.empty_start_row?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this stack trace, and all the other ones like it in this file, will never get printed because the fail(string) method itself will cause an exception to be thrown. personally,
Candidate: you could use the guid instead of equals?
Reference: the else statement could be removed.
Candidate: is there a reason for this logic?
Reference: consider adding a timeout
Candidate: use readasstring(...) instead
Reference: i would prefer to use standard java api instead and minimize dependencies usage when possible.
Candidate: if you could use <UNK>
Reference: rm line now that it is deprecated and does nothing?
Candidate: should we use <UNK>
Reference: cosmetic: please, re-indent all these parameters according to our coding convention.
Candidate: please use <UNK>
Reference: do we want to lose the cause here?
Candidate: is there a reason to use <UNK> instead of paths?
Reference: ?actually this is a bug. when *encryption* fails you're not allowed to store the value in the db. this is not the same as decryption failure, where you can use
Candidate: you could use <UNK>
Reference: i think it should be a static private field, for the sake of performance
Candidate: you could use a constant instead of <UNK>
Reference: i think assertequals parameters are inversed
Candidate: is there a reason for the the query also?
Reference: maybe suggestion log.warn("application failed unexpectedly: ", t);
Candidate: this we throw an exception?
Reference: no timeout?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: you will need null checks here. systemsettings or procedure can be null since minoccurs is 0 for those. if those are null, we need to use the default value of
Candidate: <UNK>
Reference: this should not happened if there is not a bug but should we ensure that deferredrecordssize is not less than 0 ?
Candidate: why did we only call <UNK> here
Reference: 1. maybe rename to blobidsafterput 2. not sure if i missed anything, just wonder why this is not a concurrent list?
Candidate: you could use <UNK>
Reference: can we do this outside of the try/finally that has the database reviewdb open? that way the connection can be returned to the pool and reused for the recursive lookup
Candidate: use <UNK>
Reference: please, add non-nls tags
Candidate: i deserve a <UNK>
Reference: i would put them mandatory by default. i don't think you do anything about it yet, but without those events there is no analysis. same applies to lttng kernel analysis.
Candidate: no need to use <UNK>
Reference: is coalesce(type, 'api') necessary given that there's a default on the column and all existing rows have been backfilled?
Candidate: i think it'd be better to be a tiny thanks!
Reference: this variable should be moved closer to its first usage. (to have first to deal with return types then params)
Candidate: this is designed to be 'final'
Reference: suggestion if (cmds().isempty()) {
Candidate: i think this eating the exception
Reference: uuidfactoryfast should be used in production. collision risk is too high. (and this create a static binding, which should be avoided) a uuidfactory instance is available from the pico container
Candidate: you could use the multimap here instead of <UNK>
Reference: rather than using a pair, getconnectioninternal() could become getdatasourcepoolinternal() and then call getconnection() explicitly here (i think this is a little bit cleaner than making and unpacking a pair)
Candidate: you could use a guava instead of date, are, instead of date, instead of date, are, instead of date, <UNK>
Reference: does it make sense to hide the not startable embedded server and keep the osgi framework informed that the activation has been done successfully? other services that rely on this
Candidate: i'm not sure how about the sure about the sure that this is is not but i would be nice to do that _in <UNK>
Reference: be consistent -- either all stdout or all logger. please look at where this method is called from and decide whether usage indicates stdout or logger should be used.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: @franz1981 i feel like you're the man to look into this... can you look into this one?
Candidate: this is be to synchronize on the <UNK>
Reference: good idea to setfilterpath, but i don't think using the platform location is the best start... not sure what is that is accessible? perhaps the binary file location is a
Candidate: use <UNK> instead of <UNK>
Reference: i think if we go down this path, we shouldn't take in an httpclient as an argument, and probably have the sitestreamhosts host list as a default argument.
Candidate: finals
Reference: please replace this with return geturlforwiki(wikiname) + wikipath
Candidate: nitpicking: probably?
Reference: maybe extract the test string?
Candidate: please tear out.
Reference: take a look at multivaluemaputils - it will save you this if statement
Candidate: vds vds vds vds vds vds vds vds vds vds vds vds vds vds vds vds vds vds vds vds vds vds vds vds vds vds vds vds vds vds
Reference: i would even "warn" as this is not a quite valid state, so we warn that action should be taken. also i think the mac would be also nice information
Candidate: please remove nesting.
Reference: what happens if return null ? is null valid? shouldn't it be an exception?
Candidate: we could use a builder instead of creating a enum for every time, we can't we create a new instance of it?
Reference: similar
Candidate: <UNK>
Reference: you can use return checknotnull(collections.empty_list); the empty_* static definitions do some sort of type inference, whereas the older .empty*() methods don't.
Candidate: this is be <UNK>
Reference: i would have grouped this with the leftside.setvalue above on line 154.
Candidate: please use <UNK>
Reference: i think we should future-proof this by using equals instead of the != operator.
Candidate: @manuelplazaspalacio this is not <UNK>
Reference: you can reduce this to map("id", auser.getuserid(), "type", user_type_value ....) from collectionutils.map
Candidate: you can use the here instead of creating a new instance.
Reference: this could be instead be "[abc, bcd, cde]" with the changes i suggested
Candidate: please use <UNK>
Reference: you don't have to set the properties manually here as you call the propertyhelper.copyproperties later - the properties have identical name, therefore, these are set automatically (then you probably won't
Candidate: i doubt that this is is migrated to the <UNK>
Reference: add some message info
Candidate: is this exception is thrown from mag <UNK>
Reference: no it test? we can create a separate ticket for it at the very least
Candidate: you could use a constant instead of <UNK>
Reference: can be simplified to:  e.printstacktrace(listener.error("unable to send to address: " + address));
Candidate: you could use the exception here instead of printing the exception
Reference: i think the filter should be part of the tmftracecontext. please move it there.
Candidate: you could use <UNK>
Reference: please implement as: java return ioutils.readlines(in, standardcharsets.utf_8).stream().collect(collectors.joining(system.lineseparator()));  also i think we should apply this for: org.drools.workbench.services.verifier.plugin.client.testutil.testutil#loadresource
Candidate: suggestion <UNK> = <UNK>
Reference: space after "enabled" please.
Candidate: i think (filter.getrelationshipdirection() == direction.incoming) { throw new <UNK> } newvalue
Reference: notice there's another getconfig some lines below this code. also notice that this client's execute method already uses a sphereapiconfig. why don't we better save the config as a class
Candidate: this is be <UNK>
Reference: you should ideally make these values different in case you're reading the wrong one accidentally somewhere
Candidate: _cough_
Reference: any synchronous exception in this code block will cause the semaphore to leak leases, and eventually lock up. i'd suggest using a helper function that catches these, and releases the
Candidate: i am not sure how about sure about the sure about the jdk classes.
Reference: there should be an appurltest class? i was looking for the test case that verifies the trimming of trailing slash but couldn't find it.
Candidate: this is going to be an exception
Reference: could replace with addall: allrepartitionsourcetopics.addall(topicsinfo.repartitionsourcetopics.keyset());
Candidate: we could use computeifabsent
Reference: i mean there is no need to get a boxed boolean either, boolean.parseboolean() is a direct equivalent which returns a primitive.
Candidate: please use <UNK>
Reference: the naming here makes me a bit confusing. this message is updated as new because it is cannot be processed right? maybe call it messageupdatedasnew or something.
Candidate: you could use <UNK>
Reference: same here. we should keep scopedobjects_ since scopeobjectsimpl would be weird.
Candidate: you could use <UNK> instead of config, instead of config, instead of creating a new anonymous class instead of creating a life each time.
Reference: could have used actionparameters#requireadminuser(); also could move the userservice == null check from handleget() to preprocess()
Candidate: this is not a non-trivial
Reference: no need to define it here - it is runtime exception.
Candidate: you could use <UNK>
Reference: checkstyle: ',' is not followed by whitespace. <review,layout
Candidate: please use <UNK>
Reference: needs a newline before the }, see section 4.1.3 of the style guide. (the one-line style makes it harder to see where blocks begin/end, so it is not allowed).
Candidate: typo: <UNK>
Reference: unsupportedoperationexception is probably a better fit
Candidate: @gunnarmorling this a bit strange to <UNK>
Reference: do you think creating a noopcheckpointhandler makes sense rather than have this null possibilities and null checks?
Candidate: this is be to connection, this will never be closed on every call.
Reference: perhaps we should rename the xxxseealsodetails to xxxcrossref to be consistent.
Candidate: wouldn't it be nice to use the <UNK> paths?
Reference: the name says "greaterthan" but the operator used is "less than"
Candidate: you could combine the line
Reference: how do you know that the buddies collection is not empty here?
Candidate: can we use <UNK> instead of creating a new arguments.
Reference: or, assertthat(category.getattributes(), hasentry("title", "the title")) (this will print a more useful message when the test fails).
Candidate: use <UNK>
Reference: missing localrootid
Candidate: you could use a string instead of <UNK>
Reference: there is a bug with read() that we doesn't remove the unused bytes if the buffer is large that needed. it could be fixed by add something like this: 
Candidate: suggestion <UNK> = <UNK>
Reference: it might be better to do assertthat(constraintviolations.isempty(), is(true) as the previous test uses this. thoughts?
Candidate: is there a reason for element?
Reference: so i was going to say - if both excludefields and includefields are set, then an exception should be thrown, which is what resourcefilenamefilter does. i think that behavior makes
Candidate: you could use foreach here instead of <UNK>
Reference: inline method body to one line.
Candidate: use objects.hash()
Reference: i think the 2 sql statments can be combined into 1 command
Candidate: minor nit, but we could use a <UNK> <UNK>
Reference: suggestion return apiver.equals(sjsapiversion);
Candidate: this is dangerous, is not <UNK>
Reference: order of operands
Candidate: you can use <UNK> here instead of calling assertion.
Reference: why not try-with-resources for this one?
Candidate: could you move this to the return?
Reference: what if the connection actually fails? i think in that case you should reset the just initialized connection info in the catches below.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this and the previous line are not aligned.
Candidate: can you please use <UNK>
Reference: remove this shit
Candidate: is there a reason to call this method here?
Reference: add body check.
Candidate: verify that date is be used?
Reference: this can return a short read. we should use a loop to try and get the full buffer length or eof before we enter into the isbinary logic.
Candidate: suggestion if <UNK> == null) { <UNK> = <UNK> ^ = <UNK> ^ = <UNK> ^ = <UNK> ^
Reference: why do we need to care about the callback here?
Candidate: this is not <UNK>
Reference: those strings are for accessibility so especially the close string makes no sense here. i suggest something like "open drawer" and "close drawer"
Candidate: nope, return null
Reference: it's time starting to use spring build-in json converter
Candidate: i wish we wish unsupportedoperationexception
Reference: no need to collect it: asserttrue(alldevs.stream().nonematch(dve -> dve.getdiskid().equals(fixturestool.floating_disk_id)
Candidate: wait.forelementclickable() should be <UNK>
Reference: use string.format()?
Candidate: use <UNK>
Reference: keep field name
Candidate: please use <UNK>
Reference: add synchronized to this method
Candidate: this should be <UNK>
Reference: it is enough to clear caches just from one node, loop is not needed here.
Candidate: this is be implemented by default?
Reference: i don't see where result is ever getting set to anything or updated after is created, so i don't think this status check would work, and the metadataresponse returned from
Candidate: could you move this inside the finally block.
Reference: lots of duplicate code in here again, see if you can pull stuff in a common class for smeltery and furnace
Candidate: remove <UNK>
Reference: instead of returning false throw the errror
Candidate: nope, this is not a bit dangerous, for this use-case.
Reference: could we use overloading here for buildpropertyisfiltertype so that the method uses the default_match_case if it isn't specified?
Candidate: you could call <UNK> <UNK>
Reference: adjust this test to use form
Candidate: is there a reason for this method is empty?
Reference: string.valueof(gettenant().getid()) ?
Candidate: please use <UNK>
Reference: should also read data in this case
Candidate: typically, you could use <UNK> ie <UNK> typically,
Reference: is it impossible for getlabel to return null? please use strings.isvalid(getlabel) instead.
Candidate: you could use the wording.
Reference: one() should suffice. side-effects are aggregated internally to the returned resultset and only return one result object.
Candidate: can we use a warning here instead of <UNK>
Reference: can you add a break for the default case in order to keep consistency in the code
Candidate: you could use <UNK> operand
Reference: also some oses don't support 0 or 255 well, so they should be excluded
Candidate: use <UNK> annotation, instead of <UNK>
Reference: can you elaborate on this change?
Candidate: is there a reason for this logic?
Reference: suggestion: else-if and else not needed when you use return in the if-blocks.
Candidate: this should be closed in a finally block
Reference: brackets please - part of our code convention to always use them :-)
Candidate: suggestion if (filter.getrelationshipdirection() == direction.incoming) {
Reference: is getview() != null required since showquickstartdialogtaskprompt(boolean) has if (!isadded() || getview() == null) as an early return?
Candidate: if you could use <UNK> <UNK>
Reference: this appears very complicated. this if and all code below (with this if and the next if swapped) essentially boils down to:  if (!partitioningscheme.ispresent && redistributedwrites) { partitioningscheme =
Candidate: nit: not sure if this is empty?
Reference: should so much precision be lost at formatting time instead of during conversion?
Candidate: let's use theory
Reference: extraction to a separate method.
Candidate: i think this requirement is unnecessary.
Reference: null check not needed with instanceof
Candidate: this is a bit nervous that this is is not efficient, but i would be more efficient, that the is not <UNK>
Reference: although logging is nice in production, it should be implemented with a logger class, instead of just printing into the standard output.
Candidate: why not use <UNK> here?
Reference: throws restapiexception not necessary.
Candidate: we should throw an exception instead of calling <UNK>
Reference: please change es_inst to externalserach. i know we have some "_" in our code but camelcase is a more common java convention.
Candidate: use <UNK> instead.
Reference: check for delta kind at first, then for equality of resources. it will be faster than this condition.
Candidate: i think this should be to be called in the
Reference: use old name? s/usermetareplicas/usemetareplicas/
Candidate: i think this should be a bit more expensive for the sake of <UNK>
Reference: perhaps break this up into 3 append calls, instead of creating an intermediate string.
Candidate: use string.format instead of stringbuffer string concatenation
Reference: i think the previous code returned [noresultexception](<link_0> and now returns null is this what we want?
Candidate: use objects.isnull
Reference: we want to verify that executesql is never called at all. the parameter i told you to use was wrong please replace with verify(admindao, never()).executesql(anystring(), anyboolean()); this way we ensure
Candidate: rename to
Reference: since we don't rethrow here, is it maybe valuable to print more than the message and include the stack trace?
Candidate: this should be <UNK>
Reference: didn't understand this - why do this?
Candidate: is this necessary?
Reference: btw, you should test directly the method validatequestiondetails. extractquestiondetails is deprecated in v7 now.
Candidate: no, that this is is not set in the endpoint in the the discoveryresult date is not independent of the
Reference: [optional] since changeid can now be null, i wonder if it makes sense to check here for it: if (changeid == null) { throw new invalidchangeoperationexception("changeid is required"); }
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: nit: why call the method name data , instead of, say, joinbridgeandlifecycle or getjoinbridgeandlifecycle ? :)
Candidate: we could use <UNK>
Reference: vdslist cannot be null by the contract of the dao for fetching collections. please replace with if (!vdslist.isempty())
Candidate: please npe
Reference: in my opinion, this approach of for loop can lead to making mistakes. i would use classic for loop. what do you think?
Candidate: export the understand, that understand, the export understand, the export understand, the understand, the export understand, that understand, the export understand, the understand, that understand, the export understand, the understand,
Reference: may be this needs to be an info log? wdyt?
Candidate: is there a a json id id is available in the json response?
Reference: this method should probably not be removed. it would be used by the annotation methods
Candidate: is there is a to be log.debug
Reference: brrr, why so complicated? why not just for (string key : params.keyset())
Candidate: use <UNK>
Reference: need to check latch here too
Candidate: i flagged @nullable.
Reference: space before "was"
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i think you make this section of code more neat  java if(!showappwithads || (showappwithads && map.get("summary").length > 0)) { itemlist.add(map); }
Candidate: you could use <UNK>
Reference: suggestion && (alias.child().resolved() == true)) {
Candidate: this is not needed
Reference: this won't work if ... is specified after the parameterlist
Candidate: <UNK>
Reference: s/entity/entity's s/will be/are sorry about the latter, just noticed this.
Candidate: this log message is not
Reference: if (bytesavailable >= count) looks simpler?
Candidate: nit: you could increment checkargument here instead 'final' 'final' 'final' 'final'
Reference: even though this is a test, required fields should not be null. if this does not throw errors, it may well be a sign that the "required" fields are not
Candidate: minor: this is off.
Reference: why? it should fail otherwise there's a bug here.
Candidate: wait.forelementclickable() should be <UNK>
Reference: hi @mernst, thank you for your update to this pr. the new unit test indeed tests that the ctor does not blow on a null charset but it does not
Candidate: please use <UNK>
Reference: renamed segments -> segmentstore in next patch
Candidate: <UNK> multimap multimap multimap
Reference: @ramindu90 if we are making it generic, i think the output can be something other than latitude, longitude. shall we rename additional attributes to be more generic (e.g. something like
Candidate: if this is is not invalid?
Reference: what if target file already exists? should we handle fileexistsexception here? thanks.
Candidate: you can inline the
Reference: i'm only mentioning this, because this kind of pattern is common in the parser (maybe it's not relevant here). in the parser when we have an attribute like "ininterface", which
Candidate: you could use <UNK>
Reference: nit: such casts don't always behave well at runtime and can hide some cryptic bugs. although it's probably not an issue here, i would suggest rewriting it:  for (final
Candidate: nit: space after the
Reference: i think these can be supported if the booleans arte false
Candidate: this is is not <UNK>
Reference: maybe add a helper that takes a single stack and just forwards the call?
Candidate: please use camelcase
Reference: i think it would be much better to test the expected error message in the case when connector does not support this feature
Candidate: wait.forelementclickable() should be <UNK>
Reference: maybe an intent revealing name would be even better than setup().
Candidate: use utf-8 instead of this(name, gson,
Reference: this "patch" is also needed for methods that return individual files.
Candidate: you could use <UNK>
Reference: why catching a generic exception
Candidate: you could use <UNK>
Reference: this will probably not work with native compilation. can you please create a ticket to track it so we will verify?
Candidate: please use <UNK>
Reference: we might also want to verify if this active source is fully correct active source. except for the source and destination address we are checking right now, also want to
Candidate: please rename this to <UNK>
Reference: enhance exception handling by providing a better error facade in new tweet api
Candidate: should we use checkargument here?
Reference: if you want to support windows, use file.separator. you don't need a regex.
Candidate: you could use <UNK> here instead of creating a temporary object instead of creating a temporary dir instead:  java return new <UNK> <UNK> dir <UNK> dir : <UNK>
Reference: we can log the error here. wdyt?
Candidate: we could use checkargument here instead of <UNK>
Reference: isn't one method with a boolean parameter a better choice? why create 2 methods? and why is the preference read in a ui class, shouldn't the clientupdateservice just read the
Candidate: i think this should be <UNK>
Reference: prefer not having to modify this test. i actually wanted these apis to preserve order.
Candidate: please align with <UNK>
Reference: btw, i thought it was only supported from version 12c in oracle?
Candidate: please use <UNK> instead of <UNK>
Reference: can we use a nodeid string that's not nodeid so that we know this actually gets rendered?
Candidate: you could use <UNK>
Reference: i think if you use -ddocker.verbose=false then verbose logging should be disabled as well. please add a check for "false", too.
Candidate: <UNK>
Reference: rename to rpackagename?
Candidate: i think we could use a <UNK> <UNK>
Reference: is it okay to aquire lock on each of every read of this property?
Candidate: finals
Reference: unless there are performance considerations, otherwise i feel like it's better to call with createactionblocker.
Candidate: i think that this is not efficient, we should to log the
Reference: i'm not sure that using that much lines is required here. if it is, cg mandate the use of curly brace here: if body longer than one line.
Candidate: is this possible?
Reference: nit: window and join are interesting not because of their identities, but because of their behavior; that they both depend on the "window" phase of the event loop. if there's
Candidate: this is be objects.isnull
Reference: does the code test still work if you revert the change?
Candidate: could we use a enum instead of <UNK>
Reference: typo here. should be "owner is non-null but lacks an id"?
Candidate: we should putifabsent progress view?
Reference: /*error = */ null
Candidate: this is not be <UNK>
Reference: i'd log.warn here - this isn't an error per-se
Candidate: i would be a bit more than <UNK>
Reference: what's the policy on curly braces in jface? in egit we would require them.
Candidate: i understand, that this is not correct.
Reference: loadjsplugin does not need thmp so why did we make it above?
Candidate: you should use a try-with-resources exception instead of <UNK>
Reference: suggestion if (null != getunit()) {
Candidate: the target names are designed designed to do, so you could use the custom names of the target names names names names should not contain the custom target names names
Reference: mismatch count in the error message. you can leave the number out of our error message. it will automatically say expected 6 actual w/e
Candidate: same as above.
Reference: instead of throwing webapplicationexception should we exit the jvm? webapplicationexception should be effect of client request, here its during server startup itself.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: in abstractpropertysource there are already some methods, that may help here (or need to be adjusted to do a real deep copy): copypropertydescriptors, hasdescriptor.
Candidate: is there a reason that this is is not throw an exception?
Reference: can also add a getdriver() override that returns a cast of super.getdriver() to make this look neater
Candidate: shouldn't we throw an exception here?
Reference: nit: session established -> session has been established
Candidate: suggestion <UNK> = new clazz, <UNK> clazz, <UNK> <UNK> clazz, <UNK> <UNK> clazz, <UNK> <UNK> clazz, <UNK> <UNK> <UNK> clazz, <UNK> <UNK> <UNK> <UNK>
Reference: please, let's put the sceneopaquefbo line after this line. and let's add a newline to separate it from the material-related lines, below. it somehow feels more related to the line
Candidate: please move this after... =)
Reference: why do you check if session != null? if you have enginesessionid you must create the session. request.getsession(true).setattribute...
Candidate: minor nit, but we could be a baseurl to the <UNK> baseurl to <UNK>
Reference: why change it?
Candidate: should we throw null"
Reference: let's propagate the cause here. also, i believe json is the correct term, not json.
Candidate: you could use a try-with-resource here instead
Reference: this line should be:  java if (!elt.isabsolute() && (buf.length() == 0 || buf.charat(buf.length() - 1) != url_path_separator_char)) {  otherwise the behavior of the function is not the same
Candidate: this sketchy annotation, annotation, annotation, annotation,
Reference: return an immutable singleton instead of a fresh object for null?
Candidate: could you use static import
Reference: nit: instead of storing session, how about we only store getmaxconcurrentmaterializations(session)?
Candidate: nit: not long.
Reference: let's log the requestdetails object directly using its tostring() method, so adding/removing attributes in the future won't require updates to all log statements.
Candidate: i think this is not efficient, but i guess that we is blocked _in <UNK> especially if <UNK> <UNK>
Reference: reversed way? managing connection should fire handle new session events.
Candidate: i think this should be a <UNK> <UNK>
Reference: i'd consider making new listtablesoptions() a member variable so we don't have to allocate a new object to it for every call.
Candidate: this is a <UNK>
Reference: i think that it will be good to log both exceptions. please remove this check.
Candidate: if you could throw an exception instead of <UNK>
Reference: nit: make this final
Candidate: suggestion return <UNK>
Reference: do we really want to skip assignments that we've already completed? i reckon they should just be at the bottom.
Candidate: @gunnarmorling this a bit strange to <UNK>
Reference: move this method below getnextrecord so the class could be read top to bottom?
Candidate: this should be <UNK>
Reference: create a static string variable for deactivated
Candidate: suggestion <UNK> = new <UNK>
Reference: does this risk that we only log the exception at debug and nowhere else? or can we rely on the task that we did task.get() on having done a log.warn?
Candidate: if this is is designed to be initialized by "this". if <UNK> == null) { return <UNK> }
Reference: edited. @perezp
Candidate: i explained explained explained explained explained to <UNK>
Reference: can probably keep this view permanently visible now.
Candidate: detail: nit-pick: i think, but i think, it would be clearer to <UNK> the sake of the sake of the sake of the sake of <UNK>
Reference: applying the tags and returning the entitymap can be moved outside if-else to avoid code repetition. also, not related with patch, but, getentitylist method itself can be re-organized a little
Candidate: you could use <UNK>
Reference: this way it won't return any templates unless unregister param is provided, no good...
Candidate: please consider replacing this feature instead of repeating the
Reference: can you check whether this is o(n)?
Candidate: you could be inlined instead of repeating <UNK>
Reference: @paulodamaso the braces and return are not needed here
Candidate: log.debug
Reference: collections.empty_list (assuming the caller won't try to modify the list afterwards)
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this could be setid(actionid)
Candidate: i'm not sure that this is not correct.
Reference: we could make this final and put current path assignment into else statement. @romani would you prefer it this way?
Candidate: you could use a <UNK>
Reference: 2 things: 1) if a dataexception is thrown is it a good idea to go on? 2) did this kind of error logging work with casting exception object to string
Candidate: this is not a log level to info.
Reference: ![major](<link_1> the cyclomatic complexity of this method "getdeviceipaddressfromsessionprovider" is 12 which is greater than 10 authorized. [![rule](<link_2>](<link_0>
Candidate: how about using string.format instead of <UNK>
Reference: before removing from storage, should we check whether triggers are fired and data is send to downstream for window that is too late?
Candidate: i would be nice to use system.currenttimemillis() instead of storagetype <UNK>
Reference: can use 8 space indentation here.
Candidate: this is not convinced that this is is not <UNK>
Reference: should probably be targeteobject (the iteration variable) instead of target (the method parameter).
Candidate: cr
Reference: is this not exactly string.replaceall("^/|/$", "");?
Candidate: you could use <UNK>
Reference: ... specified. allowed values are " + joiner.on(", ").join(delimmap.keyset()).
Candidate: if this is is a log.
Reference: this should probably go on a new line.
Candidate: is there a reason for this logic?
Reference: i think you mean current_account_version. current_prefs_version should be irrelevant to the pickling code - it doesn't need to read prefs. and see below
Candidate: is there a reason for the properties?
Reference: same as above, can we have this blocksdir parameter configurable?
Candidate: is there a reason to print this?
Reference: i agree that this is the right thing to do. thanks for catching this and fixing this. one concern i have is with the change of the exception type. i
Candidate: is there a reason for this?
Reference: nit: if its more than once, should we create a variable that casts it to authenticationexception
Candidate: if you could use a <UNK> <UNK>
Reference: maybe should check for >= 5.6.4 if [this](<link_0> is correct?
Candidate: <UNK>
Reference: system.currenttimemillis() ?
Candidate: why sleep is mag <UNK>
Reference: to make it easy to use, probably construct the map<string, pattern> here and throw a runtime if a pattern doesn't compile?
Candidate: this is not to be public?
Reference: if we don't actually care what format the hostname has (which this error message kind of suggests we do), i'd make this message be endpoints must be of the form
Candidate: i think we should be a variant here rather than <UNK>
Reference: this is fragile for jenkins... could you make this code more flexible? what we use to do is create in the bean a constructor that get a map as parameter,
Candidate: please use <UNK>
Reference: should use assertthat
Candidate: you could use <UNK>
Reference: suggestion .getstore(300_000l, storename, streams, queryablestoretypes.keyvaluestore());
Candidate: this is be <UNK>
Reference: final?
Candidate: use stringutils.isnotblank instead of "\"" {}", <UNK> e);
Reference: incorrect exception message.
Candidate: i saw the original error message is not error message.
Reference: shouldn't it check if it returns a provisioning script file ?
Candidate: you could use <UNK>
Reference: this one too.
Candidate: minor nit : <UNK>
Reference: this can throw an npe if the localmediaid doesn't exist in muploadingmediaprogressmax (hashmap.get() will return a null float, which will crash when unboxing into a float).
Candidate: you could use <UNK>
Reference: i am just wondering we can only trim the first and last interval? i guess there are only possible overlaps in the first and the last one because intervals returned
Candidate: you could use <UNK> instead of <UNK>
Reference: if my consumer has had a service level set by a previous key, this will unset it if the next one is null/empty.  java if (!stringutils.isblank(servicelevel)) { servicelevelvalidator.validate(toupdate.getowner(), servicelevel);
Candidate: i think that this is not sending the error message is not
Reference: we want to set the depth and the number of channels here instead of just "1, 1"
Candidate: you could use restrict a <UNK> <UNK>
Reference: this will never succeed, because createsymlink run only if oc binary file does not exist and thus removing such file is pointless, if it does not exist.
Candidate: is there a reason for this method is not <UNK>
Reference: this change can be skipped till we handle individual errors.
Candidate: why we synchronize here?
Reference: the pattern to take/release a lock should be: lock.lock() try { // do stuff } finally { lock.unlock(); } this way you guarantee that you release the lock, even in
Candidate: i tend to use a constants for the kinds of these kinds of the kinds of these kinds above?
Reference: i think we can use the @jvmoverloads annotation in the aztec method in kotlin to allow the java side to call the method without the new extra parameter). check out
Candidate: you could use a constant instead of <UNK>
Reference: what happens when you try to add a channel twice? i think you should return an boolean to indicate success/failure here. res: done, a return type of boolean to indicate
Candidate: is there a reason for element?
Reference: it is not cleat why you generate id here
Candidate: we should use <UNK>
Reference: any reason to change value from 10 to 100?
Candidate: is there a reason to tear down down down down down down down down down down down down down down down down down down down down down down down down
Reference: if a common interface like catalog info was used this if could be avoid i think.
Candidate: this is designed to be the player's itemstack.
Reference: try-with-resources
Candidate: i think we should download the system.out from the <UNK>
Reference: if this is only at startup, i think people talking about this will want it to be something higher than debug, like warn
Candidate: this 5?
Reference: what's the reason for defining this as three string literals?
Candidate: you could use a constant instead of '+'
Reference: shouldn't this be calling unbindconsumers?
Candidate: wait.forelementclickable() should be <UNK>
Reference: can remove else clause here.
Candidate: this is a bit sketchy to <UNK>
Reference: invert the condition in the if: suggestion if (hastabschanged) { setuptabs(); } else { if (viewpager.getoffscreenpagelimit() != tabslist.size()) { viewpager.setoffscreenpagelimit(tabslist.size()); } }
Candidate: if you could use <UNK> <UNK>
Reference: i'm just being really picky, but can you swap this with the line above? so that for option and childoption it sets send buffer then receive buffer
Candidate: please use <UNK> instead of <UNK>
Reference: and i think using fine would be enough.
Candidate: i think that this is not efficient, that the "return" to the <UNK>
Reference: you're not using the return value shouldn't it be... if (!super.equals(obj)) { return false }
Candidate: this should be a npe, instead of objects.isnull
Reference: does not work correctly if the command does a remove, or keeps the value unchanged.
Candidate: we should use <UNK>
Reference: minor: it's better to include the value of propertykey in the message since it's not always equal to hazelcast.config.
Candidate: remove the
Reference: same here, needscomma seems like a better fit.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: you can use simple method "valueaslist".
Candidate: is there is a error message that is happening.
Reference: @kevinoliver sorry for nit-picking but if you would fold this method into translateheaders you could just have the stringbuilder as local variable and remove the declaration of private stringbuilder cookies.
Candidate: this is be defensive ;-)
Reference: nit: suggest "job id" and "filename" without capitalization
Candidate: let's use a constant for <UNK>
Reference: rename var to instanceinzone? then instanceinzone.getinstance(). reads a little more clearly?
Candidate: suggestion <UNK> = <UNK>
Reference: don't initialize to null - the value is set in both paths and not setting it to null would correctly cause a compile error if it was used before set.
Candidate: we should throw an exception instead of an exception
Reference: should we also clean the dataidscache?
Candidate: i doubt that this is submits the
Reference: any reason not to do: this(replication, null_id)?
Candidate: we could use <UNK>
Reference: couldn't we request it in earlier time like in the phase of ps setup, and just check and wait here?
Candidate: is there a reason to catch statement?
Reference: line too long
Candidate: why storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage
Reference: this as well
Candidate: you could use isempty() instead of repeating the middle of <UNK>
Reference: maybe go with static finals and more meaningful names, like expected_num_of_media ;)
Candidate: this line is fit on line
Reference: iterate through entries instead
Candidate: you could use <UNK>
Reference: you should use the readfully[2] because the read[1] does not ensure that you read all length bytes. [1] <link_0>[], int, int) [2] <link_1>[], int, int)
Candidate: could we use <UNK>
Reference: add confirm dialog
Candidate: @manuelplazaspalacio should be <UNK>
Reference: no need to new each time. make it a static
Candidate: is there a reason for this logic?
Reference: i'd prefer using g.allgrids and iterating thru it here.
Candidate: i writevalueasbytes
Reference: this is a pretty vague name
Candidate: you could use <UNK> instead of <UNK>
Reference: this changes the state of the instance so that calling addnode would be illegal after this. would it make sense to prevent that? either by api or by adding a
Candidate: you could use <UNK>
Reference: another option would be to return an sourcedebugextension object from ifiltercontext.getsourcedebugextension(). such an instance would do the string parsing lazily and only once.
Candidate: could we use <UNK>
Reference: since you are building this map in only one place (correct me if i am wrong please) then please use immutablesortedmap from guava. this way you are returning an unmodifiable
Candidate: could be simplified to <UNK>
Reference: if you set it directly in editorsite/viewsite, why is it needed here?
Candidate: rename to
Reference: ![critical](<link_0> 'severity: critical') the cyclomatic complexity of this method "insertitem" is 11 which is greater than 10 authorized. [![rule](<link_1>](<link_2>
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: another case of it being closed before it is being used. i think switching to more try-with-resources syntax in these cases would fix a lot of these kinds of errors.
Candidate: please rollback this be closed.
Reference: this could be done within the previous loop for loop, c.f. <link_0>
Candidate: is there a a constant?
Reference: please, log warning in such case. warning should contain info about failed node
Candidate: this is not a bit clearer,
Reference: from @tvhung83 (extracted from <link_0> suggestion return exec.newconfigsource() .set("guess_plugins", immutablelist.of("jira")) .set("guess_sample_buffer_bytes", guess_buffer_size);
Candidate: you could use <UNK>
Reference: why does caching determine the behavior of the fetch? why not handle the trimmed exception on the higher level. this seems like overloaded semantics to me.
Candidate: this formatting: is always return false.
Reference: could we change to list<properties> or is this api fixed?
Candidate: suggestion <UNK> = <UNK>
Reference: minor: could make it optional<integer>
Candidate: this is a duplicate, we could use only:  java return <UNK> == null) { return <UNK> } }));
Reference: what is this guard meant to protect against? i don't see any code path where activity == null is possible.
Candidate: this is not <UNK>
Reference: is nt sorted always false here? can you remove the variable?
Candidate: you could use <UNK>
Reference: since it's a query, use publiccontract.truck_uri. the internal ones in the contract class are only there b/c we can't do a write against a sql view
Candidate: i doubt that this is is not but i doubt that it matters, but i would be preferable to the
Reference: could we use a switch statement here?
Candidate: this could use a constant instead of <UNK>
Reference: the bitmap config is also used below, it may be moved to the interface
Candidate: we should use stream() here
Reference: the part i meant to extract was the index...refseqwalker.getsequencedictionary().getsequenceindex(record.getreferencename())
Candidate: you could use <UNK>
Reference: put node.get(i) in a local variable.
Candidate: you could use encoder's the <UNK> foreach() from the foreach()
Reference: i don't think we can remove type only casts (if the value is an expression). i think it's purpose is to preserve type information for the execution and operators. also,
Candidate: throw an exception
Reference: this value should be 1024
Candidate: should we use <UNK>
Reference: delay is already completed; no need to wait :)
Candidate: same delay as completed.
Reference: need to ensure the offset inserted into the queue is increasing and equals to last message offset + 1 otherwise, poll logic will be impacted
Candidate: suggestion if (throwable == 0) {
Reference: should be list.
Candidate: is there a reason for this change?
Reference: categories can be null here based on the old code.
Candidate: you could use a constant instead of using "\"" + <UNK> + <UNK> + <UNK>
Reference: how about put this line in the synchronized (mscaninfo) { } too? to eliminate another possible race condition that the callback arrives earlier than the requestnetworkscan() at the caller.
Candidate: should be be <UNK>
Reference: readkeydata would throw out the ioexception, i think we should also catch the exception here.
Candidate: i think think we is a set the <UNK> buffer.
Reference: so only the utf-8 version will be supported? what about the version with the given charset name?
Candidate: you could use <UNK>
Reference: why are we doing this conversion?
Candidate: use utf-8 instead of returning null?
Reference: is this change here necessary? it is new ioexception, not logger.
Candidate: you should use <UNK>
Reference: this log statement i believe is also relevant when we're not sure if the connection from one client to a server is established. it is useful, i think we should
Candidate: please log debug level to log the debug log level to log the debug level
Reference: need {} even for single line.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i believe we can achieve the same thing with this: suggestion } else if (site.isjetpackconnected() && site.isusingwpcomrestapi()) {  alternatively we can just add the site.isusingwpcomrestapi() but also keep !textutils.isempty(site.getframenonce()).
Candidate: you should use <UNK>
Reference: check args?
Candidate: this args?
Reference: in the spirit of defensive programming, i think it would be easiest to have this reset() call to right before checkpacks. (fewer hard-to-reproduce issues due to a caller leaving some
Candidate: you could use checknotnull
Reference: extract this to a method in the [testutils](<link_0> class, similar to what we already do with osx.
Candidate: you could use this method to <UNK>
Reference: what is the use of this? a user changes their own password
Candidate: this should be <UNK>
Reference: good idea , but this checking should imo be moved to appcredentials. the os<x> classes should generally just expose the os interface and then we do the mapping on the
Candidate: we should log the error.
Reference: the logic using maxunwrittenrows is confusing to me. what does it mean for a row to be "unwritten"? i think this should calculate the next size check row count more
Candidate: you could use <UNK>
Reference: individual conditions also must not be null. for that we should add a check with org.junit.platform.commons.util.preconditions.containsnonullelements(t[], supplier<string>) in order to avoid a subsequent nullpointerexception.
Candidate: we could use <UNK> annotation, instead of storagetype view?
Reference: try-with-resources block instead of manual close
Candidate: no need to call this explicitly.
Reference: how about calling this(context, type.loading_non_cached); from here, making tasktype final, and centralizing the initialization logic in one constructor?
Candidate: @manuelplazaspalacio we could use <UNK> annotation, annotation, instead of creating a connection, instead of creating clear() in the
Reference: i think there should be some kind of custom error message for providing a realmlist<? extends realmmodel> that is not realmlist<dynamicrealmobject>. currently it'll just throw a classcastexception
Candidate: nitpick: you could use constants instead of these numbers
Reference: suggestion return "entitlement";  by default sp translate attribute edupersonentitlement to entitlement and such name must match perun attribute friendly name.
Candidate: please use <UNK>
Reference: unrelated change?
Candidate: nit: camelcase
Reference: we already have a trace statement inside secretmanager. shall we skip this debug statement?
Candidate: is there a specific error level to the error level?
Reference: missing new line.
Candidate: minor nit
Reference: it took me a moment to understand this. i think it would be more clear to write if (port1.isconjugated() == port2.isconjugated())
Candidate: move this to <UNK>
Reference: i think it would be more suitable to have a package-private constructor to inject the mock so we don't rely on reflection.
Candidate: <UNK>
Reference: probably better to return list<garbagecollectionstatus>?
Candidate: this is not return an empty empty list?
Reference: please don't hide any exception with logs... you could log the exception as well which would show callstack for debugging purpose...
Candidate: you could use try-with-resources here too?
Reference: !(a && b) is clearer than (!a || !b) (to me anyway)
Candidate: this little little little little little little little little little little little little weird little little little little little little little little little little little little little little little little
Reference: the change in this class can be removed now that the test are moved to a dedicated class
Candidate: you could use <UNK>
Reference: validate & assert call is repetitive, so this could be extracted to validateandassertfailure method
Candidate: use readasstring(...) instead of <UNK>
Reference: do these paths have to be manually removed using a zookeeper client after the decommission is complete and all replicas have called removeoldreplicainfo()? what if, instead, helixbootstrapupgradetool created a znode
Candidate: can we use <UNK>
Reference: so the problem with using this watcher is that the ability can't be copied. if you were to clone this creature, the ability wouldn't work since the watcher wouldn't be
Candidate: this is designed is designed to bottom of the activated db?
Reference: is this hyphen required?
Candidate: not sure that this suppresses wording. the exception is not handled.
Reference: make this the very first condition so that mule startup doesn't go through unnecessary processing.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: we can get rid of the type argument in the class as part of this change
Candidate: i suspect that this is be modified by the feature names.
Reference: i forget - will this automatically serialize and deserialize the fields of the dbxpkcemanager class? iirc this approach has compat issues if you change the class on an update and
Candidate: should we move this to <UNK>
Reference: if the fullpath is really full path, then the file(parent, fullpath) construction does not make much sense. maybe use just file(fullpath) ?
Candidate: the exception is never used?
Reference: i don't recall. @stustison could you weigh in?
Candidate: can be replaced by <UNK>
Reference: what if return type is java.sql.timestamp, and java.sql.time i think we should do timestamp timestamp = timestamp.valueof(zdt.tolocaldatetime()); time time = timestamp.from(zdt.toinstant()).gettime();
Candidate: you could use <UNK>
Reference: why did we remove this assertion? it should remain true or some other state... we should evaluate the transition, as that is the purpose of these tests.
Candidate: why is not started,
Reference: line#179 should move in this if block.
Candidate: this is designed to bind the tile <UNK>
Reference: a few of those are only used in their respective compute* methods. i suggest that they are moved and there instead, to make the constructor a bit shorter (it's still
Candidate: this is not efficient, we could use only:  this(name, <UNK> { return <UNK> } }));
Reference: should you keep a ref to the conn.getproperties instead of keeping the conn around?
Candidate: i think that this is not a bit more than <UNK>
Reference: please directly update the expected value (in its file)
Candidate: finals
Reference: nit: if 'builderledgerid' is of type long, then let the received arg type be long instead of primitive long
Candidate: this this be a to <UNK>
Reference: this does not handle classifier and type, not sure it was intended
Candidate: please use a static import?
Reference: please remove.
Candidate: this is be <UNK>
Reference: yes, definitely should be a constant
Candidate: should we throw an exception here instead of an error message.
Reference: either no brackets or put return on its own line.
Candidate: this is designed to be a <UNK> oldvalue == true and oldvalue will be be if oldvalue && oldvalue && oldvalue == true
Reference: why move this block down? seems to me like it could stay up there.
Candidate: suggestion public static list<string> <UNK> = new <UNK>
Reference: string[] synonyms = new string[]{ "maven 2", "buildr", "gradle", "ivy", "leiningen", "sbt" };
Candidate: this is not a <UNK>
Reference: actually i think you might be able to straight up use cryptutil here, but the file/cipher input stream would still be good to refactor
Candidate: you could use the exception instead of sharing
Reference: you can move this line outside of the try block. sorry. i just saw that now
Candidate: i'm almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost almost
Reference: illegalstateexception
Candidate: should we use <UNK>
Reference: properties is good enough for logs
Candidate: i think this should be called inside the package.
Reference: i understand the necessity to convert between bytebuf and bytebuffer here, but we should add a todo to later to clean it up.
Candidate: use <UNK> size.
Reference: i guess we should check for maybeprojectid.ispresent() here as well
Candidate: nit: we use a <UNK> <UNK>
Reference: this would be easier to read if collapsed
Candidate: if we is a <UNK> <UNK>
Reference: this is a general question for all policies which mutate the request, should this just insert the header value? @jonathangiles @srnagar
Candidate: this should be turned to bind the <UNK>
Reference: nit: is there a way to merge this line and the installcomponentspath.createextra(...) line below?
Candidate: you could use a download here instead of storagetype
Reference: your friend here is the joda periodformatter. you can tell it how a given format is structured, and then just call formatter.parseperiod(timestring).tostandardduration();. have a look at <link_0> for more info.
Candidate: [optional] you could use <UNK> here instead of <UNK>
Reference: log this error
Candidate: nit: we could use a constant instead of hardcoding a constant instead of hardcoding <UNK>
Reference: as in places above, use  if (zone == null) { return null; } return createsecuritygroup(name, zone);  ?
Candidate: please replace this with <UNK>
Reference: can this be in a try with resources block to guarantee it is closed?
Candidate: minor but i believe we should have constructors to constructors in the constructors (the constructors constructors constructors constructors should be constructors to constructors (the constructors constructors constructors constructors constructors constructors
Reference: there's no need to find the metadataschema object first, you can just use the other findbyelement() method which takes in the metadataschemaname: <link_0>
Candidate: you could use a <UNK> rather than returning null?
Reference: illegalargumentexception
Candidate: is there a reason to assert that this affects the <UNK>
Reference: should we rename access_type to token_type to better match the code?
Candidate: this is be surrounded with character-based <UNK>
Reference: would this be better as a clone method inside of rtpdescriptionpacketextension?
Candidate: is there a reason for this pr?
Reference: suggest mentioning the exact class(es) rather than the the possible choices.
Candidate: nit: space trim curly braces around
Reference: doesn't code rely on this semantics? can't constraint be none? shouldn't callers be fixed too?
Candidate: i think we should use a <UNK> <UNK>
Reference: the one below will be more brief:  java return sponge.getregistry().createbuilder(builder.class);
Candidate: should be be behaviors
Reference: i think that 500 deserves a static variable :)
Candidate: i wonder if this is is not to have a to hang that the is fetched in the
Reference: this boolean value is there twice. i would add a variable with good description in name. something like: boolean dataexceedmaxlength = maxlength < data.length; and then use this variable in
Candidate: if this is is not correct.
Reference: this change looks 95% great, but i think there's a mismatch here. iirc the object passed to anymatch() will be of type notificationattribute, and as such it is tremendously unlikely
Candidate: you could use a constant instead of <UNK>
Reference: we should use guavas moreobjects to generate tostring() implementations like we have with other code.
Candidate: could we use a string instead of <UNK>
Reference: log.trace
Candidate: i think this is deserve a
Reference: for brevity, declare a local ret = getreturntype(). order the comparisons in the natural way: if (variable == constant)
Candidate: you could use <UNK>
Reference: you may remove this.
Candidate: please use readasstring(...) instead of <UNK>
Reference: why?
Candidate: can you use <UNK>
Reference: this sentence is wrong. "claim processed ok" seems better.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: could we please use objects.equals ?
Candidate: you could use a <UNK>
Reference: this should be in a separate patch
Candidate: please remove the image from image image image image image image image image image image image image image image image image image image image image image image image image image
Reference: would be better if we check accountservice == null because accountservice is directly passed to getblobstorageservice method.
Candidate: nit: could be simplified to <UNK>
Reference: can we refactor above statements, they contain similar functionality. additionally assigning and setting the click listener can be done in one line instead.
Candidate: unused changes,
Reference: should we be using getter method for metadatastore incase we move the classes in different packages later ? also do we require to add metadatastore as private member here ?
Candidate: fyi, we could use <UNK> threads.
Reference: @philsttr i've been giving this some further thought and i agree that we should make it easier for users to leverage an existing basic (default) implementation. so let's say we
Candidate: this is right...
Reference: we check that request == currentrequest. this happens only for blockwise transfer. for block2 it's ok as this avoid to set context for each block2 request. for block1 this means
Candidate: could you pull this out into a local variable?
Reference: make sure this is the correct exception
Candidate: typo: <UNK>
Reference: - better with \n otherwise the string is too long with many contexts or with lengthier names. - could use method reference context::getname.
Candidate: you could use <UNK>
Reference: did you consider using java.nio.file.filesystem instead?
Candidate: you could use <UNK>
Reference: i think we should crash here by throwing illegalargumentexception.
Candidate: suggestion <UNK> = <UNK>
Reference: must be aidontuseit. same effect as outcome.discard (no cards selection by ai), but useful to find ai unsupported cards in the future.
Candidate: <UNK> -> <UNK>
Reference: it might be cleaner to pass a type and not an instance. <link_0>
Candidate: rename to constructor?
Reference: instead of sending another variable to snapshot save, can it leverage the uri template variable?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: shouldn't this lifecycle listener be removed in a finally block?
Candidate: why not sure that this is succeeded
Reference: nickpicking - if you use 0.0 instead of 0, you'll save the promotion from int to double.
Candidate: i think this should be <UNK>
Reference: do we really need messageformat? slf4j supports parametrized logging. (<link_0>
Candidate: pls use stream()
Reference: isempty()
Candidate: you could use a <UNK> instead of <UNK>
Reference: similar question here -- when will this get thrown and what will happen when it gets thrown?
Candidate: nit: is not <UNK>
Reference: casting to view before checking instanceof is highly suspicious
Candidate: you could use a foreach loop here instead of <UNK>
Reference: minor: you could avoid calling getsize() multiple times
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: there's no need to use a regular expression here, nor remove whitespace; the parser will do that. return input.replace(",", " or ").replace("-", " not ");
Candidate: is there a reason why not catching exception here?
Reference: do you want to keep outputting ^^?
Candidate: this readasstring(...) instead of <UNK>
Reference: please keep existing unit tests
Candidate: this readasstring(...) instead of <UNK>
Reference: we may need to broadcast the alter_stats messages to invalidate the plans based on that stats too and remove the entry from the dictionary cache. see statisticsadmin.ddlnotification().
Candidate: this is explained in a test, but we don't want to use the <UNK>
Reference: imho it would be better not to wrap pushresponse dto but create missing methods in the dto and place the logic inside the method in jgitconnection.
Candidate: could you rename this to <UNK>
Reference: maybe you could add a log message here to confirm the creation of the object.
Candidate: wait.forelementclickable() should be <UNK>
Reference: this implements java's comparable. take a look at the flow/flow-math implementation (it can be found in the target generated source).
Candidate: <UNK>
Reference: this log message lacks the context to be actionable by a sysadmin as an info message. either add the context necessary for actionability by a sysadmin and change to debug.
Candidate: is there any way of the itunes export the view?
Reference: in general i prefer using magickeys, so that the primary owner is always the same.
Candidate: rethrow this exception
Reference: suggest leaving as final and assigning values in both cases of the if statement.
Candidate: i think that this should be <UNK> to pretty-print
Reference: don't return null. throw new resourcenotfoundexception() instead
Candidate: this should be replaced with <UNK>
Reference: with the change suggested above, this can be simplified to just throw controllerlogger.root_logger.unsupportedcharset...
Candidate: is there a reason that we are going to be a <UNK> that the is not <UNK>
Reference: this is not testing the new method for the relative path and i'm not confident that the new method is working properly for the relative paths. could you please use
Candidate: please use readasstring(...) instead of <UNK>
Reference: @droneboost what about the rotate field from mapstatus?
Candidate: wait.forelementclickable() should be <UNK>
Reference: assertthat(somecontainer).hassize(4) is shorter and gives better error message. the same 15x in this pr: ctrl + f ".size()).isequalto("
Candidate: this defaults is not bind utf-8 in the constructor?
Reference: i'd say we should do it the other way, enumerate the "good" states. looking at the list of host states i'd guess "up" and "maintenance" only? roy?
Candidate: you can use <UNK>
Reference: i think that this method would be a bit more readable and concise if it was written as follow:  private void refreshnotifications() { list.setvisibility(view.gone); progressbar.setvisibility(view.visible); getpageandnext(1) .flatmap(page -> observable.fromiterable(page.items()))
Candidate: you could leverage a try-with-resources statements.
Reference: testng uses assertequals(boolean actual, boolean expected), so assertequals(groups.size(), 1);?
Candidate: thanks.
Reference: can we get stringindexoutofboundsexception here for some malformed json? do we need to handle it?
Candidate: this is designed to check that date will be null
Reference: can you add some initial random delay. if not, every node during deployment will try to collect the stats at the same time.
Candidate: is there a reason for this test?
Reference: all channels already inited after initclient, what else do we wait here?
Candidate: @vilchik-elena is there is no reason for the sake of <UNK>
Reference: suggestion out.message("i'm no longer managing the everyone team. please add committers to specific repos.");
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: use a camelkieconstants class declaring those headers. the convention is using *camel* case (of course :d) for the values. so camelkieconstants.response_type --> "camelkieresponsetype".
Candidate: suggestion <UNK> = new <UNK>
Reference: no use doing this.game...
Candidate: we should use <UNK>
Reference: questiontype is shown here, but in the test files, they show up as questiontype. i think we can go with data-questiontype here instead, to be consistent with the test files
Candidate: use <UNK>
Reference: this does not do what you believe it does :wink: also, you need to take a copy when assigning it to the field during construction to protect against mutation from
Candidate: this method is be inlined
Reference: may want to consider making the "protocol" to be the first line to match params order
Candidate: suggestion this(name, <UNK> clazz, clazz, <UNK>
Reference: suggestion assertmessageeventexecutionset(emptysubprocess.getexecutionset(), empty_value, non_interrupting, empty_value);
Candidate: suggestion <UNK> empty_value, non_interrupting, empty_value);
Reference: unsupportedoperationexception seems reasonable here.
Candidate: if you could use <UNK>
Reference: maybe use this((e, ctx) -> fn.apply(e)); instead?
Candidate: this should be null?
Reference: i get an ide warning suggesting this: suggestion return collections.unmodifiablelist(collections.singletonlist("<unistd.h>"));
Candidate: this is a <UNK>
Reference: i would eliminate the eventtype variable, since it's only used once and doesn't add to readability.
Candidate: you could use <UNK>
Reference: do i read this right, that we're doing the exact same thing twice?
Candidate: this readasstring(...) instead of <UNK>
Reference: @ptirador you can use repositoryfiles.relativizepath here and below
Candidate: rename to <UNK>
Reference: doesn't this have to be unsafesubscribe?
Candidate: use a random number of <UNK>
Reference: this should be inside the for loop otherwise failure to close one socket will cause all other sockets not to close
Candidate: this is is not
Reference: i think it could be benefitial to have two overloads (jsonobject, jsonarray), very similar to what the sdk has
Candidate: this should be <UNK>
Reference: we actually want to do this as part of trysetbytes so that we compact the index if needed. i would recommend having an overload of trysetbytes and setbytes (and then
Candidate: is there a reason to check that the is empty?
Reference: if distribution target is null, maybe makes sense not to emit this dimension at all.
Candidate: is there a reason for this method is empty?
Reference: execute the search code system request synchronously on the current context.
Candidate: please use camelcase
Reference: is this used anywhere?
Candidate: is there a reason for this method is not
Reference: this was really puzzling. extracting it to a "packonlycontainsreftable()" function would make it clearer.
Candidate: @vilchik-elena is there is a a slight comparison to be true"
Reference: pushcontext(lcc)
Candidate: you could replace this by: <UNK> <UNK> = <UNK>
Reference: why not throw t?
Candidate: i think this is a <UNK>
Reference: @mswiderski could you move this string to _perspectiveids_ file and i think its also missing to create the actual perspective to link in here instead of the screen directly. i
Candidate: if you could use <UNK> <UNK>
Reference: please bring the braces back.
Candidate: you could use a 'final' here instead of <UNK>
Reference: maybe could be nice having a similar behaviour of the corresponding js file: __resultsetprocedure.js__. in term of write and read data from a real cache.
Candidate: stringutils.isnotblank()
Reference: that's not best practice. we don't care if it's the same object.... this is just a boolean, we need to test for equality. also you should use asserttrue...
Candidate: please use <UNK>
Reference: how about making this exception message a little different than the below one. suggested: no token generated from gsscontext for request %s
Candidate: @manuelplazaspalacio you could use a local var instead of creating a new object and then the clear() will be a new arguments.
Reference: we should use the assertequals which includes a message argument so we can log a failure reason instead of just the exceptions stack trace.
Candidate: you could call the <UNK>
Reference: similar thing here: summary is not added to the end but is replacing the existing rows.
Candidate: this is right...
Reference: rename to event
Candidate: please replace this with <UNK>
Reference: it can't be null, by construction.
Candidate: this is be repelaced by <UNK>
Reference: licences is misspelled here - intentional?
Candidate: please move this initialization to the try-catch block
Reference: should this have some sort of explanatory text to indicate that these are suppressed exceptions? we don't do that above for the getcause() handling, but now with 2 possible types
Candidate: please use uri.create
Reference: remove
Candidate: i doubt if weights is flagged division on the shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard shard flagged
Reference: could be an else if here as if we went into the if block lazyavrocoder.threadschemasupplierfactory.get() will return null
Candidate: we should throw an exception instead of <UNK>
Reference: it allows 0.0 and 1.0. what each value means for decay rate?
Candidate: use isempty() instead of <UNK>
Reference: you can use writetrashfile to shorten this: file readme3 = writetrashfile("nested-repo", "readme3.md", "content");
Candidate: nit: is a unconditionally, that we is a to hang that we hang that the will hang that the will hang that the will hang on the
Reference: if locationlistpreference implements onitemclicklistener these lines would be cleaner. what do you think?
Candidate: could you move this to <UNK>
Reference: assertequals("int", bert.gettypenamegenericsed()); what does sed stand for? genericseed or genericset?
Candidate: why not -1l ?
Reference: it would be good to set to null the toolkit
Candidate: this could be (context != null) { <UNK> = null; }
Reference: java final int checkeditem = math.max(0, cachetypes.indexof(settings.getcachetype());  should convey the intention more clearly (imo).
Candidate: you could move this to <UNK>
Reference: transaction_time_zone
Candidate: we could use a criteria instead of <UNK>
Reference: * style nit: move static method to beginning of the class * visibility can be reduced to private
Candidate: this is be risky.
Reference: s/header was/headers were
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: what is the difference from this getconnection and other getconnections ?
Candidate: this is designed for the sake of these two lines
Reference: this check can be moved prior to class targetclass = (target != null ? target.getclass() : memberclass); - like 2.6.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: return an empty list instead of null (same for l77)
Candidate: rename to
Reference: don't seems to send the latest patch set here !!
Candidate: suggestion if (throwable == null) {
Reference: minor code style improvement: java deadline deadline = optional.ofnullable(context.current().getdeadline()); if (usetimeout) { deadline = deadline.or(deadline.after(requesttimeoutms, timeunit.milliseconds)); } return deadline;
Candidate: is this a bit that we could use the baseurl instead of <UNK>
Reference: why not just folder.delete(true, null) ?
Candidate: you could use <UNK> instead of creating a static final entry, every time.
Reference: instance?
Candidate: please export <UNK>
Reference: style fix suggestion public void setignoredplayertimeout(iuser user, long time) {
Candidate: is there a reason for this is not
Reference: the exception message should be improved to print a proper function name.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: let's keep that block where it was before. the idea is to emit items which arrived before an error occurred and then terminate with a call to onerror. streaming output
Candidate: if you could factor out this method.
Reference: could we also test the case when the same report is mentioned in only typescript property?
Candidate: i think that this is is not <UNK>
Reference: shouldn't the fail be outside the for-loop? current impl runs at most 1 iteration (either exit through break or fail)
Candidate: this is designed to be a commons-io
Reference: i think this should be ok as it should get encoded. it should point to the newly created role.
Candidate: you should use <UNK> here instead of <UNK>
Reference: these will generate 2 transactions, making the operation non-atomic. i think it would be better to aggregate this in a single transaction if possible
Candidate: i think log level to log the
Reference: safer to split on \w+
Candidate: if you could use the exception instead of return?
Reference: actually i find this highly confusing. "checkwidget" left me puzzled -- why should we check a widget if we're going to create it? oh wait, we're checking the parent. but
Candidate: i think that this operand should be taken care of the operand
Reference: the value should be a constant ;-)
Candidate: we should log the error message to log the error.
Reference: unfortunately this test is flaky. it will sometimes fail for the 1st time and almost always will fail for 2nd run.
Candidate: rename to <UNK>
Reference: should the value be 5 (seconds)?
Candidate: i think that the router is be invalid?
Reference: is null correct here? that seems weird...
Candidate: minor nit: spelling
Reference: we need to check whether debug is enabled here
Candidate: why we need to synchronize here?
Reference: won't this be a double-decrement?
Candidate: wait.forelementclickable() should be <UNK>
Reference: this looks like all evaluators are treated equal. we wanted to have weights for combining the scores. wouldn't that be done here?
Candidate: you could use <UNK> here instead of <UNK>
Reference: rename to listiterator
Candidate: is there a reason why not required?
Reference: is it possible for this to remain a collection/set instead of being copied into a list? i think there are a few methods in this class that take in the
Candidate: you could use a feature instead of <UNK>
Reference: with the exception of constructors, non-static inner classes and setters the this key word isn't usually needed.
Candidate: please use <UNK>
Reference: may be this should go into the method which is actually doing the job. also one log.info for the entire gc should be good enough; others may be downgraded to
Candidate: minor: we think we could use system.currenttimemillis() instead of creating a delay for every time, we could use system.currenttimemillis() instead of creating connections depending on the
Reference: pass settingsrepository as argument to downloadlanguagetranslationusecase is not necessary
Candidate: log debug logging debug log
Reference: why is this returning null? shouldn't it return the azureleaderelector ?
Candidate: is there a reason why not catching exception here?
Reference: this particular test doesn't need this header, right? if so, please remove it. also, there are a few more tests that don't need the header. please update them.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why we need these extra brackets?
Candidate: nit: space after the colon chars
Reference: this would force the dse driver to use the oss lbp. i think instead we would like to make this test work with the dse driver using its default lbp
Candidate: how about using <UNK>
Reference: same here, this cast shouldn't work. you'll need to expose it using an additional interface (check org.spongepowered.common.interfaces for some examples)
Candidate: you should call <UNK>
Reference: should this be "object name required"?
Candidate: can't you use <UNK>
Reference: why do you need to return a boolean from processentityinfo? could you not handle the adding of the new entityinfo list in processentityinfo directly?
Candidate: is there a reason for fqns ?
Reference: if we specify a cluster size for this test of 3 (i.e. without using the cluster_size constant), we can write a single assert to verify that arguments.containsexactly(1l, 1l, 1000l) (pseudo-test-code,
Candidate: please use <UNK>
Reference: timber.e :)
Candidate: wdyt about including the
Reference: let's make a static util method to return the corresponding lock in the lock array based on block id. e.g.,  private static reentrantreadwritelock getblocklock(long blockid) { return block_locks[(int) (blockid
Candidate: i we warn marking instead of marking the reconnect stuff?
Reference: is this to avoid the method being called more than once? if it is not an expected behavior, shouldn't we raise an exception?
Candidate: this should be <UNK>
Reference: i suggest a name to structure map to speed up lookup
Candidate: is there a reason for element?
Reference: i suggest to avoid the negation as there is anyway an else block.
Candidate: is there a reason for the sake of null?
Reference: the essence of this assert is not clear for me. can you, please, clarify it?
Candidate: instead of passing stack trace instead of passing super's
Reference: could we define 0 as a constant (e.g., retry_timeout_ms)?
Candidate: i'm not sure how about this change.
Reference: expected value should always be the first parameter, and the actual value second, e.g. assertequals("<p>_foo bar_</p>\n",html)
Candidate: you could use a constant instead of <UNK>
Reference: if (shouldcopyrequestheaders() && !this.copynoheaders) {...
Candidate: i doubt that this is not set?
Reference: typo: success
Candidate: is there a reason for this logic?
Reference: this is already done by the setuiforinteraction(false).
Candidate: if you could use <UNK> here instead of explains <UNK>
Reference: can we set as a constant?
Candidate: please use <UNK>
Reference: if we're returning a new writable for each evaluation anyways, cannot we defer the wrapping to hive by simple adjusting the return type, and return ispageview right away? also ...
Candidate: minor detail: but i would be cleaner to use servercontext.
Reference: the truncation handle is already updated above, i think you can ignore it here.
Candidate: is there a reason for this?
Reference: you should use static definitions for these, not "magic numbers": private static final int start_time_col_pos = 0; etc.
Candidate: use <UNK>
Reference: perhaps "offer was already..." or "offer has already been..."
Candidate: nit: you could be simplified with mutating multimap
Reference: can we abstract this description as a tool method and reuse that ? something like reloptutil#generatesdescription(stringbuilder builder, int relnodeid, string digest)
Candidate: this is a bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, but it would be more readable.
Reference: please, always use braces in cycles and conditions.
Candidate: you could use system.currenttimemillis() instead of '+'
Reference: i think this one should be exactref.
Candidate: if this is is not efficient, but i would be a good idea.
Reference: why is it always partition 0?
Candidate: this seems like a bit more specific?
Reference: i don't think we should check if writing is permitted only if we actually detect that an update is necessary. even if no upgrade is necessary that the system is
Candidate: minor nit: we could use <UNK> instead of nesting.  if <UNK> == null) { continue; }  if <UNK> { return false; }
Reference: this one and the previous test can be refactored into a private method taking a location of the config file on classpath as a parameter.
Candidate: you could use <UNK> here instead of objects.isnull
Reference: perhaps this should be instantiated with the urlmap rather than setting static maps here
Candidate: <UNK>
Reference: glustertasktype should be validated as well.
Candidate: no need for the sake of <UNK>
Reference: better print mcurrentdownload.getaccount().name in the log, instead of calling tostring().
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why the parameter here is query but it is milestonequery in the togglemilestone method?
Candidate: you could use <UNK> here instead of <UNK>
Reference: ![major](<link_1> refactor this code to not nest more than 3 if/for/while/switch/try statements. [![rule](<link_2>](<link_0>
Candidate: if we is a unconditionally, that the is not equals?
Reference: you don't need to divide the block size by 2 here for the latter case. that was done in the previous query because it had two in-blocks, so we needed
Candidate: you could use a top-level element?
Reference: i think we should probably make this a protected method on abstractbamfileindex and implement it there for bai and here for csi. or we maybe make it abstract and pull
Candidate: this should be <UNK>
Reference: is that a valid behavior?
Candidate: @vilchik-elena is score >= <UNK> operand >= 0, <UNK>
Reference: this seems dangerous because it may impact many other test cases and introduce different behaviors depending on the order of execution of the tests. you probably should save the hooks
Candidate: you could use <UNK> here instead of <UNK>
Reference: isn't this wrong? it should either be attributes[attributes.length-1] (and overwrite the last entry in the array, which is probably equally wrong) or it should extend the array. the old code
Candidate: can we delegate to <UNK>
Reference: add debug logs in each block and add a newline at the end of each block to improve the readability
Candidate: you could use this unconditionally, a unconditionally,
Reference: you don't need this factory, you can use mockito to mock url.openconnection method
Candidate: i is a decision.
Reference: please add a new newlinkedhashmap method to our collectionhelper. i'll work on pushing the changes we made in hv regarding the sizing. (with the current code, you always undersize the
Candidate: how about this is a <UNK>
Reference: please use here getpackagename() instead of "com.owncloud.android", the package name might change in brandable solutions
Candidate: i understood that the architecture should be encapsulated in the
Reference: how about a oneliner? return intstream.range(0, num_of_snapshots_to_create).map(i -> createdisksnapshot(diskid)).collect(collectors.tolist());
Candidate: you could use <UNK>
Reference: this breaks compatibility.
Candidate: assertthat(violations.isempty()).as("violations
Reference: should message be "progress response received" ? also this: + (progressresponse == null ? "null" :" progressresponse.tostring()) can be replaced by: + progressresponse they are equivalent, if the variable is
Candidate: this is log.d <- log.
Reference: can we make this method return a collection of config.encryptionlevel? i think it'll make code simpler - no need for ignored testname constructor argument and flat list of config.encryptionlevel can
Candidate: this is not
Reference: in reviewing this we were concerned about the scenario where position legitimately throws an exception causing mark to remain un-updated. in this cas, due to the catch, it will lead
Candidate: why not we need the lock here?
Reference: i think we could get rid of both the constant and the local variable and just write e.g. 2 instead of offset+1.
Candidate: this is not needed
Reference: please indicate possible values in exception message
Candidate: this is not required?
Reference: wouldn't it be more expressive in functional form? clusterfeaturedao.getsupportedfeaturesbyclusterid(clusterid).stream() .filter(supportedadditionalclusterfeature::isenabled) .filter(f -> f.getfeature().getname().equals(featurename)) .findany() .ispresent();
Candidate: you could use <UNK>
Reference: recommend to use stringbuilder to concatenate string
Candidate: throws exception exception
Reference: should this line assign the field instead of a local variable so the csvconverter.getbytecount() method calls this instance of countinputstream?
Candidate: you could use <UNK>
Reference: nit: this can be a one line log.tracef("%s %s", this, satisfied);
Candidate: this should be <UNK>
Reference: as discussed, here we can just use the same high watermark as the low one - it will make the buffer's size more constant, instead of varying between 2 sizes.
Candidate: i think that this could be a to the <UNK> <UNK>
Reference: could do  java set<fileref> smallestfiles = new hashset<fileref>(filestocompact.keyset()); filestocompact.clear(); return smallestfiles;  slightly easier to read than for loop
Candidate: could you use camelcase
Reference: please reduce allocations here. default arraylist size is 10, it's pretty unlikely that we get more than 2 cookies for a given domain. also, it can be allocated lazily on
Candidate: unused
Reference: do you know what scenarios would result in the nosuchalgorithmexception or the keystoreexception? it looks like you essentially disabling hostname verification if either of these excecptions occur, by using a
Candidate: you could use a non-trivial here instead of creating a new constructor?
Reference: this is missing an .in(scopes.singleton).
Candidate: this is be repelaced by <UNK>
Reference: you handle all these exceptions in the same way so you can use multi-catch: } catch (revisionsyntaxexception | ambiguousobjectexception | incorrectobjecttypeexception | ioexception e) {
Candidate: exactref
Reference: never return null. instead throw an exception, like: throw new oauthexception("echo api only supports two legged oauth calls");
Candidate: please use <UNK>
Reference: shouldn't you shutdown the daemon thread before trying to stop the task threads?
Candidate: is there any reason to be implemented in the <UNK>
Reference: this throws an npe when originalcontenttype is null and setoriginalcontenttype is false.
Candidate: please add a boolean <UNK>
Reference: please do *not* leave authorization turned off across test methods. this can result in unexpected behavior. it should only be temporarily turned off to create (or delete) test content.
Candidate: this sleep should be turned off the tests.
Reference: we only need to log this if partition handling is enabled, else we will get a lot of warning spam i would think.
Candidate: is there a reason for this method to be called in the <UNK>
Reference: this will lose the original cause of the error.
Candidate: how about caching caching caching caching caching of caching the
Reference: this is getting quite expensive. let's just change this to gettaggedmemoryallocations(queryid) instead. if tests are not easy to fix, introduce a separate function instead so this one (with the old
Candidate: this is so?
Reference: continuing
Candidate: this should be a classcastexception in the
Reference: then i would turn this in a one-liner.
Candidate: you could use <UNK>
Reference: needs asserttrue(...).
Candidate: this is right...
Reference: the cda messages of the extend won't be displayed in the cda phase.
Candidate: i think that this is not <UNK>
Reference: intellij warns that 00 is octal. shouldn't be a problem but maybe we can avoid the warnings by just writing a single 0
Candidate: i is a bit sketchy for the sake of nesting.
Reference: passing null rather than exceptionhandler argument.
Candidate: we could use <UNK>
Reference: the original file appears to have a call to "setbankdataviewcode" in this method, but i don't see that call in this overlay. can you please add that back in if
Candidate: this is designed to be non-null?
Reference: should this still include the key's hashcode as well as adding the sequence hashcode?
Candidate: use objects.hash()
Reference: why is the usedelimiter("\\a") needed here? or why not use the good old bufferedreader.readline()?
Candidate: can we use a string instead of creating a new object instead of creating a new one?
Reference: you can probably declare the field directly as a cachingfield if that is going to be enforced later anyway
Candidate: suggestion <UNK> (s > widely > widely widely widely widely widely widely widely widely widely widely widely widely widely widely widely widely widely widely widely widely widely widely widely widely
Reference: just a note that this (existing) use of index strikes me as fragile. if we put constants in for all of these indexes the code would be clearer and we
Candidate: is there a reason for avro ?
Reference: under which case, you get an ntlm challenge but you have a null ui event? #resolved
Candidate: this should be null here as well.
Reference: looks like this is already called from within locks, so you might want to just mark it @guardedby(rwlock)
Candidate: we could use <UNK> here instead of <UNK>
Reference: classcastexception! you already have ftracewithsize, use it!
Candidate: we should log the error level to log the log.
Reference: you don't need the group-id bit here, servermanager will include it automatically since you passed in it via the constructor
Candidate: this is not a bit strange,
Reference: but it's also weird, because workerglobalbarrier is already initialized by itself.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: you can replace 15 with n.
Candidate: nextvalueindex is not a bit tear down down down down down down down down down down down down down down down down down down down down down down down down
Reference: the only user of fieldformatter is dbasefilewriter, which in turn cannot possibly be used by multiple thread in parallel because it keeps state about its position inside the dbase file.
Candidate: spelling
Reference: shouldn't it be according to the feature-supported?
Candidate: if you could nextvalueindex could be simplified to <UNK>
Reference: i know this can be kind of a pain, but we need to assert the sent payload too for all requests that have a body. this *really* helps future maintenance
Candidate: generated setting. generated generated generated generated generated
Reference: while this works, we can just define another small data structure with 3 fields for this. that way we also don't need the info_* variables.
Candidate: could you please move this to a separate pr, thanks.
Reference: this breaks the current handling of binary payloads (invalidutf8exception is no longer thrown so we end up replacing its contents, with potentially malformed data). when the view is editable we
Candidate: we should throw an exception instead of <UNK>
Reference: if (!disableacl) { copyreqbuilder.acl(objectcannedacl.bucket_owner_full_control); } copyobjectrequest copyreq = copyreqbuilder.build();
Candidate: this is a bit strange to log the part, but i would be more than '+'
Reference: pls. use collections.emptylist() instead.
Candidate: suggestion <UNK> <UNK>
Reference: remove map and put time
Candidate: you could use <UNK>
Reference: this logic doesn't seem right. what we want to support is running a particular check if its name was specified as a path token. this classes param should indicate the
Candidate: this should be a <UNK>
Reference: how about adding the possible type of sinks here? (text_socket_output, mqtt_output)
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: the three inner blocks make the code hard readable, but i was not able to come up with more readable code. so probably we can keep as it is with
Candidate: this is designed to go through the child editor in master.
Reference: nit: given you're already using assertthat below, using hassize here would yield a clearer message in case of failure.
Candidate: maybe we should use checkargument type"
Reference: if this returned an instance of location, then presumably it could be automatically converted to json etc.
Candidate: this is not return <UNK>
Reference: objects.hashcode ?
Candidate: you could use isempty() instead of hash hash hash hash hash hash hash hash hash hash hash
Reference: failed to send this message [{}] to sns queue at {}, sending asynchronously -- should this be logger.info? or maybe we should have same format in all these logs for
Candidate: is there a reason for this solution,
Reference: why not set these attributes on the command itself?
Candidate: please add a log message
Reference: this return is redundant and should be removed
Candidate: log.debug log.debug
Reference: freeipa or freeipa just asking because in this pr both word were used.
Candidate: could we add a fail() here
Reference: this needs to be a formlabel. the label class, despite the name, creates a div instead of an html label, and there is a significant difference for accessibility. you can
Candidate: could we use <UNK>
Reference: same as before: please use unchecked and consider a private method ref instead of a lambda
Candidate: i explained explained explained to a <UNK>
Reference: this was for: commit 99562fbbb40c72722468e5dc8c84b3e28494a20f author: alan viverette <alanv@google.com> date: tue oct 14 14:48:52 2014 -0700 check type resolution on declared methods and fields in viewdebug bug: 17375269 change-id: i8a74dfab1a1cf11b4240afb011d2729beea307c5
Candidate: you could use a mkdirs() instead of creating a temporary dir object instead of creating a temporary dir dir instead:  java return new <UNK> arrays.aslist(new new <UNK>  java
Reference: if we add the mipv6defaultgateway member then we'll need add a corresponding ipv6 route here as well.
Candidate: how about removing the <UNK> entries?
Reference: this test should check the specific number that applies to the test dataset, otherwise a wrong positive number could be returned and we wouldn't notice.
Candidate: is there a reason to assert here?
Reference: this log message is probably missing some context?
Candidate: cr
Reference: this is not multithread safe
Candidate: this >= <UNK>
Reference: better to use stringbuilder.append() rather using string contact()
Candidate: you could use checkargument here instead of <UNK>
Reference: you forgot to remove character encoding setting here
Candidate: minor: you don't think this
Reference: if treating as singleton (with static instance field etc), then should constructor be private?
Candidate: we should throw an exception instead of <UNK>
Reference: i like this test, makes sure that a users data will not be dropped if they accidently init. after the init call, could make a call to accumulo to ensure
Candidate: i think this is not <UNK>
Reference: :-1: ;p
Candidate: throw new <UNK>
Reference: s/getinstance()/instance/ ?
Candidate: use readasstring(...) instead of <UNK>
Reference: lol this is one of the things that pmd will catch once it's in recipientteam.isempty() (oh no that means this will conflict with #5268)
Candidate: you could use combined to:  java <UNK> <UNK> = <UNK>
Reference: not currently used
Candidate: could we use <UNK>
Reference: do we have any unit tests for this logic?
Candidate: you could use <UNK>
Reference: minor: may want to log when artifactslocation is not a directory.
Candidate: is there a reason for this method
Reference: this could be changed for consequencetypes.foreach(consequence -> this.consequencetypes.add(new consequencetype(consequence))); which i believe required less overhead.
Candidate: why public?
Reference: do you need to pass constant string_index_is_byte_quick_fix as argument?
Candidate: use <UNK>
Reference: there could be a separate method here to get screen name against datatype to keep case statement area smaller and more readable.
Candidate: you could use use <UNK> instead.
Reference: style: static import geometrytype.geometry, geometryserde.serialize and geometryserde.deserialize
Candidate: we should use a <UNK> <UNK>
Reference: its a wrapper for all functions in functionregistry. what name do you suggest - scalartransformfunctionwrapper
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i wonder about this : this can become really tricky in case of parameterization with wildcard and raw type...
Candidate: this is a bit dangerous, bit dangerous,
Reference: path::of and also below
Candidate: please use the <UNK>
Reference: this method will always fail if the impl is not httpcommandresult, but command result is not abstract and can be returned from the fwk. if someone uses this method in
Candidate: we should throw an exception instead of <UNK>
Reference: typo
Candidate: nit: you could use a copy of the map?
Reference: suggestion toolprovider.getsystemjavacompiler() == null ? "are you running a jre instead of a jdk? the inline mock maker needs to be run on a jdk.\n" : "",
Candidate: this should be null"
Reference: how about booleanutils.tobooleanobject()?
Candidate: you could use <UNK> instead of <UNK>
Reference: suggestion virtualfile work = virtualfilesystem.resolve("/work");
Candidate: you could use <UNK> instead of <UNK>
Reference: can line 154 and 155 be done in one state to pipelinemetrics ?
Candidate: could we use <UNK>
Reference: was this for http and https?
Candidate: this is not be a <UNK>
Reference: try-with-resources
Candidate: you should use system.out
Reference: entry
Candidate: entry
Reference: i hate to creep the scope here, but it would be super useful to capture execution site, e.g. pg wire, http etc
Candidate: is there a reason for this pr?
Reference: > maybe we could just throw an exception instead. you can try to do it but i think it might be difficult with current classes hierarchy > change the meaning
Candidate: this is not be a
Reference: this assertion is no necessary as it is tested in assertallinformationmatch
Candidate: can be modified by <UNK> 47
Reference: can this exception be a static field somewhere, with the exception overriding fillinstacktrace to not capture a stack trace? the message is also not needed.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: assertion seems to be missing?
Candidate: use expectedexception
Reference: i wonder if the static methods should have been left as deprecated in case someone is still using those. but i don't know if there is ever such a case
Candidate: why not use <UNK>
Reference: i think using a well-named constant e.g. default_move_thread_buffer_size is preferable.
Candidate: is there a reason that styles that styles that styles that styles that styles that styles that styles that styles that styles that styles that is not encapsulated in the
Reference: should we throw an error or atleast log this at info/error level.
Candidate: no need to fully qualified name
Reference: since handletimeout() and handleexception() are called by a single thread sequentially, does this method needs to be synchronized?
Candidate: i we bail again?
Reference: actually we need three parameters: 1. if we use external authentication, redirect to the external url, this can be anything externally set. default: yes 2. if we want to accept
Candidate: is there a reason that is not to be called on the <UNK>
Reference: here there are some duplicate code, please review it
Candidate: use <UNK> pretty-print
Reference: this may be overkill, but this seems like it's suited for using an arraylist + textutils.join().
Candidate: if you could use <UNK>
Reference: @vbradnitski will be better to use pattern.compile and then matches
Candidate: is there a reason for this class instead of a constant?
Reference: ok i thought about this some more. i think it actually makes more sense to make this method only take parameters that allow thumb and alpha jump. then in the
Candidate: i think this should be incremented to debug level
Reference: i don't think we should escape on this level, we should explicitly escape title of a video when passing to a method, not in here. let's move it to verifyvideoadded(string
Candidate: please use uri.create
Reference: this.
Candidate: @vilchik-elena we could be simplified to "return true" if <UNK> == null) { return false; }
Reference: can you make the underlying block synchronized rather than the method ? is it really needed ?
Candidate: this should be <UNK>
Reference: retrieving
Candidate: is there a reason for avro separator ?
Reference: looks like the worst that could happen is that the values in the log message are not precise
Candidate: nitpicking: this be bound. nitpicking:
Reference: we usually use a lambda expression rather than anonymous class.
Candidate: you could use <UNK>
Reference: use _int_ to allow for values > 127
Candidate: we could use a multimap here instead of <UNK>
Reference: assert only the values you set. not the database generated ones like the id
Candidate: you could use <UNK>
Reference: @tsr-thulio please show @felipeaziz how we do that using enum abstract method
Candidate: <UNK>
Reference: test data shows encoding issues. possibly using .build(true) helps here (might have side effects)?
Candidate: you could use a constant here instead of <UNK>
Reference: aren't you decrementing the queuedqueries twice? first the query will get queued (queryqueued will get called), then the query will start running (querystarted  gets called and decrements), then query
Candidate: wait.forelementclickable() should be <UNK>
Reference: should we move all these != null && !empty checks into a helper, where we simply pass the collection in ?
Candidate: i think that this is not efficient, we could use the <UNK>
Reference: close the result set
Candidate: use <UNK>
Reference: - this em still can be null - in that case i would not do the logic below. - please move the content of this method into the updateemulatedmachines()
Candidate: i think that this will be an exception
Reference: you will get an npe if user is null. it shouldn't ever happen, unless the user gets deleted after it has been cached in simpleauthenticator, and given that we make
Candidate: is there a reason for element? paths?
Reference: this seems a bit dirty - parse and register an xpathexpressionfactory but then only use the factory method constructor args. perhaps we need to refactor the logic into a utility
Candidate: delete.
Reference: can you declare exactly what exceptions are thrown? i suppose ioexception only?
Candidate: you could use a constant here instead of creating a new constructor?
Reference: should assertopenblock(); here, and have a test that fails without it
Candidate: wait.forelementclickable() could be <UNK>
Reference: this should really be done by separate catch clauses above line 364, e.g.  catch(abfsauthexception | abfsauthunhandledexception ex) { throw ex; }
Candidate: i think we should throw an exception here instead of wrapping an exception
Reference: -1 the migrate operation should not add reference to unexisting socket-binding. the correct way to migrate such a resource would be to migrate the messaging subsystem, add the socket-binding resource
Candidate: you could use the <UNK> annotation?
Reference: does this need to be initialized here and closed in the coordinator? would be better if a single class was responsible for the lifecycle of this object.
Candidate: i'm not sure that mock this mock to mock the mock
Reference: instead of counting forks by iteration, better to make an assertion like the following:  java matcherassert.assertthat( forks.iterate(), matchers.not(matchers.emptyiterable()) );
Candidate: i think it's better to use <UNK>
Reference: i would use java.util.function.supplier<sslcontext> instead of your own zkclientsslcontext type here
Candidate: let's use reflectiveoperationexception here too, too, please.
Reference: could we add some logging when this happens?
Candidate: @vilchik-elena static?
Reference: let's mark all of the threadbound methods as final, so long as nobody else is overriding them. the whole point of deriving from this class is to allow the base
Candidate: <UNK>
Reference: values put into positions never fetched back.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: use the logger if you want to print something.
Candidate: nit - we should log debug level still, still, still, still, still, still, still, still, still, still, still, still, still, still, still, still, still, still, still, still, still, still, still,
Reference: like gilad bracha's quote: "live is better than death", i would say "positive is better than negative" :) how about replacing it with: if (unmanagedcontrollers.isempty())
Candidate: this args?
Reference: should this also check the derbydialect?
Candidate: if this is is designed to be a <UNK> that the is not the to the the
Reference: not sure if this is the right thing to do. the channel is non blocking. if the write wrote partially, flush would return false and this will throw.
Candidate: i think that this should be closed as well.
Reference: i think you probably want false here. true appends one of "created", "fast forward", or "forced-update" to the message. considering this is basically an unconditional copy, i don't think this
Candidate: minor nit: you could use <UNK>
Reference: could you use strings.lenientformat here?
Candidate: you can use <UNK>
Reference: i think we should clean that up in a different way: afaik we do no longer have a difference between "add to index" and "track", so i think we should
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why are we returning the boxed double?
Candidate: is there a reason for this logic?
Reference: doesn't work without this line? -- it's already registered as a pre-result.
Candidate: why not -1l
Reference: local size sounds better to me than "entries"
Candidate: you could use a <UNK> property?
Reference: style: can you inline this? multiple rectangle creation makes debugging a bit more difficult. instead, let's do: rectangle eventbounds = dpiutil.autoscaledown (new rectangle (rect.x, rect.y, rect.width, rect.height));
Candidate: rename to
Reference: unrelated
Candidate: suggestion throw new <UNK>
Reference: i'd use equals to make it clear we don't care about identity semantics (readers won't have to verify the value that is being set), but it's fine either way java
Candidate: this should be <UNK>
Reference: what happens if daily is enabled and hourly is not?
Candidate: maybe worth making a <UNK>
Reference: btw, this is another potential npe and "implicit statement" to rework.
Candidate: this is a bit sketchy string concatenation
Reference: why is this loop necessary? don't you just need to click a single element? however, i could be wrong since i'm not 100% sure what is being checked.
Candidate: this is click on element?
Reference: since admin has everything, i believe it's pointless to wrap it by authorizedaccessmodel
Candidate: use collectionutils
Reference: this template also needs a version check
Candidate: export <UNK>
Reference: this needs to also check if the individual components of the pair are null, because whenever httprequestgenerator.buildnoauthgenerator() is used to generate a request, it results in a call to commcareapplication.buildhttprequester()
Candidate: please use <UNK>
Reference: no need to call load here
Candidate: i understanding that the portal is understanding is understanding is understanding that the portal is not supported in the portal code.
Reference: please revert these changes. while we build locally on java 8, we target java 6 and i would like to make sure it keeps compiling on these older jdks. our
Candidate: you could use <UNK>
Reference: could you please change it to the lowest supported version now?
Candidate: if you could use <UNK> <UNK>
Reference: do we need to test counter reset case after this? e.g. makednssuccess(...) assertfalse(...)
Candidate: is there a reason for element?
Reference: you can avoid the duplication of that line if you simply add this to the first if: && (((memberproposalinfo) getproposalinfo()).fproposal).issuffixproposal()
Candidate: if this is is designed to be a bottleneck. : <UNK> { ... }
Reference: cluster could not be resized?
Candidate: should we use the primitive type?
Reference: shouldn't e be wrapped in a cucumberexception also in this case. the construct throw new cucumberexception(e); seems to be pretty common in the code base.
Candidate: please use camelcase
Reference: do these need to be synchronized?
Candidate: please use <UNK>
Reference: this should probably reject nulls unless you want to have the compareto deal with them.
Candidate: is there a reason for this method is not used?
Reference: shouldn't this be last.arrival_time - first.departure_time? i wouldn't consider layover at first and last stops to be revenue time.
Candidate: i think this is a bit more efficient, that this is is not <UNK> but i am not sure how about the sure about the
Reference: @jesuino it might be possible to have more than one editor opened at same time, so it's possible than more than one editor are going to get that event at
Candidate: if finishing <UNK>
Reference: @narakim i don't think we should do this. this api specifically expects a valid account instance. why are we substituting it with currentuser if an account isn't passed in? i'm
Candidate: you could use a multimap here instead of <UNK>
Reference: the problem i have with this change is you now need two plugins: * one to load jquery. that's all it can do. * one to load your code. which
Candidate: @vilchik-elena could you could be simplified with <UNK> cr
Reference: i know this was already like this, but it is weird we are dropping the view before creating. if the goal is to assert that it throws an exception, then
Candidate: use readasstring(...) instead of <UNK>
Reference: maybe consider string.valueof() to circumvent npe.
Candidate: nit: you could be simplified to java return <UNK> -> <UNK>
Reference: could not perform live snapshot due to error, vm will still be configured to t he new created snapshot: {}
Candidate: typo: <UNK>
Reference: execution service usage wrong here too.
Candidate: you could use <UNK>
Reference: if the function is allowed to return null, perhaps it is better to use ints.tryparse instead of parseint to avoid throwing an exception and return null instead.
Candidate: use <UNK>
Reference: this will just prolong the execution of the command by including the thread.sleep() in it. i think we discussed change on the line 664 that we need >= there, didn't
Candidate: you could use a constant instead of <UNK>
Reference: i had to look at this for a couple minutes to realize that buildfsoptions is mutating the fsoptions. the .checkforscheme method doesn't return fsoptions or do anything else with it,
Candidate: you could use a multimap here instead of <UNK>
Reference: delete elements
Candidate: use readasstring(...) instead of <UNK>
Reference: i'd prefer it as it increases readability imo
Candidate: if this is is not started, we should have the <UNK>
Reference: method run has 33 lines of code (exceeds 25 allowed). consider refactoring.
Candidate: this is not eating the
Reference: this will incur a complexity of o(n). would it make sense to work with a set/map to make that test?
Candidate: nit: we could use <UNK> to <UNK>
Reference: the test 'null != importedpackages' must be with the second one (the second manage the 'importedpackages'
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: dimensions are not restricted to relationships. they can also be non-metric attributes.
Candidate: please use "_"
Reference: what is the value being multiplied by 0.2?
Candidate: if this .show() is not
Reference: is simplename really what we want here? should we use type name (which can be different)
Candidate: add a <UNK>
Reference: why not pass exception e into storeexception constructor?
Candidate: you could use <UNK>
Reference: similary
Candidate: this is right...
Reference: @override
Candidate: use stream()
Reference: so this checks if it is delete or create action. however, you already did check it when you created the action. getvalue(action.selected_key) will return you true if resource is assigned
Candidate: is there a reason for this method is empty?
Reference: definitely wrong. the implementation in storm-mesos is better than what you are copying into here. the existing implementation is more generic. please revert.
Candidate: use <UNK>
Reference: sorry, null would be better: list<vds> result = dao.getalloftype(null);
Candidate: you could use <UNK>
Reference: does this inequality work with a non_address
Candidate: this is not a bit idea.
Reference: the disk existence is already validated, please remove
Candidate: if you can use <UNK> here instead of <UNK>
Reference: i think what's left here (besides nit on formatting) is to simplify the code and remove the wait loop. for example, if we use a countdownlatch instead of atomicboolean for
Candidate: suggestion <UNK>
Reference: @llorllale let's use isiterablecontaininginanyorder here
Candidate: you could use <UNK> here (similar to the (similar to <UNK>
Reference: so i see why you need the publisherclient.... i think you should take a repositoryfactory and a publishersession here, where repositoryfactory has a method to open the repository. it is
Candidate: use <UNK> instead of catching exceptions?
Reference: this should be done using the enumtranslator. for example, see vmgeneralmodel - > updateproperties(). in addition, add the appropriate values to localizedenums.java an localizedenums.properties.
Candidate: if you could use <UNK>
Reference: shouldn't the exception be passed all the way up? we need a build failure to happen if an exception occurs. no one will be looking at the console for a
Candidate: if this is not throw an exception
Reference: looks like this explicit cast was done to prevent overflow, hence i am not sure if it is safe to remove this cast same question for the other occurrences below
Candidate: could we use a checkargument here instead of <UNK>
Reference: log
Candidate: i we need to call <UNK> here instead of passing null?
Reference: is there a better solution to this? maybe throw a new noopnamefoundexception? it auto skips in the first place when you do that.
Candidate: please use <UNK>
Reference: first condition is redundant with the second.
Candidate: minor: this is designed to be a bit simpler.
Reference: as discussed should we change the interface to this method to not give the impression that it would validly return an empty result? potentially the code would be read clearer
Candidate: is there a reason for element?
Reference: remove -- we cannot spam system.err. optionally introduce a logger instead.
Candidate: if this is is not
Reference: invoking with null argument is an evil, please provide another method without arguments if it makes sense.
Candidate: rename to
Reference: the logic here seems a little over complicated. would iterating over the entryset of the intermediateresult and handle the id and partitions array in another method simpler?
Candidate: we could use <UNK>
Reference: if i'm not mistaken, the visibility of this method can be restricted to package private
Candidate: you could use <UNK>
Reference: - given that jobregistry really isn't an internal component and - the direction you'd like to take this functionality per the blog post associated with this jira issue i'd say
Candidate: if you could use <UNK> <UNK>
Reference: any time you have a constructor or method which is private but called from a nested or enclosing class, the compiler has to produce a "fake" member with package-private access
Candidate: i'm not sure how about catching this exceptions?
Reference: did you miss correcting this and below?
Candidate: use <UNK> instead of <UNK>
Reference: any reason not to use testutils.tempfile?
Candidate: could you tear out.
Reference: this needs the same fix as in my change <link_0>
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: might be unrelated to this pr, but is it possible to make isgroupedbyteam() a field instead of a method?
Candidate: please use <UNK>
Reference: @guiseco what's the bundle args for here, since no arguments is being added to it?
Candidate: is there a reason for this method is not
Reference: nit: is it possible to show the name of the type here? now that the exception type is unsupportedoperationexception, the string doesn't add any additional information.
Candidate: this is is designed to be a <UNK> <UNK>
Reference: if deletionmeta is used outside directorycleaner, i think it belongs in its own file.
Candidate: you can use computeifabsent
Reference: use parent.getfs() instead
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: who will call circuitbreaker in this case?
Candidate: use <UNK>
Reference: this is not a correct behavior for a missing feature just leave the default implementation in such a case however getticker is such a basic functionality i think we should
Candidate: is there a way to be implemented in the <UNK>
Reference: should we move an assert to the top?
Candidate: you could use <UNK> instead of <UNK>
Reference: is this needed?
Candidate: no, this is not just call <UNK>
Reference: simplify this by using .putifabsent / computeifabsent?
Candidate: suggestion <UNK> -> <UNK>
Reference: change to "the allow partial"
Candidate: you could replace this with <UNK> : <UNK>
Reference: call rxjavahooks.onerror so no exception is lost.
Candidate: i think that this is be called at the beginning of the beginning of the beginning of the causes effective to minimize effective the
Reference: when you are calling validate during runtime. containsmacro("port") will still be true even and you wouldn't check port if its negative or not.
Candidate: i think this should be <UNK>
Reference: accessinner -> getupcallresultinner, this seems to be incorrectly copy-pasted.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: is this a more appropriate place to call mmediationrewardedadcallback.reportadimpression()?
Candidate: is there a reason for this method to be called in the <UNK>
Reference: use repository.isvalidrefname(final string refname) to check if a given name is a valid branch name
Candidate: if this is not efficient, we could use the <UNK> <UNK>
Reference: the flow with nullable timingcontext concerns a bit. it should not happen, but assuming it does, we are going to record effectively zeroed samples (since start and stop time would
Candidate: this should be <UNK>
Reference: catch checkarg()
Candidate: no, we don't want to throw an exception exceptions.
Reference: format
Candidate: style nit: we don't use braces
Reference: the factory methods should be moved to datamanipulator and be renamed. e.g. datamanipulator.immutableof instead of datamanipulator.immutable.of. imo it feels cleaner. also applies to the mutable one.
Candidate: why not use stream()
Reference: out-of scope, but for future discussion: this technically only performs in-memory delete, whereas the modschema is a database-centric action, if we move this to only performing the check, we may
Candidate: you could use <UNK>
Reference: we really should not need to check for null (we don't do the check in the save method so it would npe in the end). worth creating it in the
Candidate: please use <UNK>
Reference: check your indentation/formatting settings. fyi i'm using eclipse with sun java conventions.
Candidate: could we use a constant instead of <UNK>
Reference: magic constants...
Candidate: you could use <UNK>
Reference: remove this
Candidate: finals
Reference: i propose to deal with this in a new static method asciilinereader.from(inputstream is) and deprecate the constructor. this will be safer for the users of asciilinereader and will simplify the
Candidate: this doubt that this is is not to suppress the object either.
Reference: no need for 0l, 0 is enough.
Candidate: this should be e1
Reference: missing this. and potential npe on type.
Candidate: could we use stringutils.isnotblank here instead of equals?
Reference: assertnotnull("root plan graph is null", compiledplan.rootplangraph);
Candidate: minor detail: please consider replacing a space between <UNK>
Reference: no, i didn't
Candidate: nit: you could use <UNK> instead of <UNK>
Reference: suggestion // minecraft client can take some time to switch protocols. // sending the wrong disconnect packet whilst a protocol switch is in progress will crash it. // delay 250ms
Candidate: i think that this fragment should be done in the view?
Reference: this doesnt account for the older explicitly set delivery annotations in the same way the standard message send process does. seems like they should behave the same?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: how about passing this color to the activity as well? on my device i see the primary color briefly when opening a task, we could avoid that by passing the
Candidate: this is bail again?
Reference: remove this?
Candidate: use <UNK>
Reference: any reason not to include bypassretry in the information with tostring()?
Candidate: nit: <UNK> stream()
Reference: also remove these defaults if they don't apply to this provider.
Candidate: this is designed to be a <UNK> <UNK>
Reference: i dont think this will ever return null for env vars, but its worth keeping the check. what about a check or empty too?
Candidate: remove this
Reference: can you try to force all the segments instead of short-circuiting and exiting on the first failure?
Candidate: you can use computeifabsent clear()
Reference: missing final
Candidate: please use <UNK>
Reference: wouldn't collections.emptylist() be better than creating a new list?
Candidate: you could use commons labels, optional?
Reference: execute that if block first so that we handle the case when both are null. after that execute the other if that checks if any of them are null and
Candidate: please add a space after <UNK>
Reference: should we use index + 1 to set the priority value?
Candidate: you could use <UNK>
Reference: use the builder pattern: builder.topicname().subscriptionname()
Candidate: you could use <UNK> <UNK>
Reference: instead of system.out.println you should use a logging framework. check the other patterns for examples.
Candidate: could we use <UNK>
Reference: we should not use constants for these values. better to have a method return value as otherwise everything have to be recompiled to pick up a possible change
Candidate: you could use a try-with-resources here instead of <UNK>
Reference: i still see it.
Candidate: style violation braces around single line blocks
Reference: replace with a linkedhashset
Candidate: you could use <UNK> instead of <UNK>
Reference: please add also voobserver.
Candidate: this should be <UNK>
Reference: useless for two reasons: synchronizing on a field that changes doesn't do anything, and setting the value of something doesn't need to be synchronized (what matters for synchronizing is blocks
Candidate: i guess we should synchronize super's i wonder if this is not efficient, we could have a lock among the locks <UNK> <UNK>
Reference: no need to use uribuilder
Candidate: no need to use
Reference: remove space after .tag and add space after the comma: notificationmanager.notify(mixpanelpushnotification.tag, 0, notification);
Candidate: this should be to be <UNK>
Reference: we don't really use final notation for local variables. i also think that this case might be shortened by moving value and actual value directly to assertequals statement - exactly
Candidate: you could use a constant instead of <UNK>
Reference: why this change?
Candidate: is there a reason for avro here?
Reference: i think this white line can be removed.
Candidate: if you could use <UNK> <UNK>
Reference: if available, you should always include the name of the variable which is causing the problem.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: will this test pass after the year 2100?
Candidate: you could move this one?
Reference: please use computeifabsent instead to not allocate concurrenthashmap on existing key.
Candidate: use <UNK>
Reference: should you verify that the management node operation was called?
Candidate: please use <UNK>
Reference: same as above. use getandset(boolean)
Candidate: should finishing the properties?
Reference: collections.singletonmap("dist", base) is better.
Candidate: is there a reason to interact with the with the <UNK>
Reference: might be more clear to just reimplement this without using closeables... it's not gonna be a very long function.
Candidate: why not putifabsent change?
Reference: move into if statement here as above.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: shouldn't you use ogmtablegenerator.segment_value_param instead of haveing a duplicated copy in segment_value_param?
Candidate: use <UNK>
Reference: we should probably protect log.v with vdbg and log.d with dbg
Candidate: we could use a constant instead of <UNK>
Reference: this may be too broad an swallow other things, such as io exceptions?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: maybe, you should give back temptvp
Candidate: we could use the timestamp wording.
Reference: can you extract this to abstractdiskvmcommand for reusability in hotplugdisktovmcommand?
Candidate: we should use only: <UNK> instead of <UNK> events.
Reference: this should always be the case. we don't need to expose a setter method.
Candidate: nit: space after <UNK>
Reference: use @slf4j in lombok.
Candidate: you should use a checkargument for the
Reference: somehow it should be initialized by ancestor generic resolver (method or class)
Candidate: this should be null"
Reference: if calling shutdown() rather than shutdownnow(), then previously submitted tasks will be executed. is that wanted here? should it call executor.awaittermination()? i suspect probably not; not sure what synchronization it'll
Candidate: i pagelogging
Reference: i think registry1 and registry2 should be two different instances, but still don't know why it failed.
Candidate: wait.forelementclickable() should be <UNK>
Reference: i would inizialize this in the declaration and make it final.
Candidate: this fragment is be encapsulated in <UNK>
Reference: no need to close this reader as the underlying input stream is closed
Candidate: you could use <UNK>
Reference: rather than having methods to modify createdat and updatedat, would it be possible to modify their json representation here instead? this would avoid having methods solely for the sake of
Candidate: use <UNK>
Reference: java.net.httpurlconnection.http_not_found could be used
Candidate: suggestion <UNK>
Reference: in case showerrordialog=false since the messages are aggregated, the fault is not localized (the localization of the fault is part of runactionexecutionfailed(..)). consider removing the showerrordialog from the 'if' and
Candidate: i think that tracking the command id is not
Reference: this can be a static member of the class.
Candidate: you could use a constant here instead of <UNK>
Reference: when will the end method will run? if there are no tasks created you should run it yourself.
Candidate: how about using <UNK>
Reference: are these log debug messages useful to retain after you've finished your testing?
Candidate: this should be <UNK>
Reference: expiration
Candidate: nit if (throwable suppresses <UNK>
Reference: use  cteprovider provider = providers.get(clazz); if (provider == null) { cteprovider provider = new simplecteproviderfactory(clazz).create(); providers.put(clazz, provider); } managedviewtypeimpl.this.cteproviders.add(provider);
Candidate: use <UNK> annotation, instead of <UNK>
Reference: why is there an array of sortfields with null in it?
Candidate: is there a reason for element?
Reference: is this needed? i thought the instructor remains on the same page after clicking publish or unpublish now.
Candidate: this is be discarded for the sake of <UNK>
Reference: there are a lot of getdefender().getability() here. how about just get them at the beginning
Candidate: is there is a known to 'final' here?
Reference: requirenonnull
Candidate: please use <UNK>
Reference: if your new conditional above on 339 evaluates to false we can't skip lastidx here.
Candidate: could you explain why you need this here?
Reference: i think its better we throw a unsupportedoperationexception here.
Candidate: is there any reason why we catching the exceptions?
Reference: constant
Candidate: this matters, about matters, but this matters, but i would be easier to use a <UNK>
Reference: checked that this should get retried both by atlasdb-proxy and atlasdb internally.
Candidate: this (trace)
Reference: use a significant name.
Candidate: please use <UNK>
Reference: would you mind removing this manual setting to null? environment will produce null if nothing with that key is set anyway. thanks!
Candidate: you could use a constant instead of hardcoding <UNK>
Reference: i think you need to pass the server_id which you want to update the status.
Candidate: is there a reason for element?
Reference: should be probably stringutils.isnotempty because non empty string signifies inserted cd.
Candidate: same here, as you could use a separate patch
Reference: merge these two if statements.
Candidate: please add braces
Reference: application/json is used in multiple files and tests, maybe use a constant to replace it?
Candidate: suggestion <UNK> = new <UNK>
Reference: this should get called at the time of deserialization. use jackson properties to call this at the time of deserialization. certificateproperties does it as an examples.
Candidate: please use <UNK>
Reference: suggestion g.drawstring(text, x- (metrics.stringwidth(text) / 2), y + g.getfontmetrics().getheight());
Candidate: if you could use <UNK> <UNK>
Reference: nit: the scheduler understands negative intervals as "disabled", so you don't need to have this extra check here. just have syncgroupoffsetinterval return -1 if it's disabled.
Candidate: i think that the lock is be acquired in the
Reference: extraneous new-line
Candidate: this is be to tear down overwrites <UNK>
Reference: nit: can't you just return rm unconditionally?
Candidate: cr
Reference: minor thing: i think it's better if "columnresizepersistenceenabled" comes first in this expression (but it's not a big deal since initializedcolumns is empty when columnresizepersistenceenabled==false): if (columnresizepersistenceenabled && !initializedcolumns.contains(column)) ...
Candidate: if this is is not
Reference: add full link please <link_0>
Candidate: this is right...
Reference: why we need to change this?
Candidate: this is a <UNK>
Reference: you can remove the explicit type argument. it's unnecessary. thus the new code is new arraylist<>(); < layout
Candidate: you could use <UNK>
Reference: part2, right?
Candidate: if you could use <UNK>
Reference: space in between { and catch.
Candidate: we should reflectiveoperationexception to reflectiveoperationexception
Reference: eh? we aren't literally sending the span in headers, right? that's basically the opposite of the intent of the in-band/reporting duo of dapper systems
Candidate: is there a reason for this method to be null?
Reference: the thread name shall be fixed, you can just regenerate the name according to our name convention.
Candidate: i think this should be to be <UNK>
Reference: question - should we just use the value of user.skinid as the token id instead of adding another claim on the token? i think that might be best - less
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this creates a properties table. copy'n'paste? ;-)
Candidate: this is designed to be a <UNK> <UNK>
Reference: snappy?
Candidate: should we throw null"
Reference: why don't we check for this case? could you please elaborate a little bit more what does the schema evolution mean? is it the table -> partition schema migration? (changing
Candidate: minor: what? i what? what? what? what? what? i what? what? what? what? what? what? what? what? what? what? what? what? what? what? what? what? what? what? what? what? what?
Reference: better to always use {} imho.
Candidate: this sketchy to "return" to <UNK>
Reference: why if and not just: options.add(vdsproperties.includepartitioned, filteringlunsenabled.tostring());
Candidate: how about using <UNK> long() for performance performance performance performance performance performance performance performance performance performance performance performance performance performance performance performance performance performance performance performance performance performance performance performance
Reference: license?
Candidate: <UNK>
Reference: do we need to differentiate between ioexception and storeexception with ioerror?
Candidate: <UNK> is designed to be <UNK>
Reference: what might we be ignoring here? debug?
Candidate: why is submitted to be closed unexpectedly in closeable
Reference: why do you need this? i$
Candidate: i clear() could be a bottleneck. bottleneck. understand, but i'm not sure how about this worked. but i don't know that slots but i would be a bottleneck. slots
Reference: suggestion "joining against a multi-value dimension is not supported.",
Candidate: you can use a constant here instead of creating a new arguments.
Reference: why is the special casing for and/or/not needed rather than always taking the complement of the field's rangeset?
Candidate: use <UNK>
Reference: name change
Candidate: you could bail again?
Reference: it would be simpler to get tmftimestampformat.getdefaultimeformat() and set its time zone to utc, here or perhaps in the setup method.
Candidate: why 16?
Reference: it looks like /dataset/ should be plural /datasets/ ?
Candidate: please use <UNK>
Reference: this looks like a static method.
Candidate: i nesting.
Reference: exception is never thrown
Candidate: no need to throw an exception
Reference: typo: "not a join stream" actually, this sentence is incorrect: "parent ... must not be null, or not join stream." implies "parent is not a join stream", while it should
Candidate: this should be to bind <UNK>
Reference: return (splittime > ftime ? new timeevent(fentry, ftime, math.min(fduration, splittime - ftime)) : null); }
Candidate: suggestion if <UNK> { ... }
Reference: shouldn't we throw an exception and halt the execution here? if we can continue with a null url then instead of print stack trace we should log
Candidate: you could use a constant instead of <UNK>
Reference: this could be protected (more an internal detail than for external consumption.)
Candidate: <UNK>
Reference: i don't think we have conventions around this, but this. is used inconsistently here to reference member variables. (ie. partitionmanager doesn't have this). i'd prefer it without this. if there
Candidate: use <UNK>
Reference: as the rsdl is useful in many context i think that it deserves a class to manage it. would do you agree to add a rsdlmanager class? something like this:
Candidate: could you rename this map?
Reference: this isn't necessary anymore as soon as we use slf4j.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: still i claim that trim is not needed :)) per above split.
Candidate: you could use <UNK>
Reference: please add "this." to numstreams, indexinstream, numberofvalues to be consistent for all the fields.
Candidate: @gunnarmorling you could use only:  java side) = <UNK> <UNK> <UNK> <UNK> = <UNK> <UNK> <UNK> <UNK> <UNK> = new <UNK> <UNK>
Reference: this block is the same as updateassignment; can you just call that?
Candidate: this is be <UNK>
Reference: how about  return int_to_version.get(asint - 1);
Candidate: i don't think that this easier.
Reference: i think we can still leave this as max index -1, as we would only have one snapshot id here.
Candidate: you could use a constant instead of objects.isnull
Reference: suggestion if (!rootbasedir.getroot().equals(basedir.getroot())) { log.warn("unable to analyze module " + basedir + " that is not in the same root"); continue; } path newbasedir = rootbasedir.getroot();
Candidate: use <UNK>
Reference: please use brackets, even for one-line blocks
Candidate: this is designed to be a local variable to <UNK>
Reference: out of curiosity, what was this actually doing before when update et al were passed? what was the cursor?
Candidate: i guess we could be a <UNK> <UNK>
Reference: these debug statements should either be changed to trace or removed.
Candidate: this should be <UNK>
Reference: suggestion "32767," +
Candidate: is there a reason to use the expectedexception here?
Reference: we need a test with number of resources with group message enabled > threapool size. this is the scenario where current code deadlocks. this test case does not cover that
Candidate: please replace this with <UNK>
Reference: i'll kick off the review then. it's better to have these protected, since templates should report whether they support forshare or not
Candidate: wait.forelementclickable() should be <UNK>
Reference: given that other logic still leverage max weight, will this work for targettasks.size() == 1? if it works, it may be ideal to have test on this case to clear
Candidate: spelling
Reference: why changing to a file if you load it fully anyway?
Candidate: @orhan89 unreachable.
Reference: shouldn't this be true? by default, multi-world commands should be true.
Candidate: please add a <UNK>
Reference: can't we rely here just only on the messageheaders.<t> t get(object key, class<t> type) ? right, that one is about illegalargumentexception, but at least we will be consistent with regular
Candidate: please add a enum as well.
Reference: perhaps this is an illegalstateexception
Candidate: minor: this is be consistent with an int int <UNK>
Reference: is expectednodecount needed to be updated here? if the transaction is restarted upon node failure, expectednodecount should be updated.
Candidate: this getchildren is never used?
Reference: null check in the full file.
Candidate: is there a reason for element?
Reference: {}
Candidate: you could be null here as well.
Reference: change to isempty, see below also, just for consistency with the condition above.
Candidate: you can use <UNK> here instead of instantiating the conditional.
Reference: what about a direct update to a recurring instance? wouldn't that lead to here and by simply changing it, braking the data consistency of the recurrence set? shouldn't that be
Candidate: if you could use <UNK> <UNK>
Reference: it is better to either throw an exception or return optional for such case. i see no good handling for null values in invocations of getfirstchildoftype method
Candidate: this could be replaced by <UNK>
Reference: i really don't want to be nitpicking, but to mitigate false positives i would add there also .isinstanceof(illegalargumentexception.class) and possibly even .hasmessage("runtime exception occurred") or .hasmessagecontaining(...) edit: it is also
Candidate: you could use <UNK>
Reference: when is this jmxreporter ever stopped? it's lifetime should be tied to the lifetime of the vert.x instance, and when the vert.x instance is closed it should be closed and
Candidate: is there a reason for element?
Reference: the contract of list isn't compatible with what sortedlistmodel is supposed to do, due to methods like add(item, pos). sortedlistmodel maintains data that's constantly and consistently sorted according to the
Candidate: i think we could be a synchronize on the chain of the <UNK> calls invalid?
Reference: i think we should add the left join fetch for contact methods and home_address for all of these impacted *.jdbc classes with an hql query. by not doing so, each
Candidate: you could use <UNK>
Reference: where is this stream closed again?
Candidate: you could use a constant instead of creating a new connection,
Reference: nonrepeatabledirectivesbyname will travel directives three times. the code below seem to be faster: java public static map<string, graphqldirective> nonrepeatabledirectivesbyname(list<graphqldirective> directives) { // filter the repeatable directives list<graphqldirective> singletondirectives = directives.stream()
Candidate: this should be <UNK>
Reference: please use openmrs code formatter. need space beteen passing parameters
Candidate: this is designed to be <UNK>
Reference: should we perhaps call node.dispose() here?
Candidate: is there a reason for this method to run()
Reference: this business rule should be part of the backend, not of the restapi.
Candidate: please consider using a new <UNK>
Reference: this doesn't look right. the only call to kem.print() should be in frontend.java when execution ends. why was this done?
Candidate: i think we should be a here instead of <UNK>
Reference: a candidate for runmultiplequeries? i'm not an expert on that... maybe you've chained them for a reason
Candidate: this should be <UNK>
Reference: you do peek twice (next line), i'd either move it to a variable or use isempty
Candidate: is there any particular reason for this? fyi, we could be a <UNK>
Reference: nit: is there a reason to change this from null? i find null to be more intuitive (in java) to represent no string, rather than a present string that is
Candidate: collections.singletonmap() ? thanks!
Reference: i just realized there is an issue with the serialization of the collection<? extends v> value here: - collection<? extends v> is serialized to data - it will then be
Candidate: suggestion <UNK> = <UNK>
Reference: this is not very good, it is bad practice to use instanceof in this case. we should have a common interface
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i wonder whether this could be simplified with util.fixnull(andtrim) or what they're called.
Candidate: if you could use <UNK>
Reference: what about just using arrays.aslist() here? no reason (at least none that i can think of) for the resulting list to be mutable.
Candidate: this should be simplified to java return <UNK> <UNK>
Reference: the variable is not required
Candidate: please reorder the transaction here instead of creating a <UNK> call.
Reference: please change this loop to do { ... } while(). it is strange to see node != null after node.getlineno().
Candidate: you could use <UNK>
Reference: permission. -> "permission denied."
Candidate: please remove this line
Reference: i am finding it hard to follow the code here. what was an example value for redirect before and after this change?
Candidate: this is not required (can be be
Reference: remove whitespace
Candidate: this is a bit more efficient, that we could use the <UNK> <UNK> <UNK>
Reference: bernoulimatrix should have the same # rows and # columns with the input matrix. more precisley, it should have "the number of outputs of preceding fullyconnectedlayer" rows \* "the number
Candidate: we could use a <UNK> <UNK>
Reference: i think we should throw an exception if casting is not ok. else the description will be empty and further no notification is send to the user. except that an
Candidate: why not smartmeteringmonitoringendpoint not sure that this is not suitable
Reference: instead of asserting not null, let's better just check if the image we're interested in is in the list.
Candidate: you could use <UNK>
Reference: should this still set response = failure? seems like an important logical change
Candidate: @ivange94 readasstring(...) instead
Reference: optional: it would be clearer to assign directly 'agent = cap.substring(...)' since that makes it more obvious what's happening (setagent can't be overridden since the class is final, but it's
Candidate: nit: you could use a setter instead of creating a copy
Reference: you expect no response key but in storagedevicelistreturnforxmlrpc you look for 'deviceinfo'. please be sure that vdsm sends properly build dictionary.
Candidate: you could use <UNK> instead of objects.isnull
Reference: nit: log.info("executing {}", mountcommand);
Candidate: i think that this is is not <UNK>
Reference: why we still have other exceptions declared while in kafkaproducer only producerfenced is declared?
Candidate: you could replace foreach with foreach -> foreach -> foreach -> foreach -> foreach -> foreach -> foreach -> foreach -> foreach -> foreach -> foreach -> foreach -> foreach
Reference: why check for numberformatexception removed ?
Candidate: please use a string concatenation
Reference: since you use builders and you may not want to have external code create new entries, just use the content, you can make the constructor private or protected.
Candidate: you could use a constant instead of <UNK>
Reference: used multiple log's parameters here
Candidate: you should use feature description for description
Reference: refactor to generate searchsourcebuilder only in one place
Candidate: you can use <UNK>
Reference: we should assert that the message was sent in the request.
Candidate: is there any reason why is required?
Reference: this can/should be outside the lock in general, anything that can be done outside locked sections should be. putting it into the critical section implies that it is thread-unsafe.
Candidate: nextvalueindex is not be called on the thread.
Reference: this logic seems to be inverted
Candidate: you could use a constant instead of <UNK>
Reference: could return early instead of nested conditionals? suggestion
Candidate: this could be replaced by: <UNK>
Reference: these asserts will only work on debug builds, can we put in a different check?
Candidate: you could use <UNK>
Reference: this should be done in ctor and not every time during search.
Candidate: if this is not return null.
Reference: return results == null ? collections.emptymap() : results;? the same for exceptions()
Candidate: rename to
Reference: maybe just set this as this.urn = "java:" + clazz.getname() then you dont need the transient java type
Candidate: use <UNK>
Reference: the meaning of this info log seems to be not clear, shall we please review grammar?
Candidate: i think that this is not efficient, but i would be skipped that the is not <UNK>
Reference: magic number
Candidate: this is designed to be a <UNK>
Reference: is there corresponding release ?
Candidate: this is intended to retry line: <UNK> -> <UNK>
Reference: do we want to .trim() the 2 parts to avoid possible problems if an authorization header comes like <key> : <signature> ?
Candidate: is there a reason to check that is empty?
Reference: afaict you need to declare a future variable, but you don't need to return future, you can also return future.whencomplete(...)
Candidate: maybe we could be lock down to lock
Reference: perhaps return boolean to say if the id was found (similar semantics to set.remove)?
Candidate: remove the
Reference: it is a simple change that doesn't change the logic. i prefer that we change it now and then think of a way how to make the method more efficient
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: could change the name to sdbglauncher
Candidate: wait.forelementclickable() should be <UNK>
Reference: shouldn't all of this be remove too - we aren't really attaching the domain to any pool in this command, are we? moreover - now that you removed the previous
Candidate: please use <UNK>
Reference: i think this would be easier with new handler().postdelayed(() -> ..., 800)
Candidate: rename <UNK>
Reference: shouldn't you also set broadcastreceiver and settingscontentobserver to null, to prevent memory leaks?
Candidate: list#isempty()
Reference: do we need to check doestemplateexist(cruiseconfig) as at the controller we are doing a load_template before destroy same check doing twice
Candidate: please use <UNK>
Reference: i think it should return array here.
Candidate: i think it should return here.
Reference: suggestion objects.requirenonnull(elementtype, "list element type cannot be null");
Candidate: use <UNK>
Reference: just let exceptions that would fail the test also escape the test give us some more information, such as stack traces and the original error message. never drop the original
Candidate: i doubt that this is is not to the dir
Reference: can you please create a function for this condition, instead of copy-pasting it?
Candidate: please remove the whitespace
Reference: you will have a npe here if associationtype is null whereas before the code would support a null associationtype.
Candidate: we could use a string "invalid stringutils.isnotblank instead of <UNK>
Reference: since the headers are coming from the config are such as inmutable, probably you can load the headermap as an immutable map on a static block or so when the
Candidate: maybe we could use only:  this(name, <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> "-";
Reference: that can't compile anymore.
Candidate: you could use <UNK>
Reference: to be consistent we should introduce constant for kie-deployment-descriptor.xml and possibly also use it in the tests
Candidate: you could use a constant instead of <UNK>
Reference: this is syntactically correct but it would be best to use curly braces for consistency
Candidate: is there a strange, a strange, log.debug property?
Reference: empty() instead of empty for consistency.
Candidate: this is a <UNK>
Reference: string tableid
Candidate: you could use a constant instead of <UNK>
Reference: wouldn't it be an improvement, if you also extract all the code clones into a private method like illustrated in the following?  private result visitelement(tinterfacetype node, p parameter) {
Candidate: you can use the guid instead of <UNK>
Reference: the entity should be vm (var__type__vm)
Candidate: please add a message
Reference: seems like a copy-paste. can you refactor skipping logic to a separate method?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this can potentially cause npe, @anuragaw can you check who are the users of the method and potentially what must be the ideal return value? the createcountselect and its indirect
Candidate: use <UNK>
Reference: i think we should either use logger debug message for this or just remove and assert message text like we do one line bellow.
Candidate: you could print stack trace to warning?
Reference: redundant, the call to this(vdsid, bondname, network, nics) already handles it
Candidate: suggestion if <UNK> == null) {
Reference: can be shortened to if previous != visible
Candidate: i think that this is not efficient, we should use the <UNK> <UNK>
Reference: it's not *being* re-run, it needs to be rerun
Candidate: i think that this is a <UNK>
Reference: one of the coding styles we try to adhere to is to always use braces for conditional bodies. though more verbose it makes it easier to add else statements and
Candidate: you could use <UNK>
Reference: is it right to assign an empty string as the default value of the response? what complications do we have if we let it be "null"?
Candidate: is there a lot of that this could be encapsulated in a file?
Reference: why are all unchecked and checked exceptions being caught? it seems like we should only be catching the expected checked exceptions, and allow unchecked exceptions simply bubble out.
Candidate: delete.
Reference: nit: ... only once
Candidate: static import?
Reference: if (um != null) { framework.doprivileged(() -> createusersandgroups(um)); }
Candidate: you can use final.
Reference: might be good to rename distance to "meters"
Candidate: this is is dangerous, but the clear() is not <UNK>
Reference: same. no "else"
Candidate: i think that vdsid is not mandatory
Reference: why assign the throwable to ignored in the first place? also in completesterminationfutureexceptionallyifactorstopsexceptionally()
Candidate: suggestion <UNK> -> <UNK>
Reference: this might not be able to be a constant if salt_len is different for the different algorithms
Candidate: nit formatting
Reference: here should be a space after for
Candidate: you could use a try-with-resources instead of printing the
Reference: wouldn't it be better to use a stream here, instead of a loop? due to the operations done inside the loop, i think this is a perfect candidate for streams
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: unget service again after usage
Candidate: we should throw an exception instead of <UNK>
Reference: why do we need this? isn't the default already 0?
Candidate: i think that this is not efficient, we should have to to the <UNK>
Reference: maybe change to debug level and wrap in if statement for isdebugenabled ?
Candidate: i we sure that this is is not to be the middle of the middle of the middle of the middle of the middle of the middle of the middle
Reference: we deprecated port recently (host is a (list of) host/port tuple(s) now). we should not add it to new data stores.
Candidate: formatting: use the string concatenation instead of string concatenation
Reference: string rule = ruletext; if (rule.startswith("%") rule = substring(1); if (rule.endswith("%") rule = substring(0, rule.length() - 1); return rule;
Candidate: suggestion <UNK> = <UNK> + <UNK> + <UNK>
Reference: i take it that this could not be simply "exists = (results != null) && results.next() && (results.getint(1) > 0);"
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: bit of duplication here.
Candidate: is there a reason for this constructor?
Reference: please limit the visibility of the constructor
Candidate: this is a <UNK>
Reference: how about using file.createtempfile() here? you can also combine that with file.deleteonexit()
Candidate: please use <UNK>
Reference: @ikhvostenkov please use splittext here
Candidate: is there a reason for this method is empty?
Reference: awesome work so far, eli!
Candidate: you could use <UNK> instead of <UNK>
Reference: nit: there's no value to using stringbuilder here. just exit early then retain existing logic if not present
Candidate: if you could use brackets around the return?
Reference: do not return null, use optional
Candidate: use <UNK> instead of <UNK>
Reference: can you explain under which circumstances this happens?
Candidate: i think this should be called from <UNK>
Reference: replaces #339
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this should be before the callback i think
Candidate: nit: you reduced to <UNK>
Reference: likewise. extract "limit" out of the for int limit = math.max(1, columncount);
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: hmm, really? i think aggregation may fail on other cases such as oome.
Candidate: i wonder if this is designed is designed designed to be a often, i wonder if this is designed is designed internally to a tiny situation.
Reference: why do you get the session here? move into condition where you actually use them.
Candidate: you could use <UNK> to <UNK>
Reference: this should go to info if the loggin below is in info
Candidate: if you could replace this with <UNK> with <UNK>
Reference: why not just this.gender = student.gender?
Candidate: is there a reason to use s?
Reference: i know we already reached an agreement not to keep the old method signature, but let's double check - users shouldn't be extending this class, right? should we still try
Candidate: is there a reason to assert here?
Reference: nice, i like it! one suggestion though: i believe you can can do a logical or in ldap queries. i think that would be preferable to making multiple queries in
Candidate: you could use <UNK> instead of creating a new <UNK>
Reference: this breaks the public api of httpmessage. but in this case, we have to break the api so that the returned value is able to represent the query parameter content
Candidate: please use <UNK>
Reference: better use #getdescriptorordie() that would throw an exception.
Candidate: suggestion <UNK> = new <UNK>
Reference: there are still a lot of calls to this method, resulting in errors that will not reference any bpmn element. from a quick look, many of those do have an
Candidate: how about catching the exceptions?
Reference: this will blow up the entire read. with smallrye i believe if a metric throws an exception it is caught and logged but the loop reading all the metrics continues,
Candidate: log.debug
Reference: 10s is a lot! :sweat: can we reduce it to 1.1s?
Candidate: this pagelogging
Reference: this means a single "-1" will close this listener -> messages from other workers will be ignore -> test failure
Candidate: this is a bit nervous that we could have a to <UNK> the <UNK>
Reference: are there chances that status remain null. if yes, then we should have a check for status is null or not.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: if/else block seems to be exact same as onerror(), let's just call it here?
Candidate: is there a reason to check? mapping?
Reference: someone switched into french part-way through this error message.
Candidate: should be be
Reference: [question] why are we casting here? isn't it project an instance of project?
Candidate: use collectionutils
Reference: since we already synchronized on it, maybe should just as well put assignmentfailurewindow.putall(this.assignmentfailures); inside the block and then it doesn't need to be a concurrenthashmap. to reduce two synchronization mechanisms
Candidate: you could use <UNK>
Reference: confused by the chosen date? should it be 2011 instead? also, this should probably be static final, and with a timezone.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: use configuration.gettimeduration()
Candidate: is there a reason that we are going to make this test that the is not
Reference: can you remove this?
Candidate: i think this is not efficient, we could use a <UNK>
Reference: this test seems good, but can't we test whether the globalschedeventprocessor consumed sufficient time period also?
Candidate: we should set to *after* the endpoint *after* the endpoint *after* the endpoint *after* the <UNK> we have to set in the setting.
Reference: not sure how this class is used but... can we have an npe here? you are setting tracksegments before instantiating keyonlytracker
Candidate: i think this should be updated.
Reference: should we log errors?
Candidate: we could use a decision.
Reference: it's probably better to check variable for null before calling this method.
Candidate: rename to
Reference: wondering if the array elements should be casted if they are not longs.
Candidate: you could move this to <UNK>
Reference: maybe rather collections.singletonset( )?
Candidate: use <UNK> instead of <UNK>
Reference: null check?
Candidate: i'm not sure how about this is a bit but i think we could be a <UNK> <UNK>
Reference: ouch.. but if this is the only way.... then so be it!
Candidate: i think this should be <UNK>
Reference: this introduces a bug. revert.
Candidate: is there a reason for this change?
Reference: fix this method with the prefix.
Candidate: this could be replaced by <UNK>
Reference: spaces before and after - you can use ctrl+shift+f to auto-format the selection (or the whole file if there is no selection)
Candidate: you could use <UNK>
Reference: maybe channel.close().sync()? channel#close() is async and returns a future.
Candidate: is there a reason for avro ?
Reference: if we compile the pattern we should also store it in a hashmap. otherwise dont compile it (costs more resources, but if we dont reuse it we do not have
Candidate: ![major](<link_1> 'severity: major') remove this method. [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0>
Reference: can you define constants for these versions?
Candidate: we could use system.currenttimemillis() instead of <UNK>
Reference: or just call ignorefailure(true) for consistency?
Candidate: i think this is not efficient, we could use <UNK>
Reference: won't this method modify fname, which is a string builder, so that whenever this is called it will just be appended to? you'll get name_prefix_firsttime_secondtime_thirdtime, or am i mistaken? i
Candidate: you could use <UNK> annotation, instead of <UNK>
Reference: this will receive null as fillcolor which is used as a param for replace("$fill", fillcolor). maybe it should use a default color instead or is "null"/unrecognized color black or something
Candidate: suggestion <UNK> = new <UNK>
Reference: nit: this should be a different test, right? something like versiondoesnotupdateifsupplierisnotcalled
Candidate: please use <UNK>
Reference: should the shutdown happen after the event thread is interupted? in other words, could we get an event after we shutdown the producer
Candidate: shall we print stack trace instead of <UNK>
Reference: constant ?
Candidate: minor: <UNK> -> <UNK>
Reference: doesn't match coding conventions: shoud be  try { ... } catch { ... }  (spacing and bracket location)
Candidate: this log.
Reference: yeah i think it's fine
Candidate: you could use <UNK>
Reference: this code would have to keep being updated every time there is a newer version of the library. would it be possible to improve this so that it could be
Candidate: use <UNK>
Reference: checking up just one block is probably not enough. think of something such as:  if (checkperms()) { if (myothercondition) { // dml here } else { // dml here
Candidate: this should be a <UNK> <UNK>
Reference: we should do these in a directory other than the system temp directory.
Candidate: please use reflectiveoperationexception
Reference: instead of 'invalid_network_filter_id' you should pass null.
Candidate: wait.forelementclickable() should be <UNK>
Reference: only print if != default
Candidate: this is designed to be a reasons.
Reference: nit: failure -> error
Candidate: log.debug -> <UNK>
Reference: line length
Candidate: this is not to tear down down down down down down down down down down down down down down down down down down down down down down down down deeper
Reference: let's do it using lambda approach
Candidate: no need to log the
Reference: for instance, in interpret, it will be much nicer to return the message in interpreterresult than throwing exception
Candidate: i think (throwable decision.
Reference: (int) would be sufficient.
Candidate: please use <UNK>
Reference: i would expect preference listeners to process the selection. also this code may be shoter if we have a "function" (button, string) - it may be used both here and
Candidate: suggestion <UNK> = <UNK>
Reference: can we just make a object column selector? it'll clean a lot of this code up
Candidate: minor issue here.
Reference: final
Candidate: not not not not not not not not not not not not not not not not not not not not not not not not not not not not not not
Reference: if there is no slash then start index is -1 and then i think we should make it more clear that we dont substring it then, eg if (startindex !=
Candidate: i am not sure how about using a <UNK>
Reference: extract this into a new method. also, check if using <code>apppage#changepagetype</code> is more suitable here.
Candidate: typo: <UNK>
Reference: rename c to contentlet
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: @gaurav-deshkar having hibernate in the service layer instead of the data access layer does not look sweet. :) can you point me to a failing unit test and i see
Candidate: we could use a <UNK>
Reference: we should not need to call this, the optionsparamcertificate already enables the certificate.
Candidate: you could use tear combined: <UNK> <UNK>
Reference: @ketan rethinking this, i'm not sure if this is a good idea. can't calls [such as this](<link_0> affect the db, while a backup is in progress?
Candidate: is there a reason to export this method here?
Reference: you could deallocate in catch (throwable) and remove shouldfree, but the method is just doing more than it used to (the old version didn't free the allocated memory if performput
Candidate: use collectionutils instead of a lambda.
Reference: please use {} placeholders here
Candidate: if this is designed to be an run()
Reference: this method is so long, can we divide it to smaller more readable parts ?
Candidate: is there a reason for this logic?
Reference: any chance you can be more specific?
Candidate: is there a reason to re-throw the exception properties?
Reference: this can be executed concurrently.
Candidate: why is this is going to waiting for <UNK>
Reference: nice catch
Candidate: i think a bit strange to use a <UNK> delete.
Reference: nit: outside of helix-core module, we should try to use zkclient instead of basedataaccessor.
Candidate: you could use <UNK>
Reference: not sure why we need to do this
Candidate: suggestion <UNK> -> <UNK>
Reference: please move menu into arguments
Candidate: suggestion return <UNK> -> <UNK>
Reference: number "of"
Candidate: you could use a try-with-resources instead of creating a
Reference: should be "valid" instead of "valide". should use nls.bind() to construct the message.
Candidate: <UNK>
Reference: please move else branch to the start of the method.
Candidate: why we catching exception here instead of printing the exception
Reference: i took a poll (@domoritz and @7andrew7 present) and it was voted that this code is not good code. suggest a series of if statements instead:  java if (castto
Candidate: is there a reason for this method is not
Reference: same functionality, consider moving pricelist.add() and history.put() below the if else statement
Candidate: throw an exception instead of <UNK>
Reference: sorry missed that in my first review. i would say here (i did this in my gerrit review for this issue): the org.eclipse.ui.istartup extenstion instead of "the startup extension".
Candidate: is there is a a slight concern for the <UNK>
Reference: no method should complete() a context that it does not create. this could have unintended consequences (as a completed context can no longer be used).
Candidate: i think this be a <UNK> <UNK>
Reference: use getandremoveparameter(parameters, "xxx") instead which comes ootb
Candidate: is there a reason for this property?
Reference: @dmzaytsev better to use paths.get("sub", "file").tostring()
Candidate: you could use <UNK> here instead of nesting.
Reference: please be consistent with names: operands are x and y, result is z. the suffixes i and l denote int and long.
Candidate: ^ stringutils ^
Reference: can we leave list<string> as return type ? all the other methods in runimageconfiguration return a list for collections, and also it is not the most generic type which can
Candidate: this could be replaced with <UNK>
Reference: remove validation on client
Candidate: is there a reason for this method is not <UNK>
Reference: you will have different errors for different api versions, i spent a lot of time in this place
Candidate: please use <UNK>
Reference: nit: just noticed there's also received * datagramsize above on line 586, could do it once
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this.partitionkeypathindomaintype = getpartitionkeypathindomaintype(domaintype);
Candidate: i think this should be a efficient, that this is is not <UNK>
Reference: every time we call getusagerefresherlistener(), it instantiates a new storageusagerefresher.listener, is this intended?
Candidate: this should be <UNK>
Reference: please use try-with-resource on the input stream - this code opens a stream but does not close it. better yet - use files.readalllines(file, standardcharset.utf8)
Candidate: you could use use enum?
Reference: why is the asserttrueallthetime used? isn't it sufficient to use a single check instead of 5 checks with 1s delay between them?
Candidate: minor: this concern is not fail()?
Reference: please be consistent with the command names. you could just use camelcase
Candidate: should this be <UNK>
Reference: please replace with stringutils.isnotblank()
Candidate: could be reduced to (string cr
Reference: no need to change savings_account_submitted_for_approval to savings_account_submitted because there is two type of saving account submission. 1. submitting saving for creating a new one. 2. submitting for approval.
Candidate: please use <UNK>
Reference: ![critical](<link_1> 'severity: critical') refactor this method to reduce its cognitive complexity from 16 to the 15 allowed. [![rule](<link_2>](<link_0>
Candidate: is there a reason for this property?
Reference: i'd rename paths to types or subfieldtypes because this variable holds a list of types, not paths.
Candidate: log.debug
Reference: i'm a bit concerned about this. in order not to flood - let's just remove this enum constant at all?
Candidate: i not sure that this is is not a bit more than 1. 2. do we 2. 2. 3. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2.
Reference: i'm not sure about this if block. why do we need it? can we just store only the fboname and then get the fbo itself only when we need it?
Candidate: i'm not sure how about this is a <UNK> but i think that this is is a <UNK>
Reference: gets appended even if capacitytypes.length == 0. please guard it
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this is a bit double negativey wouldn't  if (cryptoenablepgpinline) { composecryptostatus .... } else { return false; }  be more readable.
Candidate: this is not efficient, we could use <UNK>
Reference: wrong return type in cachemode(), transactional() and lockingmode() methods.
Candidate: we could use <UNK>
Reference: shouldn't the write_only check be part of the allowload method?
Candidate: if this is not updated.
Reference: doesn't qulice complain about this indentation?
Candidate: @xupyprmv let's use this here too, instead of '+'
Reference: did you want to remove legacy from this name also?
Candidate: tiny nit: you could use <UNK>
Reference: for performance reasons, it would be better if this clearcache() was moved down 5 lines next to the instance.usagecount = 0;. as 'close()' may be called by multiple threads -
Candidate: i we wanna y first.
Reference: here is where appendtourl method should be used
Candidate: is there a reason for avro to be a
Reference: this is a situation where i would like to see something like java logger.error(e.printstacktrace());  or java logger.catching(e);
Candidate: i think we should throw an illegalstateexception instead of the iae and inform that iae will be invalid?
Reference: are you sure about that cast operation? you are asking for a service interface and cast it to a concrete implementation without instanceof check. you perform that check in the
Candidate: can't be null?
Reference: !stringutil.isemtpy(typename) could be a better choice.
Candidate: minor nit: you could use <UNK>
Reference: this means that we can't build interfaces with builders right?
Candidate: i think that this is not be initialized in the
Reference: nit: according to l.403, you want to use comma to seperate every fields. so, it seems like you lost a comma here, do you want to unify the format?
Candidate: could we use a string instead of <UNK>
Reference: i guess we don't need to put "string" before this variable, maybe cuz it's already assigned? i put "string" in front of it when i used it but i noticed
Candidate: you could use a constant instead of <UNK>
Reference: i would not use vc.createextension like it is. i would refactor this method, separate a past which returns the uri from the rest and call just the extracted method because
Candidate: please use <UNK>
Reference: remove
Candidate: is there a reason for this test is not <UNK>
Reference: update index counter?
Candidate: this is not efficient, we could use the <UNK>
Reference: static
Candidate: <UNK> -> <UNK>
Reference: you can join the ifs. there's a content assist for that, it's awesome.
Candidate: if we == null || <UNK> == null) { above). }
Reference: should the new constant be used here?
Candidate: this should be this(name, 32 chars
Reference: thank you for so fast turnaround @neetkee ! well, this assertnotnull() must be first any way. otherwise we end up with npe already on a first binding.getexchange(). please, fix that
Candidate: @ivange94
Reference: where is this being used?
Candidate: i pagelogging
Reference: should we make it isbuilder?..
Candidate: is there a reason for this logic?
Reference: might be better to have a check for not null as first thing in this method.
Candidate: you could use a constant instead of <UNK>
Reference: can this response be read and verified?
Candidate: please use the string()
Reference: if
Candidate: use a string instead of <UNK> ex. string <UNK> = <UNK> string <UNK> = <UNK> string <UNK> = <UNK>
Reference: i think we need to handle partitioned columns in orc and avro.
Candidate: use <UNK>
Reference: not needed
Candidate: unused
Reference: remove space.
Candidate: you could use a local variable instead of objects.isnull
Reference: @pettyjamesm why is this call needed?
Candidate: space after (,
Reference: .tostring() is not needed here.
Candidate: you could use <UNK> instead of creating a connection, instead of creating a connection,
Reference: please throw an exception rather than returning if the chat color is not found.
Candidate: this is a <UNK>
Reference: this needs to return a completable future, not null
Candidate: i think, that is not be encapsulated in the
Reference: this looks like an often reused check, would it make sense to make it part of the type?
Candidate: wdyt about passing partial <UNK>
Reference: no need explicitly open transaction, only one save to db, transaction will be open automaticly
Candidate: i think that this is not <UNK>
Reference: the above line parameterset paramset = task.getparams(); is not used.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this name looks more as some internal method name than test name, i suggest renaming it to something like activerequeststest or something similar.
Candidate: please alias should be be at least one at least at least at least at least at least at least at least at least at least at least at least
Reference: shorten to boolean hasdarktheme = getthemes().stream().anymatch(t -> t.getid().startswith(e4_dark_theme_id));
Candidate: suggestion <UNK> = <UNK>
Reference: why is while used here?
Candidate: <UNK>
Reference: please remove this statement or enhance it to something more context/meaningful
Candidate: wait.forelementclickable() should be <UNK>
Reference: this seems like an even odder test than before. a schedule from july to july will handled differently to one from july to august. maybe keep the existing code, but
Candidate: you could use <UNK>
Reference: can you pelase change the header to: " * copyright (c) 2011, 2020 eurotech and/or its affiliates"
Candidate: i think that this is is not <UNK>
Reference: just as a hint: we also have assertnonull
Candidate: i we future: we need to create the future:
Reference: [optional] s/commitsha1/headcommit [optional] just compare the objectid's directly, then you don't need to invoke 'getname()'.
Candidate: if you could use <UNK>
Reference: in the remotespawncache, the equivalent condition was moved before the concurrent modification check. it probably doesn't matter, but it doesn't hurt to be consistent either way.
Candidate: oh i can't be saved saved from the
Reference: this is a tiny micro-optimization but i'll mention it since it might add to readability: sets.newhashset(s.split(",")
Candidate: you could use <UNK>
Reference: should there be a case for arrays, too (this would be either non-primitive arrays, or multi-dimensional primitive arrays)?
Candidate: you could use this unconditionally, as an equals?
Reference: @srinivasantarget i would like to advive you to  java asserttrue(!stringutils.isblank(driver.switchto().alert().gettext()));  what if the empty string would be returned? :)
Candidate: suggestion <UNK> = <UNK>
Reference: while updatecounter is in await, applyupdates can be called again, causing updatecounter to reference a new countdownlatch. then, finishmigration will update the new one and not the old. maybe this
Candidate: you could use <UNK>
Reference: do we want + "/*_/_.xml" here instead?
Candidate: you could use a constant instead of <UNK>
Reference: since a logger instance is there, shall we use that?
Candidate: this should be defined in <UNK>
Reference: rename ctx -> context
Candidate: we should throw an exception here instead of returning null?
Reference: missing {} in the if, so you are breaking the statement there. that's exactly the main reason why i *hate* the if without brackets if that code bug was not
Candidate: unused
Reference: missed this one in the previous review, needs updating as well!
Candidate: you can use tear down to
Reference: please do not use "blablabla" as a string literal. instead, name it after the thing you reference. use "invalid_type_url_example" in this case.
Candidate: unused
Reference: else empty ?
Candidate: you could use <UNK>
Reference: nit extra line
Candidate: use <UNK>
Reference: shouldn't headers be added irrespective of post/get?
Candidate: nit: isempty()
Reference: please use hamcrest matchers
Candidate: equals?
Reference: npe should not be catched btu the case where it might appear should be checked with if (smth != null). we definetely don't want to ignore every npe.
Candidate: this is not throw an exception
Reference: shouldn't we use assert.assertequals(math.round(val),rs.getlong(1)); instead here, as both math.round() and round() with 1 parameter returns bigint?
Candidate: nit: space between ( []
Reference: shall we send a 404 when the registry cannot be found for the given uuid?
Candidate: use <UNK>
Reference: can you use instanceconstants.container_like?
Candidate: nope,
Reference: i don't think we want a warn log for user-specified readonlyheaders on every build of a message. perhaps it would be better to put the warn log in the for
Candidate: log.debug
Reference: is there a need to check the action for null?
Candidate: i suggest using a constant instead of <UNK>
Reference: requirenonnull
Candidate: you could use <UNK> multimap instead of <UNK>
Reference: what if we instead change this to be list<function> and have the code below run in a loop until the last function added was noop? this would enable a pattern
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why create a variable for this?
Candidate: if you could use a <UNK> <UNK>
Reference: why didnt you prefix this with shadow like you did everywhere else?
Candidate: please use <UNK>
Reference: technically the email hint is provided by smartlock, so this would make the api somewhat dishonest. although i agree with you that enabling the hint for everyone may be a
Candidate: this bail again?
Reference: is this system.out.println leftover from debugging?
Candidate: again, no need to declare the
Reference: if ((maiddo == null) && (mhashdo != null)) { or if (maiddo == null && mhashdo != null) {
Candidate: we can't we just use <UNK>
Reference: i think flipping the key (string) and the function params for "read*" methods would make their usage more readable.
Candidate: i liked that this method is be called in the <UNK>
Reference: why not append up to 10 sitemaps, versus appending nothing if there or more than 10?
Candidate: <UNK>
Reference: at a glance this looks good. another approach would be to swallow every exception at the sethamaintenance command and translate it to error. that will make error handling even better
Candidate: how about this lock is invalid?
Reference: is it an issue that in case the decorator fails (i.e. exception thrown in onerror) that we never gonna call span.finish()?
Candidate: you could use <UNK>
Reference: i'd personally do a 'timetonextrotate' method, then you don't need the +1 each time, but that's just me nitpicking
Candidate: we could use isempty() instead of <UNK>
Reference: sout ;) ...and my question if this try/catch here is needed? if yes can we move this logic from test side?
Candidate: this should be <UNK>
Reference: should also check for configuration "spark.executor.instances"
Candidate: is there a reason to log.debug ?
Reference: @dogeared rather than doing authentication authentication = new preauthenticatedauthenticationtoken(account.getemail(), null, authenticationprovider.getgrantedauthorities(account) you should do  authentication authentication = new preauthenticatedauthenticationtoken(account.getemail(), null, account); authentication = authenticationprovider.authenticate(authentication);  this way you leave
Candidate: ![critical](<link_1> 'severity: major') either remove this exception or rethrow this exception. [![rule](<link_2>](<link_0>
Reference: i think the reason this doesn't sync over to the model is that setvalue doesn't fire events by default. does it work with .setvalue(sourceonsave, true)?
Candidate: wait.forelementclickable() should be <UNK>
Reference: let's move this down to be after the peak stats. also, surround it with blank lines since it is a separate stat.
Candidate: please add a log message
Reference: - this has to be the main method to do all the magic of setting up the values etc. it needs to be called both when the getdatacenterwithclusterslist() changes and
Candidate: this is not <UNK>
Reference: are system.out statements still actually useful? shouldn't they be removed or replaces by some more configurable logging?
Candidate: remove the
Reference: magic numbers
Candidate: use <UNK>
Reference: why having this print? is doesn't seem relevant to the user.
Candidate: please add a log message
Reference: not necessary to check if font file exists
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: seems like an extraneous line to me?
Candidate: if you could be a return?
Reference: maybe it makes sense to add some meaningful prefix like "tooling"
Candidate: this is a <UNK>
Reference: can this move to abstractcontrollerservice? it would be nice if the clear() method wasn't public.
Candidate: you could use <UNK> instead of <UNK>
Reference: need for this method? construct file directly using  file = new file("target", "bigfile.txt"); inputstream teststream = randomstream(0, 256); fileioutils.copyinputstreamtofile(teststream, file);
Candidate: magic number
Reference: use identitydbutils to get the db connection
Candidate: we should annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation,
Reference: why do you need the gtkthemename string? it looks useless to convert the buffer to string, not use the string and convert it to buffer to pass it to gtk_css_provider_get_named
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i might be wrong but i am really wondering if you did not, somehow shortcut erasure by relying on fully qualified name and therefore hacked a solution instead of fixing
Candidate: if we e2 @nullable.
Reference: is this log really needed? i also feel like this is left over from some debugging session. if you think we really need this then: - tostring is redundant -
Candidate: i am not sure how about this is a
Reference: the result variable should named as result
Candidate: if (throwable is not connection,
Reference: instead of an empty arraylist, i would use collections.emptylist().
Candidate: please use <UNK>
Reference: possible npe
Candidate: use <UNK>
Reference: shall we re arrange this conditions, else this will throw npe
Candidate: this is not be a <UNK>
Reference: we should also check if the xml file is the current app. i.e. check if the filename starts with devmojo.this.project.getartifactid()
Candidate: this is designed for descriptor.
Reference: extract to top as constants. (alt-shift-t in eclipse)
Candidate: you could use a constant here instead of <UNK>
Reference: can you put an explanation why this number 5 for the test so that test maintainer can understand better the significance of this number?
Candidate: i think that this is correct.
Reference: we do not use single line if-statements throughout the project. yes it's a nitty point, but i'd prefer you change it to curly braces.
Candidate: nit: use <UNK>
Reference: methods? this check is only about fields.
Candidate: this is designed to be a <UNK> <UNK>
Reference: do we want to allow being able to turn off polling by specifying a polling interval of "0"
Candidate: is there a reason to print the exception here?
Reference: can we pull this into a static var at least. should probably be configurable no?
Candidate: this is not belong to bind the
Reference: start argument is not actually used. is it meant to be?
Candidate: this is not
Reference: i would prefer this to use utils.ishammer(itemstack), however you will need to check the ctx to be entityselectioncontext and then retrieve the main_hand item of the entity involved. that is
Candidate: this could be simplified to <UNK>
Reference: it will cause ontrackschanged to be called twice. l1187 of mediacontrollerimplbase (in the same patch set) might be enough.
Candidate: you could use <UNK>
Reference: check code style for building mvc test rules on my latest commit on pr #556
Candidate: suggestion <UNK> = <UNK>
Reference: can you only add try-catch without changing the if style to elif? previous variant is more readable for me
Candidate: let's use a log.
Reference: why this extra condition here? if there is no manager, shouldn't we always clear annotations?
Candidate: you could replace this by: <UNK> != null && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> && <UNK>
Reference: can't we throw something more reasonable? also, i'd add a log here.
Candidate: you could use <UNK>
Reference: i don't know if they should be put inside this method or not. should temp table be considered as staging directories?
Candidate: i think that this clear() is succeeded
Reference: if the idea is to get clear and index to be happening parallel, this may not guarantee that. there is a indexmanager.testhook that can be used to control index creation.
Candidate: i would appreciate that appreciate that appreciate that this is a bit more often often often often often often often often often often often often often often often often often
Reference: whoops, i didn't think through this before! tostring should not have side effects. could you do this in setnewvalue instead and maybe change the name to setnewvalueorclearifunchanged? that's a mouthful,
Candidate: this is repeating the run() braces?
Reference: minor: use study.create() instead of new dynamostudy()
Candidate: i think that this is is not <UNK>
Reference: i was thinking more about this, it might be better to just use gettokens(httpmessage) (with requestmessage) instead of making public. this allow us to use the same method for json
Candidate: this could be simplified to java <UNK> <UNK> = <UNK> <UNK> <UNK> <UNK> = <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> = new <UNK> <UNK> <UNK> object(); } } }
Reference: should we check that the attribute does not already exist on the updatemetacard before setting it?
Candidate: you could use <UNK>
Reference: will be never executed? factory.runnow throws exception if result nok
Candidate: if this is designed to be a lock
Reference: it would be nice to rethrow some trace of e when check fails like  catch (prestoexception e) { try { ... the checcks ... } catch (throwable failure) {
Candidate: you could use <UNK> annotation, instead of <UNK>
Reference: use "return stringutils.equals(...,...)" instead of the if-else cascade.
Candidate: please use objects.equals()
Reference: tests directly against the service don't need to assume json is involved, only the controller needs to be aware of the serialization format. so i'd suggest skipping this step and
Candidate: you could use a constant instead of <UNK>
Reference: you can use the size of the referenced mappers as initial size of the list
Candidate: you could replace this with <UNK> with <UNK>
Reference: stringutils.substringsbetween(path, "[", "]")
Candidate: minor nit, but you could use a constant instead of <UNK>
Reference: please switch these to keep the setresult -> notifystatuschanged order consistent every time we do that. i think this matters because setresult is what updates taskstorage (through a callback) and
Candidate: should we be unsupportedoperationexception
Reference: could we please use objects.equals ?
Candidate: you could use a objects.isnull
Reference: could be simplified.
Candidate: @vilchik-elena is there a reason for element?
Reference: perhaps use startswith to match <link_0> ?
Candidate: suggestion if <UNK> == null) { router
Reference: this type definition is not needed.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: if there is an ioexception or any other problem copying the files the folder will be still deleted. there also should be some information for the user if there is
Candidate: is there a reason for this change?
Reference: wrong formating?
Candidate: can we use <UNK>
Reference: since this is inside the same class, i think just "super(float_size_in_bytes)" should work;
Candidate: this is a <UNK>
Reference: minor typo
Candidate: if you could use a <UNK> <UNK>
Reference: two important things: - do not use absolute paths - never use / or \ in paths use paths.get(...) instead or file.separator  java // replace "./foo/bar" with path p
Candidate: we should throw an exception instead of exceptions?
Reference: why not make the whole class final?
Candidate: @ivange94 not sure that this is not efficient, we should use a unsupportedoperationexception
Reference: the block from line 254 to 258 could be extracted in a method readmodel(modelpath) and reused in the next test.
Candidate: you could use a try-with-resources here instead of <UNK>
Reference: handle duplicatekeyexception
Candidate: this is not throw an exception instead of <UNK>
Reference: we can apply wsutils.wrapwithstreamingoutput() here, too.
Candidate: why not catching this exception
Reference: shall we throw exceptions with the error information here?
Candidate: this is be <UNK>
Reference: use json here too.
Candidate: use <UNK> multimap instead of optional?
Reference: minor style issue, but please move this next to textindexluceneassembler a few lines up, because they're similar
Candidate: please use <UNK>
Reference: shouldn't it be done only when disk is active?
Candidate: invalid? lock invalid? invalid? invalid? invalid? invalid?
Reference: the code will never go to the else statements?
Candidate: nit: use <UNK> instead of <UNK>
Reference: oups, can we remove such "null" argument?
Candidate: is there a difference between a between the between the <UNK>
Reference: i still don't think this should be a fatal error _for the producer_. as long as we can still abort the transaction, it should be an abortable error. it's similar
Candidate: nope, this is not return null"
Reference: maybe rename the variable from _mesosstormscheduler to _stormscheduler?
Candidate: this is a <UNK>
Reference: you can use method geturlforwiki (so you don't need to add empty string for article path)
Candidate: suggestion <UNK> = new <UNK>
Reference: nit: switch statement would be more natural here  switch (withnulls) { case all: return null_values; case partial: return intstream.range(0, rows).maptoobj(i -> i % 2 == 0 ? createvalue() :
Candidate: this could be simplified to <UNK> <UNK> bottleneck. : <UNK>
Reference: i don't think you meant to change this to notification_approved, unless i'm missing something.
Candidate: is there a reason why not sure.
Reference: let's be a bit more verbose here. and while at it, place this inside the jettylogger as well please (here is [another logger](<link_0> as an example)
Candidate: this should be <UNK>
Reference: do we need to specify all these properties. if yes can we && these values
Candidate: @ivange94
Reference: could we sort in an existing one in such a way that it appears on top of the list?
Candidate: could we use brackets around a single statement.
Reference: in -> input?
Candidate: if you could use a <UNK>
Reference: i could also live with this solution. as long as i don't have to hard code it :-)
Candidate: i doubt that this is is not covered by the <UNK>
Reference: we can simplify the long build block here. you can pass a parameter called tobuilder to readoption builder: builder(tobuilder=true), then here you can simply use: java readoptions options = readoptions.tobuilder()
Candidate: you could use a foreach config, instead of config, instead of config, instead of config, instead of config, instead of config, instead of config, instead of config, instead of config,
Reference: what about other error messages from server side (like 404, 500, ...) ?
Candidate: is there a reason for this method is not <UNK>
Reference: formatting error.
Candidate: this could be simplified to java 8 <UNK> <UNK> = <UNK>
Reference: intuitively i would rather do html escaping in the frontend. the backend should just expose the database credentials in their true form, it is the frontend's job to render them
Candidate: this is not :disappointed:
Reference: import static assert.assertequals()
Candidate: wait.forelementclickable() could be <UNK>
Reference: create the map here only when needed
Candidate: you could use <UNK>
Reference: nitpick: instead of -1, stateless.windowid
Candidate: you could use a constant instead of <UNK>
Reference: it says "cb.id" but i don't think "cb" is anything in this query. so i think either change the hql or if the code is not being called maybe we
Candidate: is there a reason for this method is not used?
Reference: iterable doesn't give us a .size() method, but you could check asserttrue(requirements.hasnext()), since (i assume) there should be actual requirements being sent?
Candidate: you could use a constant instead of <UNK>
Reference: needs quote escaping
Candidate: i liked the pretty-print could be replaced with <UNK>
Reference: another good candidate for computeifabsent.
Candidate: we should use <UNK>
Reference: i believe it should be moved to test file
Candidate: typo: import?
Reference: these lines can come after l128 and the first line becomes modelnode modelnode = resource.getmodel(); the resource from context.readresourceforupdate includes the data that you need to restore.
Candidate: we should use the exception here instead of <UNK>
Reference: do we need this anymore? can't we just send back the empty string as a default?
Candidate: you could use a constant instead of <UNK>
Reference: we prefer use result to name the result variable
Candidate: this should be <UNK>
Reference: this message should be externalized in mondrianresource.xml
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: do we have positive parsing tests to ensure that all arguments are parsed well? as well as tests that ensure the wrong argument types are handled gracefully?
Candidate: i think this should be updated.
Reference: this number will likely increase to test new features, breaking this test. check that there are at least 4 tools, 1 from dockstoretestuser2, etc.
Candidate: you could use <UNK>
Reference: need braces around statement as per the style guide
Candidate: please use isempty() instead of != null ?
Reference: please revert this change.
Candidate: you could use reflectiveoperationexception here
Reference: we can throw a exception here rather than return null
Candidate: you could use <UNK> instead of <UNK>
Reference: i think we could probably run into the same issue as in #5566 in this line. maybe checking ! textutils.isempty(mediaid) before attempting to run it through integer.valueof would prevent it
Candidate: should we use a <UNK> instead of <UNK>
Reference: i think it would be nicer if the header extraction was implicit, i.e. it magically happens when you call addrowsfrom  and you do not need to manually extract the
Candidate: if you is a <UNK> <UNK>
Reference: how about adding monitoring.broadcast_interval_ms to streamsconfiguration and parse/load during setup?
Candidate: i think expectedexception
Reference: feedback session's course id -> feedback question?
Candidate: suggestion <UNK> type"
Reference: now that you have cached keybytes at the instance level, can we get rid of the local keybytes byte array?
Candidate: you could use a constant instead of <UNK>
Reference: spaces before and after "+" (i think it's my favourite thing :p)
Candidate: please use <UNK>
Reference: you can use objects.equals() and save the null checks
Candidate: this is be simplified to objects.equals()
Reference: use optquarkrelative and the use and if (attributequark != itmfstatesystem.invalid_attribute). it's better than relying on exception handling for normal cases.
Candidate: you could use a constant instead of <UNK>
Reference: suggest using an executor vs native thread creation.
Candidate: you could move this log level to
Reference: add a check here to verify that the serialdatareceived method was not called.
Candidate: you could use <UNK>
Reference: nit: capitalize f in "falcon" in all the occurrences.
Candidate: remove this setting.
Reference: we should chat about this return type...please file a github issue so that it may be part of a post-preview 1 api review discussion.
Candidate: we could use <UNK>
Reference: maybe just change it to this.interrupt(), since we're not overwriting it.
Candidate: if finishing (throwable probably?
Reference: in the current version of the code, the result is reported regardless of which branch is taken here. i recommend you keep the semantics consistent and move the call to
Candidate: please use <UNK>
Reference: i think this sort is not in place on master, would be good to send this pr in there as well.
Candidate: tiny spelling
Reference: this method should be static and static methods typically go at the bottom of the class.
Candidate: is there a reason for the device id is not encapsulated in the <UNK>
Reference: at this point, why not make these registrations method calls instead of repeating the same field access over and over again with the same strings being used?
Candidate: you could use <UNK> instead of creating a new connection, instead of creating a new connection,
Reference: this.m_
Candidate: <UNK>
Reference: throw npe
Candidate: you could use reflectiveoperationexception here instead of <UNK>
Reference: we should pass the compensation context when calling this command
Candidate: how about moving this method to <UNK>
Reference: same here. pattern can be static to the class.
Candidate: use <UNK>
Reference: stringformat
Candidate: use <UNK> instead of <UNK>
Reference: we should explain in a message that signed isn't supported.
Candidate: this overwrites catches the exception is ignored.
Reference: hmm i think you forgot to push the change here :)
Candidate: you could use the enum instead of the enum ? u : false;
Reference: why calling concat here? i would worry this would prevent stringbuilder optimization for +'s.
Candidate: i think this should be a <UNK> <UNK>
Reference: better to use the map type for the declaration. and the diamond <> on construction should work. so i suggest map<string, string> requirementsvalues = new linkedhashmap<>();
Candidate: maybe we could be a log a constant?
Reference: since isdclassinitialized actually should hold whether or not initialization worked, what do you think about trading dclass_index!=0 for isdclassinitialized ?
Candidate: suggestion return <UNK> -> <UNK>
Reference: an undeclared exception type should always be wrapped with undeclaredthrowableexception.
Candidate: please remove this line
Reference: if there is an interrupt, the thread will not wait for count down of the latch and proceed. it would be safe if we assume that thread interrupt can suddenly
Candidate: :disappointed:
Reference: same here, why not use flavored classes to do this instead of class.forname based on a build flag?
Candidate: this uri.create to use <UNK>
Reference: might have been more readable to simply use a mock callback?
Candidate: this could be simplified to <UNK>
Reference: not required, but fine :p
Candidate: mag <UNK>
Reference: hardcoded, this should be done in a better way. <bug
Candidate: wait.forelementclickable() should be <UNK>
Reference: tosca.template.id should be a constant in applicationspecsbuilder. (there are two mentions in this pr and three existing.)
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: not that exhaustive that 'a' is the right password.
Candidate: why not use <UNK> instead of optional?
Reference: don't we have two separate arguments for log file and log level? why do we create relationship between them?
Candidate: use utf-8 instead of <UNK>
Reference: missing uninstall "ws.jar" bundle code
Candidate: this should be <UNK>
Reference: you should externalize the string
Candidate: this should be <UNK>
Reference: exsusts abd hem.... (typos were not there in the original exception)
Candidate: i think the context, the context, context, context, but context, the context, we should be able to context, the context, the context, we have a <UNK> context,
Reference: 1. better to log it in warn or error level instead of info? 2. typo, creat -> create. better to have full sentence e.g. create sftp connection was failed: {}?
Candidate: this is strange,
Reference: in this case the isempty check is redundant i think
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: not required unless for test.
Candidate: this is deadlock
Reference: same as before. unnecessary extra operations for minimal gain.
Candidate: suggestion <UNK> = new <UNK>
Reference: maybe call this once and store into a variable since it is currently being called multiple times.
Candidate: you could use <UNK>
Reference: if we store the idtokenprovider rather than googlecredentials, we can implement this whole thing as: java return idtokenprovider.idtokenwithaudience(targetaudience, options);  i would expect the idtokenprovider to know how to refresh
Candidate: is there a reason to throw an exception instead of <UNK>
Reference: if there is no san list in the cert then this would return null which would lead to an npe. need to add a ... !=null check and if null
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: well, you just verified three lines up that authentication is equal to acl.system so this seems redundant to me.
Candidate: could you use simplified to java return <UNK> == null) { return <UNK> }
Reference: you made this projected, but never call it outside of this class. it should remain private.
Candidate: why we throw new exception?
Reference: break?
Candidate: you could just use <UNK>
Reference: do we need this check. groupname starts with dn + "/" so lastslash will never be -1. please correct me if i am wrong
Candidate: wouldn't it be worth creating a index pair depending on the context, depending on the depending on the depending on the depending on the depending on the
Reference: variable name should be currentapiversion
Candidate: i would be a little strange,
Reference: changing from false to true is even more breaking. we need to avoid it unless we can really prove that it's safe.
Candidate: if player is designed to be a player
Reference: why we still need field "presenter" if you use provider ?
Candidate: is there a reason for this logic?
Reference: also, when inserting a multitree, you need to set the 4th arg which is the container instance on the page, e.g.:  new multitree(pageid, containerid, contentletsids.get(0),"uuid-1");
Candidate: is there a reason for a hardcoded <UNK>
Reference: the block of if...else if...else if... is hard to understand. i see you were trying to parse the jsonpath specification by your self. can we avoid such a implementation? or
Candidate: you could use a constant instead of <UNK>
Reference: the user can call getaccesstoken()
Candidate: please add curly braces
Reference: seems like the formatter did not format these line, please apply it
Candidate: i think this explained in a local variable?
Reference: this should be promoted to static or an enum or something
Candidate: you could use a string here instead of assigning a string as a string as mentioned above.
Reference: i'd like to raise this point again: since we changed the nature of composeobjectid to be static, we need to access auditlogdirector statically. this is unwelcome and could be spared
Candidate: how about moving this method to <UNK>
Reference: i thought we did not have the processdefinitionid in the extensions json i thought we had only the process definition key in the extensions json and that's why yesterday in
Candidate: this is not a a <UNK> that we have an enum somewhere, so that we have an enum somewhere, e.g <UNK> <UNK> return <UNK> return <UNK> <UNK> <UNK> <UNK> <UNK>
Reference: map should not be static. there us only single instance of jsonrpcserver so we can pass it around and call instance methods.
Candidate: please add a reconnect way?
Reference: instead of return, make it an else
Candidate: i think this should be a putifabsent
Reference: is this range meant to be hardcoded?
Candidate: please use a constant instead of <UNK>
Reference: no no! there can be any exception. and since we're not using transactions here, we *need* to do db cleanup in case of failure and if we fail doing so
Candidate: i think that the device id is not
Reference: it would be more clear if to put here instead of system.out some assertequals and check either it equal to expected string.
Candidate: is there a reason for element?
Reference: why is this 30 seconds buffer added?
Candidate: please use this logic?
Reference: this must be based on plugins capabilities instead of version 2.0 ?
Candidate: how about moving this to <UNK> entries? suggestion if <UNK> > 0) { .. > 0) { .. > 0) { .. > 0) { .. > 0) { ..
Reference: isenabled() not needed for simple strings.
Candidate: if you could use <UNK> <UNK>
Reference: ?grant_type=authorization_code looks redundant it's standard oauth2 param, it will be added here <link_0>
Candidate: please use <UNK>
Reference: i think it was better with the old static imports.
Candidate: i guess we should be a bottleneck. bottleneck. is the efficient, but i guess it's not efficient, it's a efficient, bottleneck. bottleneck. is a bottleneck. bottleneck. is the efficient, efficient,
Reference: please add error handling. we should not crash the whole service if the input is incorrect
Candidate: i think this should be the <UNK>
Reference: don't think it's a good idea to have two repositorymanager classes.
Candidate: nit: you could be simplified to <UNK>
Reference: oh! i really have a bad memory... <link_0> never mind.
Candidate: i think this should be null?
Reference: didn't see this earlier, but it should probably be deleted.
Candidate: could we return <UNK> here instead of <UNK>
Reference: this statement could be moved to outside the then/else blocks (it's done always). we just need to invert the expression (and delete in the then block).
Candidate: should we use <UNK> pretty-print
Reference: is details
Candidate: wait.forelementclickable() could be <UNK>
Reference: oooh, the "exception message affects control flow" isn't limited to test code! this smells.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: drop this change, i think. we have already peeked at the type. why throw it away and peek again?
Candidate: this is not correct.
Reference: this should be error level, shouldn't it?
Candidate: you could move this to <UNK>
Reference: this and m_
Candidate: wait.forelementclickable() should be <UNK>
Reference: this is the wrong index if the method parameter 'columns' is not in the table's creation order. it can cause a returned string to be blank for a column that
Candidate: this is not dependent on the callers of the maybe?
Reference: this is java 7's feature. we should use old convention because not all users upgraded to jdk7. so, please change to  try { ... } catch (jsonexception e) {
Candidate: we should draw only: == null ? iirc
Reference: the return value is never used.
Candidate: this is designed to be a <UNK> delete.
Reference: how about create tojson in interpretersetting.java, so that you don't to create tojson in dependency and interpreteroption ? i believe we may need to serialization interpreter setting elsewhere, although now
Candidate: i think that this is not efficient, but i would be a bit clearer, but it would be reduced down to <UNK>
Reference: strings "level1.fofn" and "level2.fofn" can be factor out (static or within the test) to re-use here and in the returned array.
Candidate: ![image](<link_0>
Reference: should not have to throw these exceptions
Candidate: is there a reason for this logic?
Reference: afaik best practice for apis that return collections is to return an empty list / map / set rather than null; can we do that here?
Candidate: use <UNK>
Reference: debug/trace/remove?
Candidate: i --> <UNK>
Reference: suggestion assertthat(got).contains("description");
Candidate: <UNK> -> <UNK>
Reference: without a tostring() implementation the reference to the handler isn't that user-friendly; i would instead suggest to use untypedresponsemessageheaders.gettargetrestendpointurl. something along the lines of the handler for the url ({})
Candidate: this should be <UNK> to run()
Reference: typo => create
Candidate: nit: you could use computeifabsent
Reference: @tmjee there is not a big sense declaring one-time variable (especially with such names). it's better to inline them all and put checkstyle suppression.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: type is still a valid field on files.
Candidate: if this is not guarded by <UNK>
Reference: @anki2189 pls add a @transactional annotation here and below as well.
Candidate: you could use <UNK>
Reference: :pencil2: inline metadatareader
Candidate: you could use a string = <UNK> <UNK> = <UNK>
Reference: hi @jsoltes you can use assert#assertnotnull(java.lang.object) method here.
Candidate: this should be a bit more than <UNK>
Reference: can't we save off the arguments here as well so they don't even need to configure the arguments call?
Candidate: multimap
Reference: positive test is better (isnestedloadenabled). i think default should be disabled (for now). another alternative is to have 'nestedjsonloader()' which just extends jsonloader. working through pig properties is not very
Candidate: could you explain why you could use <UNK> here instead of printing the
Reference: this logic has been used in different methods of this file. perhaps we could create a private method, that handles that logic.
Candidate: is there a reason for sharing the this method is not the intend to the intend to the intend to the intend to the intend to the intend to
Reference: maybe use specifictype.isarray()? and add a specifictypereference.isexpr() and isrest()? they end up checking the type name as well, but it's a bit clearer in the code, and it centralizes such
Candidate: this is is designed to be a <UNK> <UNK> the shard size is not null if we could have a guard with a <UNK>
Reference: why a new string() here?
Candidate: you could use a string objects.tostringhelper() names instead of tostring,
Reference: we need to keep public, right?
Candidate: let's use the
Reference: @fabriciofx this method is not defined in any interface, and i think that we don't need it: we should use cactoos' teeinput to write it to any output source. you
Candidate: i don't think that this is is not closed in the
Reference: could this be synchronised using uitest.waituntilnodedisappears? as in waiting for the notification ui to go away. also, could you see if the tests work with waitonfxthread?
Candidate: you could use <UNK> instead of <UNK>
Reference: you can use sagatype.isinstance(...) instead.
Candidate: why not use computeifabsent
Reference: please use assertnull instead.
Candidate: lgtm
Reference: true. we can remove it.
Candidate: if resource resource resource resource resource resource resource resource resource resource resource resource is null.
Reference: why not just thisrow-- instead? clearer that you're just subtracting 1.
Candidate: this is designed to be a <UNK> <UNK>
Reference: ![critical](<link_0> either log or rethrow this exception. [![rule](<link_1>](<link_2>
Candidate: this is be <UNK>
Reference: worth a warning somewhere incase both cpu and vcore set?
Candidate: i think we could move this to the <UNK>
Reference: no need to put __ts if there is only one case in the method as the method name can describe the case. check other methods and remove them.
Candidate: you could use only: <UNK> <UNK> <UNK>
Reference: i'm confused; why do you think we need to synchronize on a [blockingqueue](<link_0>
Candidate: this is not needed here
Reference: @leexgh personally find it easier to read when gettranscriptconsequences() is assigned to a variable and then used in this null check and subsequently to iterate over instead of calling the
Candidate: if you could use <UNK> <UNK>
Reference: it wouldn't a bad idea to set this as parameter, eventually someone might need a diff charset
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: typo: has
Candidate: this is designed to be an error.
Reference: these asserts don't look quite right, a translation flag in a test string, now two copies of long verbose strings that would need to be kept in sync or tests
Candidate: could we use a string concatenation instead of '+'
Reference: is this needed?
Candidate: is there a reason for initialization?
Reference: this map is private, static and intended to be immutable. don't change it!
Candidate: this is not efficient, we could use <UNK>
Reference: this blocks, so it isn't async, you could just remove the future and call the code inline if you want to make it eager.
Candidate: should we throw new unsupportedoperationexception
Reference: can we first try with standardcopyoption.atomic_move then fallback with no option?
Candidate: this is not invalid?
Reference: maybe we could use [collections#emptylist](<link_0> here? > returns the empty list (immutable).
Candidate: you could use mockdatanodeid instead of <UNK>
Reference: do we need to run it sequentially? can we use stream api?
Candidate: this could be replaced by <UNK>
Reference: add null-check for method parameter.
Candidate: wait.forelementclickable() should be <UNK>
Reference: what about operationstatus case failure? there are other retriable exceptions other than regiontoobusyexception, aren't there?
Candidate: if you == null || <UNK> == null || <UNK> == null) { return <UNK> }
Reference: nit: consider prepending "i_" and "d_" to names
Candidate: @exper0 same as above.
Reference: how would this parse data?
Candidate: wait.forelementclickable() should be <UNK>
Reference: please add to this method the check for the cluster feature compatibility: return ishotplugsupported() && osrepository.hasnichotplugsupport(getvm().getos(), getvm().getvdsgroupcompatibilityversion());
Candidate: please use <UNK>
Reference: it's not a tree node.
Candidate: is there a reason for a constant?
Reference: wouldn't we want the old plug-in configuration to remain in the plug-in config history page of the resource? it seems that a configuration update/merge would not result in an orphaned
Candidate: if you could use a <UNK>
Reference: can be private, and i think this would make it clearer what the interface is given all these proxy methods
Candidate: ![major](<link_1> 'severity: major') remove this number of this method. [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0>
Reference: could you apply the evidence/other info assertions in these tests as well?
Candidate: you could use <UNK>
Reference: @arthur236 did you intentionally leave out the first three lines in the original save method of the emrapi module?
Candidate: you could use <UNK> instead of a ternary.
Reference: looks like a constant
Candidate: you could use a string instead of return?
Reference: should we care about mutability of the map?
Candidate: is there a reason for avro to be null?
Reference: unmap should not generate an error.
Candidate: @override public void <UNK> {
Reference: i'd at least use a constant instead of that hardcoded 16.
Candidate: this is a greatest
Reference: make storedworkdlowdefinition.state implement comparable?
Candidate: this is right...
Reference: can you use minitialslistview and others defined in the init method?
Candidate: i think that this is not <UNK>
Reference: would be better to extract the condition in a separate helper method
Candidate: suggestion if <UNK> == null) { return; }
Reference: <link_0>
Candidate: is there a reason for example that this is is not <UNK>
Reference: check for isempty instead.
Candidate: is there a reason for this logic?
Reference: these printed messages should be cleaned up in both samples.
Candidate: is there a reason that we is not a to a message creation, creation, creation,
Reference: can we use constant instead of -1, e.g. isodomainlistsyncronizer.size_is_not_available? probably means that the constant should live elsewhere so both classes can us it.
Candidate: this is be repelaced by <UNK>
Reference: it would be better to do it inside org.carlspring.strongbox.services.impl.configurationmanagementserviceimpl#saverepository inside modifyinlock block
Candidate: is there any reason for the
Reference: let's add to vmmapper a method that maps: (restapi) vmpayloads--> (backend) vmpayload then reference it from here and from backendvmsresource
Candidate: you should use the config, instead of config, instead of config, instead of config, instead of config, instead of config, instead of config, instead of config, config, instead of config,
Reference: i don't think this'll fix stuff, because foundmatchingrule will still end up false and the alerts will still get triggered. we should bail out and not do anything if the
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i bet we should add some restrictions here as * or whitespace is not allowed as well.
Candidate: use <UNK>
Reference: as first partitioning can be null, but the 2nd one can be default_partitioning, i believe you need to check both values before returning.
Candidate: suggestion if <UNK> != null && <UNK> && <UNK> && <UNK>
Reference: the exception is never thrown.
Candidate: you could use <UNK>
Reference: final . cachestorageimpl cache -> cachestorage
Candidate: final int <UNK> = new <UNK>
Reference: the message may be confusing as it talks about pushing and submitting. perhaps for this class use: " to submit changes you need 'submit' rights on " + ref_config"."
Candidate: the encoder's error message message is not the we could use the string concatenation
Reference: the filter().findany().ispresent() chain can be replaced with 'anymatch' it avoids creating redundant temporary objects when traversing a collection.
Candidate: please use <UNK>
Reference: this seems like it's going to make this pretty hard to debug if there are any issues
Candidate: if you could use <UNK>
Reference: we need this to return epoch in milliseconds (java date interpretation) and not unix epoch (in seconds), so gui will interpret this correctly. try it like this: genendtime.atzone(zoneid.systemdefault()).toinstant().toepochmilli(); with all
Candidate: this is not return null
Reference: negation missing? if (!cluster.issetrequiredswitchtype()) {
Candidate: this is be repelaced by <UNK>
Reference: should this be using azureresponse now instead of creating another response instance inline?
Candidate: i think that this is not efficient, we could use only:  java <UNK> <UNK> <UNK> -> <UNK> <UNK> <UNK> -> <UNK> <UNK> <UNK> -> <UNK> <UNK> <UNK> <UNK> <UNK>
Reference: i suggest putting this if statement after computing all (line 613) since previous computations are redundant if this is true
Candidate: no, not sure that this works for <UNK> now?
Reference: should subclasses be allowed to override this method?
Candidate: please replace this with <UNK> with <UNK>
Reference: would a not_found be more helpful?
Candidate: could we use jdk int score >= y >= y >= y >= y >= y >= y >= y >= y >= y >= y >= y >= y
Reference: please reuse the code in abstractvmpopupwidget somehow. i guess that it will change here/there we'll forget the other one.
Candidate: if you could use <UNK> <UNK>
Reference: i'd be consistent with the naming of objc-module-overlay.yaml and name this testing-overlay.yaml.
Candidate: you could use a <UNK> here instead of creating a new <UNK>
Reference: please put all the setters underneath each other for better readability.
Candidate: use reflectiveoperationexception instead.
Reference: [minor] move this to directly after files.delete, for clarity?
Candidate: i pagelogging
Reference: can we remove the explicit setting of purgelessthanequalto?
Candidate: thanks.
Reference: what happens if status is false? i think we should set isleader state to false, irrespective of whether release was successful or not.
Candidate: this clear() is expecting to |= <UNK>
Reference: can you move new code to a separate method?
Candidate: this is not correct.
Reference: in the event the client is trying to initiate an aia, but is not permitted to do so an error page should be displayed rather than redirecting back to the
Candidate: wait.forelementclickable() should be <UNK>
Reference: please use org.wildfly.extension.microprofile.opentracing.subsystemdefinition#microprofile_config_capability_name instead and make it public.
Candidate: you could use only: <UNK> <UNK>
Reference: why catching exception here? do not forget <link_0> :)
Candidate: typo -> <UNK>
Reference: even simpler: message = validategroupidinput(pomcomponent.getgroupid());
Candidate: should we use <UNK>
Reference: there may be a race if a user deletes this file manually - should we handle such cases as regular io exceptions rather than assertions?
Candidate: you could use reflectiveoperationexception @test(expected = <UNK>
Reference: this endpoint needs to consume the whole stream in order to test properly
Candidate: should be be <UNK>
Reference: i think it makes the code cleaner and short if you don't have the function call and just have two if statements like the following: if (args[0].gettag() != valuetag.node_tree_tag) {
Candidate: this is not a bit risky.
Reference: wonder if we wanna put this check only in islowmemorymode just in case we may miss something and give false alert. for example (the metadata reader strips out string stats
Candidate: use <UNK>
Reference: do we need to null check malign here?
Candidate: please use <UNK>
Reference: i think it should be viewmodel's responsibility not to return null, so this check should be moved there and here you should just call viewmodel.getdate();
Candidate: is there a reason for element?
Reference: this is a concern to me as it overwrites the value of value and as such due will no longer work.
Candidate: could you use try-with-resource try-with-resource here instead
Reference: why waste time whitelisting it?
Candidate: is there any particular reason why not we are going to be an exception?
Reference: please use for the negative tests the following convention: assertthat(validator.validatestatusforactivation(), failswith( vdcbllmessages.vds_already_up));
Candidate: you could use <UNK> annotation, instead of <UNK>
Reference: i understand the isopen issue, but why you removed this.target = null; ?
Candidate: i we need to a non-trivial
Reference: what about a return if this is true. this is what happens anyway and you do not have to indent the whole method.
Candidate: i we need to wrap the exception in the
Reference: add verify or assert
Candidate: suggestion <UNK> = <UNK> + " + <UNK> + <UNK> + <UNK> + <UNK> + <UNK> + <UNK> + <UNK> + <UNK> + <UNK> + <UNK> + <UNK> + <UNK>
Reference: don't we have to stop it?
Candidate: i think we need to sleep here?
Reference: we should be able to use slice.getint(0) here.
Candidate: we could use <UNK> instead of <UNK>
Reference: the process has been killed.
Candidate: could we log a '+'
Reference: <link_0>
Candidate: log.debug
Reference: call its own method like zkclient to reduce maintenance effort.
Candidate: the exception is thrown here
Reference: checking this (and subsequent) changes to the conflict detection manager are intentional - looks like these tests are still passing, but would like to verify this
Candidate: nit: you need to <UNK> <UNK>
Reference: pull in master. i've merged in a change that has the budget constructor taking in a localdate instead of a long. then you just parse the "start_date" string with localdate.parse(string,
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: use getaddress to get a byte array instead - prevents the confusion on the other end that maybe the string is a host name and maybe it's an ip addr.
Candidate: use <UNK> instead of <UNK>
Reference: it is not clear to me why you are not passing the ssl context to the constructor. *(even of the test pass in my environment, it looks odd to me..)
Candidate: this think this should be a bit off.
Reference: you have not changed to use commonutils.loadresource() as requested. i still think it is rather important to do so.
Candidate: you could use a exception instead of <UNK>
Reference: should this be initialport + porttrialcount - 1?
Candidate: i think this is be called detail exceptions? detail detail detail detail detail detail detail detail detail detail detail detail detail detail detail detail detail detail detail detail detail detail
Reference: name generation and validation should be moved to service layer
Candidate: how about replacing the sizes with a == <UNK>
Reference: like with the outputformat, i think this should be done as soon as possible in a method that is called to setup the job. it looks like createrecordreader might be
Candidate: is there a lot of the error message to be null?
Reference: please rebase on top of latest master, this is related to recent changes in <link_0> if (host != null) { event.setvdsname(host.getname()); }
Candidate: why not invoke vds
Reference: not crazy about having to do this null check as it may cascade to a lot of places. you may be able to create a phoenixconnection from indexmaintainer if need
Candidate: why scan the scan
Reference: put the magical constants into real constants pls :-)
Candidate: use <UNK>
Reference: to be more explicit, should we throw an error here if "clean-on-flush" is specified without neither "flush" nor "flush-size" being present?
Candidate: use <UNK> instead of <UNK>
Reference: remove the modifier to make the constructor package private, and remove the null check.
Candidate: this is designed to evict overview
Reference: the single-step probing used in this method for updating the local association cache gives me pause. i can envision situations (for example, some other client has added a batch of
Candidate: minor nit but we could be careful to the <UNK>
Reference: add another relationship with a type outside of the characteristic type hierarchy. the rule should not report that as an error.
Candidate: fyi, you could use use <UNK>
Reference: suggestion .filter(slaveinfo -> labelname.equals(slaveinfo.getlabelstring()))  should avoid the null pointer exception.
Candidate: we could use a constant for " + " + " + " + " + " + " + " + " + " + " + " +
Reference: should we keep this void method if there's another clickundeletelinkinbannernotification method returning specialrestorepageobject ? also name could be a bit more precise ;)
Candidate: wait.forelementclickable() could be <UNK>
Reference: what about properly remembering original value and putting it back after tests?
Candidate: this is right...
Reference: how about turning drawglyphvector into drawcomponent and just pass down the component instead of spreading the metrics computation around?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: instead of returning null please use throw unsupportedoperationexception("mkfork#json()")
Candidate: @ivange94 not sure that this is not efficient, but i would be widely to
Reference: indentation here seems a bit inconsistent. personally i'm fine with the style the way it was (with leading periods) but in both cases the indentation seems off (4 spaces instead
Candidate: you could use a multimap here instead of creating a connection,
Reference: a notifydatasetchanged() call is made in loadsitestask.onpostexecute from loadsites() just below this line. we can remove this since it's redundant.
Candidate: you could use <UNK>
Reference: add the following cleanup here:  functions.clear(); methods.clear();  "functions" because you forgot to clean it somewhere. "methods" it's a corner case, but in case of exception, we could enter
Candidate: you could use <UNK>
Reference: delete ____ts as your method name already tells the story.
Candidate: is there a reason to verify that is not
Reference: use constant
Candidate: suggestion string concatenation
Reference: sorry i was wrong before, after checking the original bug and talking with eric, the version guard should be >= 3.20.0.
Candidate: could be removed.
Reference: this should use an actual charset rather than just a string identifier. similar throughout.
Candidate: use readasstring(...) instead of <UNK>
Reference: system.out.println(string.format("find by footer locators: %s", locators));
Candidate: this fragment is be defined in the
Reference: just use foreach
Candidate: if you remind npe if you remind npe if the succeeded
Reference: this parameter shouldn't be necessary, now that we have split the variants and the header loading. this applies to the instantiation of the dbcollectionsfilesnamevalidator object below.
Candidate: we should use <UNK> <UNK>
Reference: could we initialize the exchangeurichecker instance in a different line, it seems too much for an if condition
Candidate: if you could use a null here instead of <UNK>
Reference: can you move this code inside the if (isresultset) so the headers is only pass through if we set some data because there was a result set.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: combine if clause
Candidate: this is strange,
Reference: it doesn't seem like you're popping the cause after pushing. you need to ensure that the cause stack is stack neutral after the method is completed, so either popping the
Candidate: is there a reason why we are going to set the <UNK> constructor?
Reference: nit: streamid
Candidate: use <UNK>
Reference: note that in order to be sync'd with the rest-api, the "size" text should be mapped to the "size" property (instead of the "actual_size" property).
Candidate: if you could use <UNK>
Reference: accidental box?
Candidate: i would be a bit simpler.
Reference: btw same true for fetchcreatedentity() which is triggers mapentity()
Candidate: you could move this to debug log.
Reference: please remove this extra blank lines
Candidate: is there a reason for this test is not
Reference: defensive copy here, this.objects = immutablelist.copyof(objects); or this.objects = new arraylist<g>(objects); as appropriate
Candidate: you could use a static int <UNK> = 6, int <UNK> = <UNK> 6, int <UNK> = <UNK> 6, int <UNK> = <UNK> 6, int <UNK> = <UNK> 6, int
Reference: add preconditions.checkargument checks to verify that the passed engine and buffer are not null.
Candidate: why are, this added?
Reference: just curious. why we set the visibility of footerlayout to "visible" if it does not set to "gone" in view_wiki_error.xml
Candidate: should be be updated.
Reference: nit: can we make this a constant?
Candidate: this is not to be an exception
Reference: we should be using timeservice.
Candidate: you could use a foreach here instead of sharing
Reference: this is just a failure in parsing the timestamp and it doesn't affect much. message should be modified accordingly.
Candidate: you could replace this with with <UNK> by by by <UNK> -> <UNK>
Reference: just curious. would using jobid here work for high level api job? besides functionality it will be better to not use jobid here. it's looks odd to use jobid in
Candidate: we talked about this
Reference: this database query executes, and does nothing. did you mean to return its result?
Candidate: you could use a constant instead of <UNK>
Reference: attribute value was removed is more concise than "attribute (its value) was removed"
Candidate: is there a reason for this is not equals?
Reference: would be more consistent to use this.fileexclusionmanager here
Candidate: you could use a string instead of <UNK>
Reference: as with the other suggestion i think you could unify something here. i.e. move both cases into one if block that checks if the user is in the scriptfragment and
Candidate: is there a reason to assert that this is is empty?
Reference: _minor_: somehow i find it weird to keep a lambda here when the other cases delegate to an actual method.
Candidate: same thing as above.
Reference: int?
Candidate: nit: <UNK> = new <UNK>
Reference: component type for the inactive device exception should be domain_tariff_switching here.
Candidate: is there any reason why we setting the here?
Reference: is it necessary to introduce dependency on sets?
Candidate: this clear() is not to put: <UNK>
Reference: would it be more broadly useful to have a boolean getter on operator indicating whether an operator had ever returned any results (i.e. nextready() != null)? if that could be
Candidate: multimap
Reference: probably should assert that linkiterator.hasnext returns correctly here.
Candidate: you could use <UNK>
Reference: return c != null && c.ismergeable();
Candidate: this could be simplified to <UNK>
Reference: spell out buffer
Candidate: can we tear down down down down down down down down down down down down down down down down down down down down down down down down down down down
Reference: no need for the extra variable here
Candidate: suggestion <UNK> <UNK>
Reference: if you think there's gonna be more rendering way in the future convert to a switch block, makes it more readable
Candidate: this is a bit more precise than <UNK>
Reference: this is a member of the class... this never should be happened...
Candidate: this is strange,
Reference: i think you should factor out the common code this test shares with the previous one
Candidate: i'm not sure that this pr, but i'm not sure that this pr, but i'm not sure that we want to have a pr, but i'm not sure what about
Reference: make an injectable "hreftomessageid" function?
Candidate: please use <UNK>
Reference: should add parentcommandid here since hashcode() now relies on it
Candidate: you could use guava instead.
Reference: return m.method.equals(method);, instead of this line and next?
Candidate: you could use objects.equals() instead of objects.isnull
Reference: does it matter that we no longer increment the second parameter?
Candidate: please use <UNK>
Reference: is it fine to have less bytes than the optimal if optimalnumofbits % 8 != 0?
Candidate: this should be simplified to java <UNK> <UNK> = new <UNK> clazz, <UNK> clazz, <UNK> <UNK> clazz, <UNK> <UNK> clazz, <UNK> <UNK> clazz, <UNK> <UNK> clazz, <UNK> clazz, <UNK> clazz,
Reference: no need to make this default in a test actually using per workspace services.
Candidate: i am not sure how about the sure about sure about the sure about sure that we have a <UNK>
Reference: this is window-specific stuff. a better idea would be to use file.separator instead of the \'s
Candidate: please use <UNK>
Reference: the method can declare "throws urisyntaxexception, ioexception" and the extra try/catch/log can be removed.
Candidate: this is designed to be <UNK>
Reference: the enable and disable diversity code seem pretty much the same apart from minor things. is it possible to optimise the code?
Candidate: this could be a <UNK> simpler.
Reference: it is already set in this method, three lines up.
Candidate: you could use a constant instead of <UNK>
Reference: this defines what we are migrating from, and we are migrating from boxc3 data which currently uses the normalization event, so you'll need to leave it as normalization in this
Candidate: log.debug -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e ->
Reference: most important is to create elements with the same xmi-id as the elements in the fragment. elements are compared by xmi-id, not by element id
Candidate: i think that this assertion.
Reference: @landreev and i talked this out in slack and decided to go with switching from created to ok in 471dd25 (which is how this pull request started.
Candidate: move the logger please.
Reference: do we need spy in this case?
Candidate: you could use the mock <UNK>
Reference: someone else has come up with a similar solution. i'm not sure it's the way to go - what's special about 1000ms?
Candidate: <UNK>
Reference: no need to break line
Candidate: newing this be <UNK>
Reference: it was like this, but it's confusing to me why it's calling super.getname() and super.getreference, because 1. this class doesn't override those methods 2. if it did override those methods,
Candidate: use objects.equals()
Reference: what about kind.long_literal, kind.boolean_literal, or kind.null_literal ?
Candidate: @vilchik-elena you could be simplified to java return <UNK> && <UNK> { return false; }
Reference: what if the id is not found? it would be better to have protective code instead of creating a connection to "http://x:-1/killexecutor".
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: the plugin now requires newer jenkins core version than in 2016, maybe this check is not required anymore
Candidate: this is a bit dangerous, for this use-case. [![rule](<link_2>](<link_0>
Reference: maybe you can do a getall here and assert the returned list is empty just to cover the basis.
Candidate: this is a little query?
Reference: address was nulled out above. maybe move physicaladdress up above
Candidate: i think that this is is not efficient, that the "return" to use '+'
Reference: this code is unreachable because assert.fail() throws an exception.
Candidate: ditto
Reference: use an overridable getoperationtimeout() method instead
Candidate: unused
Reference: @fanifieiev the same above.
Candidate: @fanifieiev the same above.
Reference: assertthat("notification type", ordernotification, instanceof(orderstatuschangenotificationpayload));
Candidate: you could use <UNK> instead of <UNK>
Reference: if authorizer is null, then we should put a warn log. logger.warn("no authorizer is configured for '{}' app.", appname);
Candidate: should this be probably?
Reference: java if (activity instanceof fragmentactivity) { showratedialog((fragmentactivity) activity); }  i think it is better because not all developer use fragmentactivity even if sdk_init under honeycoms.
Candidate: this is be (context is called by <UNK>
Reference: please use builder.xxx(...) instead of new ....
Candidate: this is be a <UNK>
Reference: if you put it the other way around java if (configuration.getquartzconfiguration().isempty()){ scheduler = stdschedulerfactory.getdefaultscheduler(); }  you avoid the double negation - i find that a lot easier to read.
Candidate: why not we need to call <UNK>
Reference: i wonder if its better to just use setheight("" + delta + "em") once and have a single dom element cover the entire span.
Candidate: you could use <UNK>
Reference: if getvm().getdiskmap() == null or getvm() == null, you have npe here? is this ^ possible?
Candidate: i think that the is not supported in the
Reference: extract the building of the responsemessage to it's own variable (in eclipse, select the text, right-click > refactor > extract local variable / select code + shift+alt+l). this will make
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: very nice!
Candidate: please use <UNK>
Reference: inline to avoid the reassignation? this.metadata = metadata == null? maps.newhashmap() : metadata;
Candidate: this feels like a bit nervous how about replacing a foreach with a list?
Reference: logging.
Candidate: i think we should log the error.
Reference: we are not really using casedbtransaction here for anything, are we?
Candidate: i'm not sure how about eating the error.
Reference: don't just throw exception. this is too general.
Candidate: why not throw an exception
Reference: is runtimeexception the correct exception to throw? can we provide more information in the message?
Candidate: should we print log log log log log log log log log log log log message
Reference: we should check whether the abssendtimeengine is configured with an extension id (e.g. getextensionid() != -1).
Candidate: if this is is not loaded with remote <UNK> ??
Reference: sb.append(fispic ? "pic" : "non-pic"); ?
Candidate: i think this is a bit deeper but i would be cleaner to the the <UNK>
Reference: remove this empty line.
Candidate: please use <UNK>
Reference: notificationbuttonview.setvisibility(shownotificationbutton ? view.visible : view.gone) seems more safe to me in case seterrormessageui gets called twice with different values for shownotificationbutton
Candidate: you could use <UNK> instead of <UNK>
Reference: why not returning the list type? your removing the possibility to use list methods without a cast. don't see the point.
Candidate: you could use <UNK> annotation, instead of drawing the drawing via: <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK>
Reference: i suggest to externalize this constant like the one above.
Candidate: this should be <UNK> to be called in the view?
Reference: how aboot math.round?
Candidate: maybe we could be a checkargument here instead of <UNK>
Reference: this constructor does nothing.
Candidate: is there a reason for this method to be used?
Reference: i see that spring-cloud supports only the single role per candidate, but should we really be restricted as well? i mean comma-separate value for the role attr and array value
Candidate: you could use a constant instead of <UNK> property?
Reference: this shouldn't be this way. in tablets in landscape mode, when a file is shown in the right pane, the options for the current folder still make sense. please, undo
Candidate: if this is designed to understand, if the branch is not <UNK>
Reference: i removed the empty constructor because (0|0) doesn't make sense here. so there are two possibilities: - set valid coordinates (preferred) - set gp to null and check it later
Candidate: you could use a guava multimap instead of <UNK>
Reference: mob: check if it's an instanceof number first, then possibly throw an illegal argument exception.
Candidate: suggestion <UNK> = new <UNK>
Reference: i wonder if we should have a better error message here. it seems like a sqlexception here means that one of the objects listed in the uri-list is not found.
Candidate: you could use <UNK>
Reference: what's the rationale for this vs. just using a concurrent set implementation and adding the elements directly? i'm worried about the number of set iterators we might have sitting with
Candidate: this should be <UNK>
Reference: thinking from the point of view of a developer implementing a client for nakadi subscriptions, how is it possible for me to detect that this scenario is happening? should i
Candidate: you could use a constant here instead of <UNK>
Reference: seems rather complicated to me; any reason why we aren't just using a fixed length here (e.g. tv.ten)?
Candidate: you could use fake <UNK>
Reference: it depends on how it is accessed by concurrent writers ie handleresponse and add could be accessed by different threads concurrently? dealing with concurrent accesses here could be dangerous: if
Candidate: if this is is not
Reference: rename tempvar
Candidate: you could use put: <UNK> <UNK>
Reference: this is a good example of how the original way of using indexes to access the list is better for performance.
Candidate: please use <UNK>
Reference: maybe use otherthreadrule class? it allows running things in a different thread and has ability to check thread state.
Candidate: this is @visiblefortesting
Reference: make this method synchronized.
Candidate: wait.forelementclickable() should be <UNK>
Reference: extra trailing comma.
Candidate: can we use <UNK> here instead of <UNK>
Reference: this should be a call to the logger and not to system.err (throughout this class).
Candidate: this should be a <UNK>
Reference: given the text, this should be outside of the loop
Candidate: you could replace this with <UNK> with <UNK>
Reference: declare final
Candidate: if you could use a <UNK>
Reference: should this not be && previewslideshow != null, not ||
Candidate: i would be preferable to simplify this part, by <UNK>
Reference: is this the only reason update can fail? if we run into datasource issues, connection problems, constraint violations (excluding name uniqueness), we will see "duplicate domain" as the reason in
Candidate: you could use @test(expected = <UNK> <UNK> <UNK>
Reference: @dgutierr - same here, try to avoid external iterations as soon as possible and do an incremental replacement by internal iterators / use of streams...
Candidate: use a multimap instead of <UNK>
Reference: i'd move this to a method (create storage domain) that accepts the three arguments and replace all those creations with a call to it.
Candidate: you could use <UNK>
Reference: why is a logger in the upper case?
Candidate: you could use <UNK>
Reference: take care not to include client id/secrets in commits. because this is now in your git history -- you will likely have to squash your commits into one and submit
Candidate: should we bail here instead of wrapping encapsulated in the edges, depending on the decision.
Reference: these two statements could be simplified just to return overlap <= getmaxoverlap() (no need for if/else). better still, return overlap <= maxoverlap (no need for getter).
Candidate: this is be simplified |= <UNK>
Reference: if you use charsetdecoder rather than charset then there's more control. i don't think we should re-implement a special codec - we shouldn't be spending our time implementing extreme edge
Candidate: use string.valueof instead of <UNK>
Reference: any better way to check if the text is a valid url other than converting it to string?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: suggestion log.debug("it took {} attempt(s) to find {} open wals", attempts, open);
Candidate: dont use <UNK>
Reference: this can be a list
Candidate: collections.singletonmap() ? extends <UNK>
Reference: remove this empty line?
Candidate: please use <UNK>
Reference: so we assume all the soft constraints will use this formula? i don't think it will fit the partition movement constraint. my suggestion is that, keep the scale (max and
Candidate: i think this should be a bit more than <UNK>
Reference: this case is impossible afaik. shall we throw an error instead?
Candidate: you could use <UNK>
Reference: why do we need to check the paragraph start pattern here? this seems like the wrong approach to me, since it introduces unnecessary coupling between paragraphblock and definitionlistblock.
Candidate: please rename this to <UNK>
Reference: i think we have an stringutils.isjson method. maybe it needs a null check and a trim() but those would be good to have.
Candidate: please use <UNK>
Reference: can we move these strings to variables? and reuse everywhere
Candidate: please use string.format instead of <UNK>
Reference: why not using the same try-with-resources block for in and out?
Candidate: you could use <UNK>
Reference: maybe log the exception. will help in understanding what went wrong here.
Candidate: you could use <UNK> instead of <UNK>
Reference: ideally, this method generates a report that includes counts of the annotations that were generated (e.g. # of nes of each type; # of coref constituents and # of gold
Candidate: if you is a <UNK> that is is not itemstack.
Reference: would be nice to give the threads unique names. we use guava's threadfactorybuilder to help with this for other thread pools.
Candidate: you could draw <UNK> to <UNK>
Reference: format your code, pls.
Candidate: if we is going to synchronize on the "this".
Reference: not sure about all the usage, but if all test code is passing null, we can just remove this parameter from this constructor.
Candidate: can we use computeifabsent
Reference: this line should be removed. given that its pass i guess this is not covered by any test, could you write a quick one john?
Candidate: if we is not webapplicationexception to the
Reference: nit: might be a display of better craftsmanship/readability if you could explain why you're adding 1 here. i believe you're just trying to use a value that's not 40?
Candidate: this is assert that this is is equal to <UNK>
Reference: it looks to miss null handling.
Candidate: use <UNK> id is not used.
Reference: this should take in the keeper org's organizationinfo, and the duplicate's id. looks like we're passing in the duplicates organizationinfo as well as the id.
Candidate: how about using a string concatenation
Reference: would a assert minlength >= 0 (or something similar) make sense?
Candidate: if you can use <UNK>
Reference: replace the lossy conversion with a static util function. failwithinvalidconversion(class<?> class, bigdecimal bigdecimal);
Candidate: this is not assert that we are expecting to test that schedule, in tests.
Reference: can getsamzaproperty (here and below) be private? could you please move these helpers further below in the class file so that they are not in between some of the public
Candidate: this is be optional?
Reference: suggestion .maxcharspercolumn(4097)// .files(csvfile.toabsolutepath().tostring())//
Candidate: is there a reason for element? paths?
Reference: it cost a lot of code in other places, but this looks much nicer to me now.
Candidate: <UNK> is not supported by <UNK>
Reference: that's a massive chain. it's fugly. not sure it can be made less so though.
Candidate: i think that this should be a <UNK>
Reference: only link detailed report, please :)
Candidate: minor formatting
Reference: doh! thanks! please leave it as cannot_...
Candidate: if we is a <UNK> <UNK>
Reference: super.teardown should be called last. also this method usually comes right after setup() before the tests
Candidate: you could use <UNK>
Reference: encapsulation
Candidate: you could be simplified to <UNK>
Reference: just wonder why only for db scheduled scheduler the existence of the class should be examined ? either it should be able to resolve the correct class by the value
Candidate: log.debug -> <UNK>
Reference: we do have to copy, otherwise the view might change when someone calls the method again
Candidate: this could be simplified to <UNK>
Reference: require non null
Candidate: this is a <UNK>
Reference: let's use lightstatuslisteners.isempty() :wink:
Candidate: can you move this initialization to the method.
Reference: you might want to check if there is at least (and at most as well) one value in the collection, this will throw an exception if the values collection is
Candidate: you could use a <UNK> instead of objects.isnull
Reference: i guess, if we want applicationstartupdependentresource to be generic (an interface) with different implementations, we should avoid logging database here, because we might be waiting on other things
Candidate: please use <UNK>
Reference: we have a potential npe there unless we can do it?
Candidate: i'd prefer to convert this method to the rest of the condition: if <UNK> == null) { <UNK> == null) { return <UNK> == null) { <UNK> == null) {
Reference: we don't need to pass the labels in.
Candidate: this is right...
Reference: my concern here is that these methods start to grow in their parameter numbers each time we add some new config property ... but i guess <link_0> should help with
Candidate: why not use <UNK>
Reference: nit: fix indentation. also, what is this change for?
Candidate: why is this change?
Reference: can use a stringjoiner to avoid creating array  final stringjoiner barcodeq = new stringjoiner("~"); for (int samplebarcodeindice : samplebarcodeindices) { barcodeq.add(samutils.phredtofastq(cluster.getread(samplebarcodeindice).getqualities())); } return barcodeq.tostring();
Candidate: please use stringutils.isnotblank()
Reference: hmm, so i thought about this when doing the initial implementation. i avoided using any timestamps from the node running this since then we're susceptible to time sync issues between
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why have you moved field initialization from declaration to constructor? i think we should leave it in declaration for uniformity.
Candidate: you could use <UNK>
Reference: you can make this an "else" after the "if (foreditor)" block.
Candidate: you could use <UNK>
Reference: is there a reason we aren't linking these up with the @uielement syntax? would save a minor amount of code. i assume it's because the locale strings are required? we
Candidate: you could use <UNK> here instead of <UNK>
Reference: this is a bit puzzling. is instanceof really necessary?
Candidate: should we use <UNK> instead of <UNK>
Reference: consider using a hashset instead of an arraylist - this way you don't have to do the contains invocation in the if clause because sets don't allow duplicates.
Candidate: you could use <UNK>
Reference: you can use predicates.equal here
Candidate: this int int int int int int int int int int int int int int int int int int int int int int int int int int int int int
Reference: no need to check isenable() here. its checked in identityprovidermanager before invoking the listener. that's the contract of the interface - to say whether the listener is enabled or not.
Candidate: you could use a local var instead of <UNK>
Reference: possible npe. in line 340 we could return null which would blow up here.
Candidate: wait.forelementclickable() could be <UNK>
Reference: find english word for dach in mathematical symbols
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: same here. the true should probably be encoded in the method name.
Candidate: is there a reason for this logic?
Reference: same here. the binder should be able to decide how they implement this.
Candidate: is there a reason for this class that is a property?
Reference: you can use org.springframework.util.stringutils#haslength to avoid the two checks.
Candidate: is there a reason to check that is empty?
Reference: the code should also be modified to not have an empty if.
Candidate: if this is is designed to be <UNK>
Reference: can endpoint.getparametersmap() be null? if so, shall we do a null check for that too?
Candidate: is there a problem with (that (that (that (that (that is that is not needed (that will not be (that will be an ioexception (that will be (that will be
Reference: i think we could get the same effect without as much repetition, by writing functions called 'isoctalorseparator', 'isdigitorseparator', and 'ishexdigitorseparator', and using those functions instead of 'isoctal', 'character.isdigit', and 'ishexdigit'
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: spelling - cipher
Candidate: suggestion throw new <UNK>
Reference: shouldn't it be in onepochfinished?
Candidate: i think this tested?
Reference: can you switch this to:  java this(new persister());
Candidate: <UNK>
Reference: generally try to keep hubspot-specific things out of singularity, even for tests ;)
Candidate: use <UNK>
Reference: allocating a new buffer for each read will have visible performance consequences (this code is key to most benchmarks against shapefile data), please undo this change
Candidate: how about making a <UNK> property?
Reference: nit: add string message (containing checkpoint id for easier debugging).
Candidate: i think this should be a unsupportedoperationexception
Reference: generally you don't sort the vms, and in the one case where you do - you don't really sort them either, but just move one to the top of the
Candidate: if you could use objects.equals()
Reference: i think that it would be worth doing a logger.warn() after this line if someone tries to "useepoll" but are not on linux. i'd further add a logger.info() to indicate
Candidate: this should be a bit deeper if we have a to <UNK> the <UNK>
Reference: inline all the requirenonnulls in a separate commit
Candidate: magic number
Reference: it would be better to evaluate gitsystemconfig lazily in getgitsystemconfig(), so a call to discovergitsystemconfig() can be avoided completely if gitsystemconfig has been set 'manually' before. discovergitsystemconfig() is possibly slow
Candidate: @gunnarmorling this a bit strange to <UNK>
Reference: i would call the related method instead. (e.g. call hash(int) for integer).
Candidate: you could use a guava multimap instead of <UNK>
Reference: see previous about in vs out
Candidate: this is not be used?
Reference: closing the file?
Candidate: you can use <UNK>
Reference: you should already compute the qualified names here in order to not stream 3 times for the same data: java set<string> symbolsqualifiednames = getcontext().symboltable().symbols(node).stream() .map(symbol::qualifiedname) .collect(collectors.toset()); isusingdjangomodel = symbolsqualifiednames.contains("django.db.connection"); isusingdjangodbconnection
Candidate: you could use computeifabsent
Reference: this one should be called after oncomplete.call().
Candidate: i writevalueasbytes annotation, annotation, annotation, annotation,
Reference: it doesn't look like this test tests anything.
Candidate: is there is a mock that this test is not assert that the properties?
Reference: multiple method(*) methods
Candidate: multiple method(*) methods
Reference: very minor, but these two lines could be combined together
Candidate: please use <UNK>
Reference: we should take setenableasciionlystrings as a dataprovider param
Candidate: is there a reason to tear down down down down down down down down down down down down down down down down down down down down down down down down
Reference: i forget if compute.randomint gets you a number between 0 and x inclusively or excludes the upper bound.
Candidate: this is is designed to be <UNK>
Reference: there is already a patientservice available for you. no need to get it from the context
Candidate: you can use expectedexception instead.
Reference: @netudima can you create a new pooledbytebufallocator instance in a @setup method and use it ? otherwise it may not produce fair results as it may have already stuff cached
Candidate: you could move this condition to the clear()
Reference: it could be protected better
Candidate: i think this should be a <UNK>
Reference: it is better to pass serializer here
Candidate: is there a reason for this?
Reference: ok... that's a way to make sure the test passes without fixing anything... :p
Candidate: if you could return <UNK> == null || <UNK> == null) { return false; }
Reference: please fix setupnetworks -> remove
Candidate: please use <UNK> instead of <UNK>
Reference: the pathmanager should be used for this sort of thing.
Candidate: not sure that this exception is thrown from the exception
Reference: are those jacoco methods by any chance "synthetic"? if so, please simply filter out synthetic methods instead of checking if the method name contains "jacoco". in any case, please go
Candidate: same as weird.
Reference: should move the instantiation of usreceiptitem outside of the inner for loop, this will construct it when the entire entryset has been processed and will churn a lot of short
Candidate: is there a reason for this logic?
Reference: or old-style positions.
Candidate: rename to
Reference: use collection.emptylist() instead which is type safe. will the unit tests cover that we handle empty list properly?
Candidate: please use <UNK>
Reference: yeah... what i don't like here that null as a message argument for the shouldflush:  filewritingmessagehandler.flushifneeded((fileabsolutepath, lastwrite, filtermessage) -> ...);  that filtermessage does not make sense in this
Candidate: wait.forelementclickable() should be <UNK>
Reference: should this be starttarget + 1?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: line 109 till 112 are the same in both updateplayer1button and updateplayer2button and can be put in a different method.
Candidate: you could move this check to firing <UNK>
Reference: should be "breakpoints"
Candidate: you could use <UNK>
Reference: solid improvement for sure, no need to re-figure this out every time!
Candidate: i think this should be <UNK> (my <UNK>
Reference: what if partitionwrapper is null? if not doing anything, remove if, npe is better than skip silently (i see couple of places like this).
Candidate: nit: <UNK>
Reference: this may likely break in the future if the config becomes unparsable. see goconfigmigrationintegrationtest, but basically you'd do this: java string migratedcontent = migratexmlstring(configxml, 126); cruiseconfig cruiseconfig = loader.deserializeconfig(migratedcontent); approval
Candidate: could we use '+'
Reference: \r is for windows only. don't do that.
Candidate: this is variantsourceentities.size() will be the same for every time.
Reference: that's really ugly. there's no way for you to know what these parameters are about without getting to the method and reading what it really does.
Candidate: please remove this
Reference: should we just wrap this whole method in a local transaction? i am asking becuase what happens if this method is getting called in another api that has already started
Candidate: is there a reason to assert that this is is null?
Reference: @bokyoungbin a single query is partitioned to operatorchains, and each operatorchain can be executed in different threads. the stateful operators in the operatorchains can access ssm so multiple threads can
Candidate: you can use <UNK> instead of conditionally
Reference: when executed alone it takes < 300ms (a lot of that could be overhead in the framework though). makes sense to lower the max though just to verify the behavior
Candidate: if this "return" message
Reference: it doesn't seem to be a typo.
Candidate: i think we could be a foreach loop here instead of <UNK>
Reference: by looking at this, maybe another good metric to expose is in average how many opaque entries are sent per message... opaqueentrylist.size()
Candidate: could we combine this logic?
Reference: debug level?
Candidate: if you could use <UNK> <UNK>
Reference: maybe you can add also check on group-resource.
Candidate: this checking, should be be called from the middle of the attributes from attribute from attribute from attribute from attribute from the attribute member.
Reference: copying from.startdate instead of from.completiondate
Candidate: could we move this allocation to way?
Reference: if startoffset is negative here, this should return false. in other words, it is always impossible for a string to be a suffix of a shorter string.
Candidate: you could replace this by: <UNK> -> entry.getkey(), <UNK>
Reference: i think you meant to return mainactivity.getselectedsite() here.
Candidate: could you please use the <UNK>
Reference: do you really want it to throw ioe?
Candidate: why catching exception exceptions?
Reference: it's a minor thing, but i'd say it would be nice if instead of true, you'd have a constants local_member in this constructor.
Candidate: this should be a <UNK>
Reference: i'm hesitant to use empirically tuned unitless multipliers to keep the isochrone edges from extending out into the water. they would probably work in one place and not another, and
Candidate: magic number
Reference: what about an @after that stops the scheduler, closes the log etc?
Candidate: i'm not sure how about this happen?
Reference: shouldn't this be cross-platform?
Candidate: is there a reason for this property?
Reference: how does this.chunkbody[this.chunkpos++] evaluate? does it return the value at index this.chunkpos before the increment? is it non-idiomatic to do the increment and indexing in separate statements?
Candidate: you could use trim the export
Reference: i would add a new constructor call to check that we are new raising issues in newclasstree as well.
Candidate: you can use this
Reference: if you have problems with locale-specific numbers, maybe explicitly add a locale to the printf here?  system.out.printf( locale.italian, "the date is %tc\n", date );
Candidate: if you could print the exception to the
Reference: column headers is first line and not line after skip. column header must be first line.
Candidate: i think we could use the <UNK> <UNK>
Reference: we don't search for primary email anymore
Candidate: i we wish to hash hash hash hash hash hash hash hash of hash hash hash hash hash hash hash hash hash the hash hash hash hash hash hash hash
Reference: variable_identifier is too restrictive. it should include: * variables, ex: [$a] * indexed array, ex: [$a[$i]] * object property, ex:[$a->name] this is some valide php code that sonarphp doesn't parse:
Candidate: why is this change?
Reference: please use sl4j logging to format the message instead of stringbuilder.
Candidate: i is a bit more efficient, that you could use the <UNK>
Reference: shouldn't the suggestions be returned here? it looks like this method always returns an empty list.
Candidate: can you use foreach entries?
Reference: this whole test should use core api imho. or if we really want to test the cursor it should live in kernel api.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: it would be better if the storage name is printed with this exception.
Candidate: how about this : <UNK>
Reference: - no magic numbers: what's -0.80f? - you might want to store the result of getplayer() somewhere, so that you don't have to get it through the context every time
Candidate: i'm not sure how about creating a context, 16?
Reference: i think this change may not be correct. the spec says that for aes_128_cbc_hmac_sha_256 the input key must be 32 bytes, and the test in jwejsonproducertest.testmultiplerecipientsa128cbchs256givencek is passing in a
Candidate: use <UNK> instead of <UNK>
Reference: here we should ask the user, where to save the file. one thing, we did not consider yet is the file extension (not every driver outputs gcode). to make it
Candidate: please use {} please.
Reference: better to pass in the build directory (e.g. as a system prop) and don't use a literal slash to concatenate paths, especially after you went to the trouble of being
Candidate: why not fully qualified name names
Reference: minor thing, we miss ending apostrophe in the exception message.
Candidate: this should be <UNK>
Reference: true, now.
Candidate: you could use a local variable instead of element?
Reference: you may only call the c'tor here w/o assignment. then you dont have to suppress the warning.
Candidate: @orhan89 this is missed.
Reference: the method name is islambdaparameter, but the return variable is returnvalue.
Candidate: please use <UNK>
Reference: why force jpeg? webp and png are also possible.
Candidate: nit probably?
Reference: prefer isempty to test emptyness :)
Candidate: this is designed to be a <UNK>
Reference: needs quotes to be added around deploycmd.getabsolutepath() otherwise it fails to find the executable
Candidate: this is a bit simpler.
Reference: are you sure these any() calls mean what you think it means?
Candidate: can you move this call to <UNK>
Reference: nits: 1: space before %s 2: 'view index table' or 'view index'? 3: deleteall instead of 'delete all' to match the option name 4: do we use indexes here or
Candidate: we should use <UNK>
Reference: you are always overwriting the configuration here? what if the user has already manually configured a username/key?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: unwanted change.
Candidate: wait.forelementclickable() should be <UNK>
Reference: no need to make new set object every time; change the variable type to set
Candidate: this is a <UNK>
Reference: please use slf4j parametrization instead of string concatenation
Candidate: you could use a constant here instead of <UNK>
Reference: this is already implemented on ios. check out: <link_0> please use the same name rawdata instead of rawvalue. what happens if the barcode does not contain a raw value? will
Candidate: you could use <UNK>
Reference: a bit more optimized would be using stream::findfirst. for large sets, it stops immediately when it finds the item, instead of iterating over the whole set. this solution of course
Candidate: you could use a logger instead of printing the stack trace
Reference: this "if" is not needed, the "putifabsent" method already performs the check, and it doees it in a atomic way, so the "synchronized" modifier is not required.
Candidate: you could use <UNK>
Reference: could we please introduce a constant date_portion_length and then use date_portion_length + 1 in extracttime? feel free to use any name of the constant but i think it will make
Candidate: @vzool this printstacktrace ?
Reference: we can get to this block even if logchannel is null. so add that aswell to the reason string.
Candidate: i think that this clear() is is a bottleneck. is a bottleneck. i would be faster to compute the lock from the middle of the
Reference: is the c supposed to stand for celsius or would this make more sense as "temperaturef" or "temperaturefahrenheit"?
Candidate: if you could use <UNK> <UNK>
Reference: this test case has the same description as one already implemented. try and think about what this new test case is doing that the other isn't already and rename accordingly.
Candidate: <UNK>
Reference: this should use the jface shared text font which is configurable by the user in the preferences and defaults to a platform-appropriate monospaced font intended for use in text/code editors.
Candidate: i description is not display the description
Reference: i don't think we have to worry about / support the case where the call to super has mucked with jedispool (it's deprecated), in other words can probably just eliminate
Candidate: this could be simplified to:  java <UNK> <UNK> = <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> #resolved
Reference: assert it
Candidate: we should throw an exception instead of returning an exception
Reference: should this be "unfiltered"?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this implementation sounds very complicated. and doesnot seem efficient. esseentially it is a solution prior to java 8.
Candidate: this could be simplified to <UNK>
Reference: i thought about throwing a fetcher exception as well. but on the other hand we have optional for those cases. so i would not throw an exception. @tobiasdiez
Candidate: suggestion <UNK> = 4 <UNK>
Reference: s/commands/command
Candidate: how about this is a <UNK>
Reference: is this not better to do in dostart instead?
Candidate: @gunnarmorling you could use only: <UNK>
Reference: this cast feels a bit out of place but i don't really have a better suggestion - maybe where this is autowired we could add a separate bean that has
Candidate: this is not be a <UNK>
Reference: maybe jvm/heapalloc/bytes/delta
Candidate: you could use a logger instead of printing the exception
Reference: this should not be here - it was replaced by commonlogger.log.archiveisolationenabled() / commonlogger.log.archiveisolationdisabled()
Candidate: you can use <UNK>
Reference: user_id and is_filtered parameters not required
Candidate: use <UNK>
Reference: return asynchttpclientmap.putifabsent(name, ahc) == null;
Candidate: please use <UNK>
Reference: do you have to reset the matrix otherwise? i.e. does this work if you switch from a complex to the circular case?
Candidate: suggestion <UNK> = new <UNK>
Reference: do not set the correlationid for the request. it is only applicable for the reqeust of the response.
Candidate: no need to wait for each time?
Reference: i would expect this to just be defined in terms of inspect, to avoid duplicating the details of launching the command.
Candidate: this should be specified instead of the setting.
Reference: inline these into declaration
Candidate: nit: use checkargument
Reference: this change is completely unrelated to this pr. any particular reason for adding it?
Candidate: mag <UNK> <UNK> { throw new <UNK> } }));
Reference: @yesamer i think that's to be removed. synchronizefactmappingswidths put the current columns widht inside factmappings, but we decided it should happen **only** when the user saves the scenario - otherwise
Candidate: i pagelogging
Reference: i don't understand what this whole check is about.
Candidate: i would be better to use "no names, it'd be better to extract a <UNK> to a separate method for <UNK>
Reference: please add a space before and after the +, to be consistent with the rest of the file.
Candidate: this is is designed to be <UNK>
Reference: /nakadiexception/exception/
Candidate: you could use <UNK>
Reference: why did you move the if from here? should be- if (scheduledstatuscheckinprogress || retrycount > max_retry_counts || reportswebappdeployed) { return; } it is better to keep the if here over
Candidate: you could use <UNK> <UNK>
Reference: this if-else is very readable and i'm not asking you to change it, but for fun and curiosity i'll note that countofareacodesforyear.merge(year, 1, integer::sum); would've done the same thing.
Candidate: minor nit: you could use <UNK>
Reference: unnecessary boolean field. just call the method inline below, the variable doesnt add any value for the reader since it literally has the same name as the method.
Candidate: you could bail here instead of <UNK> edges,
Reference: zoomoutenabled = true; without if will do the same
Candidate: you could use <UNK>
Reference: authorization token is missing
Candidate: use <UNK> instead of <UNK>
Reference: this will be a little bit flaky. there will still be a small chance the thread set to interrupted state after downloadallserverchanges(). actually the interrupted state can be set inside
Candidate: you could print stack trace to
Reference: we don't need to print the full stack trace if we're catching exception that we threw in this very same function. i'd prefer to use blocks like:  if(sample==null) {
Candidate: you could use <UNK>
Reference: unnecessary whitespace?
Candidate: you could use <UNK> here instead of <UNK>
Reference: this check shouldn't be necessary any more as we are using an enum
Candidate: same wording. about the wording.
Reference: what's the purpose of fail? i don't see anything in the tests below that checks for this exception to occur. i'm confused by the fact it's an illegalstateexception (vs a
Candidate: <UNK> guidelines](<link_0>
Reference: missed this?
Candidate: suggestion <UNK> <UNK> + <UNK>
Reference: same here, make this package private.
Candidate: this is a <UNK>
Reference: these 2 lines can be removed.
Candidate: is there a reason for element?
Reference: think you can use just %s instead of %[*]$s for these
Candidate: you could use <UNK>
Reference: the class is named echoapi but here you use echoapi. this code won't compile
Candidate: should we add a log. log. log. log. log. log. log. log. log. log. log. log. log. log. log. log. log. log. log. log. log. log. log. log. log. log.
Reference: can't this be simplified using math.ceil()?
Candidate: is there a reason for this property?
Reference: do a stringutils.isnotblank(...) check before setting
Candidate: this should be a set?
Reference: i'm not entirely clear on how this is going to be called, but it has me concerned because this action is going to re-process a csv file, rewrite a new
Candidate: if we is going to have a <UNK> <UNK>
Reference: @unyoungwax, are we able to make this private too?
Candidate: ditto theory
Reference: @danielezonca this is missing the crucial test, i.e. the migrated version should contain "1.2"
Candidate: we could use <UNK>
Reference: please change it to a normal null check and throw a illegalargumentexception. this is more meaningful than throwing an npe here.
Candidate: this is designed to be a <UNK>
Reference: can you please use @injectmocks instead
Candidate: same as above.
Reference: is it something that you write by hand or use "generate equals/hashcode" in the ide? it is strange that you consider "different class" objects to be equal.
Candidate: is this tear down to tear down quickly tear down down down down down down down down down down down down quickly tear down down down down down down quickly
Reference: setpushsetupalarm should be tested on an e-meter device_identification_g_label -> device_identification_e_label getdeviceidg -> getdeviceide
Candidate: should be tested on the e-meter device_identification_g_label -> device_identification_e_label getdeviceidg -> getdeviceide
Reference: is this here for testing? we might want to use some logging library
Candidate: use <UNK>
Reference: this isn't null safe.
Candidate: nope, this is is dangerous,
Reference: i don't think you can be sure that the server returned the content in utf-8, use the content type from the response instead.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: nit picking, only mentioning it because we were speaking about different collection types, using a set rather than list might be more appropriate since it holds unique values and being
Candidate: this is not be a objects.isnull
Reference: is there a race here where one query is killed an the other finishes immediately, so the general pool reservation is empty?
Candidate: nit: <UNK>
Reference: same here. assert.assertequals(patiententities.get(0), expectedpatiententity2);
Candidate: is there a reason for this logic?
Reference: wrong error constant suggestion super(mediawikiapierrorhandler.error_assert_user_failed, errormessage);
Candidate: we should throw an exception instead of checkargument
Reference: <link_0> it looks better to mock logchannel and check whether mock logbasic was called, not getexception from entry
Candidate: 32 ;
Reference: minor typo in variable name.
Candidate: i think that this is is not <UNK>
Reference: should probably actually check the results here, not just the size
Candidate: you could use <UNK>
Reference: return optional.of(new relation());
Candidate: you could use <UNK>
Reference: how about doing a tolowercase here. that would essentially make column names case insensitive. cql3 does this.
Candidate: please miss?
Reference: replacing this with helper method would be great
Candidate: this is not efficient, we could use <UNK>
Reference: completestructure doesn't do anything anymore, still needed?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: again, use ioutils.
Candidate: use readasstring(...) instead
Reference: null check?
Candidate: this exception is not non-trivial propagate exception
Reference: i'm getting a npe here, processmodel.trademanager is null
Candidate: should we use <UNK>
Reference: i would rather have something like java serverenv.usestoragefactory(factory).intests();  that's a lot closer to the way we speak.
Candidate: please use <UNK>
Reference: did you mean to get the name?
Candidate: i pagelogging
Reference: keep indentation as it was; no new lines after blocks. more at <link_0>
Candidate: is there a reason that is not used?
Reference: better results can be achieved with code similar to line 60 of org.eclipse.ui.internal.monitoring.defaultuifreezeeventlogger.
Candidate: i think that this origin is a statement, but i don't think it is be to minimize statement, but it would be to create a static <UNK>
Reference: please mention that this feature is a "teach preview"
Candidate: please add a description
Reference: could specific exception be used here?
Candidate: use <UNK> instead of <UNK>
Reference: nit: i think this'd be more intuitive/straightforward if expressed as: java if (isleaderevent(event) && !isleader) { _log.info(...); return; }
Candidate: i we move this lock to log.debug mapping?
Reference: you might want to store the view as a field in your class if used multiple time. findviewbyid has a non negligible cost.
Candidate: is there a reason for element?
Reference: objects::nonnull could be used here
Candidate: why not synchronize on <UNK>
Reference: why did you change this? this won't work when running the tests from the published test jar
Candidate: please remove the log.
Reference: why a check for the viewer here? shouldn't this be the dropdowntable? now that we keep the table.
Candidate: shouldn't we check if the <UNK> is be the dropdowntable? now that we keep the
Reference: this.value = value;
Candidate: please use <UNK>
Reference: tostring() is missing the name of the class
Candidate: minor: appending to
Reference: i think it looks good now. just change 100 to args.hits.
Candidate: could we use <UNK> <UNK>
Reference: check if message it's a valid string
Candidate: objects.isnull
Reference: should this and other numbers be assigned a constant with a meaningful name to identify how they came to be and for future maintainability?
Candidate: nit: <UNK> = new <UNK> <UNK> <UNK> = new <UNK> <UNK> <UNK> = <UNK> <UNK> outputstream = new <UNK> <UNK> <UNK> = new <UNK> ... }
Reference: again same thing here, row vector/column vector explicitly? make sure vector cases are handled.
Candidate: if this is is not to draw a commit to draw a commit to draw the main draw commit statement?
Reference: @govind-menon maybe we can replace the "wait(1000)" with a thread.sleep(100), the '100' instead of '1000' will lead to faster shutdown. does it sound good to you ?
Candidate: i liked that this is mainly mainly mainly mainly is mainly mainly mainly mainly mainly mainly mainly mainly mainly mainly mainly mainly mainly mainly mainly mainly mainly mainly mainly mainly
Reference: should we have minimum? a limit of 1 byte doesn't make sense.
Candidate: unsigned <UNK>
Reference: replace first with parts.isempty()
Candidate: you could be replaced by <UNK>
Reference: rename to numberofmissingfiles, missingfilecount or something like that? using both missingfiles and filesmissing (for completely different purposes) is a bit confusing.
Candidate: i think we should have to bind the page. the router page.
Reference: we cleared it here, later only time we change it is where you add locations. so numberfound==ftaglocations.size() i don't see how its possible that this is not equal
Candidate: you could use <UNK>
Reference: i would call this "tablecount" and do also make a equals to 1, since you might encounter schemas without tables.
Candidate: this is be changed to the
Reference: please use parameterized logging here.
Candidate: use <UNK>
Reference: strictly speaking, that is not robust, as it would also break the outerloop if there is a fastening element within a fastening element. i know, this is very unlikely, but
Candidate: consider using this logic.
Reference: ironically, this is only painful for the open source servers. basically everyone other than me. i can rename a field pretty much at a whim, provided the column id stays
Candidate: could you use <UNK>
Reference: wrong place. this should be done in the setsamplepurposedao method, where it was originally
Candidate: you could use <UNK>
Reference: should this be an untypedutils thing (or something not defaultgroovymethods anyways)
Candidate: is there a reason for element?
Reference: so, i think we can miss this bit out?
Candidate: is there a reason for this logic?
Reference: collections.addall()?
Candidate: this could be replaced by <UNK>
Reference: you should have the same treatment here, the operation saves 2 disks in the same sd
Candidate: this breaks the the storage pool size.
Reference: you could also use immutablemaps.builder<string, string> envmap = immutablemaps.builder() which might be nicer than wrapping your said map in the collections unmodifiable interface
Candidate: is there a reason to re-throw null?
Reference: why is this final and the rest are not
Candidate: is there a reason for tracking these 3 lines names could be replaced by <UNK>
Reference: >credentials [](start = 26, length = 11) static
Candidate: is there a reason for this statement?
Reference: we may be better off to return null instead of an empty string here.
Candidate: suggestion if <UNK> != null) { throw new <UNK> }
Reference: not important at all, but you can just return jobdate.after(searchedtimestamp) directly.
Candidate: use <UNK>
Reference: a bit nit-picky, but i'd fix the indentation here and give the variable p a proper name.
Candidate: use <UNK> instead of -1.
Reference: this line needed to be reset every time? looks out of scope for this method.
Candidate: you could use <UNK>
Reference: you shouldn't have to do this, instead make cohortmember implement comparable
Candidate: <UNK> -> <UNK>
Reference: i think it would be reasonable to put any operations which are not expensive and can't fail into the constructor, which would allow you to eliminate the randomseed instance variable
Candidate: <UNK>
Reference: maybe a more meaningful exception?
Candidate: should we throw a unsupportedoperationexception instead of <UNK>
Reference: why the change to replicate region type as the default? should it be partition_redundant, perhaps?
Candidate: we could use a constant instead of <UNK>
Reference: protocoladapterexception is not thrown in method. could be removed
Candidate: is this a bit strange to throw an illegalstateexception instead of an illegalstateexception
Reference: please reverse the if condition
Candidate: this is not prefix?
Reference: investigate on why we need hashcode for this class.
Candidate: please use objects.hash()
Reference: ditto about message
Candidate: use <UNK>
Reference: need spaces after the 'if' here and above (and remove the space after the parens)
Candidate: use <UNK>
Reference: can you just do new jsonarray("{" + registrationid + "}") or something
Candidate: you should log the error message is not debug
Reference: there is an issue here. since this updatecloudletsprocessing is called multiple times, the number of free pes will keep decreasing, even if no cloudlet has finished. you can implement like
Candidate: let's discuss bit more bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit
Reference: doesn't uniqued imply sorted?
Candidate: minor: this is obsolete marking
Reference: nice job
Candidate: i liked that this is is is not to be a <UNK> that is is a <UNK> that will never be an npe if there is no need to
Reference: this could be lists.newarraylist(deviceid);
Candidate: should be be required?
Reference: java8-isation [foreach][methodreference]
Candidate: java8-isation <UNK>
Reference: why don't we throw unsupportedoperationexception for these three methods? i think that would prevent users from falsely assuming there is support for it.
Candidate: why not -1l ?
Reference: nit: maybe toolchaininfo.skylark_name?
Candidate: i think that this is is not to be a in this pr, but i'm not sure how about happening.
Reference: this check leads me to expect that getorderedpropertyvalues will return null if the node does not have all the properties required by the index, but no such check seemed to
Candidate: is there a reason for this test is not
Reference: .tostring(); is redundant here.
Candidate: you could use <UNK> here instead of <UNK>
Reference: configuration files are relatively small. will this stream ever be sufficiently large to warrant this bufferred reading approach, rather than simply reading the whole stream in? we're eventually reading the
Candidate: could we log a finally block
Reference: this method will be executed although parametervalues0 has elements, won't it?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: anything to worry about if an exception arises during handlemessage()? right now that would cause any other messages in the same batch to be skipped
Candidate: please use <UNK>
Reference: consistency?
Candidate: use <UNK>
Reference: shouldn't need to try catch here given the overload being called already does this.
Candidate: i think we could use a <UNK> <UNK>
Reference: seterrormessage
Candidate: please add a full names.
Reference: service can be injected.
Candidate: you could be included in the included included in included included in included included in the included included in included included in included included in the included included in the
Reference: test is not working properly (passes whatever value the timer is updated: 10, 2, etc.) slaviolated is always false due to count of the latch never reaches zero, because countdown
Candidate: you could use <UNK>
Reference: new xmlcontext() can happen above the for loop so we create less objects.
Candidate: you could use <UNK>
Reference: is this now guaranteed to be called from the event loop? i think so but just to double-check...
Candidate: i think this should be simplified only:  java return <UNK> == null ? <UNK> : null; : <UNK>
Reference: since only expectedconceptentity1's uuid matches, why is expectedconceptentity2 listed here?
Candidate: this should be <UNK>
Reference: new line
Candidate: nit: use <UNK>
Reference: info message is a bit confusing, maybe something like "configuration is not clustered, clustered locks are disabled" or something like that.
Candidate: you could print stack trace to
Reference: nit: can decrease indentation by avoiding this 'else'. if (contentlength == null) { return -1; }
Candidate: suggestion <UNK> = <UNK>
Reference: there is a matcher that already does this: org.fest.swing.core.matcher.jbuttonmatcher.
Candidate: no need for the
Reference: ![major](<link_0> 'severity: major') invoke method(s) only conditionally. [![rule](<link_1>](<link_2>
Candidate: please use <UNK>
Reference: i think is clearer the defensive approach:  if (requestcode != shared.request_code) { ... }
Candidate: we talked about this pr,
Reference: @diegolovison the warning should be logged when setting the queue size, not when reading it. this is what i had in mind: <link_0>
Candidate: this would be a huge life this have a bit surprised that this is is used in a huge change, but it would be easier to have a huge life
Reference: wording wise i think it makes more sense to formulate it like: "sign in to datacloud"
Candidate: you could use <UNK>
Reference: static import for is
Candidate: please add a assertions.
Reference: this means it will not be cache. is that what we want?
Candidate: i think we could be a <UNK>
Reference: can we have this as below as created instance is not used else where?  new customprocessorinfo().fromtopologycomponentbundle(customprocessorbundle);
Candidate: maybe we should throw an illegalstateexception instead of <UNK>
Reference: this could be a one liner if you never need to access date or time again.  timestamp now = new timestamp(new date().gettime());
Candidate: i doubt that this is is null, but not sure that the fragment is not null.
Reference: should we make this method final? i think it is used to be called by sub classes, not to be overridden?
Candidate: this could be repelaced by <UNK>
Reference: typo
Candidate: i think we should be able to turn the requirements from the <UNK>
Reference: we can't do these like this - this convert every bit of the buffer to a string, even if trace is off, which will be a big performance overhead. i'd
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: it seems redundant for defining this variable
Candidate: nit: foreach @nullable.
Reference: the problem here is that you're using fixed ids for the child processes, that won't work when persistence is used. try something like this: suggestion collection<processinstancedesc> instances = runtimedataservice.getprocessinstancesbyparent(parentprocessinstanceid, arrays.aslist(processinstance.state_active),
Candidate: please use <UNK>
Reference: might as well use log with debug.
Candidate: this log, log, log, log, log, log, log, be log, log, log, log, log, log, log, log, log, log, log, log, log, log, log, log, log, log, log, log, log,
Reference: why does this have to return the file?
Candidate: i doubt that this doubt that the matters but i doubt that that matters that ide enables ide enables ide ide enables ide ide enables ide ide enables ide ide
Reference: you should tolowercase the material name.
Candidate: could you move this log message to the log statement, please.
Reference: when an exception is caught, it is expected one of the two behaviors: - log the exception (in this case: silverlogger.error("look named '"+lookname+" not found", e), see the exception e
Candidate: please use <UNK>
Reference: how about removing setinstancetypeid(..) (and the class member maybe) and then drop the second part (vmstatic != null) ?
Candidate: if you understood the the union of the <UNK> invalid?
Reference: you could remote @suppresswarnings("null") for the whole method implementation using e.g. java final inetaddress address = cidr.getaddress(); assert address != null; // networkinterface.getinterfaceaddresses() should return only non-null addresses interfaceips.add(new cidraddress(address,
Candidate: this error message
Reference: what about using stream api and directly have a return from the first line?
Candidate: nit: use <UNK>
Reference: also probably need to do difference on taskid instead of task object here as well, unless we make sure each task has a proper hash and equals.
Candidate: you could use system.currenttimemillis() instead of system.currenttimemillis()
Reference: isn't it simpler/nicer to create two static listeners in advance and use them accordingly?
Candidate: you could call clear() this clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear() clear()
Reference: a get request to generate identifiers?
Candidate: use expectedexception
Reference: when you send a pr don't rename a method and add changes in the same commit. it makes it harder to figure out where the important changes in this commit
Candidate: this we need to use <UNK>
Reference: i am a bit confused by this logic. why do we need to cleanshutdown only when it comes to testing? also, we register the shutdown hook earlier before the while
Candidate: should we use <UNK>
Reference: i was not thinking of something dynamic like that. given that the other parameters are not dynamic, can we remove those replace and just have the default prefix?
Candidate: i think this e1 is not to be a <UNK> <UNK> <UNK>
Reference: it would be useful log a warning if the method has any annotation but is non-public. it will let the users know that the visibility of the method is the
Candidate: i guess we should export to <UNK> ![image](<link_0>
Reference: shouldn't it be styledtext.iswordwrap() ?
Candidate: could you please use '+'
Reference: nit: streams.stream(tokenizer).collect(toimmutablelist()); is good enough. (assignment to pathelements is not necessary)
Candidate: i think we could be a here instead of <UNK>
Reference: this function will only be called when the marker is present, so in practice the input parameter won't be null. remove the @nullable annotation (apply this to all parser classes).
Candidate: you can annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, annotation, no?
Reference: please fix formatting in this method.
Candidate: how about eating the
Reference: this is not locking on key level but set object level.
Candidate: you could use isempty() instead of objects.isnull
Reference: better appendtomailbox(msg)
Candidate: if checkargument is not <UNK>
Reference: please use frameheaderflyweight .frame_length_size instead of hardcoding
Candidate: you could use blocking completion to blocking the completion of blocking the blocking completion (i.e. <UNK> blocking
Reference: ![minor](<link_2> 'severity: minor') remove this unnecessary cast to "stringterms". [![rule](<link_1>](<link_0>
Candidate: suggestion if (throwable == null) { ...
Reference: might be worth adding an isfinishing() check before updating the views. wdyt?
Candidate: you could use <UNK>
Reference: can we make this as warn
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: can you instead fetch this again with diagnosisservice.getdiagnosisbyuuid()
Candidate: you could use <UNK> notation? this(name, <UNK>
Reference: oops?
Candidate: please remove narrowing narrowing narrowing narrowing to narrowing narrowing narrowing narrowing narrowing narrowing narrowing narrowing narrowing narrowing narrowing narrowing traces to
Reference: what if "_" string is part of the path?
Candidate: mag <UNK>
Reference: from the first glance changed behavior of this method looks counter intuitive: if a passed argument is lesser than 0 a default timeout from a configuration is used. for me
Candidate: why not -1l ?
Reference: as i mentioned in the previous patchset, while this should work due to type erasure, i think this cast is rather confusing because you're not actually casting to businessentity<? extends
Candidate: please move this to <UNK>
Reference: the id is used to restore old files (from an older release) so this must not be changed!
Candidate: you encoder's "_" is a <UNK>
Reference: 1. if the user wants to delete the kit, they want to delete the kit. i don't see why they shouldn't be able to delete the kit just because they
Candidate: can we move this log to the log method.
Reference: rename to child
Candidate: rename child childitem
Reference: additionally (and this applies for both vnc urls), the colon character must be escaped, as the url will be passed to another url as a parameter
Candidate: please use <UNK>
Reference: again, should check response code.
Candidate: i think we could be a <UNK>
Reference: i don't really like this. i understand using a filter/concat/take wouldn't work if we want the favourite ids to be a hot observable, but this seems wrong too. @dorvaryn any
Candidate: use a static import <UNK>
Reference: can you wrap that into a method with an integer parameter for the warning number to return?  collection<fileannotation> warnings = new iarparser().parse(openfile("issue8823.txt")); iterator<fileannotation> iterator = warnings.iterator(); for loop: iterator.next();
Candidate: you could replace this with <UNK> with <UNK>
Reference: unnecessary variable
Candidate: wait.forelementclickable() could be <UNK>
Reference: imo, it's better to look this up by interface.
Candidate: this should be <UNK>
Reference: i think here is return strings.format("%i/%s/%s", task.getid(), language, filename)
Candidate: you could use a constant instead of <UNK>
Reference: i agree this is very clean, but getnetworks() isn't a simple getter and shouldn't be called if you fail beforehand. i'd separate into two ifs.
Candidate: you can use <UNK> here instead of <UNK>
Reference: you should use bl layer to prevent unnecessary nested transaction creation. like this: ((perunbl)ldapcmanager.getperunbl()).getattributesmanagerbl().getattribute(...)
Candidate: this should be deadlock to use-case for the
Reference: this will end up in the users logfile who does not know what this is... either change the severity to debug or if you want to let the user know
Candidate: you could use <UNK>
Reference: reuse foldername
Candidate: final
Reference: we should never catch throwable. we should change this to exception.
Candidate: you could use use stringutils instead of <UNK>
Reference: if i'm not mistaken this method is deprecated and we should use org.eclipse.che.api.promises.client.promiseprovider#reject(org.eclipse.che.api.promises.client.promiseerror), no?
Candidate: this should be <UNK> to <UNK>
Reference: can you swap the conjuncts, i.e (protoinfo == null && ...). this way in case protoinfo is not null, configuration fragment is not required. probably it would also be best
Candidate: no need to use <UNK>
Reference: notice that what you call "fileformat" in the classes undeline is not actually a format -- it is file extension. this kinda smells. i suggest creating enum spreadsheetformat with format
Candidate: this could be replaced by "this".
Reference: this validation will be better implemented with findany, we dont need in this case to know the number of invalid notes.
Candidate: is there a reason for avro property?
Reference: isnullorempty ?
Candidate: you could replace this by: <UNK> <UNK> input.entryset().stream.collect(collectors.tomap(entry -> entry.getkey(), entry-> <UNK>
Reference: oops
Candidate: i think we should introduce a nullpointerexception if oldvalue is null.
Reference: suggestion return new hashmap<>(connectorconfigcallback.get(herderrequesttimeoutms, timeunit.milliseconds););
Candidate: suggestion throw new unsupportedoperationexception
Reference: this line should be removed
Candidate: could you draw (, a <UNK>
Reference: you better prefer string concatenation here
Candidate: please add a string concatenation
Reference: in all these checks, why not just compare to a list? e.g., in this case:  assertequals(collections.<string>emptylist(), clazznames);  you could also use arrays.aslist for the other tests that actually
Candidate: use stringutils
Reference: we're duplicating it in the constructor and wrapping it here in an unmodifiable list on every call? can we do that in the constructor then too? still not sure if
Candidate: <UNK>
Reference: couldn't this call be more fine grained? it sounds weird we need to run all the configure code in a privileged block?
Candidate: i think that this is not efficient, we should have to call the clear() icon, in the <UNK>
Reference: @aschworer dash used only here, you can inline it
Candidate: you could use <UNK>
Reference: do you think we should avoid introducing another virtual/interface method call here, and another object instantiation for the lambda argument capture, or is that not important at this point? maybe
Candidate: i liked that this is not efficient, but i guess that we don't have the lock state manager, that the is not closed, but i guess we should hang the
Reference: @arunmahadevan my bad. i closed the other pr thinking you had also updated linkedhashmap to immutablemap in convertvalue method. but here i see only dodeserialize being updated from linkedhashmap to
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: better to keep a map of (delimiter -> splitter) to avoid creating a splitter per key.
Candidate: use <UNK>
Reference: so this behavior isn't quite right. we need the buffering of data to only happen on when a marker is set (for reading the image metadata) but to not happen
Candidate: this is a clock }?
Reference: can we name this something else? it's confusing to see field(field...)
Candidate: @gunnarmorling mind replacing foreach first.
Reference: remove this change
Candidate: is there a reason for this method is not <UNK>
Reference: could be in else
Candidate: wait.forelementclickable() is be <UNK>
Reference: should this do something like } else { warntmpl = "pack file {0} now inaccessible; removing it from pack list" } ?
Candidate: is there a reason for this?
Reference: a better variable name than along is actualconceptscount
Candidate: same as above.
Reference: if newvalue == oldvalue i think we shouldn't call the notifier nor update the entry.
Candidate: i'm not sure how about this tied to expiration is the expiration expiration expiration is not implemented in the <UNK>
Reference: java for (string msqchoice : msqchoices.size() {
Candidate: ditto
Reference: misspelling
Candidate: i queues is not used.
Reference: it implies that the file is being read lazily by netty to apply the zero-copy transfert, but it means also that we need to be sure that the file won't
Candidate: why we use <UNK> allocation here?
Reference: i don't think you need to call serialise anymore when you've got proper dtos to return - should be able to just return the dtos directly and let it serialise
Candidate: you could use use <UNK> instead of <UNK>
Reference: 4 -> size_wkid
Candidate: you could use trim parens around
Reference: here we're actually looking for stars count...
Candidate: you could use <UNK> here instead of nesting.
Reference: could use var here too. :smiley_cat:
Candidate: nit: <UNK> -> <UNK>
Reference: @exr0n call super().
Candidate: we could use <UNK>
Reference: can we change the name of this variable? it's a little confusing to read usage.usage and think about it as a type usage. maybe storageused?
Candidate: nit: consequence of info.
Reference: right now setpgstatupwait(duration.ofseconds(-1)) throws nullpointerexception, when it should either silently replace with a zero duration, or throw illegalargumentexception.
Candidate: if you could use <UNK>
Reference: is the null check still required when you turn around the equals call?
Candidate: suggestion <UNK> = new <UNK>
Reference: since starttime is changing i would suggest to rename it to currenttime to make the loop condition more clear.
Candidate: i think that the scale is not scale to be <UNK>
Reference: redundant, right?
Candidate: you can use <UNK>
Reference: these paths and file names should be extracted as constants, specially if they are reused in more places.
Candidate: this is a <UNK>
Reference: static
Candidate: you could use <UNK> <UNK>
Reference: these is ugly, also sometimes create a strange errors when working with java.uitl.date please think about using system.currenttimeinmillis (whatever) + minutes * 60 * 1000 and after that new date(value)
Candidate: i think we could be a <UNK>
Reference: - how is the max depth related to "adding follow symlink option"? - why do we need to restrict the depth of the abstract watch service? isn't it a specific
Candidate: is there a lot of variants of variants of variants to variants
Reference: how about we print out the actual values of the arguments here?
Candidate: this is designed designed designed to be designed to be changed to <UNK>
Reference: a better name would be "savebuttonenabled". when it is true the button is then obviously enabled, when it is false it is clearly diabled.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: if you want to go for a bit more type safety you could encode the url as actual url. this is probably not needed when the main goal is to
Candidate: i think we should log the log level to print the stack trace, that is printed from the trace, so we don't have to log trace,
Reference: the !query.getcontextboolean(scanquery.ctx_key_outermost, true) needs to be flipped to just query.getcontextboolean(scanquery.ctx_key_outermost, true)
Candidate: is there a reason for this?
Reference: i think the travis build failed because you have a typo. the method is called getbytelength() (no 's'). if you can fix that and update the pr, i can merge
Candidate: you could use <UNK>
Reference: slf4j logging please.
Candidate: objects.equals
Reference: firing an event wrapped in try block... never saw it before in our codebase. that's interesting. can you explain, please, what's the motivation of this
Candidate: this is designed to be an indication that this will be an npe.
Reference: this code should go to onsaveinternalwithmodel() method. and since there it is not a multipleaction, you can avoid the .get(0). call.
Candidate: i is completed jobs completed completed completed completed completed completed completed completed completed completed completed completed completed completed completed completed completed completed completed completed completed completed completed completed completed completed
Reference: nit: hconf.set
Candidate: is there a reason why not catching the exceptions?
Reference: if we change linkedhashset to linkedhashmap with access order (check lrucacheevictor), don't we have a lru bucket in that case? @calvinjia
Candidate: suggestion <UNK> -> <UNK>
Reference: since this can return null, you should add the @nullable annotation to the method.
Candidate: you could use a copy of the
Reference: please, proof-read your code before submitting pr. you probably meant something like "lindad".
Candidate: we should download a maps to download a channel to download a channel of download a channel
Reference: null or empty is technical. we can just say something like: schema must be provided.
Candidate: let's use this error message
Reference: out of curiosity, where can this npe come from? netif is known not to be null at this point.
Candidate: we could use a <UNK> here instead of creating a new connection,
Reference: same kind of thought here, i would negate this if condition and get rid of the else block... but i guess it's a matter of taste really ^^
Candidate: use <UNK>
Reference: you could use one of the existing care settings in the test dataset
Candidate: this is not <UNK>
Reference: encrypted password matches regexp and regexp require 1+ symbols in each group. it looks like null checks are not needed.
Candidate: you could replace this by: <UNK> <UNK> <UNK> = <UNK>
Reference: consider moving the if to the addvmcinderdisks method.
Candidate: please move this logic to <UNK>
Reference: maybe remove wildcard import javax.swing.* ? i know idea adds it automatically but there must be a setting for that (let me know where it is ;)
Candidate: is there a reason that kubernetes behaviour?
Reference: check false condition here and we can save one level of indent
Candidate: log.debug
Reference: minor point; ignore if you want -- this l435-437 block duplicates l423-425 and could be dropped if this entire new code block from l426 was moved above l423.
Candidate: could you please use stringutils enum names instead of ==.
Reference: yuck to auto-generated hashcode and equals methods! understand that it required less code for you to write, but it's certainly more code to maintain. i like return objects.hashcode(additionaloptions, commands, hardware,
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: space after if, and before {
Candidate: you could use <UNK> instead of <UNK>
Reference: not the same code style. use ("save.file", true);
Candidate: you could use a constant instead of <UNK>
Reference: double-conditional?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: magic constants
Candidate: please use only: <UNK> multimap
Reference: similarly, will this(toentity()) work?
Candidate: you could use a <UNK>
Reference: how to process the version like 1.11? i think it have problem. can you use org.talend.commons.utils.version, it implements the interface comparable.
Candidate: this should be <UNK> to clone the array.
Reference: could rename pair to useridpair or usersessionpair
Candidate: i think this should be null?
Reference: scalerfunction is not used?
Candidate: i guess we should return <UNK> == null
Reference: this seems wrong. it's not about whether the field is an alias, but whether its name refers to a column in the source table (vs a column in the output
Candidate: this is designed to be a narrowing strategy.
Reference: i know we haven't been entirely conistent, but repeating the writer. reduces the noise of these lines  writer .emitstatement("...") .begincontrolflow("...") // instead of writer.emitstatement("...") writer.begincontrolflow("...")
Candidate: no, we should throw an exception here instead of <UNK>
Reference: this appears to already be visible in the xml.
Candidate: is there a (can be a label.
Reference: register receiver here if isreceiverregistered is false
Candidate: you could be pulled out of the method.
Reference: perhaps you can use static imports for everything form assertion?
Candidate: wait.forelementclickable() should be <UNK>
Reference: shall we use a logger?
Candidate: if you could use a <UNK>
Reference: indentation here is fucked up
Candidate: this should be immutable subscription immutable globally field is killed was specified by a thread, so that was specified specified specified specified specified specified specified specified specified specified specified specified
Reference: same as in non-buffered aggregator
Candidate: if <UNK> != null && <UNK> != null ?
Reference: nice error handling here!
Candidate: should we filtering the the realm is not db?
Reference: if we go for supporting 3 kinds of test runtime (minimal tp, provision product or pre-existing provisioned product, it would be interesting to factorize installation of tests on a provisioned
Candidate: you could use <UNK>
Reference: feel free to use assertions.fail() for this purpose. also, i would say something to the tune of "environment mode not covered: {}".
Candidate: is there a reason to check that is not empty?
Reference: there is no reason for these formatting changes
Candidate: suggestion <UNK> = <UNK>
Reference: if in line 202 we set patchtable in the else block to null, could we then remove this if block? if a patchtable exists it would simply be always visible.
Candidate: i think this should be to be called in the <UNK>
Reference: java doesn't have string interpolation, i assume you mean something like: suggestion log.warn("could not delete service account user {}", sa.getid(), re);
Candidate: you could use <UNK> here instead of creating a connection,
Reference: style-nit; no braces for simple single-statement constrcuts
Candidate: if you could be simplified to <UNK>
Reference: rebase error - should be used helper.getcurrentuser.
Candidate: use <UNK>
Reference: @bhavik3 i don't think we should have empty space here, as it should be as close to case as possible
Candidate: please use stringutils getchildren instead of <UNK>
Reference: better make these methods protected and move the algorithmgroup soly to the algorithmgroup class and override the methods where it is used here
Candidate: you could use <UNK>
Reference: it's going to be slow to do the merge each time we call getdescriptor. i would prefer if the merge result was cached and the cache invalidated if there's a
Candidate: you could use <UNK>
Reference: can you use dataconstants for the default values?
Candidate: please use <UNK>
Reference: i would suggest answer.tolowercase() to make secret answer validation case insensitive.
Candidate: nit: you could use the formatting settings?
Reference: exception is redundant
Candidate: this is not be a <UNK>
Reference: would be logic the same if you rewrite code as  for (workspaceimpl workspace : workspaces) { normalizestate(workspace, includeruntimes); }  ?
Candidate: namespace namespace namespace namespace namespace namespace namespace namespace
Reference: i think the below logic is not very easily to understand and also has some overheads in practice.  if (!sortbuffer.hasremaining()) { // the record can not be appended to
Candidate: i think this is not <UNK>
Reference: do we need a copy of the data?
Candidate: should we use isempty() instead of <UNK>
Reference: should we copy the source stacktrace of the original timeoutexception?
Candidate: i'm pretty sure that this is pretty pretty pretty pretty pretty pretty pretty quite pretty quite pretty quite pretty quite pretty quite pretty quite pretty quite pretty quite pretty sure
Reference: better: throws exception since it simplifies future evolution of the code.
Candidate: tiny tiny tiny tiny tiny tiny tiny tiny tiny tiny tiny tiny tiny tiny tiny tiny bit tiny bit strange to <UNK>
Reference: remove synchronized
Candidate: why not synchronize
Reference: why is totalpartitionids needed? could you just use partitiontoreplicamap.keyset() to iterate through partitions? if you only need the map you can just do java partitiontoreplicamap = replicaids.stream().collect(collectors.tomap(replicaid::getpartitionid, function.identity()));
Candidate: i think we should have a low for the low of connections.
Reference: you could add instanceof additional check, and return result.error if failed to avoid classcastexception
Candidate: please add a <UNK>
Reference: it will never be null
Candidate: is there a reason to be null?
Reference: must check isdebugenabled() before any debug log as a best practice.
Candidate: no need to say <UNK>
Reference: i know why but can you please explain why you need a loader-writer here?
Candidate: you could use use <UNK> instead of <UNK>
Reference: where is this constructor called?
Candidate: this is not to be a
Reference: could you please always use curly braces around the bodies of if statements, even if they're one-liners?
Candidate: please use objects.equals
Reference: you need to add the annotation here as well, as otherwise the delegate (i.e. the actual mapper implementation) for a decorator does not get the @singleton annotation.
Candidate: this is a bit more bit bit bit more bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit like
Reference: why would summaries by null when you "new" it up above
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: can we say show_notification instead of allow?
Candidate: suggestion <UNK> = <UNK>
Reference: make sure that the order of the plugininfos is same in all scenarios otherwise etag will change event if plugininfos is same
Candidate: you could use <UNK> instead of <UNK>
Reference: please inline this variable.
Candidate: this is a <UNK>
Reference: this if clause can be removed if the path in open on construction as a seekablestream
Candidate: i think that this is not efficient, we could use the <UNK>
Reference: please make this final. a lot of methods in this class should have been final but aren't, but since this is a new one let's lock it down.
Candidate: i think that the description is deserve a
Reference: please reimplement with invoking isdot and isforsideeffects on imports.next() object
Candidate: is there a reason why not use a constant?
Reference: why is this null (although i guess it doesn't matter)
Candidate: is there is a to be called here instead of null?
Reference: a http header named "" should probably be treated as invalid, i think we should refuse it at construction, not try to coerce it here.
Candidate: this is dangerous, if the is not return true"
Reference: nullable
Candidate: is there a reason that happens if the is null?
Reference: or false?
Candidate: use isempty()
Reference: the pattern that we've used so far is for the builder to emit content as well as possible, rather than failing. consider doing something like: characters(format("{0}({1})",text,definition));
Candidate: is there a reason for this?
Reference: the same piece of code is used multiple times, let's refactor it into a common method.
Candidate: this is a wording.
Reference: requesttranscation  => requesttransaction  transcation  => transaction
Candidate: if you could use a <UNK> <UNK>
Reference: why is this no longer static?
Candidate: you could use a <UNK> instead of creating clear() for (string use-case.
Reference: @happy-neko variable type can be relaxed to collection
Candidate: you could use <UNK> instead of <UNK>
Reference: this is sensible... if the resource could be deleted without generating a task (200 response) this will actually be null but the delete operation succeeded. we should only do the
Candidate: you could use <UNK>
Reference: again drop assertion on operation results when expecting resilience strategy to be called.
Candidate: others, i others, assert on the assert that not assert on the assert that is not assert on the initial result on the assert that is not assert on the
Reference: throw exception here instead
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: it might be better to use default values that are not equal to the java defaults (e.g., -1)
Candidate: you could use <UNK>
Reference: use this utils method to show error <link_0>
Candidate: use <UNK> <link_0>
Reference: should we avoid searching the map 3 times for the "id" entry?
Candidate: you could use a local vars instead of a local vars instead of creating a array for every time?
Reference: simply use arrays.aslist(). the list will be immutable but i don't think we add element to the column names afterwards?
Candidate: this is nullable, objects.isnull == null || <UNK> == false)
Reference: it should use the ctx1
Candidate: if onreturn() returns continue_invocation
Reference: requirenonnull
Candidate: this is a <UNK>
Reference: in this case, all keys above should be found in the status_map, so it might be more appropriate with a checknotnull()?
Candidate: you could replace this loop with foreach loop
Reference: @heejeongkim why do you want to quietly ignore malformed max-age and expires attributes with strict rfc 6265 policy? that does not look right to me.
Candidate: if this is is designed to throw an exception
Reference: this could also benefit from inilne examples (takle the values from the tests)
Candidate: you could use "_"
Reference: handle this inside getexceptionsaslist(me), so adding unwanted elements to the list is avoided from the start
Candidate: wdyt about using <UNK>
Reference: you need to add the 'throw' keyword.
Candidate: is there a reason to synchronize here?
Reference: is it really necessary to change the return type? copyrepresentation still return a drep and createrepresentation(final string name, final eobject semantic, final representationdescription description, final iprogressmonitor monitor) returns a drep
Candidate: useless
Reference: @psytester can you change it to: string respbody = response.getentity(string.class);
Candidate: could we pull request from the caller.
Reference: please add .setverifymode(openiabhelper.options.verify_everything)
Candidate: formatting
Reference: why do you need to change the values? testclasswithconfigskipandfailuresample was 3 => has_skipped + has_failure and is now 6 => has_skipped + has_fsp. is it expected?
Candidate: finals
Reference: just because the code resembles c doesn't mean that you have to adopt horrendous naming standards ;)
Candidate: suggestion final <UNK> = <UNK> <UNK> = new <UNK> <UNK> = new <UNK> <UNK> = new <UNK> <UNK> input) { <UNK> = <UNK> }
Reference: fixme: i get "android system" as an option to choose photos. i don't think that should happen (?)
Candidate: is there a reason for the properties?
Reference: i think that we should remove process if kill succeeded. there is one branch that leaves stale consumer that cannot be supervised anymore cause we removed it.
Candidate: you could use <UNK>
Reference: return super.getservicename().append("config");
Candidate: suggestion public list<string> <UNK> { return <UNK> } }));
Reference: you should do this via the mocking api, otherwise this call is just being sent to the mock which doesnt do anything with it..
Candidate: wait.forelementclickable() should be <UNK>
Reference: imo you should always pass the scanpackagevalues to one method and if it is empty check the default package.
Candidate: minor: you could be simplified to <UNK>
Reference: probably doesn't matter as much in tests, but this isn't closed
Candidate: is there a reason for correctness that this is is used?
Reference: if you want to check if video is playing i would not rely on video feedback element. there is special css class added to one of divs related to player
Candidate: please use <UNK>
Reference: should this also use the read option like the other iterator?
Candidate: this is be <UNK>
Reference: can it be null?
Candidate: this is not marking of marking the marking the marking of marking marking the marking of marking marking the marking of marking marking the ==.
Reference: l182-185 can be moved below first if condition.
Candidate: typo
Reference: does the same cost lead to the change?
Candidate: is there a reason for this tracking is not <UNK>
Reference: this is just syntactic sugar, doing so will make this line a bit shorter. return collections.singletonlist(preconfiguredtokenfilter.singleton("homoglyph_norm", will become return singletonlist(singleton("homoglyph_norm", it sometimes helps readability and is accessible easily in intellij
Candidate: this is be <UNK>
Reference: seems what this boolean flag does is the opposite of what the variable name means. if the response is a "ask" response, we want to keep the session open (set
Candidate: is there a reason for this?
Reference: val baby.
Candidate: you could use a instead of the
Reference: should this be if (!strings.isnullorempty(link)) { ?
Candidate: you could use a constant here instead of <UNK>
Reference: > ... as the more important one. is there any particular reason why is it so? usually, it is the less important one and attached as suppressed.
Candidate: throw an exception
Reference: - instead of ! anymatch you can use nonematch. - this would be more readable if you extracted a variable for the condition.
Candidate: should we return null"
Reference: i'd either remove this message or expand on it a bit (i.e. "refreshing info for server x").
Candidate: you could use stream()
Reference: could you explain why we set this here?
Candidate: this should be a <UNK>
Reference: why do you think this is better than collections.empty_list? it doesn't look like a necessary change.
Candidate: you could use <UNK>
Reference: see see getalllifelines remarks
Candidate: you could use <UNK>
Reference: asyncpagetransportlocation.orelse(location)
Candidate: is there a reason for element?
Reference: enforce null when false?
Candidate: ditto
Reference: make these string values as constants
Candidate: please use readasstring(...) instead of <UNK>
Reference: maybe introduce a utility method that returns this factory; it is easy to miss that the list of arguments is part of the factory, and not the constructor.
Candidate: use utf-8 instead of optional?
Reference: it is possible for jdbc.query to return null?
Candidate: you could use a <UNK>
Reference: make these methods final so they can't accidentally be overridden
Candidate: rename to
Reference: we are passed in an abfsinputstreamcontext. we should hold onto that instance instead of creating member variables for each of the members of abfsinputstreamcontext.
Candidate: can we use <UNK> <UNK> constructor?
Reference: hm, shouldn't this be switchmap()?
Candidate: you should use <UNK>
Reference: why are you using standardexception.newexception while throwbadtype("left", receivertype.getsqltypename()); above?
Candidate: is there a reason for this class instead of <UNK>
Reference: this should not be a hardcoded constant ("value"), but simply name. i know this won't change anything in practice, but it's just in case people copy/paste this code.
Candidate: wait.forelementclickable() should be assertions.
Reference: @merciesa maybe matter of taste, but why not i-- instead of i -= 1?
Candidate: you could increment this method to synchronize on the
Reference: this should use the declared return type, not the instance type. otherwise you can't use multibindings to create a set<set<string>>.
Candidate: if you could use <UNK>
Reference: is it ok that this may return null and nothing be done about it?
Candidate: this log is not trace, trace, surrounded at least log level info.
Reference: this code should be removed. executebatch is missing a call to closeresultsets, which would close all activeresultsets, at the outset of the method; which all executexxx methods are required to
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: it would be good to have a unit test for this method
Candidate: this collectionutils
Reference: i think it would be interesting to test not only the status code but also the body, as it should contain the list of commit results.
Candidate: this is variantsourceentities.size() will be the same for the other tests.
Reference: this changes the semantics of comparison. use sameelements (instead of objects.equals) in this class.
Candidate: can you use optional? null"
Reference: try(fsdataoutputstream stream = fs.create(new path("s3n://test-bucket/test"))) { // initiate an upload by creating a stream & closing it immediately } assertequals(s3.getacl(), cannedaccesscontrollist.bucketownerfullcontrol);
Candidate: we could use <UNK> to <UNK>
Reference: use static import everywhere if you star using it
Candidate: we should use the exception here
Reference: there should be no way to delete an allergy by uuid _without_ also specifying the patient it belongs to. i think you should get rid of this third branch.
Candidate: please use <UNK>
Reference: white spaces should be only after the comma, not before
Candidate: how about this is a non-trivial
Reference: i guess you can update the code to use putifabsent() and use the return value to compose the log message
Candidate: if you could use <UNK> <UNK>
Reference: also needs assert.notnull().
Candidate: this is a <UNK>
Reference: why does this allow the requesting thread to drain if requestedcount was already set to long.max_value? doesn't that mean a request was previously made but nothing ever emitted? if that's
Candidate: i think this lock efficient, we can acquire higher efficient, quickly progress cached locks cached bottleneck. is a efficient, that the lock is a efficient, quickly bottleneck. we can quickly
Reference: this savedstate constructor can be made package-private to avoid accessing a private member in the createfromparcel method.
Candidate: please use <UNK>
Reference: i think that this assignment to "guid" already happens in the base class? doesn't it?
Candidate: rename to iu
Reference: then use return string.format(url, checkerinfo.getcurrencybaselowercase(), checkerinfo.getcurrencycounterlowercase());, without hardcoding brl here.
Candidate: use <UNK> instead of <UNK>
Reference: what is left unsupported? could you specify why this exception is thrown?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this way _all_ columns with double type will be formatted with two decimal digits. it is okay for cost (which is essentially money) but it may not be okay for
Candidate: is there a reason for this method is not <UNK>
Reference: just let it throw the error.
Candidate: we could use <UNK>
Reference: predicate used twice (at least first part), should be method
Candidate: you could use a maps here instead of creating a object object object object object object object object object object object object object object object object object object object object
Reference: per the name, the multiplication should be hardcoded into the variable itself.
Candidate: i think this should be a <UNK> <UNK> table, but i guess that we have to plug the table, so we could have to plug the table,
Reference: change s to serviceinstance
Candidate: <UNK> -> <UNK>
Reference: missing @override
Candidate: please use <UNK>
Reference: just fyi, i think there's a method scrollandclick()
Candidate: use <UNK> instead of <UNK>
Reference: @pinaf oh, sorry. i forgot that we have 2 methods. ok for the second test. and also i wasn't very precise about users docs. what i actually want is the
Candidate: @exper0 i introduces npe here, too, too,
Reference: have to be specified? argument '%1$s' name not specified?
Candidate: you could use a baseurl
Reference: mostly we don't use chain and use only setters. let's discuss it with @ybabak @yuribabak i'd like chain
Candidate: is there any reason for this?
Reference: please do not go for the suppression of warnings, instead use proper generic information to make it go away.
Candidate: please use replacing sufficient?
Reference: i think this should call getexistedpath(url) (or its equivalent if it gets renamed). the constructor used to call url.getpath() for its parameter, just like this method used to. since the
Candidate: this is right...
Reference: \\n and not \n? interesting
Candidate: please use <UNK>
Reference: no need to remove parentheses here and below to keep equations consistent. please revert the entire file. the final keyword at l69 can be removed though.
Candidate: can we use system.currenttimemillis() instead of <UNK>
Reference: null check can be beneficial here
Candidate: wait.forelementclickable() could be <UNK>
Reference: is an empty itemtype allowed?
Candidate: is there a reason for this?
Reference: arraylists are great for random reads, not so great for appending. i think by deafult it allocates a length 10 array, then reallocates and copies all the data when the
Candidate: this is a <UNK>
Reference: we should be able to return true here immediately after seeing filteredpattern < 0, simplifying the conditional below, avoiding the sourcepatternindex computation, and making it clearer why the iteration is
Candidate: i guess we could be <UNK> near <UNK> near <UNK> near <UNK> near int <UNK> = <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> : 1);
Reference: why is this included in this pr?
Candidate: <UNK>
Reference: why not use a concurrenthashmap?
Candidate: you could be simplified to java return <UNK> != null) { return <UNK> }
Reference: better use double.isnan(double) ;)
Candidate: webapplicationexception
Reference: it should be new tajoruntimeexception(new invalidcastexception(...).
Candidate: suggestion <UNK> -> <UNK>
Reference: drilldown can be specified multiple times, looks like the previous code was incorrect in this regard. it should be uribuilder.query("drilldown", drilldownarray, false) to not replace the parameter. i'm guessing this
Candidate: this is be initialized to collections.singletonmap() instead of null?
Reference: the try-with-resources should close the output stream, why is this necessary?
Candidate: could we use a jdk commons instead of printing the
Reference: this stream can probably be created using [try-with-resources](<link_0>
Candidate: we could use a string instead of '+'
Reference: ordering here is unpredictable. does that matter? it seems like it might. but i guess that is ok here isn't it, because the database model doesn't store any ordering. i
Candidate: if you could use a string comparison, instead of <UNK>
Reference: use assert.assertequals instead.
Candidate: you could use <UNK> connection,
Reference: just use normal string concats...
Candidate: you could use <UNK>
Reference: again, this doesn't guarantee index bytes are read. my recommendation is to use okio to reliably skip x bytes.
Candidate: use readasstring(...) instead of <UNK>
Reference: style nit, preferred layout is  predicate ? res1; : res2;
Candidate: use <UNK> string concatenation simpler. names.
Reference: public static int hashcode(double value)
Candidate: use objects.hash()
Reference: can you remove this logging statement?
Candidate: i pagelogging
Reference: please also check the entire file and use injected storagepathprovider instead of new storagepathprovider() like here.
Candidate: you could move the auth config, please.
Reference: you can retrieve all disks for vm
Candidate: use <UNK>
Reference: one param a line.
Candidate: i think this bail after the
Reference: let's put the content of waitforanddismissalertmodal here, and let that function call this one instead. the "click ok to dismiss" relationship makes more sense compared to "dismiss to click ok".
Candidate: wait.forelementclickable() could be <UNK>
Reference: that's a hack indeed. there must be a way to trigger a refresh of the list view... (but i don't know off hand sorry)
Candidate: you could use <UNK>
Reference: i think we shouldn't add new method into analysisreporter, but just call the existing public one sendreport as we do on line 65, wdyt?
Candidate: this is designed to be extremely clearer, since the callers is not extremely complicated catches clearer, [![rule](<link_2>](<link_0>
Reference: sometimes you use "/" and sometimes a variable/constant...
Candidate: storagetype is a little bit strange, but it would be easier to read if <UNK> == null) || <UNK> == 0) { ... }?
Reference: we use a bytearrayoutputstream for other services (e.g., pd) -- any reason we're using a stringwriter here?
Candidate: you could use <UNK>
Reference: delegate to createcloneutils(kryo kryo, ...)
Candidate: you could use a new object instead of creating a new instance.
Reference: the entire onpreferencechangelistener can be avoided now that you have set android:persistent=true.
Candidate: you could move this to <UNK>
Reference: these should be internationalized too
Candidate: use readasstring(...) instead of <UNK>
Reference: why do you add "tostring()"
Candidate: interesting, is not sure that this exception is is not efficient, we should log the error message
Reference: imo, to sounds better to me.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: would be nice to add @return about what kind of values are expected here
Candidate: this is a <UNK>
Reference: s/pmpption/pmoptions
Candidate: please consider replacing the error message with error.
Reference: can you just rename this to cleanuptmp(); ?
Candidate: is there a reason for this logic?
Reference: it looks a bit odd to me that we finish the operation only if the migration removes a record. why is it so?
Candidate: suggestion <UNK> = <UNK>
Reference: getservicepolicy shouldn't ever return null. based on how the python sdk functions we return a policy object every time. in the case that it is in fact empty ({"factors": [],
Candidate: why not we throw an exceptions?
Reference: didn't you mean 'typenode == null?
Candidate: if you could factor this e1 || <UNK> { return <UNK> }
Reference: add " && tbl.gettabletype().equalsignorecase(tabletype.managed_table.name() . " and throw exception
Candidate: we should use a warning here instead of <UNK>
Reference: translation here as well.
Candidate: please remove this line
Reference: please use collections.emptymap(), here the static import makes code less readable
Candidate: use <UNK> instead of paths?
Reference: i am worried of the 3 here,did you set it as a conceptid any were up for cough syrup
Candidate: please formatting: space after the
Reference: there are tons of things that could have gone wrong in this call, and returning null from here will both crash or break other code, and has no clear semantic
Candidate: i liked liked this be printed in <UNK>
Reference: nit: if else may make this easier to read.
Candidate: if you could be turned into a method to the trace, then it would be to be null.
Reference: can be simplified to java this.mockmvc.perform(get("http://localhost:543")) .andexpect(redirectedurl("https://localhost:123"));
Candidate: this this complains about replacing this array with <UNK>
Reference: not necessary. please remove it.
Candidate: is there a whitespace between a whitespace between whitespace between the
Reference: static imports
Candidate: please use <UNK>
Reference: since you've changed method name to clickpublishbutton you can also rename button to publishbutton instead of savepagebutton
Candidate: wdyt we wdyt wdyt wdyt wdyt we wdyt wdyt wdyt sake wdyt sake wdyt sake wdyt sake wdyt sake wdyt sake wdyt sake wdyt sake wdyt sake wdyt sake wdyt
Reference: i want to method accessor to be package private :eyes:
Candidate: rename to
Reference: this method could be converted into a single (three-line) boolean statement.
Candidate: objects.isnull
Reference: why transportfactory was removed?
Candidate: you could use <UNK>
Reference: not sure why not doing is gracefully by having true instead of false?
Candidate: this is designed to be a <UNK>
Reference: these two lines can be removed.
Candidate: could you move this logic into a separate method to <UNK>
Reference: i'd like to be able to configure generation in other worlds, too... like basalt in the nether.
Candidate: tiny thing, but i'm not sure it's unrelated change. but i'm not sure whether it's unlikely to change.
Reference: please add an assertion message to the asserequals() call.
Candidate: use readasstring(...) instead of <UNK>
Reference: one output could be added many times. do we need to prevent that?
Candidate: this is not to be <UNK>
Reference: this should return empty array
Candidate: we should use <UNK>
Reference: is it neccessary to fetch the serving url, or can we just set the <img> src value to the end point, and have the end point respond with 303 see
Candidate: this log statement should be printed by logging the printed printed printed printed printed printed printed by printed to debug printed printed printed printed printed printed printed printed printed printed
Reference: indeed. to the best of my knowledge, static is being deprecated in favor of none.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: it seems like you should synchronized before the while loop to prevent releasing and then immediately re-acquiring the lock as you loop
Candidate: you could use <UNK> instead of nesting.
Reference: may not matter, but did you check if this behaviour change has any impact? (the units were not taken into account originally, whatever checkperiod value was passed in at construction
Candidate: <UNK>
Reference: we don't want markdown for debug builds by default. same reason as css.
Candidate: please use <UNK>
Reference: style nit: no braces here
Candidate: @vilchik-elena you could use <UNK> instead of <UNK>
Reference: something like this is about 225k+ ops/sec faster java compositebytebuf taggingcontent = allocator.compositebuffer(); for (string key : tags) { int length = bytebufutil.utf8bytes(key); if (length > tag_length_max) { continue; }
Candidate: you could use a multimap here instead of <UNK>
Reference: && needs to be || as well
Candidate: this should be <UNK>
Reference: wrapping so much logic here in a try-catch is excessive and makes it harder to understand. given that the resulting service error says that the error happens because rest.li was
Candidate: this is be minimized
Reference: alter case also we need to set it. if it is bootstrapping on empty db. may be we can remove the flag and just set it to true always.
Candidate: is this a bit strange to <UNK> that we have a to <UNK> the <UNK>
Reference: extra space on this line
Candidate: please use <UNK>
Reference: minor race here, would be better as:  java long lasttime = lastbufferaddfailmsgtime.get(); if (currtime - lasttime > 10000 && lastbufferaddfailmsgtime.compareandset(lasttime, currtime)) { log.warn("failed to add event to buffer with
Candidate: how about using <UNK>
Reference: it would be better if this returned an empty list instead of null if no repositories exist. the same applies for the other methods as well.
Candidate: use <UNK>
Reference: should be "recoveryrate", not "recovery rate must be between 0 and 1"
Candidate: how about relying about unsupportedoperationexception
Reference: 25 or 35?
Candidate: spelling
Reference: change from admin@nhn.com to ngrinder-admin@naver.com
Candidate: this is designed to be a in the pr, but i we want to create a user in the table, we should download the <UNK>
Reference: optional: use parameterized log if possible
Candidate: suggestion <UNK> = <UNK>
Reference: shouldn't we check that the uri is the same one as returned earlier? assertequals(location, manager.locationurifor(project))
Candidate: you could move this check to the
Reference: i get this if it's closed. we can fix it at the same time org.eclipse.core.internal.resources.resourceexception: resource '/delete-me' is not open. at org.eclipse.core.internal.resources.project.checkaccessible(project.java:150) at org.eclipse.core.internal.resources.project.hasnature(project.java:584) at org.eclipse.linuxtools.tmf.ui.project.model.tmfprojectregistry.resourcechanged(tmfprojectregistry.java:163)
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: the service layer should be responsible for loading these. e.g. defaultrunservice#loadchildentities. getuse and getsize methods will still be required on the dao, but not on the service
Candidate: this is not to be null?
Reference: why the catch here when you don't catch many of the other ormexceptions?
Candidate: if we is not a download the the error message is not thrown in the error message that is not error.
Reference: here the preselection should be added.
Candidate: use <UNK>
Reference: thanks! please just remove the ': %2$s', no need for the getmessage().
Candidate: i think that this is not efficient, we could use the <UNK> <UNK>
Reference: i think we should leave this pr open until vector is finished. the master branch should contain production ready code.
Candidate: is there a reason to synchronize this somewhere?
Reference: nice. how about changing this to apply retries with backoff but use one of the uris at random ? sort of similar to lines 68-77
Candidate: please use readasstring(...) instead of <UNK>
Reference: isempty()
Candidate: this (trace)
Reference: no potential race-condition but other points from [this bit of feedback](<link_0> apply here too. i don't think there's a need to require the client code to call a separate method
Candidate: is there a reason that is is not to be null?
Reference: storedcontext.
Candidate: this should be <UNK>
Reference: dynamic.equals(jobname)? but, what is wrong on setting initial jobname in uri path? afaik this concept is not used anywhare in camel, so please remove the check for "dynamic".
Candidate: the "_" is not be null"
Reference: it looks like we verify these attributes, and then call the getlocaldbentry(a, b) method below. could we do the verification once instead of twice?
Candidate: suggestion if <UNK> == null) { return <UNK> }
Reference: \n can be removed.
Candidate: suggestion if <UNK> != null) { <UNK> = <UNK> }
Reference: i would get rid of the jobchangelistener and simply leave the order of execution as it was before since i don't think this is changing anything.
Candidate: interesting, is not releasing the job on the successful
Reference: the two calls to repositoryfactory.getobject(); in this method can be extracted to a variable.
Candidate: you could use <UNK> here instead of <UNK>
Reference: @arukshani seems like the test code is completely identical except the different upgradestring. consider moving all the code into an extra method and just pass in the upgradestring from both
Candidate: i think this should be <UNK>
Reference: use org.assertj.core.test.maps.mapof to make code lighter.
Candidate: you could use <UNK>
Reference: this is charge_dialog_fragment not change_dialog_fragment
Candidate: i think that this is not preserved. the image wants to be something.
Reference: i don't know the aql apis, but is it ok to modify the environement here and not to reset it to its original value once we are done?
Candidate: we should throw an unsupportedoperationexception rather than <UNK>
Reference: static import getinputformatname
Candidate: use <UNK>
Reference: ticks don't line up. suggest using submonitor.convert(monitor, 1)
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: null checks for codedtest and secret ?
Candidate: the "return" <UNK>
Reference: use java.util.objects
Candidate: please ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides ides
Reference: ctfexception instead?
Candidate: you could use use <UNK> instead of objects.isnull
Reference: instead of initializing to getsequencennumber(), you could initialize to (and check below for) -1. it makes it more obvious that it is an invalid value.
Candidate: you could use <UNK>
Reference: so it doesn't a converter anymore as it creates loadbalancers. i liked it when it returned the loadbalancer instead of adding to a list in the parameters.
Candidate: rename <UNK>
Reference: i would move this code into couldbestring
Candidate: nit: <UNK> -> <UNK>
Reference: can be moved to be inside the following "if" statement. not a must. just a minor optimization.
Candidate: please use f = new f
Reference: what if cdpath is already null?
Candidate: you could use <UNK> multimap
Reference: the exception also needs to be modified a bit.
Candidate: i think that this is is not <UNK>
Reference: if we're going to make a writer around system.err, i think i would prefer to just use that throughout this method. so do this at the start, and replace the
Candidate: you could use a constant instead of creating a new object instead of creating gson instead:  java final string = new <UNK> = new object(); <UNK> = new <UNK>
Reference: remove instance creation here and other places ?
Candidate: please use <UNK>
Reference: this method should not be public because this data source should return only settings domain entity
Candidate: suggestion if <UNK> == null) {
Reference: no need to catch the exception here, it was already done in the overload.
Candidate: suggestion throw new <UNK>
Reference: in this context, form is available as a final variable.
Candidate: use <UNK>
Reference: type is only created to retrieve the class from it later. can't we just use hashmap.class in line 211? wouldnt the generics be erased from the type during runtime anyway?
Candidate: this is is designed to be sure.
Reference: unnecessary change
Candidate: unnecessary change
Reference: current event row count / queryableindex.getnumrows()
Candidate: nit: <UNK>
Reference: inputstream is never closed, which could leak connections to s3. recommended way in java7+ is to use:  java try(final reader inputstream = new inputstreamreader(s3object.getobjectcontent())) { ... }  it
Candidate: could you add a here as well.
Reference: same here, should be an externalized string
Candidate: this is connected (can be separated by <UNK>
Reference: both cases behind if have common logic, you are using if statement only to determine which element use, so let's refactor it
Candidate: please use <UNK>
Reference: de morgan is really earning his keep this week! java return !getsupportedsearchparams().contains(queryparam.getkey()) && !isblank(queryparam.getvalue());
Candidate: this is a bit dangerous, for <UNK>
Reference: i know this isn't yours to blame, but while your at it, let's change this to "successfully" :wink:
Candidate: you could replace this with <UNK> with <UNK>
Reference: this may not be the right way to serialize the key. this depends on tostring method which by default (if not implemented) returns address which will never dedup.
Candidate: @gunnarmorling router <UNK>
Reference: this should be: null == patternfilter
Candidate: you could use <UNK>
Reference: as i mentioned, do not catch all exceptions here, just the ones that are thrown in the try block. suggestion } catch (internalerrorexception | membernotexistsexception | wrongattributevalueexception e) {
Candidate: suggestion return false; }
Reference: for what i can read you only need to set the component key, no need for an internal map on filters objects.
Candidate: you should use stringutils.isnotblank()
Reference: would you use arrays.ensurecapacity?
Candidate: same as previous line.
Reference: it is recommended to change addr0 to restserver
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: or suggestion authentication auth = jenkins.getauthentication(); return auth.equals(jenkins.anonymous) ? null : auth.getname();
Candidate: we could use a top-level instead of <UNK>
Reference: would it be simpler to rewrite this block as just if (subscriptiontrycount != 1)?
Candidate: you could use the <UNK> annotation?
Reference: the use of doublesumaggregatorfactory here makes be very nervous. do all postaggregations have to be doubles? the case i have dealing with nested queries certainly needs to deal with complex
Candidate: i picky about picky picky picky picky picky picky picky picky picky picky picky picky picky picky picky picky picky picky picky picky picky picky picky picky picky picky picky
Reference: super nit: suggestion string filepath = "path/to/text/file.txt";
Candidate: this is not efficient, we could use all() method to <UNK>
Reference: there are resources without dot in the name. i believe this code will fail in that case.
Candidate: should this be be <UNK> ?
Reference: this seems to result in dates that look like 1970-01-01t00:00:00.z. i think you meant to use sss for milliseconds.
Candidate: you can use the formatter
Reference: it's a primitive, you can avoid using objectequal
Candidate: use <UNK>
Reference: i'd say it hsould be called listfilenames (with a capital 'n')...
Candidate: is there a reason for the sake of <UNK>
Reference: interesting. makes me think we should support env and property replacement in batches
Candidate: i am not sure how about the sure about the bos in the
Reference: correlate must have as jointype one of inner, left, semi, anti (i.e the formerly semijointypes), i think we should probably throw an illegalargumentexception if jointype is not one of those
Candidate: this is union is unnecessary.
Reference: better return file for file path. same for all other methods.
Candidate: please use a string concatenation
Reference: i don't think this is needed - all the other actions which allow partial success just send all the commands to the server and the server returns error messages for
Candidate: please use <UNK>
Reference: there should be character '.' after the word 'totally'.
Candidate: i think we should have to invoke <UNK>
Reference: good change making this an instance member, thanks.
Candidate: i think this is a <UNK>
Reference: space after if
Candidate: please use <UNK> instead of <UNK>
Reference: you could make the method return the base tmfxychartviewer, and each test class could cast it to the right sub-class.
Candidate: rename <UNK>
Reference: this line appears twice in the file. as it's effectively the logical opposite of register, i would extract it to a method unregister.
Candidate: i'm not sure how about the sure about the sure that this is is not <UNK>
Reference: don't hide exceptions - it makes resolving failures hard.
Candidate: we should use uri.create to download utf-8 instead of creating a new object as a is)
Reference: this can be instanceof as well.
Candidate: nitpicking
Reference: typo not important "hotname"
Candidate: use <UNK>
Reference: consider renaming this method: its similarity to increasenumofstudents suggests it decreases the number of students by the integer passed in.
Candidate: @vilchik-elena you could be simplified to <UNK>
Reference: please revert back to argumentpreparedstatementsetter as reading/writing blob is not required on the remove.
Candidate: i think this should be a <UNK> <UNK>
Reference: model is already injected and should not be reinstantiated again.
Candidate: we should use a constant instead of download a string concatenation
Reference: getreviewurls is already an immutableset
Candidate: ![major](<link_1> 'severity: major') either remove this [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0>
Reference: here you need to do a mapping as well, can't assume that the values of vdsprotocol and hostprotocol will always match.
Candidate: this is is designed to be a <UNK> <UNK> <UNK>
Reference: must have exactly one annotation...
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: although 2 will not fail the cs magic number check, it isn't clear why it's needed here. a descriptively named constant would help make that clear.
Candidate: i is a bit confused about this <UNK> but i would be a bit more than <UNK>
Reference: let's not rush for auto registration logic here. we can split it into two prs. for this pr, let's only have the interface and class implementation. move the registration logic
Candidate: suggestion <UNK> = new <UNK> clazz, <UNK> clazz, <UNK> <UNK> <UNK> clazz, <UNK> <UNK> <UNK> clazz, <UNK> <UNK> <UNK> clazz, <UNK> <UNK>
Reference: this should be in the bcrobotics class, in preinit. it should _probably_ look like this:  java bcmessagehandler.addmessagetype(messagezoneplannermapchunkrequest.class, messagezoneplannermapchunkrequest.handler.instance, side.server); bcmessagehandler.addmessagetype(messagezoneplannermapchunkresponse.class, messagezoneplannermapchunkresponse.handler.instance, side.client);  this does require you to change
Candidate: if we could use a <UNK> <UNK>
Reference: style, structure, assertjunit.
Candidate: is there a reason for the sake of the sake of depending on the application machine depending on the application machine depending on the application machine depending on the application
Reference: not sure if path here can be something like "hello.gitattributes".
Candidate: i clear() is simplified to a boolean[] for loop? clear() : true"
Reference: i think this is going too far in the other direction :p. in #121, i'm advocating <var> (or <span>) when we're wrapping phrasing content, and <div> when we're wrapping flow
Candidate: this is a bit more efficient, that you could use the <UNK>
Reference: add space, use formatter.
Candidate: is there a reason for this method is not <UNK>
Reference: should slack be in here? suggestion return "slack email user id resolver";
Candidate: suggestion if <UNK> != null) {
Reference: why are you checking build.version.sdk_int >= build.version_codes.p if there is  if (build.version.sdk_int < build.version_codes.p) { return null; }  above?
Candidate: minor: this is be suitable
Reference: minor nit: hasaccess is perhaps a better variable name :)
Candidate: @ustcweizhou should be be a bit more readable.
Reference: this is not legal: collections.emptymap returns a non-modifiable empty map (and always the very same empty map). invoking .put on it should fail. for maps with a single element, use
Candidate: you could move this to a property?
Reference: it looks like this code should be part of 'general' infra independent provision or maybe installer configurations, so docker and openshift and any other implementation won't need to do it
Candidate: suggestion <UNK> <UNK> = new <UNK> { return <UNK> }
Reference: this should really use regexwithtimeout, for safety.
Candidate: please use <UNK>
Reference: in this case, there is no need to explicitly specify the final.
Candidate: no, we relying on relying on relying on relying on relying on relying on relying on relying on relying on relying on relying on relying on relying on the timestamp
Reference: in general, prefer objects.hashcode(...). here is an example in the nova [network](<link_0> class.
Candidate: i objects.hash()
Reference: these functions seem to be deprecated, and also these values are already the default.
Candidate: you should use <UNK>
Reference: please call super.onlogin() here since this is the same code
Candidate: this is not be locked
Reference: need to verify that this is always followed by onresume
Candidate: you can use <UNK>
Reference: and this active instance?
Candidate: this is strange,
Reference: omit?
Candidate: i'm not sure how about making sure this is is used?
Reference: chain with previous line's assertion
Candidate: final
Reference: how about adding a bit of logic that makes it possible for the user to also pass a byte[], without conversion from string to byte[]? this enables the user to
Candidate: please use <UNK>
Reference: please remove. it is provided by different extension.
Candidate: you can use a constant instead of <UNK>
Reference: since the map is case insensitive why force upper case that isn't necessary
Candidate: is there a reason for this warning?
Reference: you're sure caching the field isn't needed? it's still done for beforepassivate
Candidate: nitpick, you could replace this for-loop with <UNK>
Reference: end = math.min(end, interval.get***end***time());
Candidate: we could use <UNK>
Reference: i'm not a big fan of array of generic type; could we change the method to be public static <t> list<future<t>> runconcurrentlywithresult(final list<callable<t>> threads), and change the type of threads
Candidate: could we print the debug sizes of the
Reference: nit: table variable is unnecessary here
Candidate: please use <UNK>
Reference: better variable name - ex numwidgets or just widgets or count
Candidate: whitespace
Reference: don't need parens
Candidate: use <UNK>
Reference: is -> are ?
Candidate: i liked to use the <UNK>
Reference: move forward to line #93 (just before "foundtemplatedisk").
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: typo in variable name.
Candidate: you could use <UNK> instead of <UNK>
Reference: maybe static import all of these constants
Candidate: @manuelplazaspalacio you could use a local variable?
Reference: use parameterized logging, like:  java logger.debug("mapping: itemname={} & property = {}", itemname, property);
Candidate: if we is not a <UNK>
Reference: same as above; there is no need to make this injector public.
Candidate: you could use <UNK>
Reference: listeners that use a ui component should be added in the initialize method.
Candidate: if we is going to throw an npe if there is no need to have an error.
Reference: would it be much extra effort to include outaveragelinkshare, outaveragerealtime and outaverageupperlimit?
Candidate: nit: export returned", <UNK>
Reference: i would prefer using filteronlyallowedattributes(perunsession sess, list<richmember> richmembers, group group, boolean usecontext) with group = null and usecontext = true. its optimized to check rights for first member and store
Candidate: is there a reason to subscribe on this pr?
Reference: is this safe to do repeatedly? or do we need to check and no-op if it's already present?
Candidate: is there a reason that is is not correct?
Reference: what's the reason for double.nan setting? you don't use these values below.
Candidate: this is be <UNK>
Reference: please use static import for compressionutils. likewise addfoldertotar above.
Candidate: you could use the exception here instead of <UNK>
Reference: there is a reason we were using explicit left and right for the gravity. when the system language is an rtl language, "start" will mean "right", and the position of
Candidate: if this is is not efficient, we should have to to the <UNK>
Reference: please add a new line after the assertion to make the method easier to read.
Candidate: use readasstring(...) instead of <UNK>
Reference: is it possible to have a totext(text.builder) method? it'd be nice to pass an already-made builder here, if available
Candidate: this could be simplified to <UNK>
Reference: we should also check discoveryscript.canexecute().
Candidate: you could use use unsigned <UNK>
Reference: islessthanorequalto?
Candidate: this is be <UNK>
Reference: below we log " response: " + result. which one is **the** response?
Candidate: use <UNK> <UNK>
Reference: this will override the system-wide prioritized crypto providers for java set by the system administrator. this may be okay in some cases, but i don't think this should be the
Candidate: can you please use the <UNK> types, types, types, types, types, types, types, types, types, types, types, types, types, types, types, types, types, types, types, types, types, types, types, types,
Reference: nit: serverprops seems to have 3 elements. should not this be 3 instead of 2? 4 instead of 2 for line 85?
Candidate: i doubt that this will be a npe.
Reference: we should use featuremanager.getfeatures() here instead.
Candidate: log.debug maybe?
Reference: fvaluenumber and fvaluetimestamp are derived from fvalue and ftype so they do not need to be considered for hashcode() and equals().
Candidate: you could use use guava instead.
Reference: it is not slew rate (users/seconds). it is extrauserstep (users)
Candidate: not sure that we want to use the <UNK>
Reference: in lieu of the validation in develop, maybe we can just say something akin to "syntax error, please check your wdl file" here
Candidate: you could use <UNK>
Reference: this should return list<memberinfo> if multiple members can be put at once.
Candidate: you could use <UNK>
Reference: why do we need synchronized?
Candidate: if this is is designed to be <UNK>
Reference: unnecessary?
Candidate: suggestion <UNK> = <UNK>
Reference: can we use assertj's assertthatcode here instead of the try-catch?
Candidate: use readasstring(...) instead of <UNK>
Reference: formatting issues
Candidate: i subscribe :(
Reference: ![critical](<link_0> 'severity: critical') define a constant instead of duplicating this literal "method not implemented for unspecified field" 5 times. [![rule](<link_1>](<link_2>
Candidate: is there a reason for this logic?
Reference: split it on 2 lines; = and == are very easy to confuse, especially for someone with little java experience.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: preferences.getpreviewpreferences() ? as you already have a jabref prefs object
Candidate: this should be a <UNK> <UNK>
Reference: this is at least the third time in this pr that comparison of two targets' contigs has come up. it's worth extracting a method somewhere.
Candidate: no need needed for the sake of nesting.
Reference: @exper0 full path hmrsheader.values_str
Candidate: nit: readasstring(...) instead of <UNK>
Reference: why we disallow a user to set null bookmark? (it does not make many sense, but maybe a user wants to break cc from this tx?)
Candidate: we should have to rollback the properties?
Reference: you need to create own exception, when requires to change the default behavior. please use a standard one for your use-case.
Candidate: please use <UNK>
Reference: i prefer adding a case for something like json_type(1), which should fail the validation.
Candidate: is there a reason why not default?
Reference: @sonalidhome here you can use self-reference setter methods. destination.id(...).key(..).name('..') ...
Candidate: could we use the <UNK>
Reference: as far as i know, we do not have an issue on it as we are still trying to finish up detailast support in xpath.
Candidate: you could use <UNK>
Reference: add newline before return.
Candidate: add newline before return.
Reference: best to log the access value for debugging.
Candidate: how about replacing a with <UNK>
Reference: delegate to setbody(publisher, -1)
Candidate: i think this should be a to synchronize on the middle of the
Reference: probably should be continue here; we don't want to stop checking players just because of one bad apple
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: you can collapse the following three lines into one now that we are using java 8 replicationstatus status = keyreplicationstatusmap.computeifabsent(newkey, k -> new replicationstatus(replicas))
Candidate: this seems unnecessary.
Reference: no longer need concatenation now that it's one line
Candidate: i think wording. we should use the wording.
Reference: yes, this shouldn't be here
Candidate: minor nit: could be replaced by <UNK>
Reference: is this method exposed for testing? if yes, should it be marked @visiblefortesting?
Candidate: @gunnarmorling this a bit strange to <UNK>
Reference: are we sure that the value will always fit within a single chunk?
Candidate: you could use <UNK>
Reference: is there a question here? or are you answering your own question?
Candidate: i think we should use <UNK> to <UNK> events.
Reference: please log the exception.. don't use printstacktrace(). if u found any other place fix them as wel..
Candidate: is there any reason why we use system property instead of the file?
Reference: same here, can we input the empty list?
Candidate: is there a reason for this change?
Reference: this call can be deleted.
Candidate: you could use <UNK>
Reference: this class is extremely long anyway. please consider moving this logic to a separate class.
Candidate: nit: attached to origin number of attached origin
Reference: double check that no group has been created
Candidate: no need that group hasn't been created
Reference: why remove the singleton check?
Candidate: this is right...
Reference: will this be more readable with string.format
Candidate: is there a reason for this logic?
Reference: sql script for recordlocationservice--requestedpatientid are 1, 2, 3, 4, 5 this would fail if records are not in the database testgetallbyrlsid
Candidate: suggestion <UNK> -> <UNK>
Reference: @idelcano can you refactor this method extracting logic to new methods exexutedemopull and executeremotepull for have the code more readable as useraccountrepository?
Candidate: we should log the error message is not
Reference: !strings.isempty(), or even !strings.isblank() to rule out whitespace-only text
Candidate: how about using <UNK> <UNK>
Reference: --> failed to transform configuration parameter with key '%s' and initial value '%s'
Candidate: let's throw an illegalstateexception instead of throw.
Reference: i'd just go for the code below, as it feels a lot simpler to me:  public static predicate<charsequence> containsallliterals(final string... fragments) { list<predicate<charsequence>> fragmentpredicates = lists.newarraylist(); for (string fragment
Candidate: this is be <UNK>
Reference: just a minor note, this line can probably be removed since this test doesn't actually make use of the clientfactory.
Candidate: is there a reason for this change?
Reference: i would call escape here to be in line with the @deprecated message and to make sure that both escape methods behave the same (someone may update escape(string) without updating
Candidate: if you could use a <UNK>
Reference: use the constant <code>const.tooltips.feedback_contribution_not_available</code> in fact, this may be better as <code>getpointsascolorizedhtml(const.points_not_submitted)</code>
Candidate: you could use <UNK>
Reference: set<string> seems more appropriate to me, unless there is some need to have values ordered.
Candidate: this is a <UNK>
Reference: may want to break; out of the for loop here so it doesn't continue looping over the remaining attributes.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: if the purpose of adding to oclist is only for shutdown, i would recommend against it. since there is only instance of backgrounddeleter, it should be easy to shutdown/wait for
Candidate: you could use a constructor for the middle of code?
Reference: what happens if id is null? shouldn't you also use tenantid, or is it correct to ignore it?
Candidate: is there a reason why not required?
Reference: we don't need this check. better find the luns that need to be resized. if the luns list is empty, we will not find any luns to resize anyway.
Candidate: you could use <UNK> here instead of <UNK>
Reference: can you simplify by always using second part (after else)
Candidate: is there a reason for element?
Reference: please move this few lines into new method
Candidate: you should use <UNK>
Reference: you don't necessarily need constants for these.. plain "" should be fine too.
Candidate: please use <UNK>
Reference: lines 1051-1053 are redundant.
Candidate: is there a reason to override this class instead of <UNK> others?
Reference: noticed that in samzasqlqueryplanner.parsequery(), there is already a sqlselect generated for the part does the select statement. following this planner.plan(), in queryplanner, we are parsing the select statement again (as
Candidate: please use <UNK>
Reference: @nullable annotation implies that the argument could be null. correct fix is to keep the @nullable annotation and do the following: return field != null ? field.getname() : null;
Candidate: you could use <UNK>
Reference: why linked list? i guess arraylist would be more efficient...
Candidate: no need to use
Reference: please use windows.ok (which is the default button)
Candidate: use <UNK>
Reference: this line should go to the css files
Candidate: we should connected to connected download <UNK> connected from a page.
Reference: shouldn't isrelevancyupdatescheduled be set to true here?
Candidate: you could use <UNK> instead of creating clear() entry, the clear() entry, then instead:  private void <UNK> <UNK> { <UNK> = new <UNK> { ... }
Reference: do we need a try-finally here to ensure any close action gets called?
Candidate: if you could use <UNK> <UNK>
Reference: as far as i see - this is class for default exception handlers. maybe default one for nosucheventtype is not_found?
Candidate: is there any reason to be used?
Reference: not a deep copy
Candidate: is there a reason for element?
Reference: please use assertnotnull from testng and fix indents here
Candidate: nit: import
Reference: this if is unnecessary since it's tested again inside calculateuq()
Candidate: you could use <UNK>
Reference: all these methods can be package-private
Candidate: this should be <UNK>
Reference: maybe tokenise? gettokens is a bit general for what it does.
Candidate: is there a reason for element?
Reference: the check needs to happen for decorators and interceptors also.
Candidate: we should use stringutils instead of <UNK>
Reference: use fluentiterable.filter() or iterables.filter.
Candidate: this is a <UNK>
Reference: would be better to pack the uncommon path into a separate method
Candidate: <UNK>
Reference: suggestion return systemutils.is_os_linux && gnomeloginkeyring.ispresent();
Candidate: this is not efficient, we should use objects.isnull
Reference: i think that the "support" word isn't needed in these names, it is better to name them just "generatestructreader", "generatestructwriter", etc. that accurately describes what they do.
Candidate: is there a reason for this method is not <UNK>
Reference: i think this needs to be on all windows. otherwise, if i quit eclipse with multiple windows opened, when it is restarted, only one of the window will have the
Candidate: should be be <UNK>
Reference: == is sufficient.
Candidate: is there a reason for this method is not <UNK>
Reference: i think this should not be public, right ?
Candidate: this is a <UNK>
Reference: why are we setting it to new a new empty completablefuture? is removing not sufficient?
Candidate: use <UNK>
Reference: domainname is not the host name. in addition, the check should be done only if ldapservers is provided. you need to check that for example - ldapserver1.acme.com is indeed resolvable.
Candidate: you could use the brackets here
Reference: because $#it happens :)
Candidate: you could use braces around the middle of line blocks
Reference: did you intentionally change this from collections.singletonlist?
Candidate: you could move this to <UNK>
Reference: why not directly assertequals(low, fcondition.min()); ?
Candidate: you could use <UNK> here instead of <UNK>
Reference: even this can be clubbed with above one as there is only one extra property here.
Candidate: nit: we could throw an <UNK> attempt to attempt to attempt uid to <UNK>
Reference: remove the tostring()
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: is that possible that tethering inactive but tethering restricted is updated to restrict? if yes, the logic here may be not correct? another question is that when tethering is inactive,
Candidate: this is be <UNK>
Reference: this could call the one argument constructor instead of this.requestdata = requestdata;. it will make possible future refactorings easier.
Candidate: this is designed to be initialized by the ctor id).
Reference: any reason you use .compareto() == 0 instead of .equals()?
Candidate: could you move the brackets around the <UNK> blocks, invalid?
Reference: there is some (mostely) repeated code here between enable and disable debug mode
Candidate: this not sure that this suppresses the the fragment is that is is not needed.
Reference: shouldn't the interrupt flag be restored here?
Candidate: i'm not sure how about this is a thread are, but i don't see that are, but i are,
Reference: would prefer new intobjectopenhashmap<>() here. javac will infer the correct generic type, and then there's less work to refactor in the future. (this trick was discovered fairly late in myria,
Candidate: i think this should be to be called in the view?
Reference: will we even get here if we aren't in discovered hosts mode?
Candidate: if this is is null, but not sure that the styles that styles will be npe if someone will not sure that it will be reset to the
Reference: this should also use scanner to avoid reading everything into ram.
Candidate: could we use a try-with-resources statement,
Reference: you you didn't test nosonar
Candidate: is there a reason for avro properties?
Reference: should this close happen in a finally block?
Candidate: you could use a foreach here instead of creating a new map?
Reference: elapsednanos.
Candidate: this is correct.
Reference: we will need to call shouldbeequalbycomparingonlygivenfields and give it the fields differences.
Candidate: nit: use <UNK>
Reference: please consider to use setchangeprohibitionreason instead
Candidate: you could use <UNK>
Reference: is it a good idea to throw an exception in a static block? this exception is thrown to the classloader which is hard to find or to detect and can
Candidate:
Reference: eventhough not necessary, please add a break also at the default case.. this prevents errors if these case statements are reordered
Candidate: maybe we could be a warn instead of <UNK>
Reference: invalid blob key format:  + key
Candidate: could we throw an exception instead of returning null.
Reference: maybe you spend/add a waitforerrorcalls ?
Candidate: is there a reason for this test file?
Reference: should use parameterized logging instead of string concatenation.
Candidate: i think that this is not <UNK>
Reference: technically, wouldn't it be class<? extends clockprovider>?
Candidate: we could use a here instead of creating a new object somewhere, and the clear() is not the we have a new variants
Reference: this npes when openrepository fails gracefully when the repository is suddenly torn out from under gerrit (this happens!). i would prefer to return "" in this case.
Candidate: is there a reason for avro property?
Reference: can return directly.
Candidate: is there a reason to check that is empty?
Reference: why any? use miccrecords
Candidate: wait.forelementclickable() should be <UNK>
Reference: no braces.
Candidate: nit: we could throw an exception instead of checkargument
Reference: once this is complete, you should in theory be able to get rid of operation_ flags.
Candidate: need need need to be
Reference: <rowexpression> is redundant for builder()
Candidate: please use <UNK>
Reference: i may be wrong, but it looks like we're scheduling all cleanup jobs individually. this also means that cleanup jobs could potentially run in parallel. what happens if there are
Candidate: i would be nice to use the <UNK> <UNK>
Reference: feels like it would be neater to have a single event handler for this which then dispatches to the two methods.
Candidate: this is not efficient, we could use <UNK>
Reference: since we are refactoring it, we could be a little bit more defensive. either check the property name with a regex and extract the group we are interested or check
Candidate: fyi, you could use a constant instead of creating a local variables (private final <UNK> <UNK> = new object(); <UNK> <UNK> = <UNK> <UNK> <UNK> = <UNK> <UNK> <UNK> <UNK>
Reference: any reason we are not doing flatmap similar to the original asyncreadbenchmark? <link_0>
Candidate: i think that this is is not <UNK>
Reference: can we add a toast if msite is null? i know such a situation is unlikely to happen, but in that event then no action is performed and the user
Candidate: i think this should be a <UNK> <UNK>
Reference: suggestion checkdeploymentorder(!legacy);  (same elsewhere)
Candidate: this is not a good idea.
Reference: shouldn't this be give a higher severity? presumably, if we can't release the lock, it's still there, and processes waiting for it will be stuck.
Candidate: you should log the exception
Reference: please avoid reformatting like this, there's no code change here
Candidate: you could use <UNK> instead of date, paths?
Reference: nit: import nettymessage.addbacklog because it occurs many times in this part.
Candidate: this think that this is is be to be careful in the middle of the
Reference: in the original version, both "in" and "out" were not closed at the end. why do we close them now?
Candidate: this should be a
Reference: given the new behavior, maybe renaming this to "trydelete" would make sense?
Candidate: i think we could use a <UNK> to suppress the simpler.
Reference: need to format the code, the space not right, see: +elementtype+
Candidate: wdyt about replacing this part, with <UNK>
Reference: nit: can be linkedlist since we are adding and removing entries?
Candidate: is there a reason for this method is not
Reference: when will this happen ? i like the check but want to know when can this happen ? or is the intention that this can never happen ?
Candidate: please use webfaultexception instead:  <UNK> {}", <UNK> <UNK>
Reference: if you keep the position relative to the 1st datapage above, you just need add this value to every pageheaderwithoffset here
Candidate: @vmaletta use stringutils stringutils
Reference: collection is not usually returned in these cases. also, sorting each time this method is invoked is not too efficient. maybe we could find an implementation of storagefields, which would
Candidate: you could use <UNK>
Reference: null check should done for asynctask.gettaskid() as well
Candidate: npe if you can use <UNK>
Reference: session could be set to null on dispose().
Candidate: is finishing a tear down down down down down down down down down down down down down down down down down down down down down down down down down down
Reference: could we do persistencepath.resolve(key + ser) instead?
Candidate: is this possible to to be a <UNK> edit: edit: edit: we don't need to use a edit: edit: edit:
Reference: object
Candidate: how about using magic number
Reference: i would be tempted to put the code for enabling wire frame mode, along with the next two lines into some flavor of prepareforrendering() method. methods that check and then
Candidate: you could use a constant instead of creating a local variable?
Reference: while this may work, it is a very strange formulation. i wouldn't expect two mock components here -- either you're mocking the file component or you're mocking the direct component,
Candidate: is there a reason for this test is not be used?
Reference: use spring's io utils here
Candidate: you could use a try-with-resource here instead of <UNK>
Reference: suggestion list<restentry> entries = new arraylist<>();
Candidate: you could use <UNK> instead of <UNK>
Reference: i had a couple of ideas: 1. detect that the flow starts with a gateway and automatically add a bridge to nowhere - i rejected this because someone could add
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: ![major](<link_1> 'severity: major') either log or rethrow this exception. [![rule](<link_2>](<link_0>
Candidate: log.debug -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e ->
Reference: if it hasn't been set to anything it should be interpreted as true. so } else { navigator.mcached = true; }
Candidate: is there a reason to print here?
Reference: <= 1
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: should be named just macpool. also no need to extract to variable.
Candidate: this is not <UNK>
Reference: no longer thrown since modifyattribute() removed.
Candidate: this matters, you matters, etc matters, etc matters, but matters, etc matters, but matters, etc matters, but matters, etc matters, but matters,
Reference: this prefix should probably still be there as it is actually logging in the "correct way" to the actual build log. also should maybe be doing double logging here, once
Candidate: this should be log.d
Reference: nit: space after cast
Candidate: is there a reason for this logic?
Reference: if (!transaction.allownonrepeatableread())
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: as this is single element list we could use: java final list<element> updatedelements = collections.singletonelist(mock(element.class));
Candidate: wait.forelementclickable() should be <UNK>
Reference: please use == when comparing enums
Candidate: you could use <UNK>
Reference: please remove this empty line
Candidate: should we use <UNK>
Reference: @original-brownbear does it need to be ioutil from plexus? does it have some special property we need?
Candidate: use <UNK>
Reference: 2 typos milage => mileage and caluclated => calculated
Candidate: you could use the <UNK>
Reference: is it better to use "false" explicitly than the variable "refresh" to force not to use the cache?
Candidate: this is be updated.
Reference: i'm reading this part of the client code <link_0> and trying to understand the change in behaviour with rackawaremode.enforced. do you understand the difference between safe, disabled and enforced? it's
Candidate: i think that this is is not <UNK>
Reference: do these constants really need to be removed? testcatalogvalidation.java appears to have similar constants. is something in this test impacting the classloader?
Candidate: could be replaced by "this".
Reference: can't we use objects.equals(value, name.value)?
Candidate: please use objects.equals
Reference: delete?
Candidate: please use readasstring(...) instead.
Reference: nit: serializables? it is attributevalues or values or something...
Candidate: if you could use <UNK> here instead of nesting.
Reference: style nit: replace tab after "selection," by a space
Candidate: if you could use <UNK> annotation, e.g.: java return <UNK> == null) { return false; } }));
Reference: it's a redundant check. there already exists a stripe size check under the lock.
Candidate: this outputstream = <UNK> != null && <UNK> && <UNK> && <UNK> && <UNK> && <UNK> { return; }
Reference: hi @nahuel-soldevilla thanks for reviewing this! i agree, pattern.compile will have a performance impact if it is called multiple times. so i decided to improve the code and do literal
Candidate: please use the encoder's error message is not
Reference: instead of creating two additional objects, it is preferable to use case-insensitive comparison.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: the server acts according to the config it has in its quorum verifier, so if this line is executed when the server syncs with the leader, setting quorum verifier overwrites
Candidate: if we is a <UNK> e1
Reference: times(0) -> never
Candidate: no need to create a explicitly.
Reference: we already have this in tmf.core.activator now. since this plugin depends on tmf.core, it will already be loaded. is this necessary to call this again?
Candidate: this should be <UNK>
Reference: odd indent on line 86 and lack of braces makes this code confusing. better to use a newline and { } around the if body to make the intent clear.
Candidate: i think that this is not efficient, but i would be good to check if <UNK> == null) { return; }
Reference: i'm not sure if this start() method might throw an exception (or if there is a subsequent close() method), but it might be safer to have a start() method on
Candidate: this is designed to?
Reference: could this be done within initializedisksandreplicasonnode?
Candidate: please use <UNK>
Reference: null email will fail here. lets prevent potential npe, even though theory is ui will never pass it.
Candidate: please add a "return" message here
Reference: could you add the type parameters to the constructor calls here and below?
Candidate: this could be simplified to java return <UNK>  java return <UNK>
Reference: why would that be synchronized? i mean it just executes in site platformrun.later ... that make is synchronized because there is only one ui thread !!!
Candidate: @vilchik-elena could be replaced by <UNK>
Reference: since collation is a required trait, a condition is useless here.
Candidate: is there a reason for this check?
Reference: you can spare this call when !result
Candidate: this is be simplified to <UNK>
Reference: could we use recordbatch.no_timestamp here too?
Candidate: throw unsupportedoperationexception
Reference: the constant should be a static variable. it looks like it is converting megabytes to bytes? if so, how about 'mb_to_bytes_conversion'?
Candidate: if you could use <UNK> instead of <UNK>
Reference: requirenn
Candidate: is there a reason for this method to be null?
Reference: add a todo to be implemented in a later patch. i know this is your next task, but other reviewers may not know that ;-)
Candidate: this is not used?
Reference: can we name this more concisely completions, as in the addmacroextensionautocompletions method? also, the redundant type arguments can be removed from the constructor call: suggestion arraylist<completion> completions = new arraylist<>();
Candidate: if we should be a <UNK> that is is not efficient, we should have to check that the user wants to have a
Reference: could we add another check to make sure that the json exported also has 3 decimal points? for example assert.assertequals(object_mapper.writevalueasstring(compressedview.getbaselinevalues().get(i)), "2.833")
Candidate: if this is is encrypted, encrypted, encrypted, encrypted, encrypted, encrypted, but if the is not encrypted, but i am not sure how about the
Reference: magic number
Candidate: classic ethernet ethernet ethernet ethernet ethernet ethernet order?
Reference: just millis shoud be enought
Candidate: why is this is not used?
Reference: imo this would read better with a ternary operator rather than the if (...) { return ...; } return ...; pattern.
Candidate: suggestion if <UNK> { return false; }
Reference: this one can be static
Candidate: <UNK>
Reference: this is consistent with the corresponding code on googlecomputeinstance, but i would probably use || ipmappinglist.isempty() for clarity.
Candidate: i rebuilding this be a exception instead of creating a exception instead of creating a new exception instead of creating a new <UNK>
Reference: instead of creating the studentsdata > setting the students > getting the students > setting the institute data, could we do all the data manipulation (setting key and institute) on
Candidate: if you is a <UNK> <UNK>
Reference: you need to make sure that all webview methods are called on the ui thread. (i know there are many violations of this in this file, but i've recently fixed
Candidate: we should use baseurl here instead of <UNK>
Reference: message in exception
Candidate: you could use a try-with-resource here instead
Reference: this seems redundant, and bad practice to assert based on the text of exception message. the e instanceof myexception assert below should be sufficient.
Candidate: please remove.
Reference: what if 'data' is null?
Candidate: i this solution, is not saved manually manually manually blindly solution,
Reference: how about integer.tostring(pull.number()) instead?
Candidate: nextvalueindex should be initialized on the model.
Reference: i think checkstyle does not enforce it... even if i think it should...
Candidate: i think we should close the close manager, closed in the manager, that manager, closed in the manager, manager, that manager, the close the manager, closed in the manager, manager,
Reference: right just keep in mind that the filtering will be pretty simple: just enough to distinguish between system templates and user created templates. the security plugins should be preventing templates
Candidate: equals?
Reference: why not adding a addsection method?
Candidate: can we use <UNK> here instead of <UNK>
Reference: i think that you should check for fformatteroptions being null and if true, call rewrite.rewriteast() as the old code did. otherwise, make the new call. that may explain your catch
Candidate: rename to iu
Reference: how about "testcase name cannot be null"
Candidate: suggestion throw new <UNK>
Reference: set to final
Candidate: please use <UNK>
Reference: same. all these strings are not refactoring friendly. lets address this.
Candidate: please remove the formatting
Reference: imho we should remove this log message at all.
Candidate: please use <UNK>
Reference: maybe rename the readpreferencetype field from readpreference to defaultreadpreference since that's not necessarily the readpreference that's going to be used.
Candidate: we could use <UNK>
Reference: i guess you can use objects from java 7 here and on equals =)
Candidate: please use guava simplifies guava instead of <UNK>
Reference: i think adding back the sender.isme() check is the right thing to do.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: is it really so that seed member always chosen as a leader?
Candidate: this is not a bit nervous that we could have a <UNK> <UNK>
Reference: you can replace it with a direct call to providerdao.get(getcachedvm().getclusterid())
Candidate: i think this should be a trace, since we is not the the <UNK> trace, then we should have to to the the error.
Reference: not sure what information about the value will asserttrue give you in case it's not greater than 0. if you care about the value, there are assertions for numbers. and
Candidate: use <UNK> % int offset = <UNK> + y + <UNK> + <UNK> + <UNK> + <UNK> + <UNK> + <UNK> + <UNK> + <UNK> + <UNK> + <UNK> +
Reference: invalid_scope in place of invalid_request
Candidate: nit: you could use system.currenttimemillis() instead of <UNK>
Reference: please use the constants defined in commonjobproperties.java: <link_0>
Candidate: you could use a constant instead of <UNK>
Reference: looks like a command line app -- print to stdout (or stderr if it's a warning etc)
Candidate: i think this is not skipped
Reference: this is impossible, blocklength is an int.
Candidate: this is impossible, is not 8
Reference: this one is probably redundant now as we already checked for constraints on line 158.
Candidate: same as above.
Reference: does the pagenumber start at 1 or 0? if it starts at one, this conditional could be wrong: pagenumber=1, totalcount=7,pagesize=5 would return false, but there is still a next page.
Candidate: this is be simplified to a boolean args?
Reference: ++ ?
Candidate: we could use uri.create
Reference: update this method to return optional<connectortablemetadata>
Candidate: redundant method("post")
Reference: use brackets for single statements (i know we are very inconsitent here but this should be the goal)
Candidate: you could move this to a messages.properties pull request.
Reference: this assumes/imposes the same sentence structure and order in all languages. instead we should have 2 templates for the 2 cases, so that each one can be translated appropriately.
Candidate: please use <UNK>
Reference: this creates an anonymous class that extends hashmap, and is considered a bad practice. i'd go for a much simpler approach: map<string, string> migrationmap = new hashmap<>(); migrationmap.put("undefined", "true"); migrationmap.put("x86",
Candidate: you could use a constant instead of <UNK>
Reference: nit: logger message should say 'bind' instead of 'bond'
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: just a quick first browse-through: shouldn't notifylistenersaboutremovedelement(...) also be called with existingelement?
Candidate: should we log statement?
Reference: you definitely need a null check on mounted before calling mounted.gettype(). i'd suggest moving the logic from the if statement on line 280 into the if statement on line 276,
Candidate: if this is is not null && <UNK> != null && <UNK> && <UNK>
Reference: should the list of required attributes be validated against the list of editable attributes?
Candidate: wait.forelementclickable() should be <UNK>
Reference: use: return optional.fromnullable(request.getentity()).transform(functions.tostringfunction()).or("").getbytes(charset.forname("utf-8"));
Candidate: is there a reason to use getters here?
Reference: exceptions other than lockexception need to be re-thrown. otherwise jobs executing the operation are treated as executed successfully. other question: can a job executing an operation be treated as successful
Candidate: :disappointed:
Reference: @thilia can you fix this exception as well?
Candidate: we could use <UNK>
Reference: it looks like the code tries to grab the lock for this event id both here and then, after acquiring it, in the createbooking(...) method which should result in deadlock.
Candidate: nit: <UNK>
Reference: this init shouldn't happen directly here (see the dependency that's created via the import with the elementsdkmanager). instead of that, i would rely on the elementcontroller for that purpose. the
Candidate: i think this should be to be a in the constructor?
Reference: would be better to use math.tointexact().
Candidate: let's use <UNK>
Reference: this is not necessarily only ibm jdk, please improve the message.
Candidate: is there is a be a exception?
Reference: ![major](<link_0> constructor has 8 parameters, which is greater than 7 authorized. [![rule](<link_2>](<link_1>
Candidate: why not -1l
Reference: never use \n in printed output, because it is not portable across operating systems. use %n instead.
Candidate: wait.forelementclickable() should be <UNK>
Reference: don't compare the hash twice, remember the return value and use it within if block. you can do something like this: java int pos; ... else if ((pos = determinismhash.comparehashes(m_responsehashes,
Candidate: i think that this is okay, but i think.
Reference: what will change about the animation?
Candidate: you could replace this with <UNK> with <UNK>
Reference: logger.debug ?
Candidate: is there a reason that is is a to be a <UNK> <UNK>
Reference: why not to include the incorrect pattern?
Candidate: why not use <UNK>
Reference: move this into sendnewgoalconflictmessage.
Candidate: use <UNK> instead of storagetype <UNK>
Reference: should we also check task.isactive here?
Candidate: i think that this is not efficient, we could use isempty() instead of <UNK>
Reference: maybe rename into suggestion externalresourceinfoprovider.no_external_resources,
Candidate: ![major](<link_0> 'severity: major') remove this unused method.
Reference: is this a sufficient test to say its empty? what if a project has commits in one or more branches that were pushed directly into the project and bypassed code
Candidate: you could use <UNK>
Reference: you may want to verify in a scratch area that the dataexception will still be thrown. i do recall that an exception on the finally block will override the one
Candidate: i think we should be a here instead of <UNK>
Reference: perhaps pulling the instructiontype int into a variable in the line above would be better for readability. just an optional suggestion!
Candidate: this is not <UNK>
Reference: do we have a good test to confirm that the chunks in the returned filespan are still sorted after trimming? (applies to removecontentsbefore() as well)
Candidate: use checkargument instead of <UNK>
Reference: maybe if we pass the repository to the noncegenerator, it can pull out the directory? dfs implementations could then supply a different noncegenerator that can pull out getrepositoryname.
Candidate: is this optional?
Reference: this is not going to work. openfile directly delegates to the underlying file system. the input stream does not use cache at all
Candidate: this filecontext is be passed to <UNK>
Reference: wrong formula
Candidate: i think this assemble <UNK>
Reference: is this not now simply standaloneprojects?
Candidate: please use <UNK>
Reference: this should never happen, should it? readpermission should now be evaluated instead?
Candidate: i explained explained explained explained narrowing to narrowing <UNK> that is not explained to <UNK>
Reference: suggestion assertfalse("should not resolve model one dialog", resourceexists("/apps/test/model1/cq:dialog"));
Candidate: please add a message
Reference: missing space after if
Candidate: use <UNK>
Reference: redundant else block.
Candidate: i nesting.
Reference: for checknonnull, objects.requirenonnull is preferred. and the labels should be externalized
Candidate: @gunnarmorling you could use only: <UNK> <UNK> <UNK>
Reference: it should be 10001 instead of 10000 here and below since [the upper bound is exclusive](<link_0>,int)).
Candidate: minor: this is going to be reused.
Reference: do we want to log more information about what the error that occurred here was?
Candidate: this is designed is designed to be initialized by default.
Reference: sdkconstants.attr_translatable, sdkconstants.value_false
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this shouldn't be public.
Candidate: remove the
Reference: this will cause a npe. consider returning an empty list.
Candidate: use utf-8 instead of <UNK>
Reference: this is redundant here
Candidate: should we add a log message to info.
Reference: magic number
Candidate: i am not sure how about moving this dependency to a plugin dependency to dependency that dependency dependency dependency dependency dependency that dependency dependency dependency dependency dependency dependency dependency dependency
Reference: redundant unsupportedencodingexception
Candidate: you could use a constant instead of printing the
Reference: a bit of a nitpick but we're creating a hashmap with preinitialized capacity of (at least) 16 to put at most 1 element there.
Candidate: please add a <UNK>
Reference: above two if statements are really confusing. are you trying to check if these two checking booleans are not the same? why not use a single if statement like below.
Candidate: if you understood correctly, this is not efficient, but i understood that this is is a efficient, bottleneck. is a bottleneck. bottleneck. is a bottleneck.
Reference: would it be better to use a mock for this? at the very least, we'd have to write less code.
Candidate: is there a reason for this change?
Reference: nit: not sure how often are these called (if ever) , it might be better to use string.format(..) or equivalent. maybe needed in some other places.
Candidate: is returntype non-null?
Reference: should this really be the case? this seems kind of sketchy - no matter what currency i try to use, ess will have it but not really because all currencies
Candidate: this is not return <UNK>
Reference: i suspect the first submission will hold the thread and rest will never have a chance to run.
Candidate: you could use a builder instead of creating a bean object as well.
Reference: this exception message is misleading. the value is not invalid... it is simply null. the message should state "filter value cannot be null" you may also wish to print the
Candidate: i pagelogging
Reference: intentional?
Candidate: suggestion <UNK> = new <UNK>
Reference: sounds reasonable to me. we're not really interested in testing the functionality of environmentvariablepasswordprovider here, that should be done in environmentvariablepasswordprovidertest (but it doesn't look like it actually tested it..)
Candidate: could we use the <UNK>
Reference: because refcontrol sorts the refrights before use, there isn't a need for list<refright>. so why make the api change from list to collection on these?
Candidate: style-nit: you could use a local variable?
Reference: directreplytocontainer might be null. although i agree that this.channel is fully depends of the asyncrabbittemplate.this.directreplytocontainer, but let's modify it to avoid such a noise: ![potential_npe](<link_0> by the way it would
Candidate: i'm not sure how about sure about tied to the <UNK> expiration key, but i don't think that we have a <UNK> <UNK>
Reference: unsure about this one, encoding measures makes for invalid or problematic gml in output, i'd do it only if explicitly requested.
Candidate: this is designed to be a <UNK>
Reference: name this variable sharedpreferenceseditor for better readability
Candidate: i think this should be <UNK>
Reference: this looks... unnecessary? why don't you just call execute on the work plan? the main advantage is that you would get rid of this weird synchronization map.
Candidate: i think this should be a debug message
Reference: allow overload with openengsbmodel
Candidate: this is a <UNK>
Reference: why not create a hash set directly?
Candidate: i think that the fragment is be called from the view?
Reference: make an unmodifiable copy here?
Candidate: wait.forelementclickable() be inlined
Reference: we should not have to set the servlet path for this test to pass.
Candidate: is there a reason why not use <UNK> here?
Reference: add a fixme here?
Candidate: i pagelogging
Reference: this should use a random database based on the temporarymongorule.
Candidate: we should use constants for these.
Reference: without a retry count here, are we avoiding infinite loops for when we keep getting 401s (e.g. password changed).
Candidate: i think that this is not efficient, we could use the <UNK>
Reference: can we not have any code that specializes to interactive? ideally, we'd just instantiate the interactivemaster class via reflection which takes care of setting everything else up...this way we don't
Candidate: is there a reason for initialization?
Reference: please save a string (eg name) instead. it is too easy to unknowingly change the order of the enum items.
Candidate: is there a reason for this logic?
Reference: should we not also send out an even that triggers an alarm when this happen?
Candidate: can you explain why is this
Reference: can't we use just getmydomainname()?
Candidate: move this log to log the constructor?
Reference: this could be in the model class
Candidate: you should throw an exception exception instead of returning null.
Reference: use log.e to match the isloggable tag. since it's not technically an error log.debug and log.d would also probably be ok, i don't have a strong opinion.
Candidate: if this is is not a invalid?
Reference: really?
Candidate: i would be clearer to <UNK> <UNK>
Reference: split this up into well-named helper methods
Candidate: you could use objects.equals()
Reference: i think here we can call setemitevaluators() instead.
Candidate: should we add a message for <UNK>
Reference: we could regroup elements whose parent is not a tool section (a group or group extension). you should make two methods/services : . one too filter the selection: only abstracttooldescription
Candidate: i think this should be defined in messages.properties
Reference: i think you missed this log statement when converting to parameterized logging.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i suppose this will be configurable later ?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: add empty line below
Candidate: you could use a constant instead of <UNK>
Reference: this transparent stuff is mainly for handling drawing of states that end up on the same pixel. i think we can treat all < 0 as non-drawable arrows.
Candidate: could be simplified to do: <UNK> <UNK> = new <UNK> { <UNK> = new <UNK> }
Reference: i think it better throws exception when else, due to it need such properties in request.
Candidate: is there a reason for this method to be called in the <UNK>
Reference: should be n/a. also - shouldn't this be localized?
Candidate: you should use a checkargument here instead of <UNK>
Reference: what is the reason of this empty synchronized block?
Candidate: no, we don't want to log it?
Reference: initialize with roles.length
Candidate: <UNK> is be aforementioned
Reference: i would like to preserve cases. it reduces the possibility of name clashes. in any case i think you should use the package sanitizer utils here too to be sure
Candidate: you could use a constant here instead of <UNK>
Reference: we could also just change the querylogger interface to accept query params as a separate paramter so we don't have to reconstruct the path.
Candidate: unused branch
Reference: if groupid is not specified, this is usually simply the same as id by prior convention. it is possible that a constructor need be added to abstractfixedintervaltask to account for
Candidate: i doubt that this is not a uri.
Reference: obtaining the reference sequence needs a dedicated method.
Candidate: nit: you finals
Reference: behavior here is a bit different from the docs, which say the value is rounded up. since this allows a lane limit of zero or the total limit, it is
Candidate: this is a bit more efficient, that we could use the <UNK> <UNK> <UNK>
Reference: @thobe if cluster told you about these fellows, why are you so keen to forget them? if they are not doing their job, send them to the back of the
Candidate: you could call <UNK>
Reference: perhaps perform the revert through removeimagecommand in reverttask() - that way the image would be removed completely in that case (also from the db) i and we will benefit from
Candidate: this is not a bit strange, we could use only: <UNK> <UNK> <UNK>
Reference: could you change this to use managedinstance instead?
Candidate: is there a reason for this method to be a <UNK> paths?
Reference: i think this migration can't work with empty/context/globalmap/... kinds of value. maybe you can add "-1" after the parameter value. like: if customer fill context.lilimit, it can be migrate to
Candidate: please use <UNK>
Reference: preconditions check that executor services must not be the same
Candidate: i think this should be <UNK>
Reference: space.
Candidate: please revert this repelaced by a userreportingsettingshelper call.
Reference: as far as i can tell, this code is run from connectivityservice#systemready(), which is a blocking call from systemserver as part of system startup. that suggests that any time spent
Candidate: use <UNK>
Reference: the error message should really include the segment identifier. imagine the poor user that gets this error and can't figure out which segment to look at. perhaps we can keep
Candidate: minor: this is designed to delegate to a new object somewhere,
Reference: this looks suspicious, since it returns an empty array both times.
Candidate: we should throw an exception instead of returning null.
Reference: [nit] file.isfile() instead of file.exists() && !file.isdirectory()
Candidate: use <UNK>
Reference: we missed one :) please make this one a variable as well.
Candidate: extract the of the responsemessage to it's variable (in (in (in (in (in (in (in (in (in (in (in (in (in (in (in (in (in (in (in (in (in (in
Reference: maybe use set<string> instead
Candidate: suggestion if <UNK> == 0) { .. }
Reference: if for some reason the setup() throws an exception and mtablecontext doesn't get initialized, then the parent class's cleanup() won't be invoked. i don't think mtablecontext != null should be
Candidate: @gunnarmorling you could use only: <UNK> <UNK>
Reference: is the line break between "logger" and ".info" necessary?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: is this thread safe?
Candidate: this is be guarded by <UNK>
Reference: no 'limit' parameter here. improvement should track the changes we are making to the generic api? add a method and leave this one for backwards compat?
Candidate: i am not sure that this is not cover this case.
Reference: if this is an error, we should throw something
Candidate: suggestion return <UNK> == null || <UNK>
Reference: the only option that we should provide is enable/disable soft commit for the indexer consumer. there is no reason to offer an hardcommit option for the consumer
Candidate: suggestion <UNK> <UNK>
Reference: this seems like a pretty severe issue. shouldn't this be logged at warn or even error?
Candidate: this is designed to be a classcastexception here
Reference: couldn't we have the timeout check implmented in the osgisurefirebooter (or a parent) instead? it would most likely allow easier reuse.
Candidate: is there a reason for avro to be a
Reference: please update and then i'll pull it in. i'd rather not pull in tests that'll fail.
Candidate: use <UNK>
Reference: why we need try ..catch block here?
Candidate: i doubt that this is not correct. i doubt that this is not correct. i doubt depending on your ide changes depending on your ide changes depending on the
Reference: do you want to fail the test in the event of an exception? the runtimemanager.deploydayasource(...) _could_ be called - and hence pass the assertion, but generate an error that would
Candidate: could we add union the union the process, text.
Reference: redundant lines
Candidate: no need to bind <UNK>
Reference: since this class uses exactly one renderable you might as well create it in the constructor and don't use the pool (or extend it, although i'm not sure that fits
Candidate: is there a reason for this method is not <UNK>
Reference: prefer a new overload on money which takes a money object to avoid the doublevalue call.
Candidate: use static import
Reference: why do we need this to be customizable?
Candidate: this should be <UNK>
Reference: this function can be simplified to: java private list<artifact> calculateartifacts(iterable<gradledeploydetails> deploydetails) { return newarraylist(streamsupport.stream(deploydetails.spliterator(), false).map(from -> { publishartifactinfo publishartifact = from.getpublishartifact(); deploydetails deploydetails1 = from.getdeploydetails(); string artifactpath = deploydetails1.getartifactpath(); int
Candidate: no, this is not blank, return <UNK>
Reference: this will need to be revisited to throw proper exceptions.
Candidate: no need to use revisited to proper
Reference: i don't think the cast to (boolean) is needed
Candidate: should we use <UNK> enum instead of ==.
Reference: if res is true at this point, can't we return without checking anything else? or, perhaps the remaining if blocks should first check for !res? (imo, the former is a
Candidate: you can use computeifabsent clear()
Reference: be aware of conflict with #12710 depending on who lands first. cc: @hellium01
Candidate: please consider adding a <UNK>
Reference: please limit the visibility of the constructor
Candidate: this is a <UNK>
Reference: sorry, i didn't notice that before: will this change break already configured layer in geoserver? i'm wondering if the new code running against a .idx being configured by previous code
Candidate: @vilchik-elena you could be simplified to <UNK>
Reference: initialize in field declaration
Candidate: you could factor this into a private static method.
Reference: would a forbiddenexception work here or is just a webapplicationexception thrown?
Candidate: totally useless parens hardcoded log. imo, parens condition. imo, condition. imo, condition. imo, condition. imo, condition. imo, condition. imo, condition. imo, condition. imo, condition. imo, condition. imo, condition. imo, condition.
Reference: now, i think we need a class with constants shared across the package. please consider. we have too many magic constants that are obvious, but still are "magic constants". can
Candidate: please ides ides ides ides ides ides ides ides ides ides is to return true as well.
Reference: this is nice-if you want to micro optimize even more i'm guessing checking the game mode is cheaper than checking the permission :wink:
Candidate: is there a reason for paths?
Reference: system.out vs logger?
Candidate: minor nit but we could be simplified to <UNK>
Reference: i'm not a parcel expert but i think we want to write this out unconditionally. if we don't, i think the constructor will byte offsets will be wrong for the
Candidate: wait.forelementclickable() could be <UNK>
Reference: probably a good idea to ignore nonodeexception here since there is a chance that between the exists() call and the getchildren() call above, the node could disappear (if so, ignore
Candidate: ![critical](<link_1> 'severity: major') either log or rethrow this exception. [![rule](<link_2>](<link_0> or rethrow the exception. [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0>
Reference: i assume you only loaded level3 for testing, right? please change it back to be able to load all 3 levels. <bug
Candidate: if (args.length == null) { return; }
Reference: shouldn't this call the other form with payload as the first argument?
Candidate: we could use <UNK>
Reference: consider extracting the filter logic to an helper method (it's the same as in getclusterswithpermittedaction)
Candidate: you could use a multimap here instead of creating a new arguments.
Reference: do an equals() instead of ==
Candidate: no need to check here
Reference: please put each parameter in separate line :)
Candidate: <UNK> is empty?
Reference: nit: earlier you used == for enum comparison, is there a standard for phoenix?
Candidate: this is is designed to be the <UNK>
Reference: this does not look correct in terms of isolation of objects. why is this call needed ?
Candidate: you could use <UNK>
Reference: will this consistently pass? the sort order of the questions will not be deterministic now right?
Candidate: how about using <UNK>
Reference: you use the gameovertext in both branches of your if-statement. also, i think it would be better to just use one variable for this, which you give one of the
Candidate: please use <UNK>
Reference: i would change the message to something generic like  error while trying to get lookup list from coordinator for tier[%s]  exception would already contain specific details. and remove
Candidate: is there is an exception ?
Reference: use the constant
Candidate: this is designed to move this lock to the beginning of run() block
Reference: you should probably put this check above that big ass switch statement, because: - in the case that notification **isn't** one-time and/or already triggered, you need to do the check
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: i strongly disagree with removing the check for vm is null, can you be sure that there is no case that vm is deleted before getting here? this code is
Candidate: i think that this is not correct.
Reference: 1. please remove the "lun" from the methods name, as this resides in diskvalidator, if you want you can perform the check when the disk.getdiskstoragetype() is lun, otherwise return valid
Candidate: please add a feature to (my <UNK>
Reference: @ayush2297 are these changes part of the ticket or formatting changes ?
Candidate: you could use <UNK>
Reference: what if there is a deadlock? how about timed join?
Candidate: if you could bail nextvalueindex if (throwable == null) { return; }
Reference: not sure about purpose of the if here. you are just getting out what you just stored in the last line. also, you could store the show_source_not_found_editor_all_time all the time.
Candidate: i think this is not <UNK>
Reference: // something like this... if (op.getvalue(tvpkey3, tvpvalue3)) { // found key }
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: string.format() can make this more readable.
Candidate: use <UNK> instead of <UNK>
Reference: just return optional<string> that way the implementation can decide what to do if the value is not present.
Candidate: please use <UNK>
Reference: i'd add first assertnotnull(entry); which is a proper assumption prior to validating the entry data.
Candidate: wait.forelementclickable() should be <UNK>
Reference: suggestion return false;  let's not do unnecessary pulls
Candidate: please use <UNK>
Reference: 1. replace expires to expiry 2. we could have more meaningful message like "expiry must be minimum 1 second to maximum " + timeunit.seconds.todays(default_expiry_time) + " days"
Candidate: use <UNK>
Reference: why this is need? what is the difference with (!flushcount.compareandset(flushcountbeforeread, 0)) interrupt() below?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: should this be just a regular counter?
Candidate: this is a bit strange to log level to reduce nesting.
Reference: you don't need to fill the body of that method, you just need it to use it as lambda.
Candidate: is this a bit strange to log a bit prone to a <UNK>
Reference: nocloneclones sounds a little weird. just name it inputnoclone.
Candidate: is there a reason for none of these tests here?
Reference: please add dot at the end of this message, as well as at other similar messages that lack dots at the end
Candidate: why not use <UNK>
Reference: please use a method like createanchorfile and createyearfile
Candidate: please use <UNK>
Reference: i'm new to elide, but would i be right in thinking that it only supports one dialect.. so for users that want to use the legacy dialect, then the rsql
Candidate: can be replaced with <UNK>
Reference: unnecessary parens around return value.
Candidate: nope, this is not ides
Reference: an assign expressions requires a variable to store the value. so the first children will be an ident for sure.
Candidate: this could be simplified to <UNK>
Reference: should be named ignored to satisfy the "log or throw but not both nor neither, or express decision to omit handling" rule
Candidate: log.debug
Reference: you can change this condition to student.isregistered().
Candidate: what about the user.
Reference: is there a reason you cannot use collections.emptylist()?
Candidate: use collectionutils
Reference: shouldn't this be finalize() instead?
Candidate: is there a reason for this logic?
Reference: is it really only the route /api/*? could it be as well /foo/*?
Candidate: i guess we could be careful to <UNK>
Reference: remove this. should be caught by table.remove()
Candidate: we could use <UNK> to <UNK>
Reference: maybe we can combine two if clause together?
Candidate: could we use the enum instead of ==.
Reference: you should use eq(state.leader) instead of the direct value
Candidate: this pagelogging
Reference: here we should just throw the exception.
Candidate: if we is a <UNK> to the middle of the middle of the middle of the middle of the middle of the middle of the middle of the middle of
Reference: should be reversed: ranger_user_sync_role_type.equals(apirole.gettype())
Candidate: you could use a constant here instead of creating a new object
Reference: in general, we statically import math.min.
Candidate: you could use isempty() instead of objects.isnull
Reference: here i'd assume we'd either call super.tostring() or throw illegalstateexception since it cannot happen.
Candidate: if you could use guava objects.tostringhelper()
Reference: shouldn't maxblockid = min_block_id + num_total_blocks -1?
Candidate: nit: you could use <UNK>
Reference: undo
Candidate: you could use <UNK> division instead of shard = <UNK> 1);
Reference: did you take a look at this? <link_0>
Candidate: this is not to be 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30
Reference: does archivename here include the path?
Candidate: minor: this is not a <UNK>
Reference: here we use it as the same key as we use to create the freviewlist
Candidate: is there any reason why we calling <UNK> annotation?
Reference: you should be validating here ^ that either id or name is provided
Candidate: i vds is attached to the <UNK>
Reference: returning from the method early if a condition is not met makes reading your code a lot easier. java if (modifierstoken == null) { return; } if (!modifierstoken.branchcontains(tokentypes.literal_public) && !modifierstoken.branchcontains(tokentypes.literal_protected))
Candidate: please use constants for these.
Reference: mike pointed out to me that this is the wrong thing.
Candidate: you can use camelcase
Reference: !this.closestreamaftersend || this.issingleuse ?
Candidate: this should be <UNK>
Reference: this seems a strange way to check if the state is read-only mode. i wouldn't have guess it from looking at the variable name.
Candidate: fully-qualified wording. i think.
Reference: suggestion throw new unsupportedoperationexception("removenotificationlistener not supported by jolokia");
Candidate: should we use <UNK>
Reference: @ivange94 i dont think we should catch that. you need to make sure that this mrrtreporttemplate = mrrtreporttemplateservice.getmrrtreporttemplatebyuuid(templateid); so add this before the try block  java mrrtreporttemplate = mrrtreporttemplateservice.getmrrtreporttemplatebyuuid(templateid);
Candidate: @ivange94
Reference: also please reverse this one
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: typo
Candidate: you could use <UNK>
Reference: i would prefer to make the prepare exception the cause and the rollback exception suppressed. i'd also rename innert to rollbackthrowable and t to preparethrowable.
Candidate: please add a space after the
Reference: please use { ... } - this increases code readability.
Candidate: this is not to be <UNK>
Reference: that method became quite long. the two cases it handles are good candidates for extracting two methods.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: what guarantees (here and in the other equivalent method for straight line) that the current stroke is the right color and thickness?
Candidate: this is not needed.
Reference: you can create method integerrange(int min, int max) that create the range and doesn't pollute the test with unnecessary code.
Candidate: is there a reason to assert that this is is empty?
Reference: i think catching the exception here and enriching it is too specific. that way we will leave all other places where this can occur out. i believe that a better
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: latch
Candidate: is there a reason to re-throw the logic?
Reference: a batch can be large and any command tostring is long due to having 2 sha-1s and a ref name. it might make more sense to format with lfs: r.append(getclass().getsimplename()).append('[');
Candidate: is returntype be non-null?
Reference: so the test will pass in case of ioexception. is this desirable?
Candidate: should we add a check for the
Reference: why this method is not static? just like convert()?
Candidate: you could use <UNK>
Reference: typo: nto -> not minor: can you re-format the line in intellij?
Candidate: @nullable.
Reference: getnameconstantoperand().equals("getpackagename().equalsignorecase") this will not work. when looking at the operation invokevirtual, there can only be one method being called at the time. getnameconstantoperand().equals("equalsignorecase")
Candidate: you could use the <UNK> <UNK>
Reference: use mathutil.clamp
Candidate: use datanodeid
Reference: why it's appended to the beginning?
Candidate: suggestion if (throwable == null) { return <UNK> }
Reference: i feel like it might make more sense to use a instanceof check here rather than caching the classcastexception. this means we don't get warnings if we're using the fragment
Candidate: you could use <UNK> instead of creating a new <UNK>
Reference: this implementation forces single events to be submitted. i believe other sdks allow _multiple_ events to be submitted using their submit methods. i would check to make sure the semantics
Candidate: i think that this will be be propagated here chars chars chars chars chars chars chars chars chars chars chars chars chars chars chars chars chars chars chars chars chars
Reference: null doesn't seem to be proper value for maximised window, can you return calculated real dimensions? or at least information that it is maximised window?
Candidate: i think this should be <UNK>
Reference: thanks @phillips1021!ccould the change also be pushed to github?
Candidate: you could use a constant instead of <UNK>
Reference: 1. it will, you'll know which line was broken, 2. you can add a message to asserttrue()
Candidate: is there any reason to be public? properties? properties?
Reference: i think the changes in this file are not needed. probably come from merge?
Candidate: could we use <UNK>
Reference: i think this needs to be a protected localization call with an english fallback. localization might be broken if the app install is broken.
Candidate: i think this is not <UNK>
Reference: you should be calling 'addlinks(populate(' on the entity you're adding, otherwise it won't have any links and won't call dopopulate() when all-content header on the request path.
Candidate: please use <UNK>
Reference: probably not part of this patch, but imho, we should be pessimistic and use math.ceil and not math.round
Candidate: this is be repelaced by <UNK>
Reference: as far as i remember, returning a map was causing errors for swagger api client generator.
Candidate: is there a possibility that this is not a <UNK> to be reduced down to (string return <UNK>
Reference: do all versions of ps support these options? just wondering since this monitor will only work on linux.
Candidate: you could use a logger instead of printing stack trace
Reference: ugly unconditional type casting, i think it would be significantly better if we could check instance type here and throw warning/error/exception if that does not suit our logic instead of
Candidate: i doubt that this is not correct.
Reference: yes please add a new error code, like permission_not_granted_manifest_error and maybe differentiate the error text between the audio and video case.
Candidate: should be be datacenter
Reference: could be final as well
Candidate: this is designed to check that this is is succeeded to the <UNK>
Reference: mentioned earlier, it should be some sort of conc. map
Candidate: i think this is better?
Reference: styling : this can maybe be expressed nicely using streams classsymbol.membersymbols().stream().filter(...).map( ms-> ms.declaration()).filter(..).foreach( //build cfg lva etc);
Candidate: this is be simplified to <UNK>
Reference: can we just initialize these to the config objects default values in the baseclass and avoid these protections?
Candidate: use <UNK>
Reference: if that's the right fix then the method name is very wrong.
Candidate: this should be a <UNK>
Reference: use logger instead for sysout for logging.
Candidate: is there a reason for this logic?
Reference: this pattern of code from lines 25:34 appears in several places. i'm going to open an issue to factor this out as a separate method. (that doesn't need to be
Candidate: this should be e1
Reference: use the root controlmapper instead
Candidate: this is designed to be a <UNK> that the is not the to the the <UNK>
Reference: lets populate the swagger def from here . this would prevent unnecessary calls
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: too smart :)
Candidate: please use <UNK>
Reference: else not needed here.
Candidate: you should use <UNK>
Reference: 100 chars
Candidate: you could use a constant instead of <UNK>
Reference: you should not need to go through getsemanticmodel but you can use directly the getsymbol from methodinvocationtreeimpl (and even the upcoming symbol() method from the interface).
Candidate: please add braces.
Reference: tests should have realistic values: payment amount = -notional \* quantity \* 0.99 or something similar.
Candidate: please use <UNK>
Reference: feel free to change any of these to lambdas too. much of this is pre-java8 code which is why there are callables/runnables all over
Candidate: you can use computeifabsent clear()
Reference: the two lines are too long... line breaks can be appropriate.
Candidate: please use <UNK>
Reference: it should return canopenstate, not enum
Candidate: i am not sure familiar about the <UNK>
Reference: (minor) could import static org.junit.assert.* to remove clutter and minimize diff
Candidate: you could use <UNK>
Reference: we do not need to create string resources (that will be automatically translated) to log something, you can include the string itself here.
Candidate: you could use <UNK> here instead of equals?
Reference: i think it's better:  goassignmentstatement assignment = psitreeutil.getnonstrictparentoftype(element, goassignmentstatement.class); return assignment != null && assignment.isvalid() && isassignmentequalssized(assignment) ? assignment : null;  please, use lambdas if it give some
Candidate: if you == null || <UNK> == null) { return <UNK> }
Reference: should this constructor be protected?
Candidate: <UNK>
Reference: in hind sight we should use a constant here to avoid allocation on each call.
Candidate: typo: <UNK>
Reference: in order to authenticate requests to amazon when locking down the security on our domain, we will need to be able to add on an authentication header which is a
Candidate: }?
Reference: can we keep the original constructor spliceschemawatcher(string schemaname and let it call spliceschemawatcher(null, schemaname)? maybe we can avoid touching so many its.
Candidate: this args?
Reference: perhaps we should guard against getting back null, so can throw exception with the missing name rather than just an npe.
Candidate: suggestion <UNK> <UNK>
Reference: change to interface list
Candidate: use <UNK> instead of <UNK>
Reference: why do you cast to hostproviderproxy?
Candidate: could you use draw <UNK>
Reference: minor - you could use foreach to iterate over the map. this makes it much easier, especially in this case where you can even use a method reference instead of
Candidate: this (args.length == null) { return; }
Reference: can we reference this 500 constant somewhere?
Candidate: you could use assert that <UNK> is empty?
Reference: nit: truncate should be faster than delete <link_0>
Candidate: you could print stack trace to
Reference: could we please split this into two lines to avoid so long lines in code? java final double columnxcoordinate = rendererhelper.getcolumnoffset(this) + this.getwidth() / 2; final basegridrendererhelper.columninformation ci = rendererhelper.getcolumninformation(columnxcoordinate);
Candidate: should be be <UNK>
Reference: you can eliminate these ifs by using string.valueof() below. using string.valueof() where tostring() is used is a nice approach in general, in that it works on objects and scalars alike.
Candidate: how about caching about caching of <UNK>
Reference: ... should **decrease**
Candidate: how about this is used?
Reference: please considert moving this to line 421, and change this to positive condition
Candidate: this is designed to be a <UNK>
Reference: regular return is missing
Candidate: is there a reason why types? necessary?
Reference: rename to now.datetime.sessions?
Candidate: you could move this to <UNK>
Reference: debug system out should be removed.
Candidate: you could use use <UNK> instead.
Reference: remove type casts
Candidate: you could use the exception here instead of <UNK>
Reference: there should be brackets on the preceding while in order to make clear that the new code is intended to not be part of the loop.
Candidate: why not synchronize on drawing drawing invalid?
Reference: should we use "last index of" or really the first one? here i come up with a question: if i have multiple audio sinks, the one supports mp3 streams, the
Candidate: is there a reason for this method is not <UNK>
Reference: what if the nic is null ?
Candidate: this is dangerous, log.d
Reference: now that project related code has been checked in, can you check if project can be fetched dynamically?
Candidate: you could use a logger instead of system.out
Reference: so, you're silently ignoring the requested cachename here? that's not correct. jcache cachemanager seems to support multiple caches.
Candidate: you could use <UNK> multimap
Reference: 1. whatever this pattern is (see next item), should be a static, ideally; regexes are relatively expensive. 2. i feel this regex is more complicated than need be -- you're
Candidate: rename to
Reference: i know some tools suggest to remove the throws numberformatexception because it's a runtime exception, but this is wrong, it's part of the contract of the method so should be
Candidate: could you explain if you are going to evaluate this pr, but you could use a <UNK>
Reference: nullargumentfinder is redundant with the config property arguments.getuntypednullargument(). this config property exists because types.other is not supported by all database vendors. some vendors use types.null (even though null constant is
Candidate: let's use a guava instead of <UNK>
Reference: nit: restapimanager.java has these the in the opposite order. should we make these the same order for consistency? "video,discussion"
Candidate: you could use a constant instead of <UNK>
Reference: avoid contractions in error messages
Candidate: if we == null || <UNK> == null || <UNK> == null || <UNK> == null) { return <UNK> }
Reference: throw new unsupportedoperationexception("not supported");
Candidate: throw unsupportedoperationexception
Reference: why would an empty key be present?
Candidate: use <UNK>
Reference: if you passed the issam() method, then it means that the member is necessarily a methodtree. from my point of view, you then don't need to check if it is
Candidate: you can use a vds object here instead of creating a new object object object object
Reference: you can do collections.emptymap() instead of creating a new object, unless you're planning to add stuff to the map later. the tiniest of micro-optimizations. :)
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: a method could be introduced to encapsulate repartitioning condition e.g. shouldrepartition(...).
Candidate: i'm not sure that this could be a <UNK> <UNK>
Reference: in theory, this is not the jmscorrelationid. the jmsmessagereader generates a new correlationid if none is received via jms. so it is more the scout correlation id.
Candidate: is there a reason for this property?
Reference: i thought it nicer to catch it early instead of letting it fail later in some ordering or such. but we can throw a npe instead yeah.
Candidate: use <UNK>
Reference: the user is trying to access a partition that was not requested. i think we could raise illegalargumentexception directly to the user.
Candidate: we should use <UNK> to <UNK>
Reference: this particular bit of loading data can be moved to a separate method, perhaps.
Candidate: you could use try-with-resources try-with-resources
Reference: compare concepts and not conceptids
Candidate: you should use <UNK>
Reference: seems like this belongs elsewhere (like maybe in the compiler constructor).
Candidate: suggestion <UNK> = <UNK>
Reference: i'd rather use the same package name as the class to keep the resources in, i.e.: org/biojava/nbio/core/sequence/loader
Candidate: nitpicking: we have a constant for <UNK>
Reference: please use a constant for "_original_"
Candidate: please !(obj <UNK> needsconversion be !(obj <UNK> empty_value);
Reference: although currently only virtio is allowed, i think its better to set this from the disk rather than hardcoding it
Candidate: you could use <UNK>
Reference: this doesn't seem right either. consider a source that emits application/json - if the target module supports all, he should get the json, not some object that was decoded from
Candidate: this is not to be an indication that this will be an npe in the <UNK>
Reference: why was this swapped from .equals? that makes no sense for a string comparison. also a few other weird formatting changes in this file.
Candidate: i'm not sure how about the sure about this situation.
Reference: you're assuming here that at least one gist exists in the account. this assumption is rather fragile. how about creating a new gist in @before annotated method and remove it
Candidate: you could use <UNK> here instead of <UNK>
Reference: is this if() needed?
Candidate: i queues is not <UNK>
Reference: nit: i think it would be better to put this and the other methods you added below to after reduce, since merge() and reduce() are very related to each other,
Candidate: you could replace this with foreach with <UNK>
Reference: why not make a new abstracttask constructor that takes a task id and task group, and sets the availability group equal to the task id?
Candidate: this is designed to throw an unsupportedoperationexception
Reference: here, after success ',' is not followed by whitespace
Candidate: please remove this log.
Reference: since we create the vectors above from its components, we could just use those directly in the constructor
Candidate: please use a static import
Reference: another case or just returning the conditional
Candidate: please use <UNK>
Reference: i don't think this is a valid email address.
Candidate: i'm not 100% sure that this is not sure that this is is not <UNK>
Reference: instead of creating a new optional you could return the same one removed: instanceplan.
Candidate: if we are,
Reference: this stuff is all just lifted out of hellbender. i was just kind of assuming it's functioning as expected...
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: - this statement could be removed (treecontext is already initialised). - there are some mixed indentation chars.
Candidate: use <UNK> instead.
Reference: make row(...) a single line
Candidate: i'm not sure how about the sure about the sure that we is that this is is the we is a <UNK> the <UNK>
Reference: separator, same for next change
Candidate: you could use <UNK>
Reference: the joiner can be shared (private static final?).
Candidate: we talked about this
Reference: same suggestion as above about using the remove() function to instantiate the local updatehandler variable.
Candidate: this is a putifabsent args?
Reference: i'm all for useful logging
Candidate: nit: <UNK> = <UNK> <UNK> = <UNK> statefultasks, <UNK>
Reference: since this is removed, see if you can make the fields createdat and updatedat private instead.
Candidate: please use <UNK>
Reference: there is no lock here, you might check mlistener, but it might get set to null before you access onsuccess. seems like a race?
Candidate: ![major](<link_1> 'severity: major') either log or rethrow [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0> [![rule](<link_2>](<link_0>
Reference: what if object will be null ?
Candidate: i think that this evict be a to evict the
Reference: may be one line?
Candidate: you could replace this by: <UNK> <UNK> input.entryset().stream.collect(collectors.tomap(entry -> entry.getkey(), entry-> <UNK>
Reference: again, unnecessary double-retrieval.  scope = mgr.active(); if (scope == null) throw emptystackexception; span = scope.span(); scope.close(); return span;
Candidate: you could use a string instead of <UNK>
Reference: we probably need to check that we have authenticated safely. otherwise if we get a invalid sequence number and need to resync, then a success after, we would transition straight
Candidate: suggestion if (throwable == 0) { throw new <UNK> }
Reference: perhaps you should send events instead of booleans for these two buttons. this also makes your code simpler - you can just do igneous.joystick1.getbuttonsource(button) and it'll give you an eventinput
Candidate: is there a reason that is is not to be a
Reference: i don't think inputstream can be null here.
Candidate: this is eating this eating the eating the reconnect terminate for the terminate
Reference: isn't the iconxxx style in a resource file? if so you should reference that instead.
Candidate: could we use <UNK>
Reference: you could use org.kie.workbench.common.stunner.core.util.stringutils.nonempty(..) (but how was you to know!?!)
Candidate: you could use <UNK>
Reference: the real question is: how can we have a tab in the ui but no entry in nametochattabcontroller? that should not be possible, so here we're just concealing a bug.
Candidate: wait.forelementclickable() should be <UNK>
Reference: why is this public all of a sudden? i find no code calling this outside of the class, in the platform ui repo? maybe some previous version of the change
Candidate: log.debug
Reference: you don't need to set the initial value, .orelse("") will take care of that. also, i think you can simplify the logic by filtering lines that match either ae_experiment_display_name or
Candidate: you could use collectionutils
Reference: wouldn't assert.hastext() be more appropriate?
Candidate: i'm not sure how about eating the
Reference: why not using this http_prefix variable?
Candidate: suggestion if (logger.isdebugenabled()) { stringutils
Reference: what if the scan's filter is a filterlist that contains a pagedfilter?
Candidate: we could use <UNK> <UNK>
Reference: we want to avoid using platformui.getworkbench() at (almost) all costs. we should instead use the contextmodel, just in case we're making multiple modifications.
Candidate: this is designed to be a <UNK>
Reference: nit: tip: if i were you i would keep the order of the if conditions the same. that way it's easier to review code with less diff. what i mean
Candidate: this should deadlock to the life example that deadlock the deadlock the deadlock that deadlock the deadlock the deadlock that deadlock the deadlock the deadlock
Reference: this method should be called sendreport, since the current name implies that an error report is being sent which is not the case
Candidate: you could use <UNK> instead of <UNK>
Reference: wouldn't it make more sense to have this in the setters? sorry for being a pain. i think we are almost there.
Candidate: if you is right... right...
Reference: loggers should be sanitized.
Candidate: this exception run() be thrown.
Reference: ph > pagehelper?
Candidate: can we use <UNK>
Reference: this needs to return responsesobject (converted to map) or responses depending on null status of the two. see how this is achieved for responseschema and schema in response
Candidate: should we throw an exception instead of <UNK>
Reference: i don't think it's required.
Candidate: suggestion <UNK> = <UNK>
Reference: no need to do this every time, just make a field in the constructor.
Candidate: you could use a constant instead of <UNK>
Reference: in order to have consistent behaviour, if there is an empty result, we should return a 204 no content response instead of an empty 200 ok.
Candidate: we should use <UNK> <UNK>
Reference: use enum instead of boolean
Candidate: we could use a <UNK>
Reference: shouldn't the timeoutexception be eliminated by the previous commit? if instead this is a real timeout, i don't think we should change the exception - availability exceptions should be immediate,
Candidate: this is not <UNK>
Reference: we decided that seats are linked to tickets. how would this work if 1 user has multiple tickets?
Candidate: this is designed to be <UNK>
Reference: not sure this query is required. because task definition names are unique in dataflow. in this case we may want to throw a taskqueryparamexception (a new type of exception) stating
Candidate: should we add a enum for the sake of ==.
Reference: we usually static import these sorts of things
Candidate: you could use <UNK>
Reference: v1, not v1beta1?
Candidate: the problem with the v1?
Reference: not necessary.
Candidate: we could use <UNK>
Reference: is this related to this jira?
Candidate: you could use <UNK>
Reference: this won't work. the map#addall method on a properties object does not pull over defaults that were defined in the properties object being added.
Candidate: @manuelplazaspalacio this is not be called on <UNK>
Reference: can combine 2 lines above and use constructor which receives disk-id
Candidate: use "guid" instead of <UNK>
Reference: we should not catch exception into the resource, we should let the exception go up to be handling by the mappers class.
Candidate: is there a reason for this?
Reference: should we throw new unsupportedoperationexception(); here the same as in unsureresponse as it should never be called?
Candidate: is there a reason for avro to be null?
Reference: props are always != null
Candidate: this catches the dialog on the dialog (line <UNK>
Reference: missing null check
Candidate: <UNK>
Reference: we should use link reference provided by server-side
Candidate: can we move this into a variable?
Reference: create a variable for the third parameter to understand what's going on boolean addpublishpermsforrules = true;
Candidate: i'm surprised that this is not happy
Reference: usually errors are logged with the following pattern  logger.error("error while parsing diagnostics", e)  any reason we are doing something else?
Candidate: you should use <UNK>
Reference: i'd love to see some docs on the scope of the apprunner - currently, apprunner.run(app) allows for multiple applications to be run with the same instance of the runner (atleast
Candidate: is this a bit more than <UNK>
Reference: you can use the @in'ed entitymanager here. (and @in the prefabmanager)
Candidate: you could use <UNK>
Reference: we're getting long enough here that i'd be tempted by a small builder, particularly as it's pretty easy to switch revpos and seq by accident in java's world of unnamed
Candidate: suggestion <UNK> <UNK>
Reference: lets keep this simple, put here "/bin/chmod" or just "chmod" and don't try to check if the file exists. if it doesn't the execution will fail and you will get
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: will we use a different configmap than this one for storing the completed checkpoint pointers? i no, then onmodified could also been called because we added a new checkpoint pointer.
Candidate: this is designed to be called at the beginning of run() call.
Reference: oops, missed that one! good catch
Candidate: you could use a constant instead of <UNK>
Reference: checking module states for  + server.getname() so progress/job name uses same wording
Candidate: you could move this to <UNK>
Reference: ~~how about using stream style like before? get recentlyusedagents as a stream and then, concat these all three streams and limit by agentcount.~~ now i understand what you expected. it's
Candidate: rename to
Reference: log a message describing what is being cancelled.
Candidate: you could synchronize on the lock on every call.
Reference: can you collapse these conditional branches into a single boolean expression?
Candidate: if this is is designed to be a npe if we want to throw an exception instead of <UNK>
Reference: missing indentation in this method.
Candidate: could be reduced to <UNK>
Reference: that implies next can be called without preceding hasnext call, is that possible?
Candidate: i guess we could use a multimap here instead of creating a enum for every time?
Reference: shouldn't this be passing through the parameters 'timeout' and 'timeunit'?
Candidate: no need to assert that this is not
Reference: throwing unwrapped exceptions from another thread leads to weird stack traces. can we clone the exception here? it should still contain the original qosexception with the original thread's stack trace,
Candidate: why we use <UNK> instead:  try { try { try { try { try { try { try { try { try { try { try { try {
Reference: not used?
Candidate: you could use a constant here instead of <UNK>
Reference: can we refactor this, and the corresponding code block from the test cases, to a single static function that takes an inputstream and returns a string that is the formatted
Candidate: this is designed to be a <UNK>
Reference: collections.unmodifiablemap?
Candidate: i think this should be initialized in the constructor?
Reference: as we come to unit term, we do not need to parse type name from file, lets just use name of the file.
Candidate: if you could use a <UNK>
Reference: we should have a better description here "a webapiskill that can be used to call a custom web api function.". "custom skillset" as a concept doesn't really make sense.
Candidate: interesting, is there is a a error message that is not throw an exception instead of <UNK>
Reference: i think it would be simpler that we let the caller checking this dependency but not the record method. so just do if (statechange) {} if (datachange) {} if (sessionexpired)
Candidate: if you could use <UNK> <UNK>
Reference: waitforelementclickable()
Candidate: wait.forelementclickable() could be <UNK>
Reference: static import getdeserializerclassname
Candidate: please use <UNK>
Reference: before click wait for element clickable (ajax thing)
Candidate: wait.forelementclickable() could be <UNK>
Reference: this should be java.nio.charset.standardcharsets#us_ascii
Candidate: if you could use <UNK>
Reference: what are our options here to factorize this code?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: try to rewrite to addedenvironmentvariables = new hashset<>(); without this and space in constructor.
Candidate: if we is a <UNK> unconditionally, that is is a <UNK> that will be an npe.
Reference: static import
Candidate: you could use <UNK>
Reference: you can just call optimize
Candidate: is there a reason for this method is empty?
Reference: i did not follow this change
Candidate: is there a reason for this way?
Reference: nit: probably enough to just say cannot provide both refreshable and supplier of runtime config?
Candidate: use <UNK>
Reference: externalize error message
Candidate: @vilchik-elena minor: you could use <UNK>
Reference: @vilchik-elena the rspec (rightfully in my opinion) says: primary location on extra "(" and secondary location on extra ")". your location is the whole expression. this is too much, as
Candidate: this is not to be called in the <UNK>
Reference: flip the arguments here, since for junit (unlike testng) the first argument should be the expected value, and the second the actual one.
Candidate: you could use <UNK>
Reference: try to use integer.tohexstring with padding correction
Candidate: nit: you could use a constant instead of <UNK>
Reference: similar situation as topology_ras_constraints. i would give the same recommendation.
Candidate: i think that this is not efficient, but i would be a bit clearer, but i don't think we could use a <UNK>
Reference: here we catch the classcastexception to check whether the inpustream has implemented an bytebufferpositionedreadable interface ? i don't think it's a good way, because the catch{...} block need an full
Candidate: if (throwable non-trivial is non-trivial
Reference: reschedule another attempt? if the agent port is enabled, there is no valid use-case for the dead thread. it would also indicate that there is a pending problem if the
Candidate: this should be specified instead of non-null?
Reference: missing checkvalidposition(positioncount, position); below?
Candidate: nit: use foreach int <UNK> = <UNK>
Reference: it's better to instantiate knownparams here, since we know exact size
Candidate: is this hardcoded hardcoded hardcoded string rather than hardcoded hardcoded hardcoded hardcoded hardcoded hardcoded hardcoded hardcoded hardcoded hardcoded hardcoded hardcoded hardcoded hardcoded string hardcoded hardcoded hardcoded
Reference: isnotempty to be safer?
Candidate: you could use a constant instead of <UNK>
Reference: please remove either this call or the for call
Candidate: you can be replaced with diskimage::iswipeafterdelete
Reference: should this be joining(", ") ?
Candidate: use <UNK>
Reference: static import
Candidate: unused
Reference: why?
Candidate: suggestion: <UNK>
Reference: rename 'viewpart'
Candidate: @vilchik-elena could be simplified to "return true" if (throwable == null) { return false; }
Reference: nit: i'd personally prefer a private static inner class over an anonymous one.
Candidate: the order of lombok mapping?
Reference: [minor] space after exception
Candidate: is there a reason to assert here?
Reference: we should probably just use a try with resources here. at a minimum we'd need the close in a finally block. something like  public static boolean haslogmessage(string logfilename, string
Candidate: you could use <UNK>
Reference: let's rewrite these tests with java 8 love like in throwables_asserthasmessagenotcontaining_test. should_fail_if_actual_has_a_message_containing_some_of_the_given_strings: java import static org.assertj.core.util.assertionsutil.expectassertionerror; // given assertioninfo info = someinfo(); string content = "expected description part"; // when
Candidate: please use <UNK>
Reference: i think this should go above the addjsfapi call. if it's going to fail, fail promptly.
Candidate: interesting, is there a reason that is bigger?
Reference: ok. something for a follow-up commit: add preference where the user can switch off being shown that dialog.
Candidate: i think this should be minimized
Reference: can this be put into a function to avoid repeated code?
Candidate: maybe we should be a warning instead of "" or something like that.
Reference: typo in error :)
Candidate: you could use a here instead of <UNK>
Reference: this can be combined with the above if since both blocks return false.
Candidate: this should be <UNK>
Reference: why aren't you using the overload with 2 params that you added that does the null thing already?
Candidate: you could move this to <UNK> invalid?
Reference: to follow spring security conventions, please change raw password to match the variable name of rawpassword.
Candidate: is there a reason for avro properties? i am not sure that we want to throw an exception instead of <UNK>
Reference: i would include timeslice and job in the log statement to provide as much info as possible.
Candidate: we should use <UNK>
Reference: this else is not needed.
Candidate: is there a reason for this method to be a <UNK>
Reference: suggestion set<string> capabilitynames = capabilities.getcapabilitynames();
Candidate: i nesting.
Reference: the existing error message does not match this new exception.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: if we directly print a runtime exception, we're not giving the user any information about where the program went wrong (only what went wrong). by here, i think this should
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: maybe we could even simplify into one catch block, because irserrorexception is indirect child of runtimeexception: } catch (runtimeexception ex) { logfailuremessage("resourcemanager::refreshvdsruntimeinfo:", ex); log.debug("exception", ex); }
Candidate: log.debug
Reference: the synchronized can be removed.
Candidate: this could be replaced by "this".
Reference: probably the following java preconditions.checkstate(updatesenabled, "cannot make updates after calling mutate."); mutation.putdelete(tabletssection.bulkfilecolumnfamily.name, bulkref.meta());
Candidate: <UNK>
Reference: if final can stay, then it's preferable.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: spell out ret
Candidate: use <UNK>
Reference: _ prefix is not necessary.
Candidate: you could move this braces
Reference: if the user supplies a value x < integer.min_value || x > integer.max_value you're going to default; however it could lead the user to be confused as to why the
Candidate: you could use <UNK> here instead of <UNK>
Reference: wait file.separator should only be used if this is a file path, not if its an attribute tree path...
Candidate: you could use <UNK> instead of <UNK>
Reference: createurl accepts a lot of parameters. for a better readability please use local variables to name them, e.g.: createurl(spacename, docname, action, querystring, anchor, wikiname, context)
Candidate: you could use a constant instead of <UNK>
Reference: no need to change this.
Candidate: yes, this is not manually manually blindly solution, manually manually manually manually manually manually manually manually manually manually manually manually manually manually manually manually blindly solution, manually manually manually manually
Reference: not sure if this is still needed.
Candidate: wdyt about this <UNK>
Reference: it looks like the progress bar is hidden from the onfinally() callback of task, which is called _after_ onsuccess(), thus causing it to be potentially hidden immediately after it has
Candidate: this fragment seems to be unused pr.
Reference: missing a newline here
Candidate: nit: could use <UNK> instead of printing the
Reference: it looks strange to me that the ui / client know which should be the sequenceid of the new bitstream
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: line too long
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: why static?
Candidate: please use <UNK>
Reference: should that be guarded with an if(trace_enabeld) ?
Candidate: is there a reason that we are going to be a a <UNK> that the is not printed in the <UNK>
Reference: you already have a reference to router!
Candidate: you could use <UNK>
Reference: why do u need to handle set and reset seperatly. just loop over all all the configs, if the reset flag is set, then add it to reset list and
Candidate: is there a reason for this method is not
Reference: this code fills the nulldatum to values array of lazytuple when user does not insert any data on this index. however, vtuple class does not initialize the values array on
Candidate: this is a bit inefficient, but low technically the low is <UNK> but i guess we could be a <UNK> <UNK> timestamps = <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK>
Reference: little space missing here ;)
Candidate: rename to
Reference: remove
Candidate: this is not be called before <UNK>
Reference: this would break internal li. just to keep in mind.
Candidate: you could use <UNK>
Reference: do you need to set the study's project before saving?
Candidate: this should be <UNK>
Reference: check is not needed. why not simply assign it?
Candidate: is there any way to be used?
Reference: this is effectively final class, so just throw new unsupportedoperationexception()
Candidate: please add <?>
Reference: don't store selectedexperssion as a global variable. retrieve it inside the method.
Candidate: is there a reason for this logic?
Reference: missing assertion(s)?
Candidate: you can be replaced with <UNK>
Reference: why do you set property to the outer class field? please refer directly to isvoidcontext from inside the same object: java isvoidcontext = voidreturn;
Candidate: why not mock expectations
Reference: getclusterid()
Candidate: @chaviw you could use <UNK> annotation, instead of objects.isnull
Reference: yeah, we have an open todo to replace a number of guava things like propagate/optional in singularity. if we replace propagate usage @pschoenfelder can we do it throughout the whole
Candidate: you could use try-with-resources
Reference: this seems odd to me. shouldn't util.tojson throw an exception if it is unable to serialize to json?
Candidate: should we throw notfoundexception here instead of null?
Reference: bad variable declaration.
Candidate: you could use a constant here instead of <UNK>
Reference: same note as in receive.
Candidate: this should be a proxy whose proxy is evaluate the log.
Reference: this is a bit weird. why isn't this function in the inner class that uses it?
Candidate: minor: you could use <UNK>
Reference: mixed indentation chars. (there's an extra space after the equals.)
Candidate: typo
Reference: i do not think it is a right fix, because it would impact the xml loading from what i see
Candidate: finals
Reference: the user may have selected a project. it seems to me like this check should also consider that?
Candidate: if this block is be inlined
Reference: i don't think this block of code is really doing anything? it looks like it is re-creating the timeseriesquery with the same limit that it already has.
Candidate: i think formatting: <UNK> % <UNK> % <UNK> { ... }
Reference: so if i understand this correctly, verifyuser is only triggered to load the verifiers? if so, i'd prefer to extract this block as a method and name it dummylogin or
Candidate: is there a reason to check here?
Reference: this will still result in a critical from sonarqube. to resolve this, you can use: logger.error("your custom message", e);
Candidate: if we is a <UNK> to <UNK>
Reference: hmmm, we really shouldn't have to profilerate setcatalog calls out everywhere -- better to just to do a setcatalog on the connection once, after we check it out of the
Candidate: useless
Reference: we should probably log a warn or error here if this actually happens, or even just fail.
Candidate: we could use <UNK> instead of creating a new instance everytime instead of <UNK>
Reference: will this return a 500 if elastic search is not available? i believe that the strategy for tool refresh was that we would not kill the whole refresh if elastic
Candidate: this is designed to be processed in the <UNK>
Reference: fyi, 2 can be replaced by componentcontainer.components_in_empty_component_container
Candidate: please use <UNK>
Reference: it is not suggested putting multiple arguments in one line. split line for every argument
Candidate: you could use a <UNK> ![image](<link_0>
Reference: it should be separated asserts
Candidate: you could use tear down to
Reference: this should use a specific locale.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: getlisteners() is already synchronized, why do you need to synchronized(this) too?
Candidate: you could use <UNK>
Reference: fselectedthread is mutable and nullable, and this method is not synchronized, which means it could change after this check and still throw a npe. it should be extracted to local
Candidate: could you simplified (up to <UNK>
Reference: this print is less relevant, although will do no harm. change it to: checking whether user {0} or groups {1} have action group {3} on object type {4}.
Candidate: this should be <UNK>
Reference: why remove this?
Candidate: this is not be encapsulated in the
Reference: in my opinion we should handle exceptions from processing signals here, especially those that could be thrown from updating topic or subscription.
Candidate: you can use camelcase
Reference: hmmm, this might be problematic in the future. if you start a cache manager and will be clustered, it needs to be amended via testcachemanagerfactory so that it uses different
Candidate: is there a reason to mock here?
Reference: shouldn't we disable only if engine has scheduled snapshots on volume?
Candidate: i think that this is not suitable
Reference: is normal to have a / ?
Candidate: please use <UNK>
Reference: can use parselocaldateforsessionsform here
Candidate: log.debug
Reference: this used to work with jr refs that didn't point to files, we should probably have a fallback for what to do here when this doesn't point to a file
Candidate: we should use a warning here instead of <UNK>
Reference: this line can be moved up to the @before method too.
Candidate: could you use <UNK>
Reference: this will create 4 connections and not 3. you either init the index with 1 or use '<'
Candidate: ![major](<link_1> 'severity: major') reduce this number number number number number number number number number number number number number number number number number number number number number number number number number
Reference: won't this throw a parser exception if the json is malformed?
Candidate: you can use <UNK> instead, no?
Reference: linkedblockingqueues are synchronized, i don't understand the need of this notify call.
Candidate: i think this is not efficient, we could use the <UNK> <UNK>
Reference: that's not logic for this method. if we are here, we have to be already sure that it is our own group. the real problem is definitely in the forcereleasemessagegroupprocessor
Candidate: is there a reason to export this method to <UNK>
Reference: this is probably used a lot, so it'd be better to have a static constant empty array.
Candidate: i'm not sure that this is not efficient, we should have to to the <UNK>
Reference: i think introducing .class constant and using entry.getname().length() - class.length would be more obvious at first sight.
Candidate: you could use reflectiveoperationexception
Reference: here we're just testing the same things twice, right?
Candidate: please use readasstring(...) instead of <UNK>
Reference: import immutablelist.builder
Candidate: <UNK> -> <UNK>
Reference: any reason not to use tritium for these? i guess we'd need to extract an interface for the client.. though at this point i'm pretty surprised we haven't decided to
Candidate: this is not to be used?
Reference: why do we need to trim this? whatever is between < and > should be taken as-is as the email. do you have an example of a malformed commit where
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: abstract classes should have either abstract or final methods, nothing in between (preferably). mark this method final.
Candidate: wait.forelementclickable() should be <UNK>
Reference: should we combine that to checks into one using "and"? java if (configstr.startswith("{") && configstr.endswith("}")) { configstr = configstr.substring(1, configstr.length() - 1); }  i assume valid inputs are only
Candidate: if you could use a string instead of <UNK>
Reference: what happens when "m_committedbuffers.peek() == null"?
Candidate: is this a bit strange, that we could use the <UNK> <UNK>
Reference: double check that the group is still here
Candidate: we should still still still still still still still still still still still still still still still still still still still still still still still still still still still be
Reference: let's do split and trim, without regular expressions (first regular expressions are often error prone, second they might introduce security problems)
Candidate: <UNK>
Reference: could we factor out the reflection? so we deal only with the value in here.
Candidate: use utf-8 instead of <UNK>
Reference: i don't like we do this explicitly... it should be property of the data container at each relevant change or once when session is created or user is assigned.
Candidate: this is a bit more descriptive
Reference: not backwards compatible.
Candidate: should we throw unsupportedoperationexception instead of <UNK>
Reference: we should log a warn if we are disabling a task
Candidate: this should be a charge that is not aligned by <UNK>
Reference: ![major](<link_0> 'severity: major') extract this nested try block into a separate method. [![rule](<link_1>](<link_2>
Candidate: log.debug
Reference: i would save this expensive computation ie elapsedtime / 1000 to perform it just once and i would handle the case of stats == null with a log or something
Candidate: this hides the rhs
Reference: can we make resourcename for all the states be same e.g. "config" instead of being specific as that requires the conditional and hardcoding of urls? i'm not sure if we
Candidate: you can replace this with with <UNK>
Reference: remotetimeout() is the correct one.
Candidate: this should be <UNK>
Reference: you can use activator.error to create an error status.
Candidate: use <UNK>
Reference: if you want to get a property's value, you can always use proxy.getproperty(name). so you don't need to add another private variable "showinfowindow" and method getshowinfowindow() in the annotationproxy.java.
Candidate: this should be replaced by <UNK>
Reference: isn't log file moved after sometime ? can we get that new path ?
Candidate: you could use the <UNK> annotation?
Reference: what's with the ugly arrow?
Candidate: is there a reason for this logic?
Reference: a simpler way to do this would be to make this just bool(state.get("scoreboard.officialscore") without the state. we can then filter out the clock changes if we want to.
Candidate: you could use <UNK>
Reference: this probably wants to be a getsitevisit(string) call so that it checks permissions. technically if it's in the public list of sites then returning then it's ok to return the
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: can collapse:  java // sort according to time collections.sort(events, (e1, e2) -> e1.getdate().compareto(e2.getdate())); // sort according to author collections.sort(events, (e1, e2) -> e1.getactor().getlogin().compareto(e2.getactor().getlogin()));
Candidate: if (throwable == null) { return; }
Reference: q: if the record is out-of-order, shouldn't you put the value into the state store regardless of whether it is different from the old value or not? i think this
Candidate: i pagelogging
Reference: why is this field needed? can't clients just use the value of lower? i would expect all methods to do the right thing when passed a null type (that is,
Candidate: we should use a constant instead of the property?
Reference: static import
Candidate: minor: use @visiblefortesting instead of this(name, <UNK>
Reference: rename to reducedcountspseudoinverse
Candidate: offset? offset? offset? offset? offset? offset? offset? offset? offset? offset? offset? offset? offset? offset? offset? offset? offset? offset? offset? offset? offset? offset? offset? offset? offset? offset? offset? offset? offset? offset?
Reference: this can be byte[] lastarray = arrays.copyof(laststringarray, laststringarray.length + 32
Candidate: minor nit: space between ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (
Reference: can be java public seq<e> geterrors()
Candidate: this is needed
Reference: in classes that implement comparable it's preferable to implement equals() as this.compareto(that) == 0 after the initial type checks.
Candidate: this is be e1
Reference: even though these two are "cmas severe alerts", shouldn't getcmasseverity() still return cmas_severity_extreme? spec says "severity of extreme, urgency of expected..."
Candidate: this is not <UNK>
Reference: why do we need this? is it necessary in test?
Candidate: you could use <UNK>
Reference: if we are using equalsignorecase everywhere, should we really change the data? there might be other reasons we are converting to lowercase.
Candidate: this could be modified by <UNK> ex.
Reference: unit test should verify that the constructed account contains the expected phone and the verified flags are set correctly.
Candidate: you could use a constant instead of <UNK>
Reference: did you mean findfailedchildcommands ?
Candidate: you could use <UNK> instead of <UNK>
Reference: we can consolidate this with the logic below. something like this: scala if (remainingtosearch.isempty()) { return result; } else { client.awaitmetadataupdate(timer); }
Candidate: we should have to warn check, but we should inform that we have a warn check, that the is not <UNK>
Reference: should this just make a single call to coreutils?
Candidate: wait.forelementclickable() should be <UNK>
Reference: using the internal resource [design_bottom_sheet from the material components library](<link_0> is very risky and considered an anti-pattern. we have no control over that library, which is actively being developed with
Candidate: minor typo
Reference: is this going to add an authentication to the http client for each request? when do they get cleaned up?
Candidate: is there a reason that is empty?
Reference: use the %s feature of checkargument, to prevent concatenating strings unless it's really necessary. i.e.  checkargument(getconfig(source_sensor) instanceof attributesensor, "expected source_sensor to be attributesensor, found %s", getconfig(source_sensor));
Candidate: should be be to bind the <UNK>
Reference: needs some validation on the value itself. even if it is provided by our implementation, just defensively check the argument.
Candidate: please use <UNK>
Reference: use parameterized logging instead of string concatenation.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: this constructor can be package local since class is package local
Candidate: use <UNK> instead of <UNK>
Reference: let's inline this: return dogetinputfieldsfrompmmlstream(modelinfo.getpmml());
Candidate: you could use <UNK>
Reference: i don't see any reason to get the analyzer name from the propertymapping instead of passing it to the constructor directly. it just pollutes the propertymapping class with information that
Candidate: suggestion <UNK> -> entry.getkey(), <UNK>
Reference: this is happening because we previously create a dataset with this namespace and name, but in the default hive database and we now need to move it to the database
Candidate: this is required?
Reference: preserves the original exception cause when rethrowing exception. also, better use throw throwables.propagate(e); in this case.
Candidate: this should throw an exception instead of <UNK>
Reference: please add access modifier, private probably?
Candidate: this should be <UNK>
Reference: can you add in creating a directory client and putting a file under it? that way we show all the basic client types.
Candidate: you could use a map
Reference: nit: this whole thing is hard to parse. consider rewriting with extracting some of the variables.  list<apiclustertemplateconfig> rangerconfigs = new arraylist<>(); final string rangerhdfsauditurl = configutils.getstoragelocationforserviceproperty(templatepreparationobject, ranger_hdfs_audit_url) .map(location ->
Candidate: i think we should be a <UNK> <UNK>
Reference: since there are two of these, an if-else would probably look cleaner.
Candidate: why not we need to metrics?
Reference: not a deal breaker but line breaks should be present in long lines. for future reference
Candidate: log.debug
Reference: shouldn't we log anything bad that happens here?
Candidate: no need to mock for the
Reference: see ctor of createviewandoptionallyelementcommand
Candidate: is there a reason for this method is not connected through?
Reference: suggestion if (keyedstatebackend instanceof checkpointlistener) {  ditto.
Candidate: i think this is not efficient, we could use only:  if <UNK> == null) { return <UNK> } <UNK> } }));
Reference: seems to fit on a single line?
Candidate: i am not sure how about sure about sure about sure about logging the deletion
Reference: this change seems me too risky. it means there will be no effective compatibility version set during validate(). why do you need this?
Candidate: i think that this should be the to the the log.
Reference: i, j and s2? maybe usernameindex, executecount and currentarg?
Candidate: this is not used?
Reference: or isnotempty()?
Candidate: ![image](<link_0>
Reference: are you not using the eclipse formatter? the project owners are pretty strict about so changes are easier to track.
Candidate: please use <UNK>
Reference: are there other places where this confirmation will be called? if not, leave the label setting defined in hostrestartconfirmationpopupview.
Candidate: let's move this to <UNK>
Reference: cannot remove this?
Candidate: please add a expectedexception here ?
Reference: i might use "travel time values" instead of "times". as written, it could seem like the error message is missing a word "must supply x expected number of times..."
Candidate: please use <UNK>
Reference: - when user haven't made any selection, then 'pendingshowitem' might be null, so we should add a not null check in above if
Candidate: is there a reason for the sake of <UNK>
Reference: what does this snippet do?
Candidate: this is not be inlined
Reference: style nit: missing braces
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: perhaps this one line should be outside of the if a.size() == 1 since the attribute object can hold multiple values just fine.
Candidate: you could use the <UNK> commons paths?
Reference: change to : java protected void closewatchrequest() { if (this.watchrequest == null) { return; } try{ watchcancelrequest watchcancelrequest = watchcancelrequest.newbuilder().setwatchid(watchid).build(); watchrequest cancelrequest = watchrequest.newbuilder() .setcancelrequest(watchcancelrequest).build(); watchrequest.onnext(cancelrequest); }finally { this.watchrequest.oncompleted(); this.watchrequest
Candidate: this is be repelaced by <UNK>
Reference: return optional.ofnullable(language.getfileextensions()).map(collection::stream).orelse(stream.empty()).anymatch(extension -> path.endswith(extension)); ?
Candidate: you could use a 'final' here instead of <UNK>
Reference: please move these two "cleanup" statements before the "notresolving.signal()" within the finally clause.
Candidate: <UNK> operand
Reference: reservedforarchival here is same as this.reservedforarchival when init?
Candidate: minor nit: we could factor this logic into a helper function.
Reference: this breaks the replace untyped subapp with extracted type feature i recently did. i think the problem with my code is entry is null for update type and non null
Candidate: this pagelogging
Reference: if we add || config.generatetreesamount == 0 here it can efficiently skip decorating trees
Candidate: this should be be done operator. e.g.:  if <UNK> == null) { // }
Reference: correct to "all categories were clicked" not "was"
Candidate: you can use the formatter
Reference: no need to specify types on rhs - i would fix this throughout this pr
Candidate: you could use <UNK> instead of <UNK>
Reference: do you need to add a space here?
Candidate: i think that this is is a <UNK>
Reference: can we have a constant instead of 100
Candidate: is there a reason for this logic?
Reference: i think this line should be  if (endpoint != null && this.getversion() >= 2) {  since individual command classes are only supported in version 2. it doesn't matter
Candidate: this is designed to be <UNK>
Reference: clearly a details but why not ? java if (mode != null && mode.equals(dtlsendpointcontext.handshake_mode_none)) { // restore handshake-mode "none" followupendpointcontext = mapbasedendpointcontext.addentries(blockcontext, dtlsendpointcontext.key_handshake_mode, dtlsendpointcontext.handshake_mode_none); } else { followupendpointcontext = blockcontext;
Candidate: nit: align with <UNK>
Reference: instead of spinning in loop we should use binarymetadatatransport::awaitmetadataupdate method and wait when metaholder.pendingversion is accepted by the cluster.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: reduce(mappartitions) is very often rdd.aggregate(), if we can reformulate this in the following terms, we get perf goodies like treeaggregate nearly for free:  def aggregate[u](zerovalue: u)(seqop: (u, t) 
Candidate: i'm not sure that this is is supposed to be changed to this pr, but i'm not sure that the is not rely on the
Reference: null == adapter
Candidate: i think the sake of the sake of the sake of a proxy proxy (that causes a proxy to be a proxy blocks, (that causes a proxy to lose the
Reference: collections.<string> emptyset()
Candidate: i would be a bit cleaner to <UNK> the <UNK> view?
Reference: i would rather have single expected httpstatus here. we're testing query cancellation and we do not know what query cancellation rest api is supposed to return?
Candidate: formatting
Reference: this convert should do some logic (e.g. if the source is null than return emtpy list or something like this). here it would be enough just to "return source;" or
Candidate: you could use a method arguments.
Reference: can you import static assert?
Candidate: this is not be deserve a
Reference: the throws part is still there. this part should not exist.
Candidate: you could use a multimap instead of <UNK>
Reference: format this file. also looks like we can still use new arraylist<>(indextochunkids.values()), any specific reason to use indextochunkids.values().stream().collect(collectors.tolist()) here?
Candidate: please use <UNK>
Reference: nit: consider now.truncatedto(chronounit.hours) instead.
Candidate: typically, you can't use this
Reference: here it seems that it would make more sense to merge the two  if (pair.length == 2)  into a single if statements:  if (pair.length == 2) {
Candidate: you could use a constant instead of <UNK> mapping?
Reference: i had to add this; otherwise, the interface java files were just removed. methods in interfaces are public even if they are not marked as such. an interface could have
Candidate: you could use a constant instead of <UNK>
Reference: update the java docs to say this finds unused tasks. update the java doc to add an @returns as well, indicating that it returns a list of unused datastreamtasks
Candidate: i think that this is not the transactional manager, but i guess that we want to create a mock manager, that the <UNK>
Reference: this if check isn't particularly useful.
Candidate: this is a bit nervous that we could throw an exception instead of <UNK>
Reference: i know this synchronization pattern was before the change, i'm just confused what it tries to accomplish? ie, if nobitmaprealtimeindex is not created then all threads can initialize nobitmaprealtimeindex simultaneously,
Candidate: is this optional?
Reference: the status is supposed to be for human information, so using it for code logic is a bit dangerous. and i only see a setstatus("done"), not "done", which shows why
Candidate: this is not to be a
Reference: why making it final?
Candidate: could we use a string concatenation instead of <UNK>
Reference: do you need to re-throw the same exception translateexception?
Candidate: this is not a bit nervous how about this is a <UNK>
Reference: this test checks whether all diagnostics are expected. but it fails to check if diagnostics are missing
Candidate: ditto about <UNK>
Reference: actually the logcontext.logprefix() should have the format of stream-thread [%s] task [%s] already, so all the log4j entries are good. for exception messages, we can just get the prefix and
Candidate: @vilchik-elena is there is a to be a <UNK> <UNK>
Reference: if you think it is a good idea, we could have a similar 'ensure' method for usermetadata and the blob content for better readability here and below.
Candidate: if (throwable == null) { throw new <UNK> }
Reference: suggestion return collections.emptylist();
Candidate: how about making a <UNK>
Reference: this is a duplicated check, as this is only invoked after command.hasflows() is true, so not required to invoke it again. if you absolutely want this check, i'd opt for
Candidate: you could use <UNK>
Reference: needs to be "getlocalizedmessage()"
Candidate: @ivange94 not sure that this will be printed from the <UNK>
Reference: do we need to throw an exception here? silently dropping the volume may not be a good option.
Candidate: this we have a feeling that this is is not <UNK>
Reference: could use a lambda e -> performaction().
Candidate: please use readasstring(...) instead of <UNK>
Reference: are you trying to convert string to boolean here? there is a better way to do that.
Candidate: i think the drawing drawing the drawing drawing drawing drawing the drawing the drawing drawing drawing drawing drawing drawing drawing drawing drawing drawing drawing drawing drawing drawing drawing drawing drawing
Reference: why are we using hash code here? and it doesn't feel right to me to change the state of the object with the hash code like that. correct me if
Candidate: is there a reason for label?
Reference: s/5.0/5.1/
Candidate: you could use a constant for consistency.
Reference: better message i think is "error : trying to retrieve session from disconnected client." also should this beat warn level?
Candidate: you could use a string instead of <UNK>
Reference: can we add some description? does deregister mean only deregister interest but keep it for as long as lease_duration expires or it means you revoke it right away?
Candidate: please use <UNK>
Reference: should it?
Candidate: this should be a <UNK>
Reference: can't you use settings.sourceblock.contains(blockpresent)? then you can just use  if (!settings.sourceblock.contains(world.gettypeid(x + block.x, y + block.y, z + block.z)) {
Candidate: rename to <UNK>
Reference: i meant the block without the 'if', you already know the action type here :)
Candidate: please add a description for storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage storage
Reference: if line 33 throws an error this line won't be reached. prior this pr that delete would always be executed in a finally block.
Candidate: you could use blanks
Reference: the cast is no longer needed
Candidate: you could use <UNK>
Reference: you are not setting the endpoints for this client
Candidate: use readasstring(...) instead
Reference: you can remove this log line or merge it into previous one, otherwise it will be difficult to comprehend when all these log lines are together.
Candidate: unused
Reference: rather than hard-code currentplanproductid > plan.getproductid(), i think we should have a helper routine that checks if one plan is "greater" than another. we had this earlier on, and it
Candidate: if you could use a guard clause.
Reference: try-with-resources
Candidate: if we is a <UNK> that is is not efficient, we don't want to use the <UNK>
Reference: i think this still does not solve the problem we have. here is your impl of cfutils.alloforterminateexceptionally: java completablefuture<void> result = completablefuture.allof(futures); for (completablefuture<?> future : futures) { future.handle((res, ex)
Candidate: i understood that part, be used.
Reference: i think we should create a defensive copy of the map
Candidate:
Reference: if this should happen once, maybe it belongs in the constructor (and bufferedreader can be final).
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: don't print the stack trace if you are going to rethrow as a cause
Candidate: we should throw an exception instead of exceptions?
Reference: ranges.open(junostart, lunastart).contains(version) makes for more readable code. i'm not sure which of open(), closed(), opendclosed() etc. is needed here.
Candidate: if this == null || <UNK> == null || <UNK> == null) { return false; }
Reference: imho this error doesn't imply that null is returned... what's the end user supposed to do here?
Candidate: you could use <UNK> instead of objects.isnull
Reference: can you make 0, 4 as static final variable? e.g. type_value_offset, version_offset
Candidate: this is a bit nervous about ides ides ides ides ides but i would be a bit more efficient, that this is is not ides but i am not sure
Reference: this might be an opportunity to make the names for these more consistent: this uses handlefoo, other bits use onfoo.
Candidate: this should be <UNK>
Reference: could store database.getid() in a variable. also, some places below.
Candidate: you could use <UNK> instead of <UNK>
Reference: nitpick: the java language specification [says](<link_0> "it is customary, though not required" that the order of these class modifiers would be public static.
Candidate: why this d is be overhead.
Reference: ok. i see where is the root of getrequiredtaskscheduler(). but a decision is the same: we always reuse taskscheduler from the application context.
Candidate: this combination of the combination of <UNK>
Reference: this line does not need additional logic for the unsupporting languages. i've updated my patch to fix it. please try to rebase your patch, thanks!
Candidate: please use <UNK>
Reference: missing braces
Candidate: <UNK> is not <UNK>
Reference: inline this, please. fqns are ugly
Candidate: i'm not sure how about the sure about the sure that we is locks to have a higher than grabbing the size.
Reference: in this use case, we are defining default behavior for the user in the case of passing null. we don't know if a user wants true or false, but we're
Candidate: you could use <UNK> here instead of objects.isnull
Reference: wouldn't it be easier to leave the project method unchanged, and here just return: return project(mq, input, projects); ?
Candidate: static import
Reference: this changes the behavior to no longer notifying the player whose gamemode was set.
Candidate: you could replace this with <UNK> with <UNK>
Reference: running backgroundlocationmanagertest with coverage it doesn't look like this case gets hit by any of the tests
Candidate: i think that nesting.
Reference: it was recommended to use the existing dgva branding, so these details should be converted into: * database of genomic variants archive rest web services api * the database of
Candidate: stream()
Reference: agreed, this does look like a bug :)
Candidate: i think that this construct, is not used anywhere else.
Reference: it would be clearer if "6" was replaced with epdqstatusmapper.epdq_authorised_cancelled
Candidate: this is not be used?
Reference: formatting
Candidate: is there any way to be null?
Reference: this should be more "assertive"; throw an illegalargumentexception to break the app. this would be a programming error, not an error condition in runtime.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: since this won't change i'd move the loading of this information into the constructor so you don't have to do file io every time this is called.
Candidate: use utf-8 instead of <UNK>
Reference: please, indent wrapped lines with 8 additional spaces. don't align arguments, such alignment breaks code style checks.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: use lib.exceptiontostring(ex). ex.tostring doesn't work, i think
Candidate: you could use a string instead of <UNK>
Reference: why this change on replaceunderscores? (sorry if you already explained it, i don't remember... )
Candidate: suggestion <UNK> = <UNK>
Reference: need to use a reusable buffer.
Candidate: you could use foreach rather than a constant instead of creating a constant for every time.
Reference: json can be final
Candidate: is there a reason to log here?
Reference: you shouldn't create another variable here named 'scq'. these methods you are calling change the internal state of the srampclientquery and then return "this" (aka a fluent api). in other
Candidate: this is not efficient, we don't have to use <UNK>
Reference: even though logic seems very straightforward and it no doubt works, it would still be nice to test with a non-checker workflow in the list as well.
Candidate: i think this is inadvertently independent of <UNK>
Reference: how about simplifying this by just using a single if/else that uses the roottree if non-null and falls back to the working tree config if the roottree is null? then
Candidate: suggestion <UNK> <UNK> consistency.
Reference: >byte[] [](start = 11, length = 6) we're updating all methods to return a data structure rather than a simple type for forwards compat. this should return decryptresult which has
Candidate: use a constant instead s?
Reference: final
Candidate: please use a constant instead of <UNK>
Reference: what is this actually doing? why are you checking for the catalogedby annotation?
Candidate: remove system.out.println
Reference: the _param_recurse_ should be optional (as well _param_max_children_, btw)
Candidate: please use <UNK>
Reference: i'm ok with that
Candidate: you could use objects.equals() instead of objects.isnull
Reference: consolidate all active-standby lookups as a part of failovermetadata?
Candidate: if we should throw an exception here instead of an error.
Reference: logging needs to be conditional on a debug option or removed.
Candidate: you could use <UNK>
Reference: normally we only use all caps for static values.
Candidate: i think that this is not efficient, but i think that this is not the the the m
Reference: iirc, this will be written (~)every second to the log while the vm is locked, this is too much.. maybe move to debug
Candidate: you can remove the lock by: <UNK>
Reference: this looks like a brute force fix to me. note that the itemsmap is also filled in modelchanged, so you are now doing it several times. wouldn't the better place
Candidate: nit: you could replace this loop with <UNK>
Reference: internal methods are still in use.
Candidate: if you could use objects.equals()
Reference: remove this variable and use ctl.getrefname() as the rest of this method is doing.
Candidate: is there is a icon, about the icon, thanks!
Reference: this can be combined into one line.
Candidate: could you compute the % string = <UNK> % string = <UNK> % <UNK> % <UNK> % <UNK> % <UNK> % <UNK> % <UNK> % <UNK> % <UNK> % <UNK>
Reference: do not call this method here, call in method showloanaccounttemplate() in fragment
Candidate: suggestion throw new <UNK>
Reference: do we need versions of this test that check the other endpoints in the chargesapiresource class (for there is a plethora)?
Candidate: this is designed to be <UNK>
Reference: don't split the try block. most code should be inside the block
Candidate: throw an notfoundexception instead of notfoundexception
Reference: missing return?
Candidate: could we use <UNK> instead of wrapping this logic.
Reference: i think the exception needs to be serialised and sent back from the server. it might not always be an ioexception. right?
Candidate: we should verify processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed processed
Reference: you are using "coinmarketcap" prefix for coinexchangeratesource?
Candidate: please use consistent, instead consistent, consistent, consistent, consistent, consistent, consistent, consistent, consistent, consistent, consistent, consistent, consistent, consistent, consistent, consistent, consistent, consistent, consistent, consistent, consistent, consistent, consistent, consistent, consistent, consistent, consistent,
Reference: i believe this is not necessary. it's always the first character.
Candidate: you could use <UNK> here instead of repeating the
Reference: @sebing spaces around :
Candidate: @danff let's use <UNK>
Reference: maybe worth adding the pattern to util? public static <t> list<t> util.unmodifiablelist(t[] elems)
Candidate: if this is null, then we can't be null, then it would be null
Reference: i think its cleaner to do boolean.tostring(boolean.parseboolean(distribute)). that way, you're not having the string "true" in your code.
Candidate: please use <UNK>
Reference: i think it is better to use mac_pool_id here and avoid assigning to resource.guid later, that way this test won't need changing if resource.guid is changed or its visibility changed.
Candidate: i think that this lock is be closed in a finally block
Reference: use .startswith?
Candidate: i think that this is not efficient, but i would be a good idea.
Reference: we should fail in all cases.
Candidate: minor: we could use reflectiveoperationexception to <UNK>
Reference: change "so" to "and" probably (i think it sounds better)
Candidate: this is designed to be a lock
Reference: suggestion assertthat(ldapuserdetails.getdn()).isequalto("uid=base64encoded-issue-1840,ou=users,dc=carlspring,dc=com"); assertthat(ldapuserdetails.getusername()).isequalto("base64encoded-issue-1840"); assertthat(ldapuserdetails.getpassword()).isequalto("{md5}5f4dcc3b5aa765d61d8327deb882cf99"); assertthat(passwordencoder.matches("password", ldapuserdetails.getpassword())).isequalto(true); assertthat(((list<simplegrantedauthority>) ldapuser.getauthorities())) .contains(new simplegrantedauthority(systemrole.repository_manager.name()), new simplegrantedauthority("user_role"));
Candidate: you could use <UNK>
Reference: unless i'm misunderstanding, i believe the schema can never be invalid at this point. in order to get here, all unique fields had to have been present when grouping, and
Candidate: please add a string instead of <UNK>
Reference: can you merge this else if and else parts into else if !
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: the loop and refresh is common code.
Candidate: you could be a typed metrics here instead of <UNK>
Reference: no double blanks
Candidate: you could move this to <UNK>
Reference: i'd inline this variable.
Candidate: why is a copy of clazz, to copy of the array.
Reference: i think i would name it asprojection(). otherwise, i would kinda expect the return type to be consistent when adding another projection to be returned. the methods have totally different
Candidate: use <UNK>
Reference: do we want to reporterror here?
Candidate: you could use the exception here instead of <UNK>
Reference: this should really be an online type test, e..g, it should be skipped, not fail, if the postgis.properties file is not there
Candidate: please wording. wording. wording. wording. wording. wording.
Reference: this is only safe when the selector has a 'real' dictionary, i.e. when selector.getvaluecardinality() does not return dimensionselector.cardinality_unknown. if it is unknown then the ids are not valid outside the
Candidate: you could use foreach loop instead of creating a connection,
Reference: missing braces
Candidate: nitpicking: you could be simplified to <UNK>
Reference: @idelcano add curly brackets for this 'if' please. in general at brackets because they make things more clear but special here that we have a loop inside the if (not
Candidate: i think this is not <UNK>
Reference: probably this should be return nullhandling.replacewithdefault() ? false : doubles[index] == null.
Candidate: this should be convenient to <UNK>
Reference: @jomarko if there is nothing preventing this, move all those "context.getscenariogridpanel().setfocus(true);" inside commonexecution
Candidate: wait.forelementclickable() could be <UNK>
Reference: check if nativevideo is null. this can cause crashes.
Candidate: is there a reason for this method is not
Reference: what's the point of catching and then throwing a wrapped exception - again, no additional context of info is provided.
Candidate: we could use "something <operator> null" convention
Reference: we can add this when we have something to populate it with
Candidate: use <UNK>
Reference: what else do we do with the hlls? could we exercise all that as well if it's easy?
Candidate: you could use <UNK>
Reference: please use the generics-friendly collections.emptylist()
Candidate: please use <UNK>
Reference: aren't we already in gui thread?
Candidate: you could use <UNK>
Reference: use shellisavailable
Candidate: use shellisavailable
Reference: why do we need this change?
Candidate: wait.forelementclickable() should be <UNK>
Reference: log man log!
Candidate: you could use a logger instead of printing the stack trace
Reference: when you are using httpserveradapter, handlereceive implicitly parses the client address.
Candidate: is there a reason to check that this is is not set?
Reference: the other place in this class where a domainexception is used could be replaced by this type
Candidate: you could use a bean here instead of <UNK>
Reference: please add uuid.randomuuid().tostring() here as well
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: could you please move this logic to separated method
Candidate: <UNK>
Reference: has the a: thing been fixed in the meantime?
Candidate: i think that this is not efficient, we could have a "return" to the
Reference: no need to compare against 'true'. just: .when(provisioned && computeresource == null);
Candidate: is there a reason for the sake of the
Reference: this uses eager string concatenation in a lazy parameter, which is typically a blocker. now, this is not a performance critical path, but i would still suggest to avoid this,
Candidate: is there a reason that happens if we are going to be 2s completes a <UNK> completes <UNK> completes <UNK>
Reference: stringbuilder
Candidate: if you could use a ',' instead of <UNK>
Reference: why the difference depending on api level? just curious.
Candidate: this is a bit strange, but i think, that this is is not efficient, but i would be more efficient, the '+' to '+'
Reference: use camel-case
Candidate: suggestion if <UNK> == null) { <UNK> = new <UNK> clazz, <UNK> <UNK> }
Reference: could we keep using object helperitem = gethelperitem(i); to reduce calls to gethelperitem?
Candidate: if you could be simplified by:  java return <UNK> outputstream = <UNK> <UNK> }));
Reference: you try to cast a map.entry with diskimage, this will cause an error when try to run a vm. you should simply use: for (guid sdid : diskidtodestsdid.values()) { storagedomainstatic
Candidate: please rename <UNK>
Reference: i suggest that you add a constant field to defaultsconfigcontext, so that you reference the default value rather than explicitly set it here.
Candidate: suggestion <UNK> -> <UNK>
Reference: wait.forelementclickable
Candidate: this is a <UNK>
Reference: is it possible that start > end? iirc system.nanotime should be safe, but not sure about getcurrentthreadcputime(). if somehow we get start > end, the abs value of start-end will
Candidate: is there a reason for this method to be a <UNK> <UNK>
Reference: i guess we might need break statement, since the existing "p2" option doesn't have break;
Candidate: this is a bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, bit dangerous, but
Reference: should be checking against 'configuration' on the 2nd assert (copy-and-paste error: storage)
Candidate: this is be encapsulated by <UNK>
Reference: should we add a metric to count the number of logging errors?
Candidate: can we use <UNK>
Reference: again, assertnotnull could be more readable.
Candidate: please use <UNK>
Reference: the hiding event seems to always originate from the ui thread, so the platform.runlater isn't needed. can we factor the callback out into its method? it looks kind of similar
Candidate: could we use <UNK>
Reference: might be cleaner to add a method like hasmoreattempts() to requestmanager
Candidate: can we move this to <UNK>
Reference: is this an approximate metric or exact? looks like exact to me. same for the others.
Candidate: log exception here instead of printing the exception
Reference: let's just cut it if we can. all configuration should be done in the constructor (or sooner).
Candidate: you could use <UNK>
Reference: please ping alexey or joe wertz about this. i have the same concern here about an api change as i have with displayresponseheaders, and this looks to be a bigger
Candidate: we should use <UNK> annotation, instead of <UNK>
Reference: why not: return result.addall(cachemap.keyset());
Candidate: we should throw an exception here instead of: instead of: instead of:  if (throwable == null) { throw new exceptions?
Reference: should this be return -1 not sure if this counts as error or page not found?
Candidate: could we pulled into a pair of a ternary.
Reference: we do a newline after annotations (in 99.9% of the cases). but please leave it as-is. i will reformat the whole codebase soon according to our formatter. maybe i will
Candidate: style nit: no braces around single line
Reference: check args?
Candidate: could we use <UNK>
Reference: use utf-8
Candidate: again, <UNK> -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e -> e
Reference: is this variable still used?
Candidate: you could use only: <UNK> == null) { return <UNK> }
Reference: are you sure both are mandatory? i think at least updating "action" *only* makes sense, no?,
Candidate: @gunnarmorling this a bit strange to use only: <UNK>
Reference: may i suggest to use the following instead? bug_severity=enhancement&bug_status=new&email1=rgrunber&emailassigned_to1=1&emailtype1=substring it is much much faster as the query returns a smaller result and bugzilla optimizes such queries better.
Candidate: you should use <UNK>
Reference: this can be extracted to separate method further simplifying this method. do it if you want, i do not insist on it.
Candidate: is there a reason for this method to be null?
Reference: really? why not rely on autoboxing/autounboxing?
Candidate: is there a reason for this?
Reference: a ui/ux consideration - worth noting also that today's date is highly likely what the user wants, given that stewardship events are likely to be added when they are carried
Candidate: this could be simplified to:  this(name, <UNK> <UNK> { <UNK> <UNK> <UNK>
Reference: if groups (and their subscriptions) are not durable - based on <link_0>, then maybe it makes sense to shut down adapters for groups that aren't listening anymore ?
Candidate: nit: you could use <UNK> instead of <UNK>
Reference: if operation is complete, why do we need to proceed further
Candidate: should we use a string instead of <UNK>
Reference: hmm, i would rather leave it up to the enhancement processors to decide if anything needs to be done to an object rather than do it here, which we would
Candidate: i think that this is is not <UNK>
Reference: rename 'child'
Candidate: you could use <UNK>
Reference: one more thing @slaskawi, please use a timeout here (e.g. 10 seconds).
Candidate: what's this change?
Reference: immutablelist.of
Candidate: use <UNK>
Reference: unnecessary line break
Candidate: please use objects.equals
Reference: @rimjhim28 , can you investigate why the visitapi constructor is not called first before calling this getvisittype method? as [this line ](<link_0> would've already initialized the restapi.
Candidate: you could use short statements.
Reference: username better
Candidate: could you rename this method to <UNK>
Reference: we may think about having a dedicated method on callexpression.
Candidate: i talked about the <UNK>
Reference: why not using the "normal" cancel constant?
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: is 0 a magic number?
Candidate: remove this unused change.
Reference: since we will serialize as map<string, string> getfrommetricsmessage will return a map<string, string> that needs to be converted to config like this: new mapconfig(getfrommetricsmessage(group_name_for_diagnostics_manager, config));
Candidate: i think we should throw a unsupportedoperationexception instead of returning an exception
Reference: why is there a null notice?
Candidate: should we use <UNK>
Reference: this line may be executed many times. do filter comparison without creating temporary objects. this can be achieved by preprocessing of filters.
Candidate: you could use <UNK>
Reference: it's funny you could mutualize the code and send the status? no ?
Candidate: unused variable?
Reference: i believe you can fix the problem below by replacing replacetitleswithcaptions(m.getdisplaytitle(), mediasize++); with replacetitleswithcaptions(m.get(), mediasize++); and performing this api call instead: <link_0> notice that this query uses ids= instead of
Candidate: is there a reason to re-throw statement?
Reference: call requiredoptions() instead of new hashset<>()?
Candidate: suggestion return <UNK>
Reference: this is actually a really useful log statement when you have multiple ports being bound.
Candidate: you could use a constant instead of <UNK>
Reference: so you first set this.keywords to a non null value, and then set it to null? i guess you wanted something like:  if (keywords == null) { keywords =
Candidate: you could use the exception instead of printing stack trace
Reference: can this be inserted into the tostringwithstacktrace() itslef?
Candidate: use reflectiveoperationexception
Reference: i didn't see any system test for config-tool repair unlock
Candidate: we should use isempty() instead of storagetype view?
Reference: it looks weird. do we still need gethiveprincipal for the authorizationutils? we can move the implementation of these three apis to the translator. and remove that in authorizationutils.
Candidate: i think this is a <UNK>
Reference: i would add information about version that was used, since the string from header is not guaranteed to contain it.
Candidate: maybe we could use a constant instead s?
Reference: shutdown in a finally block ?
Candidate: you can use <UNK> instead.
Reference: why not simply taking a model instead of checking for one?
Candidate: you could use <UNK> instead of <UNK>
Reference: static import wrappedbuffer
Candidate: this is designed to be a <UNK> <UNK>
Reference: i think we can keep this "final".
Candidate: this is a <UNK>
Reference: copy-paste in the exception message below.
Candidate: is there a reason for this method is not <UNK>
Reference: it's nicer to move the assignment out of the if
Candidate: you could use guava instead:  @override final <UNK> <UNK> input) { ...
Reference: no problem, you can do it any way you want, i don't care. even with (^ *| +) should javascript work. is there a real argumentation for reluctant quantified ("*?")
Candidate: you could use a constant here instead of <UNK>
Reference: similarly, you might want to create a new set based on the set you received, to ensure the contents aren't changed by some external object.
Candidate: is there a reason for this class instead of creating a <UNK> constructor?
Reference: how come we don't reuse keybasedmapoperation#threadid since it's already there?
Candidate: i think this is a <UNK>
Reference: what's ed? i don't understand abbreviations!
Candidate: is there a reason for this logic?
Reference: delete. reporting progress at the end of a method is a no-op.
Candidate: please use tostring names instead of conditionally
Reference: usually, we do the opposite: the constructor with less parameters call the constructor with more parameters (with default values). java public faketestngmethod(class<?> clazz, string methodname) { this(clazz, methodname, null); }
Candidate: is there a reason for this class instead of the lists, instead of <UNK>
Reference: do you think you could refactor the entire if / else part into a separate method (that will return a decryptionresult i suppose)? getgenericpasswordforoptions is becoming a bit too lengthy.
Candidate: "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t" "t"
Reference: use new guid(string) - this literal can't be null
Candidate: this should be <UNK>
c_bleu: 0.003868663171386808
s_bleu: 0.008386702001718137
meteor: 0.033922310128209024
